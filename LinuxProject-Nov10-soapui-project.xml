<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="c2b125d4-992a-47af-be91-697e8dd22f90" activeEnvironment="Default" name="LinuxProject_Nov10" soapui-version="5.4.0" resourceRoot="" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="429686f5-c9f0-4168-ba35-2af3df288c4f" wsaVersion="NONE" name="npnSoap11" type="wsdl" bindingName="{http://nationalpayment.net/ws/definitions}npnSoap11" soapVersion="1_1" anonymous="optional" definition="http://qaws.cftpay.com:8080/wsrv/npn.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://qaws.cftpay.com:8080/wsrv/npn.wsdl"><con:part><con:url>http://qaws.cftpay.com:8080/wsrv/npn.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://nationalpayment.net/ws/definitions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:sch0="http://nationalpayment.net/ws/schemas/messages" xmlns:sch1="http://nationalpayment.net/ws/schemas/types" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://nationalpayment.net/ws/definitions">
  <wsdl:types>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://nationalpayment.net/ws/schemas/messages" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://nationalpayment.net/ws/schemas/types" xmlns:tns="http://nationalpayment.net/ws/schemas/messages" xmlns:xmime="http://www.w3.org/2005/05/xmlmime">
      <import namespace="http://nationalpayment.net/ws/schemas/types"/>
      <import namespace="http://nationalpayment.net/ws/schemas/types"/>
      <element name="ActivateSettlementRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="settlementId" type="long"/>
            <element minOccurs="0" name="comment" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="ActivateSettlementResponse">
        <complexType>
          <sequence>
            <element name="settlementId" type="long"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="Schedules">
        <sequence>
          <element maxOccurs="unbounded" name="schedule" type="tns:ScheduleInfo"/>
        </sequence>
      </complexType>
      <complexType name="ScheduleInfo">
        <all>
          <element name="scheduleId" type="long"/>
          <element name="externalReferenceId" nillable="true" type="string"/>
          <element name="message" nillable="true" type="string"/>
        </all>
      </complexType>
      <complexType name="ClientStatuses">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="status" type="tns:ClientStatus"/>
        </sequence>
      </complexType>
      <simpleType name="ClientStatus">
        <restriction base="string">
          <enumeration value="INACTIVE"/>
          <enumeration value="ACTIVE"/>
          <enumeration value="COMPLETE"/>
          <enumeration value="CLOSED"/>
          <enumeration value="SUSPENDED"/>
          <enumeration value="DELETED"/>
          <enumeration value="ERRORS"/>
          <enumeration value="CANCELLED"/>
          <enumeration value="CANCELLATION_PENDING"/>
          <enumeration value="CANCELLATION_PROCESSED"/>
          <enumeration value="COMPLETE_PENDING"/>
        </restriction>
      </simpleType>
      <complexType name="SPAStatuses">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="status" type="tns:SPAStatus"/>
        </sequence>
      </complexType>
      <simpleType name="SPAStatus">
        <restriction base="string">
          <enumeration value="MISSING"/>
          <enumeration value="PENDING"/>
          <enumeration value="VERIFIED"/>
          <enumeration value="REJECTED"/>
        </restriction>
      </simpleType>
      <simpleType name="PostedTransactionStatus">
        <restriction base="string">
          <enumeration value="MATCHED"/>
          <enumeration value="UNMATCHED"/>
          <enumeration value="REJECTED"/>
          <enumeration value="AUTHORIZED"/>
          <enumeration value="AUTHORIZE_AND_ADVANCE"/>
          <enumeration value="AUTHORIZE_AND_LOAD"/>
          <enumeration value="REJECT_CONFIRMED"/>
        </restriction>
      </simpleType>
      <simpleType name="ErrorStatus">
        <restriction base="string">
          <enumeration value="NEW"/>
          <enumeration value="IN_PROCESS"/>
          <enumeration value="CLOSED"/>
        </restriction>
      </simpleType>
      <complexType name="PostedTransactionOrder">
        <sequence>
          <element name="orderBy" type="tns:PostedTransactionOrderBy"/>
        </sequence>
      </complexType>
      <simpleType name="PostedTransactionOrderBy">
        <restriction base="string">
          <enumeration value="ID"/>
          <enumeration value="CHECK_NUM"/>
          <enumeration value="POSTED_DATE"/>
          <enumeration value="POSTED_TRANSACTION_STATUS"/>
        </restriction>
      </simpleType>
      <complexType name="ClientBankOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:ClientBankOrderBy"/>
        </sequence>
      </complexType>
      <simpleType name="ClientBankOrderBy">
        <restriction base="string">
          <enumeration value="id"/>
          <enumeration value="accountNumber"/>
          <enumeration value="accountName"/>
          <enumeration value="createdOn"/>
          <enumeration value="modifiedOn"/>
          <enumeration value="modifiedBy"/>
        </restriction>
      </simpleType>
      <simpleType name="EnumNames">
        <restriction base="string">
          <enumeration value="ADDRESSTYPE"/>
          <enumeration value="APPROVALMODE"/>
          <enumeration value="APPROVALSTATUS"/>
          <enumeration value="APPROVALTYPE"/>
          <enumeration value="APPROVALATTEMPTDISPOSITION"/>
          <enumeration value="ATTRIBUTELEVELTYPE"/>
          <enumeration value="ATTRIBUTETYPE"/>
          <enumeration value="BANKACCOUNTTYPE"/>
          <enumeration value="COMISSIONSTRUCTURES"/>
          <enumeration value="CIPSTATUSES"/>
          <enumeration value="DOCUMENTBUSTYPE"/>
          <enumeration value="DOCUMENTTYPE"/>
          <enumeration value="DRAFTACCOUNTSTATUSES"/>
          <enumeration value="ENROLLMENTSTATUSES"/>
          <enumeration value="FEETYPE"/>
          <enumeration value="FEEFREQUENCYTYPE"/>
          <enumeration value="OFACSTATUSES"/>
          <enumeration value="POSITIVEPAYSCHEDULESTATUSES"/>
          <enumeration value="POSITIVEPAYLISTSTATUSES"/>
          <enumeration value="PROCESSINGOPERATIONCODES"/>
          <enumeration value="PHONETYPE"/>
          <enumeration value="SCHEDULESTATUS"/>
          <enumeration value="SERVICETYPE"/>
          <enumeration value="SETTLEMENTSTATUS"/>
          <enumeration value="SPASTATUSES"/>
          <enumeration value="SUBSCRIBERSTATUSES"/>
          <enumeration value="TRANSACTIONCLASS"/>
          <enumeration value="TRANSACTIONMETHOD"/>
          <enumeration value="TRANSACTIONSTATUS"/>
          <enumeration value="TRANSACTIONTYPE"/>
          <enumeration value="USERTYPE"/>
          <enumeration value="VIRTUALACCOUNTSTATUS"/>
          <enumeration value="SUBSCRIBERACCOUNTTYPE"/>
          <enumeration value="DRAFTSCHEDULESTATUS"/>
        </restriction>
      </simpleType>
      <simpleType name="DraftScheduleOrder">
        <restriction base="string">
          <enumeration value="scheduleDate"/>
          <enumeration value="scheduleId"/>
          <enumeration value="transactionDate"/>
          <enumeration value="transactionId"/>
          <enumeration value="status"/>
          <enumeration value="amount"/>
          <enumeration value="modifiedOn"/>
          <enumeration value="modifiedBy"/>
        </restriction>
      </simpleType>
      <complexType name="ScheduleIds">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="scheduleId" nillable="true" type="long"/>
        </sequence>
      </complexType>
      <simpleType name="CIPStatus">
        <restriction base="string">
          <enumeration value="PENDING"/>
          <enumeration value="VERIFIED"/>
          <enumeration value="REJECTED"/>
          <enumeration value="IGNORED"/>
        </restriction>
      </simpleType>
      <simpleType name="OFACStatus">
        <restriction base="string">
          <enumeration value="PENDING"/>
          <enumeration value="VERIFIED"/>
          <enumeration value="REJECTED"/>
          <enumeration value="IGNORED"/>
        </restriction>
      </simpleType>
      <complexType name="SubscriberIds">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="subscriberId" nillable="true" type="long"/>
        </sequence>
      </complexType>
      <complexType name="FeeOrder">
        <sequence>
          <element minOccurs="0" name="orderBy" type="tns:FeeOrderBy"/>
        </sequence>
      </complexType>
      <simpleType name="FeeOrderBy">
        <restriction base="string">
          <enumeration value="ID"/>
          <enumeration value="FEE_TYPE"/>
          <enumeration value="FEE_NAME"/>
          <enumeration value="FEE_AMOUNT"/>
        </restriction>
      </simpleType>
      <element name="AddReferralAffiliateRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="affiliateId" type="long"/>
            <element name="affiliateType" type="ns0:SubscriberAffiliateType"/>
            <element name="referralAffiliateId" type="long"/>
            <element name="referralAffiliateType" type="ns0:SubscriberAffiliateType"/>
            <element name="startDate" type="ns0:NpnDate"/>
            <element name="endDate" type="ns0:NpnDate"/>
            <element name="cycle1Amount" type="double"/>
            <element name="cycle2Amount" type="double"/>
          </all>
        </complexType>
      </element>
      <element name="AddReferralAffiliateResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminCreateAffiliateRequest">
        <complexType>
          <all>
            <element name="affiliate" type="ns0:AffiliateAdmin"/>
          </all>
        </complexType>
      </element>
      <element name="AdminCreateAffiliateResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="affiliateId" nillable="true" type="long"/>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminCreateInternalUserRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="subscriberIdList" nillable="true" type="tns:SubscriberIds"/>
            <element name="firstName" type="string"/>
            <element name="userName" type="string"/>
            <element minOccurs="0" name="middleInitial" nillable="true" type="string"/>
            <element name="lastName" type="string"/>
            <element name="email" type="string"/>
            <element name="phone" type="string"/>
            <element name="password" type="string"/>
            <element default="true" name="isActive" type="boolean"/>
            <element name="rolePermissions" type="ns0:RolePermissionList"/>
            <element default="true" name="isIpValidationRequired" type="boolean"/>
            <element minOccurs="0" name="ipAddresses" nillable="true" type="ns0:IpAddressesList"/>
          </all>
        </complexType>
      </element>
      <element name="AdminCreateInternalUserResponse">
        <complexType>
          <sequence>
            <element name="userId" type="long"/>
            <element name="userName" type="string"/>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminCreateSubscriberRequest">
        <complexType>
          <all>
            <element name="subscriberName" type="string"/>
            <element name="address1" type="string"/>
            <element minOccurs="0" name="address2" nillable="true" type="string"/>
            <element name="city" type="string"/>
            <element name="state" type="string"/>
            <element name="zip" type="string"/>
            <element name="addressType" type="ns0:AddressType"/>
            <element name="commissionStructureName" type="string"/>
            <element name="contactName" type="string"/>
            <element minOccurs="0" name="website" nillable="true" type="string"/>
            <element name="phone" type="string"/>
            <element minOccurs="0" name="mobilePhone" nillable="true" type="string"/>
            <element minOccurs="0" name="subscriberAbbreviation" nillable="true" type="string"/>
            <element default="1000" minOccurs="0" name="checkNumberStart" nillable="true" type="long"/>
            <element name="email" type="string"/>
            <element name="vertical" type="string"/>
            <element minOccurs="0" name="internalUserList" nillable="true" type="ns0:InternalUserList"/>
          </all>
        </complexType>
      </element>
      <element name="AdminCreateSubscriberResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="subscriberId" nillable="true" type="long"/>
            <element name="commandStatus" type="int"/>
            <element maxOccurs="unbounded" name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminCreateSubscriberBankAccountRequest">
        <complexType>
          <all>
            <element name="bankPartnerId" type="long"/>
            <element name="subscriberId" type="long"/>
            <element name="routingNumber" type="string"/>
            <element name="accountType" type="ns0:AccountType"/>
            <element name="thresholdAmount" type="double"/>
            <element name="accountNumber" type="string"/>
            <element name="holdersName" type="string"/>
            <element name="subscriberAccountType" type="ns0:SubscriberAccountType"/>
          </all>
        </complexType>
      </element>
      <element name="AdminCreateSubscriberBankAccountResponse">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
            <element name="subscriberBankAccountId" type="long"/>
            <element name="subscriberAccountId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="AdminCreateSubscriberDocumentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="base64EncodedContent" type="string"/>
            <element name="note" type="string"/>
            <element name="name" type="string"/>
            <element name="contentType" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AdminCreateSubscriberDocumentResponse">
        <complexType>
          <sequence>
            <element name="documentId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminCreateSubscriberFeesRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="fees" type="ns0:CreateSubscriberFees"/>
          </all>
        </complexType>
      </element>
      <element name="AdminCreateSubscriberFeesResponse">
        <complexType>
          <sequence>
            <element name="subscriberId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminCreateSubscriberProcessorSetupRequest">
        <complexType>
          <all>
            <element name="transactionProcessors" type="ns0:TransactionProcessorListForCreateProcessorSetup"/>
            <element name="subscriberId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="AdminCreateSubscriberProcessorSetupResponse">
        <complexType>
          <all>
            <element name="subscriberProcessorSetupIds" type="ns0:SubscriberProcessorSetupIds"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetAffiliateListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="name" type="string"/>
            <element minOccurs="0" name="externalAffiliateId" type="string"/>
            <element minOccurs="0" name="affiliateType" type="ns0:SubscriberAffiliateType"/>
            <element minOccurs="0" name="status" type="string"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="ns0:AffiliateListOrder"/>
            <element name="pageNo" type="positiveInteger"/>
            <element name="resultsPerPage" type="positiveInteger"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetAffiliateListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element minOccurs="0" name="auditInfo" type="ns0:AuditInformation"/>
            <element name="affiliates">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" minOccurs="0" name="affiliate" type="ns0:AffiliateAdmin"/>
                </sequence>
              </complexType>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="AdminGetAffiliateRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="affiliateId" type="long"/>
            <element minOccurs="0" name="externalAffiliateId" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetAffiliateResponse">
        <complexType>
          <sequence>
            <element name="affiliate" type="ns0:AffiliateAdmin"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminGetCFTBankAccountListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetCFTBankAccountListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element name="npnBankAccountList" type="ns0:NpnBankAccountList"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminGetEnrollmentsRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="enrollmentIds" type="tns:EnrollmentIds"/>
            <element minOccurs="0" name="subscriberIds" type="tns:SubscriberIds"/>
            <element minOccurs="0" name="subscriberName" nillable="true" type="string"/>
            <element minOccurs="0" name="clientIds" type="ns0:ClientIds"/>
            <element minOccurs="0" name="firstname" nillable="true" type="string"/>
            <element minOccurs="0" name="middleInitial" nillable="true" type="string"/>
            <element minOccurs="0" name="lastname" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientIds" type="tns:ExternalClientIds"/>
            <element minOccurs="0" name="enrollmentStatuses" type="tns:ClientStatuses"/>
            <element minOccurs="0" name="cipStatuses" type="tns:CIPStatuses"/>
            <element minOccurs="0" name="ofacStatuses" type="tns:OFACStatuses"/>
            <element minOccurs="0" name="spaStatuses" type="tns:SPAStatuses"/>
            <element default="true" name="ascending" type="boolean"/>
            <element minOccurs="0" name="order" type="tns:EnrollmentOrder"/>
            <element name="pageNo" type="int"/>
            <element name="resultsPerPage" type="int"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetEnrollmentsResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element maxOccurs="unbounded" minOccurs="0" name="enrollments" type="ns0:Enrollment"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="ExternalClientIds">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="externalClientId" nillable="true" type="string"/>
        </sequence>
      </complexType>
      <complexType name="CIPStatuses">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="status" type="tns:CIPStatus"/>
        </sequence>
      </complexType>
      <complexType name="OFACStatuses">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="status" type="tns:OFACStatus"/>
        </sequence>
      </complexType>
      <complexType name="EnrollmentOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:EnrollmentOrderBy"/>
        </sequence>
      </complexType>
      <simpleType name="EnrollmentOrderBy">
        <restriction base="string">
          <enumeration value="enrollmentId"/>
          <enumeration value="clientId"/>
          <enumeration value="subscriberName"/>
          <enumeration value="clientFirstName"/>
        </restriction>
      </simpleType>
      <complexType name="EnrollmentIds">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="enrollmentId" nillable="true" type="long"/>
        </sequence>
      </complexType>
      <element name="AdminGetInternalUserListRequest">
        <complexType>
          <all>
            <element name="pageNumber" type="ns0:positiveNumber"/>
            <element name="numberOfRecordsPerPage" type="ns0:positiveNumber"/>
            <element minOccurs="0" name="orderBy" type="ns0:UserOrder"/>
            <element default="true" name="ascending" type="boolean"/>
            <element default="true" minOccurs="0" name="isActive" nillable="true" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetInternalUserListResponse">
        <complexType>
          <sequence>
            <element name="userList" type="ns0:UserList"/>
            <element name="totalCount" type="int"/>
            <element name="returnedCount" type="int"/>
            <element name="pageNumber" type="long"/>
            <element name="commandStatus" type="long"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminGetPostedTransactionListRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="postedTransactionStatus" type="tns:PostedTransactionStatus"/>
            <element name="pageNo" type="int"/>
            <element name="resultsPerPage" type="int"/>
            <element minOccurs="0" name="order" type="tns:PostedTransactionOrder"/>
            <element default="true" name="ascending" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetPostedTransactionListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element name="postedTransactionList" type="ns0:PostedTransactionList"/>
            <element minOccurs="0" name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminGetSettlementListRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="subscriberName" nillable="true" type="string"/>
            <element minOccurs="0" name="clientName" nillable="true" type="string"/>
            <element minOccurs="0" name="settlementStatus" nillable="true" type="ns0:SettlementStatus"/>
            <element minOccurs="0" name="approvalStatus" nillable="true" type="ns0:ApprovalStatus"/>
            <element name="pageNumber" type="ns0:positiveNumber"/>
            <element name="numberOfRecordsPerPage" type="ns0:positiveNumber"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="ns0:SettlementOrder"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetSettlementListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="long"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="long"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="long"/>
            <element minOccurs="0" name="settlementList" nillable="true" type="ns0:SettlementList"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminGetSubscriberAccountsRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="subscriberAccountId" nillable="true" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetSubscriberAccountsResponse">
        <complexType>
          <all>
            <element name="subscriberAccountList">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" minOccurs="0" name="subscriberAccounts" nillable="true" type="ns0:SubscriberAccount"/>
                </sequence>
              </complexType>
            </element>
            <element name="commandStatus" type="int"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetSubscriberBankAccountListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="numberOfRecordsPerPage" nillable="true" type="ns0:positiveNumber"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="ns0:positiveNumber"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetSubscriberBankAccountListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element name="subscriberBankAccountList" type="ns0:SubscriberBankAccountList"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminGetSubscriberBankAccountRequest">
        <complexType>
          <all>
            <element name="subscriberBankAccountId" type="long"/>
            <element name="subscriberId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetSubscriberBankAccountResponse">
        <complexType>
          <sequence>
            <element name="subscriberId" type="long"/>
            <element name="subscriberBankAccount" type="ns0:SubscriberBankAccount"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminGetSubscriberDetailRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetSubscriberDetailResponse">
        <complexType>
          <sequence>
            <element name="subscriberName" type="string"/>
            <element name="address1" type="string"/>
            <element minOccurs="0" name="address2" nillable="true" type="string"/>
            <element name="city" type="string"/>
            <element name="state" type="string"/>
            <element name="zip" type="string"/>
            <element name="contactName" type="string"/>
            <element name="website" nillable="true" type="string"/>
            <element name="phone" type="string"/>
            <element name="mobilePhone" nillable="true" type="string"/>
            <element name="email" type="string"/>
            <element name="accountSetup" type="string"/>
            <element name="serviceCharge" type="string"/>
            <element name="status" type="string"/>
            <element minOccurs="0" name="subscriberAbbreviation" nillable="true" type="string"/>
            <element name="startDate" type="ns0:NpnDate"/>
            <element name="commissionStructureName" type="string"/>
            <element name="vertical" type="string"/>
            <element name="pendingSPAAs" type="long"/>
            <element name="pendingSettlements" type="long"/>
            <element name="totalEnrollments" type="long"/>
            <element name="commandStatus" type="int"/>
            <element maxOccurs="unbounded" name="errorMessage" type="string"/>
            <element minOccurs="0" name="internalUserList" nillable="true" type="ns0:InternalUserList"/>
            <element minOccurs="0" name="processingSettings" nillable="true" type="ns0:Settings"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminGetSubscriberDocumentListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="pageNo" nillable="true" type="int"/>
            <element minOccurs="0" name="resultsPerPage" nillable="true" type="int"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetSubscriberDocumentListResponse">
        <complexType>
          <all>
            <element name="totalCount" type="int"/>
            <element name="returnedCount" type="int"/>
            <element name="pageNumber" type="int"/>
            <element minOccurs="0" name="subsriberDocuments" type="ns0:SubscriberDocuments"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetSubscriberListRequest">
        <complexType>
          <all>
            <annotation>
              <documentation>Returns a list of subscribers to the caller</documentation>
            </annotation>
            <element minOccurs="0" name="subscriberId" nillable="true" type="long"/>
            <element minOccurs="0" name="userId" nillable="true" type="long"/>
            <element minOccurs="0" name="name" nillable="true" type="string"/>
            <element minOccurs="0" name="contactName" nillable="true" type="string"/>
            <element minOccurs="0" name="status" nillable="true" type="ns0:SubscriberStatus"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="ns0:SubscriberOrder"/>
            <element name="pageNumber" type="ns0:positiveNumber"/>
            <element name="numberOfRecordsPerPage" type="ns0:positiveNumber"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetSubscriberListResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="commandStatus" type="int"/>
            <element name="totalCount" type="long"/>
            <element name="returnedCount" type="long"/>
            <element name="pageNumber" type="long"/>
            <element minOccurs="0" name="subscriberList" nillable="true" type="ns0:SubscriberList"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetSubscriberProcessorSetupRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetSubscriberProcessorSetupResponse">
        <complexType>
          <all>
            <element name="subscriberProcessorSetups" nillable="true" type="ns0:SubscriberProcessorSetupList"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetTransferBankAccountListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="long"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetTransferBankAccountListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element name="npnBankAccountList" type="ns0:NpnBankAccountList"/>
            <element name="subscriberBankAccountList" type="ns0:SubscriberBankAccountList"/>
            <element name="clientBankAccountList" type="ns0:ClientBankAccountList"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminListSubscriberFeeRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="type" nillable="true" type="ns0:FeeType"/>
            <element minOccurs="0" name="owner" nillable="true" type="string"/>
            <element default="true" minOccurs="0" name="ascending" nillable="true" type="boolean"/>
            <element minOccurs="0" name="order" type="tns:FeeOrder"/>
            <element default="1" minOccurs="0" name="pageNo" nillable="true" type="int"/>
            <element default="10" minOccurs="0" name="resultsPerPage" nillable="true" type="int"/>
            <element default="false" minOccurs="0" name="includeDeleted" nillable="true" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="AdminListSubscriberFeeResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element name="subscriberId" type="long"/>
            <element name="fees" type="ns0:SubscriberFees"/>
          </all>
        </complexType>
      </element>
      <element name="AdminListTopLevelFeeRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="type" nillable="true" type="ns0:FeeType"/>
          </all>
        </complexType>
      </element>
      <element name="AdminListTopLevelFeeResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="commandStatus" type="int"/>
            <element name="fees" type="ns0:TopLevelFees"/>
          </all>
        </complexType>
      </element>
      <element name="AdminRejectPostedTransactionRequest">
        <complexType>
          <all>
            <element name="postedTransactionId" type="long"/>
            <element name="confirmationCode" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AdminRejectPostedTransactionResponse">
        <complexType>
          <all>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AdminUpdateAffiliateRequest">
        <complexType>
          <all>
            <element name="affiliateId" type="long"/>
            <element name="affiliate" type="ns0:AffiliateAdminUpdate"/>
          </all>
        </complexType>
      </element>
      <element name="AdminUpdateAffiliateResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminUpdateEnrollmentRequest">
        <complexType>
          <all>
            <element name="enrollmentId" type="long"/>
            <element minOccurs="0" name="enrollDate" type="ns0:NpnDate"/>
            <element minOccurs="0" name="verticalId" type="long"/>
            <element minOccurs="0" name="isSvaCreated" type="boolean"/>
            <element minOccurs="0" name="areAllDocumentSigned" type="boolean"/>
            <element minOccurs="0" name="systemId" type="long"/>
            <element minOccurs="0" name="spaaApprovalRequired" type="boolean"/>
            <element minOccurs="0" name="draftAmount" type="double"/>
            <element minOccurs="0" name="mostRecentAction" type="string"/>
            <element minOccurs="0" name="enrollmentStatus" type="tns:ClientStatus"/>
            <element minOccurs="0" name="cipStatus" type="tns:CIPStatus"/>
            <element minOccurs="0" name="ofacStatus" type="tns:OFACStatus"/>
            <element minOccurs="0" name="spaStatus" type="tns:SPAStatus"/>
            <element minOccurs="0" name="spaRejectReason" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AdminUpdateEnrollmentResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="enrollmentId" nillable="true" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AdminUpdateInternalUserRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="subscriberIdList" nillable="true" type="tns:SubscriberIds"/>
            <element name="userId" type="long"/>
            <element name="firstName" type="string"/>
            <element name="userName" type="string"/>
            <element minOccurs="0" name="middleInitial" nillable="true" type="string"/>
            <element minOccurs="0" name="lastName" nillable="true" type="string"/>
            <element name="email" type="string"/>
            <element name="phone" type="string"/>
            <element minOccurs="0" name="password" nillable="true" type="string"/>
            <element minOccurs="0" name="existingPassword" nillable="true" type="string"/>
            <element default="true" name="isActive" type="boolean"/>
            <element default="false" name="isLocked" type="boolean"/>
            <element name="rolePermissions" type="ns0:RolePermissionList"/>
            <element default="true" name="isIpValidationRequired" type="boolean"/>
            <element minOccurs="0" name="ipAddresses" nillable="true" type="ns0:IpAddressesList"/>
          </all>
        </complexType>
      </element>
      <element name="AdminUpdateInternalUserResponse">
        <complexType>
          <sequence>
            <element name="userId" type="long"/>
            <element name="userName" type="string"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminUpdateSubscriberBankAccountRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="subscriberBankAccountId" type="long"/>
            <element name="routingNumber" type="string"/>
            <element name="accountType" type="ns0:AccountType"/>
            <element name="thresholdAmount" type="double"/>
            <element name="accountNumber" type="string"/>
            <element name="holdersName" type="string"/>
            <element name="subscriberAccountType" type="ns0:SubscriberAccountType"/>
            <element default="false" name="subscriberAccountOverwrite" nillable="true" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="AdminUpdateSubscriberBankAccountResponse">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
            <element name="subscriberBankAccountId" type="long"/>
            <element name="subscriberAccountId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="AdminUpdateSubscriberFeeRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="subscriberFeeId" nillable="true" type="long"/>
            <element minOccurs="0" name="externalFeeId" nillable="true" type="string"/>
            <element name="amount" type="double"/>
            <element minOccurs="0" name="status" type="ns0:SubscriberFeeStatus"/>
          </all>
        </complexType>
      </element>
      <element name="AdminUpdateSubscriberFeeResponse">
        <complexType>
          <sequence>
            <element name="subscriberFeeId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminUpdateSubscriberRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="subscriberName" type="string"/>
            <element name="address1" type="string"/>
            <element minOccurs="0" name="address2" nillable="true" type="string"/>
            <element name="city" type="string"/>
            <element name="state" type="string"/>
            <element name="zip" type="string"/>
            <element name="addressType" type="ns0:AddressType"/>
            <element name="commissionStructureName" type="string"/>
            <element name="contactName" type="string"/>
            <element minOccurs="0" name="website" nillable="true" type="string"/>
            <element name="phone" type="string"/>
            <element minOccurs="0" name="mobilePhone" nillable="true" type="string"/>
            <element minOccurs="0" name="subscriberAbbreviation" nillable="true" type="string"/>
            <element name="email" type="string"/>
            <element minOccurs="0" name="subscriberStatus" nillable="true" type="ns0:SubscriberStatus"/>
            <element name="vertical" type="string"/>
            <element minOccurs="0" name="internalUserList" nillable="true" type="ns0:InternalUserList"/>
            <element minOccurs="0" name="checkNumberStart" nillable="true" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="AdminUpdateSubscriberResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="subscriberId" nillable="true" type="long"/>
            <element name="commandStatus" type="int"/>
            <element maxOccurs="unbounded" name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminViewEnrollmentRequest">
        <complexType>
          <all>
            <annotation>
              <documentation>One of the enrollment,client or externalClient id should present</documentation>
            </annotation>
            <element minOccurs="0" name="enrollmentId" nillable="true" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AdminViewEnrollmentResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="enrollment" type="ns0:Enrollment"/>
            <element minOccurs="0" name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AuthorizeAndAdjustPaymentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="postedTransactionId" type="long"/>
            <element name="scheduleId" type="long"/>
            <element minOccurs="0" name="reason" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AuthorizeAndAdjustPaymentResponse">
        <complexType>
          <sequence>
            <element name="subscriberId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AuthorizeAndAdvancePaymentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="postedTransactionId" type="long"/>
            <element name="scheduleId" type="long"/>
            <element minOccurs="0" name="reason" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AuthorizeAndAdvancePaymentResponse">
        <complexType>
          <sequence>
            <element name="subscriberId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AuthorizeAndLoadPaymentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="postedTransactionId" type="long"/>
            <element name="scheduleId" type="long"/>
            <element minOccurs="0" name="reason" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AuthorizeAndLoadPaymentResponse">
        <complexType>
          <sequence>
            <element name="subscriberId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AuthorizePaymentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="postedTransactionId" type="long"/>
            <element name="scheduleId" type="long"/>
            <element default="false" name="load" type="boolean"/>
            <element default="false" name="adjust" type="boolean"/>
            <element default="false" name="advance" type="boolean"/>
            <element minOccurs="0" name="reason" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AuthorizePaymentResponse">
        <complexType>
          <sequence>
            <element name="subscriberId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AuthRequest">
        <complexType>
          <all>
            <element name="username" type="string"/>
            <element name="password" type="string"/>
            <element minOccurs="0" name="ipAddress" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AuthResponse">
        <complexType>
          <sequence>
            <element name="username" type="string"/>
            <element name="password" type="string"/>
            <element name="user" nillable="true" type="ns0:UserInfo"/>
            <element name="subscriberList" nillable="true" type="ns0:Subscribers"/>
            <element minOccurs="0" name="affiliateIds">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" name="affiliateId" type="long"/>
                </sequence>
              </complexType>
            </element>
            <element minOccurs="0" name="clientDetails" type="ns0:ClientInfoForAuthResponse"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CancelEnrollmentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="enrollmentId" type="long"/>
            <element name="cancelReasonCode" type="ns0:CancelReasonCode"/>
            <element name="cancelFeeAmt" type="double"/>
            <element minOccurs="0" name="comments" type="string"/>
            <element name="printCancelLetter" type="boolean"/>
            <element name="waiveCancelFee" type="boolean"/>
            <element name="waivePendingFee" type="boolean"/>
            <element default="USER" name="cancelledBy" type="ns0:CancelledBy"/>
          </all>
        </complexType>
      </element>
      <element name="CancelEnrollmentResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="ChangePasswordForTokenRequest">
        <complexType>
          <all>
            <element name="token" type="string"/>
            <element minOccurs="0" name="newPassword" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="ChangePasswordForTokenResponse">
        <complexType>
          <all>
            <element name="user" type="ns0:UserInfo"/>
          </all>
        </complexType>
      </element>
      <element name="ClientVerificationRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="ClientVerificationResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateReturnScheduleRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element name="scheduleDate" type="ns0:NpnDate"/>
            <element minOccurs="0" name="recoupFeeDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="feeScheduleId" nillable="true" type="long"/>
            <element minOccurs="0" name="clientBankAccountId" nillable="true" type="long"/>
            <element name="amount" type="double"/>
            <element minOccurs="0" name="comment" nillable="true" type="string"/>
            <element name="transactionClass" type="ns0:ReturnTransactionClass"/>
            <element name="transactionMethod" type="ns0:ReturnTransactionMethod"/>
          </all>
        </complexType>
      </element>
      <element name="CreateReturnScheduleResponse">
        <complexType>
          <sequence>
            <element name="scheduleId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateSuscriberTemplateAssetRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="note" nillable="true" type="string"/>
            <element minOccurs="0" name="documentType" nillable="true" type="string"/>
            <element name="base64EncodedContent" type="string"/>
            <element name="contentType" type="string"/>
            <element name="documentName" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="CreateSuscriberTemplateAssetResponse">
        <complexType>
          <sequence>
            <element name="documentId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateAdhocTransferRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="scheduleDate" type="ns0:NpnDate"/>
            <element name="amount" type="double"/>
            <element name="fromAccount" type="ns0:BankAccount"/>
            <element name="toAccount" type="ns0:BankAccount"/>
            <element name="comment" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="CreateAdhocTransferResponse">
        <complexType>
          <sequence>
            <element name="scheduleId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateAffiliateRequest">
        <complexType>
          <all>
            <element name="affiliate" type="ns0:Affiliate"/>
          </all>
        </complexType>
      </element>
      <element name="CreateAffiliateResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="affiliateId" nillable="true" type="long"/>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateAffiliateUserRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="affilaiteId" type="long"/>
            <element name="firstName" type="string"/>
            <element name="userName" type="string"/>
            <element minOccurs="0" name="middleInitial" type="string"/>
            <element name="lastName" type="string"/>
            <element name="email" type="string"/>
            <element name="phone" type="string"/>
            <element name="password" type="string"/>
            <element minOccurs="0" name="addressLine1" type="string"/>
            <element minOccurs="0" name="addressLine2" type="string"/>
            <element minOccurs="0" name="city" type="string"/>
            <element minOccurs="0" name="state" type="string"/>
            <element minOccurs="0" name="zip" type="string"/>
            <element minOccurs="0" name="comment" type="string"/>
            <element default="true" name="isActive" type="boolean"/>
            <element name="rolePermissions" type="ns0:RolePermissionList"/>
            <element default="true" name="isIpValidationRequired" type="boolean"/>
            <element minOccurs="0" name="ipAddresses" type="ns0:IpAddressesList"/>
            <element name="userType" type="ns0:AffiliateUserType"/>
            <element default="true" name="isWelcomeMailRequired" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="CreateAffiliateUserResponse">
        <complexType>
          <sequence>
            <element name="userId" type="long"/>
            <element name="userName" type="string"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateApprovalAttemptRequest">
        <complexType>
          <all>
            <element name="approvalId" type="long"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="approvalAttemptNote" nillable="true" type="string"/>
            <element name="approvalAttemptMode" nillable="true" type="ns0:ApprovalAttemptMode"/>
            <element minOccurs="0" name="approvalAttemptDisposition" nillable="true" type="ns0:ApprovalAttemptDisposition"/>
          </all>
        </complexType>
      </element>
      <element name="CreateApprovalAttemptResponse">
        <complexType>
          <sequence>
            <element name="approvalId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
            <element name="approvalAttemptId" type="long"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateAutoEnrollmentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="agencyId" type="long"/>
            <element minOccurs="0" name="agencyExternalId" type="string"/>
            <element minOccurs="0" name="dealerId" type="long"/>
            <element minOccurs="0" name="dealerExternalId" type="string"/>
            <element minOccurs="0" name="fiMgrId" type="long"/>
            <element minOccurs="0" name="fiMgrExternalId" type="string"/>
            <element minOccurs="0" name="externalId" type="string"/>
            <element name="clientContactInfo" type="ns0:ClientContactInfo"/>
            <element name="clientPaymentInfo" type="ns0:ClientPaymentInfo"/>
            <element name="lenderInfo" type="ns0:LenderInfo"/>
            <element name="debitAuthorization" type="ns0:DebitAuthorization"/>
            <element name="acknowledgment" type="ns0:Acknowledgment"/>
            <element minOccurs="0" name="comment" type="string"/>
            <element minOccurs="0" name="loanType" type="string"/>
            <element default="false" minOccurs="0" name="isHalfDraft" nillable="true" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="CreateAutoEnrollmentResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="clientId" type="long"/>
            <element minOccurs="0" name="enrollmentId" type="long"/>
            <element minOccurs="0" name="enrollmentErrors">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" name="error" type="ns0:Error"/>
                </sequence>
              </complexType>
            </element>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateAutoNPNFeeRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="agencyId" type="long"/>
            <element name="cycle1Fee" type="double"/>
            <element name="cycle2Fee" type="double"/>
            <element name="cycle3Fee" type="double"/>
            <element name="cycle4Fee" type="double"/>
          </all>
        </complexType>
      </element>
      <element name="CreateAutoNPNFeeResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateChannelAttributeRequest">
        <complexType>
          <all>
            <element name="channel" type="ns0:Channel"/>
            <element name="code" type="string"/>
            <element name="name" type="string"/>
            <element name="isRequired" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="CreateChannelAttributeResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="channelAttributeId" nillable="true" type="long"/>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateClientBankAccountRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="routingNumber" type="string"/>
            <element name="accountType" type="ns0:AccountType"/>
            <element name="accountNumber" type="string"/>
            <element name="holdersName" type="string"/>
            <element minOccurs="0" name="externalBankId" nillable="true" type="string"/>
            <element minOccurs="0" name="accountNature" nillable="true" type="ns0:AccountNature"/>
            <element minOccurs="0" name="authorizationFormat" nillable="true" type="ns0:AuthorizationFormat"/>
          </all>
        </complexType>
      </element>
      <element name="CreateClientBankAccountResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
            <element name="clientBankAccountId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="CreateClientRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="referralId" nillable="true" type="ns0:ReferralId"/>
            <element minOccurs="0" name="channelId" nillable="true" type="long"/>
            <element minOccurs="0" name="productId" nillable="true" type="long"/>
            <element name="firstname" type="string"/>
            <element minOccurs="0" name="middleInitial" nillable="true" type="string"/>
            <element name="lastname" type="string"/>
            <element minOccurs="0" name="ssn" nillable="true" type="string"/>
            <element minOccurs="0" name="dob" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="address1" nillable="true" type="string"/>
            <element minOccurs="0" name="address2" nillable="true" type="string"/>
            <element minOccurs="0" name="city" nillable="true" type="string"/>
            <element minOccurs="0" name="state" nillable="true" type="string"/>
            <element minOccurs="0" name="zip" nillable="true" type="string"/>
            <element minOccurs="0" name="phone" nillable="true" type="string"/>
            <element minOccurs="0" name="WorkNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="mobile" nillable="true" type="string"/>
            <element minOccurs="0" name="email" nillable="true" type="string"/>
            <element minOccurs="0" name="userName" nillable="true" type="string"/>
            <element name="draftAmount" type="double"/>
            <element minOccurs="0" name="coClients" type="ns0:CoSigners"/>
            <element minOccurs="0" name="svaDocument" type="ns0:SVADocument"/>
          </all>
        </complexType>
      </element>
      <element name="CreateClientResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="enrollmentId" nillable="true" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="CreateCoClientRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="coClientFirstname" type="string"/>
            <element name="coClientLastname" type="string"/>
            <element minOccurs="0" name="coClientMiddleInitial" nillable="true" type="string"/>
            <element minOccurs="0" name="coClientSsn" nillable="true" type="string"/>
            <element minOccurs="0" name="coClientDob" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="coClientPhone" nillable="true" type="string"/>
            <element minOccurs="0" name="coClientWorkNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="coClientMobile" nillable="true" type="string"/>
            <element minOccurs="0" name="coClientEmail" nillable="true" type="string"/>
            <element minOccurs="0" name="coSignatory" nillable="true" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="CreateCoClientResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="CreateInterClientTransferRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long">
              <annotation>
                <documentation>Subscriber Id</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="fromClientExternalId" nillable="true" type="string"/>
            <element minOccurs="0" name="fromClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="toClientExternalId" nillable="true" type="string"/>
            <element minOccurs="0" name="toClientId" nillable="true" type="string"/>
            <element name="amount" type="double"/>
            <element name="occurs" type="int"/>
            <element name="startDate" type="ns0:NpnDate"/>
            <element name="type" type="ns0:DraftType">
              <annotation>
                <documentation>Whether it is a Monthly or adhock draft</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="comment" nillable="true" type="string">
              <annotation>
                <documentation>Comments regarding the draft schedule</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="remark" nillable="true" type="string">
              <annotation>
                <documentation>Remarks</documentation>
              </annotation>
            </element>
            <element default="false" minOccurs="0" name="allowDuplicates" nillable="true" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="CreateInterClientTransferResponse">
        <complexType>
          <sequence>
            <element name="scheduleList" nillable="true" type="tns:Schedules"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateDraftItemsRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="scheduleFrequencyType" type="ns0:DraftType">
              <annotation>
                <documentation>Whether it is a Biweekly, Monthly or adhock draft</documentation>
              </annotation>
            </element>
            <element name="scheduleList" type="ns0:ScheduleList"/>
          </all>
        </complexType>
      </element>
      <element name="CreateDraftItemsResponse">
        <complexType>
          <sequence>
            <element name="scheduleList" nillable="true" type="tns:Schedules"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateDraftScheduleRequest">
        <annotation>
          <documentation>Create list of draft schedules which will draw funds from clients bank account in to virtual
                bank account</documentation>
        </annotation>
        <complexType>
          <all>
            <element name="subscriberId" type="long">
              <annotation>
                <documentation>Subscriber Id</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="clientId" nillable="true" type="string">
              <annotation>
                <documentation>Client Id or External Id is used to find the client.</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element minOccurs="0" name="clientBankAccountId" nillable="true" type="long">
              <annotation>
                <documentation>Client bank account id of the bank account from which draft are drawn</documentation>
              </annotation>
            </element>
            <element name="amount" type="double">
              <annotation>
                <documentation>Draft amount</documentation>
              </annotation>
            </element>
            <element name="occurs" type="int">
              <annotation>
                <documentation>Number of draft occurances</documentation>
              </annotation>
            </element>
            <element name="startDate" type="ns0:NpnDate">
              <annotation>
                <documentation>Draft start date</documentation>
              </annotation>
            </element>
            <element name="type" type="ns0:DraftType">
              <annotation>
                <documentation>Whether it is a Monthly or adhock draft</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="comment" nillable="true" type="string">
              <annotation>
                <documentation>Comments regarding the draft schedule</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="remark" nillable="true" type="string">
              <annotation>
                <documentation>Remarks</documentation>
              </annotation>
            </element>
            <element default="false" minOccurs="0" name="allowDuplicates" nillable="true" type="boolean"/>
            <element minOccurs="0" name="accountNature" nillable="true" type="ns0:AccountNature"/>
            <element minOccurs="0" name="authorizationFormat" nillable="true" type="ns0:AuthorizationFormat"/>
          </all>
        </complexType>
      </element>
      <element name="CreateDraftScheduleResponse">
        <complexType>
          <sequence>
            <element name="scheduleList" nillable="true" type="tns:Schedules"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateEnrollmentDocumentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="note" nillable="true" type="string"/>
            <element minOccurs="0" name="documentType" nillable="true" type="string"/>
            <element name="base64EncodedContent" type="string"/>
            <element name="contentType" type="string"/>
            <element name="documentName" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="CreateEnrollmentDocumentResponse">
        <complexType>
          <sequence>
            <element name="documentId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateEnrollmentErrorRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="long"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="errorCode" nillable="true" type="string"/>
            <element name="reason" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="CreateEnrollmentErrorResponse">
        <complexType>
          <sequence>
            <element name="enrollmentErrorId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateEnrollmentTicketRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="transactionId" nillable="true" type="long"/>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
            <element name="ticketType" type="string"/>
            <element minOccurs="0" name="ticketStatus" nillable="true" type="ns0:EnrollmentTicketStatus"/>
            <element name="subject" type="string"/>
            <element minOccurs="0" name="assigneeId" nillable="true" type="long"/>
            <element minOccurs="0" name="reviewDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="assosiatedAmount" nillable="true" type="double"/>
            <element minOccurs="0" name="reason" nillable="true" type="string"/>
            <element minOccurs="0" name="comment" nillable="true" type="string"/>
            <element minOccurs="0" name="message" nillable="true" type="string"/>
            <element minOccurs="0" name="referenceTicket" nillable="true" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="CreateEnrollmentTicketResponse">
        <complexType>
          <sequence>
            <element name="enrollmentTicketId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateFeeItemsRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="scheduleList" type="ns0:FeeScheduleList"/>
          </all>
        </complexType>
      </element>
      <element name="CreateFeeItemsResponse">
        <complexType>
          <sequence>
            <element name="scheduleList" nillable="true" type="tns:Schedules"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateFeeScheduleRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element name="subscriberFeeId" type="long"/>
            <element name="amount" type="double"/>
            <element name="occurs" type="int"/>
            <element name="startDate" type="ns0:NpnDate"/>
            <element minOccurs="0" name="comment" nillable="true" type="string"/>
            <element minOccurs="0" name="frequency" nillable="true" type="ns0:FeeFrequencyType"/>
            <element minOccurs="0" name="remark" nillable="true" type="string"/>
            <element minOccurs="0" name="settlementId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="CreateFeeScheduleResponse">
        <complexType>
          <sequence>
            <element name="scheduleId" type="string"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
            <element maxOccurs="unbounded" minOccurs="0" name="scheduleIdList" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateGroupEnrollmentAffiliateRequest">
        <complexType>
          <all>
            <element name="enrollmentId" type="long"/>
            <element name="subscriberId" type="long"/>
            <element name="subscriberAffiliateGroupId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="CreateGroupEnrollmentAffiliateResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateHierarchyAffiliateCommissionDistRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="affiliateId" type="long"/>
            <element name="affiliateType" type="ns0:SubscriberAffiliateType"/>
            <element minOccurs="0" name="referalId" type="long"/>
            <element minOccurs="0" name="fixed" type="ns0:FixedDistType"/>
            <element minOccurs="0" name="dealerId" type="long"/>
            <element minOccurs="0" name="payoutRule" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="CreateHierarchyAffiliateCommissionDistResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateHierarchyEnrollmentAffiliateRequest">
        <complexType>
          <all>
            <element name="enrollmentId" type="long"/>
            <element name="subscriberId" type="long"/>
            <element name="parentId" nillable="true" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="CreateHierarchyEnrollmentAffiliateResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreatePartialEnrollmentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="partialEnrollmentInfo" type="ns0:PartialEnrollmentInfo"/>
          </all>
        </complexType>
      </element>
      <element name="CreatePartialEnrollmentResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="partialEnrollmentId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreatePerformanceSettlementRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element name="payeeId" type="long"/>
            <element minOccurs="0" name="payeeAddressId" nillable="true" type="long"/>
            <element minOccurs="0" name="PayeeExternalAddressId" nillable="true" type="string"/>
            <element minOccurs="0" name="payeeContactId" nillable="true" type="long"/>
            <element minOccurs="0" name="payeeExternalContactId" nillable="true" type="string"/>
            <element minOccurs="0" name="payeeBankAccountId" nillable="true" type="long"/>
            <element minOccurs="0" name="PayeeBankExternalAccountId" nillable="true" type="string"/>
            <element name="currentBalance" type="double"/>
            <element name="settlementAmount" type="double"/>
            <element minOccurs="0" name="settlementReference" nillable="true" type="string"/>
            <element minOccurs="0" name="numPayments" nillable="true" type="ns0:positiveNumber"/>
            <element name="accountNumber" type="string"/>
            <element minOccurs="0" name="comment" nillable="true" type="string"/>
            <element minOccurs="0" name="negotiator" nillable="true" type="string"/>
            <element default="true" name="isApprovalRequired" type="boolean"/>
            <element minOccurs="0" name="settlementPaymentList" nillable="true" type="ns0:SettlementPaymentList"/>
          </all>
        </complexType>
      </element>
      <element name="CreatePerformanceSettlementResponse">
        <complexType>
          <sequence>
            <element name="settlementId" type="string"/>
            <element name="scheduleId" type="string"/>
            <element ref="ns0:serviceFault"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreatePositivePayListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="expandUpTo" nillable="true" type="ns0:NpnDate"/>
            <element name="paymentIdList" type="ns0:PaymentIdList"/>
          </all>
        </complexType>
      </element>
      <element name="CreatePositivePayListResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="paymentList" type="ns0:PaymentList"/>
          </all>
        </complexType>
      </element>
      <element name="CreateRuleSetRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="name" type="string"/>
            <element minOccurs="0" name="externalRuleSetId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="CreateRuleSetResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="ruleSetId" nillable="true" type="long"/>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateSettlementScheduleRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element name="payeeId" type="long"/>
            <element minOccurs="0" name="payeeAddressId" nillable="true" type="long"/>
            <element minOccurs="0" name="PayeeExternalAddressId" nillable="true" type="string"/>
            <element minOccurs="0" name="payeeContactId" nillable="true" type="long"/>
            <element minOccurs="0" name="payeeExternalContactId" nillable="true" type="string"/>
            <element minOccurs="0" name="payeeBankAccountId" nillable="true" type="long"/>
            <element minOccurs="0" name="PayeeBankExternalAccountId" nillable="true" type="string"/>
            <element name="currentBalance" type="double"/>
            <element name="settlementAmount" type="double"/>
            <element minOccurs="0" name="settlementReference" nillable="true" type="string"/>
            <element minOccurs="0" name="numPayments" nillable="true" type="ns0:positiveNumber"/>
            <element name="accountNumber" type="string"/>
            <element minOccurs="0" name="comment" nillable="true" type="string"/>
            <element minOccurs="0" name="negotiator" nillable="true" type="string"/>
            <element default="true" name="isApprovalRequired" type="boolean"/>
            <element minOccurs="0" name="settlementScheduleList" nillable="true" type="ns0:SettlementScheduleList"/>
          </all>
        </complexType>
      </element>
      <element name="CreateSettlementScheduleResponse">
        <complexType>
          <sequence>
            <element name="settlementId" type="string"/>
            <element name="scheduleId" type="string"/>
            <element ref="ns0:serviceFault"/>
          </sequence>
        </complexType>
      </element>
      <element name="InstantRemittanceRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element name="transactionMethod" type="ns0:InstantPaymentTransactionMethod"/>
            <element minOccurs="0" name="settlementId" nillable="true" type="long"/>
            <element minOccurs="0" name="srcAccountNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="paymentAccountNumber" nillable="true" type="string"/>
            <element name="payeePaypalId" type="string"/>
            <element minOccurs="0" name="comment" nillable="true" type="string"/>
            <element name="amount" type="double"/>
          </all>
        </complexType>
      </element>
      <element name="InstantRemittanceResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="transactionId" nillable="true" type="string"/>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateSubscriberAffiliateConfigsRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="affiliateId" type="long"/>
            <element name="partnerId" type="long"/>
            <element name="affiliateConfigs">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" name="config">
                    <complexType>
                      <sequence>
                        <element name="name" type="ns0:AffiliateConfig"/>
                        <element name="value" type="string"/>
                      </sequence>
                    </complexType>
                  </element>
                </sequence>
              </complexType>
            </element>
          </all>
        </complexType>
      </element>
      <element name="CreateSubscriberAffiliateConfigsResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="affiliateConfigId" nillable="true" type="long"/>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateSubscriberPartnerRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="partner" type="ns0:Partner"/>
            <element minOccurs="0" name="partnerConfigs">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" name="config">
                    <complexType>
                      <sequence>
                        <element name="name" type="string"/>
                        <element name="value" type="string"/>
                      </sequence>
                    </complexType>
                  </element>
                </sequence>
              </complexType>
            </element>
          </all>
        </complexType>
      </element>
      <element name="CreateSubscriberPartnerResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="partnerId" nillable="true" type="long"/>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateSubscriberFeeRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="fee" type="ns0:SubscriberFeeRequest"/>
          </all>
        </complexType>
      </element>
      <element name="CreateSubscriberFeeResponse">
        <complexType>
          <sequence>
            <element name="subscriberFeeId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateSubscriberPayeeRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="subscriberPayeeId" nillable="true" type="string"/>
            <element name="payeeName" type="string"/>
            <element default="true" minOccurs="0" name="payeeStatus" nillable="true" type="boolean"/>
            <element minOccurs="0" name="payeeDescription" nillable="true" type="string"/>
            <element minOccurs="0" name="payeeWebsite" nillable="true" type="string"/>
            <element minOccurs="0" name="externalPayeeId" nillable="true" type="long"/>
            <element minOccurs="0" name="faxNo" nillable="true" type="string"/>
            <element minOccurs="0" name="phoneNo" nillable="true" type="string"/>
            <element minOccurs="0" name="payeeAdresses" nillable="true">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" minOccurs="0" name="address" nillable="true" type="ns0:Address"/>
                </sequence>
              </complexType>
            </element>
            <element minOccurs="0" name="payeeContacts" nillable="true">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" minOccurs="0" name="contact" nillable="true" type="ns0:Contact"/>
                </sequence>
              </complexType>
            </element>
            <element minOccurs="0" name="payeeBankAccounts" nillable="true">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" minOccurs="0" name="account" nillable="true" type="ns0:Account"/>
                </sequence>
              </complexType>
            </element>
            <element minOccurs="0" name="isCollectionAgency" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="CreateSubscriberPayeeResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="payeeAddresses" nillable="true" type="ns0:AddressesIds"/>
            <element minOccurs="0" name="payeeContacts" nillable="true" type="ns0:ContactsIds"/>
            <element minOccurs="0" name="payeeBankAccounts" nillable="true" type="ns0:BankAccountIds"/>
            <element name="payeeId" type="long"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateSubscriberUserRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="firstName" type="string"/>
            <element name="userName" type="string"/>
            <element minOccurs="0" name="middleInitial" nillable="true" type="string"/>
            <element name="lastName" type="string"/>
            <element name="email" type="string"/>
            <element name="phone" type="string"/>
            <element name="password" type="string"/>
            <element minOccurs="0" name="addressLine1" nillable="true" type="string"/>
            <element minOccurs="0" name="addressLine2" nillable="true" type="string"/>
            <element minOccurs="0" name="city" nillable="true" type="string"/>
            <element minOccurs="0" name="state" nillable="true" type="string"/>
            <element minOccurs="0" name="zip" nillable="true" type="string"/>
            <element minOccurs="0" name="comment" nillable="true" type="string"/>
            <element default="true" name="isActive" type="boolean"/>
            <element name="rolePermissions" type="ns0:RolePermissionList"/>
            <element default="true" name="isIpValidationRequired" type="boolean"/>
            <element minOccurs="0" name="ipAddresses" nillable="true" type="ns0:IpAddressesList"/>
          </all>
        </complexType>
      </element>
      <element name="CreateSubscriberUserResponse">
        <complexType>
          <sequence>
            <element name="userId" type="long"/>
            <element name="userName" type="string"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="DelayDraftRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="scheduleId" type="long"/>
            <element name="currentDraftDate" type="ns0:NpnDate"/>
            <element name="newDraftDate" type="ns0:NpnDate"/>
            <element minOccurs="0" name="comment" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="DelayDraftResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetAffiliateDocumentListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="affiliateId" type="long"/>
            <element minOccurs="0" name="externalAffiliateId" type="string"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="ns0:AffiliateDocumentListOrder"/>
            <element name="pageNo" type="positiveInteger"/>
            <element name="resultsPerPage" type="positiveInteger"/>
          </all>
        </complexType>
      </element>
      <element name="GetAffiliateDocumentListResponse">
        <complexType>
          <sequence>
            <element name="totalCount" type="int"/>
            <element name="returnedCount" type="int"/>
            <element name="pageNumber" type="int"/>
            <element name="documents">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" minOccurs="0" name="document" type="ns0:AffiliateDocument"/>
                </sequence>
              </complexType>
            </element>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetAffiliateListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="name" type="string"/>
            <element minOccurs="0" name="externalAffiliateId" type="string"/>
            <element minOccurs="0" name="affiliateType" type="ns0:SubscriberAffiliateType"/>
            <element minOccurs="0" name="status" type="ns0:AffiliateStatus"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="ns0:AffiliateListOrder"/>
            <element name="pageNo" type="positiveInteger"/>
            <element name="resultsPerPage" type="positiveInteger"/>
          </all>
        </complexType>
      </element>
      <element name="GetAffiliateListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element name="affiliates">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" minOccurs="0" name="affiliate" type="ns0:Affiliate"/>
                </sequence>
              </complexType>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="GetAffiliateRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="affiliateId" type="long"/>
            <element minOccurs="0" name="externalAffiliateId" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetAffiliateResponse">
        <complexType>
          <sequence>
            <element name="affiliate" type="ns0:Affiliate"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetAffiliateClientsRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="affiliateId" type="long"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="firstname" nillable="true" type="string"/>
            <element minOccurs="0" name="middleInitial" nillable="true" type="string"/>
            <element minOccurs="0" name="lastname" nillable="true" type="string"/>
            <element minOccurs="0" name="ssn" nillable="true" type="string"/>
            <element minOccurs="0" name="email" nillable="true" type="string"/>
            <element minOccurs="0" name="keyWord" nillable="true" type="string"/>
            <element minOccurs="0" name="statuses" type="tns:ClientStatuses"/>
            <element minOccurs="0" name="spaStatuses" type="tns:SPAStatuses"/>
            <element minOccurs="0" name="fromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="toDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="enrollmentFromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="enrollmentToDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="phoneNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="addressLine1" nillable="true" type="string"/>
            <element minOccurs="0" name="addressLine2" nillable="true" type="string"/>
            <element minOccurs="0" name="city" nillable="true" type="string"/>
            <element minOccurs="0" name="state" nillable="true" type="string"/>
            <element minOccurs="0" name="zip" nillable="true" type="string"/>
            <element minOccurs="0" name="loanNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="lenderName" nillable="true" type="string"/>
            <element minOccurs="0" name="VIN" nillable="true" type="string"/>
            <element minOccurs="0" name="routingNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="accountNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="order" type="tns:AffiliateClientOrder"/>
            <element default="true" name="ascending" type="boolean"/>
            <element name="pageNo" type="int"/>
            <element name="resultsPerPage" type="int"/>
          </all>
        </complexType>
      </element>
      <element name="GetAffiliateClientsResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element maxOccurs="unbounded" minOccurs="0" name="client" type="ns0:Client"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="AffiliateClientOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:AffiliateClientOrderBy"/>
        </sequence>
      </complexType>
      <simpleType name="AffiliateClientOrderBy">
        <restriction base="string">
          <enumeration value="id"/>
          <enumeration value="firstName"/>
          <enumeration value="lastName"/>
          <enumeration value="email"/>
          <enumeration value="createdOn"/>
          <enumeration value="modifiedOn"/>
          <enumeration value="modifiedBy"/>
          <enumeration value="enrolledOn"/>
        </restriction>
      </simpleType>
      <element name="GetAffiliateHierarchyRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="affiliateId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetAffiliateHierarchyResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="hierarchy">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" name="affiliate">
                    <complexType>
                      <sequence>
                        <element name="subscriberId" type="long"/>
                        <element name="affiliateId" type="long"/>
                        <element name="externalAffiliateId" nillable="true" type="string"/>
                        <element name="parentAffiliateId" nillable="true" type="long"/>
                        <element name="parentExternalAffiliateId" nillable="true" type="string"/>
                        <element name="affiliateType" type="ns0:SubscriberAffiliateType"/>
                        <element name="name" type="string"/>
                      </sequence>
                    </complexType>
                  </element>
                </sequence>
              </complexType>
            </element>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetAffiliateScheduleListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="affiliateId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="startDate" type="ns0:NpnDate"/>
            <element name="endDate" type="ns0:NpnDate"/>
            <element minOccurs="0" name="order" nillable="true" type="tns:DraftScheduleOrder"/>
            <element default="true" name="ascending" type="boolean"/>
            <element minOccurs="0" name="status" nillable="true" type="ns0:ScheduleStatusForListing"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="ns0:positiveNumber"/>
            <element minOccurs="0" name="numberOfRecordsPerPage" nillable="true" type="ns0:positiveNumber"/>
            <element name="transactionClass" type="ns0:TransactionClass"/>
          </all>
        </complexType>
      </element>
      <element name="GetAffiliateScheduleListResponse">
        <complexType>
          <sequence>
            <element name="totalCount" type="long"/>
            <element name="returnedCount" type="long"/>
            <element name="pageNumber" type="long"/>
            <element maxOccurs="unbounded" minOccurs="0" name="schedules" nillable="true" type="ns0:ScheduleDraft"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetAffiliateTransactionListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="affiliateId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="type" nillable="true">
              <simpleType>
                <restriction base="string">
                  <enumeration value="DRAFT"/>
                  <enumeration value="PAYMENT"/>
                  <enumeration value="FEE"/>
                  <enumeration value="SERVICE"/>
                </restriction>
              </simpleType>
            </element>
            <element minOccurs="0" name="status" nillable="true" type="ns0:TransactionStatus"/>
            <element minOccurs="0" name="modifiedFromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="modifiedToDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="fromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="toDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="pageNo" nillable="true" type="int"/>
            <element minOccurs="0" name="resultsPerPage" nillable="true" type="int"/>
          </all>
        </complexType>
      </element>
      <element name="GetAffiliateTransactionListResponse">
        <complexType>
          <all>
            <element name="returnCount" type="int"/>
            <element name="totalCount" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element minOccurs="0" name="transactions" type="ns0:Transactions"/>
          </all>
        </complexType>
      </element>
      <element name="GetAffiliateUserListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="affiliateId" type="long"/>
            <element name="affiliateType" type="ns0:SubscriberAffiliateType"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="ns0:AffiliateUserOrder"/>
            <element name="pageNo" type="positiveInteger"/>
            <element name="resultsPerPage" type="positiveInteger"/>
          </all>
        </complexType>
      </element>
      <element name="GetAffiliateUserListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" type="int"/>
            <element minOccurs="0" name="returnedCount" type="int"/>
            <element minOccurs="0" name="pageNumber" type="int"/>
            <element name="userList" type="ns0:UserList"/>
            <element name="commandStatus" type="long"/>
            <element minOccurs="0" name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetAllOverriddenSubscriberFeeRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="affiliateId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetAllOverriddenSubscriberFeeResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="overriddenFees">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" name="fee">
                    <complexType>
                      <sequence>
                        <element name="feeId" type="long"/>
                        <element name="feeAmount" type="double"/>
                      </sequence>
                    </complexType>
                  </element>
                </sequence>
              </complexType>
            </element>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetApprovalsByIdRequest">
        <complexType>
          <all>
            <element name="approvalId" type="long"/>
            <element name="subscriberId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetApprovalsByIdResponse">
        <complexType>
          <sequence>
            <element name="approval" nillable="true" type="ns0:Approval"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetAutoEnrollmentDetailFromStoneEagleRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="affiliateId" type="long"/>
            <element name="dealNumber" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetAutoEnrollmentDetailFromStoneEagleResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="dms">
              <complexType>
                <sequence>
                  <element name="buyer">
                    <complexType>
                      <sequence>
                        <element minOccurs="0" name="firstName" type="string"/>
                        <element minOccurs="0" name="lastName" type="string"/>
                        <element minOccurs="0" name="birthDate" type="ns0:NpnDate"/>
                        <element minOccurs="0" name="phone1" type="string"/>
                        <element minOccurs="0" name="phone2" type="string"/>
                        <element minOccurs="0" name="cellPhone" type="string"/>
                        <element minOccurs="0" name="address" type="string"/>
                        <element minOccurs="0" name="city" type="string"/>
                        <element minOccurs="0" name="state" type="string"/>
                        <element minOccurs="0" name="zip" type="string"/>
                      </sequence>
                    </complexType>
                  </element>
                  <element name="vehicle">
                    <complexType>
                      <sequence>
                        <element minOccurs="0" name="vin" type="string"/>
                        <element minOccurs="0" name="year" type="string"/>
                        <element minOccurs="0" name="make" type="string"/>
                        <element minOccurs="0" name="model" type="string"/>
                      </sequence>
                    </complexType>
                  </element>
                  <element name="financing">
                    <complexType>
                      <sequence>
                        <element minOccurs="0" name="dealType" type="string"/>
                        <element minOccurs="0" name="monthlyPayment" type="string"/>
                        <element minOccurs="0" name="contractDate" type="ns0:NpnDate"/>
                        <element minOccurs="0" name="firstPaymentDate" type="ns0:NpnDate"/>
                      </sequence>
                    </complexType>
                  </element>
                  <element name="lender">
                    <complexType>
                      <sequence>
                        <element minOccurs="0" name="bankName" type="string"/>
                        <element minOccurs="0" name="address" type="string"/>
                        <element minOccurs="0" name="city" type="string"/>
                        <element minOccurs="0" name="state" type="string"/>
                        <element minOccurs="0" name="zip" type="string"/>
                        <element minOccurs="0" name="phone" type="string"/>
                      </sequence>
                    </complexType>
                  </element>
                </sequence>
              </complexType>
            </element>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetBankListRequest">
        <complexType>
          <all>
            <annotation>
              <documentation>"Schedule Id will be the first preference here.."</documentation>
            </annotation>
            <element minOccurs="0" name="bankName" nillable="true" type="string"/>
            <element minOccurs="0" name="routing_number" nillable="true" type="string"/>
            <element name="pageNo" type="int"/>
            <element name="resultsPerPage" type="int"/>
            <element minOccurs="0" name="order" type="tns:BankListOrder"/>
            <element default="true" name="ascending" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="GetBankListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element name="bankList" type="tns:BankList"/>
            <element minOccurs="0" name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="BankListOrder">
        <sequence>
          <element name="orderBy" type="tns:BankListOrderBy"/>
        </sequence>
      </complexType>
      <simpleType name="BankListOrderBy">
        <restriction base="string">
          <enumeration value="ID"/>
          <enumeration value="NAME"/>
          <enumeration value="ROUTING_NUMBER"/>
        </restriction>
      </simpleType>
      <complexType name="BankList">
        <sequence>
          <element maxOccurs="unbounded" name="bank" type="tns:Bank"/>
        </sequence>
      </complexType>
      <complexType name="Bank">
        <sequence>
          <element name="id" type="long"/>
          <element name="bankName" type="string"/>
          <element name="address1" type="string"/>
          <element name="address2" type="string"/>
          <element name="city" type="string"/>
          <element name="routing_number" type="string"/>
          <element minOccurs="0" name="state" nillable="true" type="string"/>
          <element minOccurs="0" name="zipcode" nillable="true" type="string"/>
        </sequence>
      </complexType>
      <element name="GetCheckNumberRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetCheckNumberResponse">
        <complexType>
          <all>
            <element name="checkNumber" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetChildAffiliateListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="name" type="string"/>
            <element minOccurs="0" name="parentId" type="long"/>
            <element minOccurs="0" name="parentExternalAffiliateId" type="string"/>
            <element minOccurs="0" name="affiliateType" type="ns0:SubscriberAffiliateType"/>
            <element minOccurs="0" name="status" type="ns0:AffiliateStatusList"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="ns0:AffiliateListOrder"/>
            <element name="pageNo" type="positiveInteger"/>
            <element name="resultsPerPage" type="positiveInteger"/>
          </all>
        </complexType>
      </element>
      <element name="GetChildAffiliateListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element name="affiliates">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" minOccurs="0" name="affiliate" type="ns0:Affiliate"/>
                </sequence>
              </complexType>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="GetClientBankAccountListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="createdFrom" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="createdTo" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="modifiedFrom" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="modifiedTo" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="numberOfRecordsPerPage" nillable="true" type="ns0:positiveNumber"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="ns0:positiveNumber"/>
          </all>
        </complexType>
      </element>
      <element name="GetClientBankAccountListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element name="clientBankAccountList" type="ns0:ClientBankAccountList"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetClientBankAccountRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="clientBankAccountId" nillable="true" type="long"/>
            <element name="subscriberId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetClientBankAccountResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="bankInfo" nillable="true" type="ns0:BankInfo"/>
            <element minOccurs="0" name="externalBankId" nillable="true" type="string"/>
            <element name="commandStatus" type="int"/>
            <element maxOccurs="unbounded" minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetClientIdsRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="noOfIds" type="int"/>
          </all>
        </complexType>
      </element>
      <element name="GetClientIdsResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="clientIds" type="ns0:ClientIds"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetClientSettlementListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="status" nillable="true" type="ns0:SettlementStatus"/>
            <element minOccurs="0" name="approvalStatus" nillable="true" type="ns0:ApprovalStatus"/>
            <element name="fromDate" type="ns0:NpnDate"/>
            <element name="toDate" type="ns0:NpnDate"/>
            <element name="pageNumber" type="ns0:positiveNumber"/>
            <element name="numberOfRecordsPerPage" type="ns0:positiveNumber"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="ns0:SettlementOrder"/>
          </all>
        </complexType>
      </element>
      <element name="GetClientSettlementListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="long"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="long"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="long"/>
            <element minOccurs="0" name="settlementList" nillable="true" type="ns0:SettlementList"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetClientSettlementRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="settlementId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetClientSettlementResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="settlementList" nillable="true" type="ns0:SettlementList"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetClientStatusRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetClientStatusResponse">
        <complexType>
          <sequence>
            <element name="enrollmentId" nillable="true" type="long"/>
            <element name="enrollmentDate" type="ns0:NpnDate"/>
            <element name="spaaApprovaalId" nillable="true" type="long"/>
            <element name="spaaApprovaalStatus" nillable="true" type="string"/>
            <element name="spaaStatus" nillable="true" type="string"/>
            <element name="firstDraftDate" nillable="true" type="ns0:NpnDate"/>
            <element name="firstDraftAmount" nillable="true" type="double"/>
            <element name="firstDraftBankAccount" nillable="true" type="string"/>
            <element name="firstDraftBankName" nillable="true" type="string"/>
            <element name="defalutDraftAmount" nillable="true" type="double"/>
            <element name="firstDraftStatus" nillable="true" type="string"/>
            <element name="firstSettlementDate" nillable="true" type="ns0:NpnDate"/>
            <element name="firstSettlementAccountInfo" nillable="true" type="string"/>
            <element name="firstSettlementStatus" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetClientsRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="firstname" nillable="true" type="string"/>
            <element minOccurs="0" name="middleInitial" nillable="true" type="string"/>
            <element minOccurs="0" name="lastname" nillable="true" type="string"/>
            <element minOccurs="0" name="ssn" nillable="true" type="string"/>
            <element minOccurs="0" name="email" nillable="true" type="string"/>
            <element minOccurs="0" name="keyWord" nillable="true" type="string"/>
            <element minOccurs="0" name="statuses" type="tns:ClientStatuses"/>
            <element minOccurs="0" name="spaStatuses" type="tns:SPAStatuses"/>
            <element minOccurs="0" name="fromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="toDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="enrollmentFromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="enrollmentToDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="phoneNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="addressLine1" nillable="true" type="string"/>
            <element minOccurs="0" name="addressLine2" nillable="true" type="string"/>
            <element minOccurs="0" name="city" nillable="true" type="string"/>
            <element minOccurs="0" name="state" nillable="true" type="string"/>
            <element minOccurs="0" name="zip" nillable="true" type="string"/>
            <element minOccurs="0" name="loanNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="lenderName" nillable="true" type="string"/>
            <element minOccurs="0" name="VIN" nillable="true" type="string"/>
            <element minOccurs="0" name="routingNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="accountNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="order" type="tns:ClientOrder"/>
            <element default="true" name="ascending" type="boolean"/>
            <element name="pageNo" type="int"/>
            <element name="resultsPerPage" type="int"/>
            <element default="true" minOccurs="0" name="skipDeleted" nillable="true" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="GetClientsResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
            <element maxOccurs="unbounded" minOccurs="0" name="client" type="ns0:Client"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="ClientOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:ClientOrderBy"/>
        </sequence>
      </complexType>
      <simpleType name="ClientOrderBy">
        <restriction base="string">
          <enumeration value="id"/>
          <enumeration value="firstName"/>
          <enumeration value="lastName"/>
          <enumeration value="email"/>
          <enumeration value="createdOn"/>
          <enumeration value="modifiedOn"/>
          <enumeration value="modifiedBy"/>
          <enumeration value="enrolledOn"/>
        </restriction>
      </simpleType>
      <element name="GetCoClientsRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="subscriberId" nillable="true" type="long"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="id" nillable="true" type="long"/>
            <element minOccurs="0" name="firstname" nillable="true" type="string"/>
            <element minOccurs="0" name="middleInitial" nillable="true" type="string"/>
            <element minOccurs="0" name="lastname" nillable="true" type="string"/>
            <element minOccurs="0" name="ssn" nillable="true" type="string"/>
            <element minOccurs="0" name="email" nillable="true" type="string"/>
            <element minOccurs="0" name="coSignatory" nillable="true" type="boolean"/>
            <element minOccurs="0" name="phoneNumber" nillable="true" type="string"/>
            <element default="true" name="ascending" type="boolean"/>
            <element name="pageNo" type="int"/>
            <element name="resultsPerPage" type="int"/>
          </all>
        </complexType>
      </element>
      <element name="GetCoClientsResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element maxOccurs="unbounded" minOccurs="0" name="coClientSignatories" type="ns0:CoClientSignatories"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetClientRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="status" nillable="true" type="string"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element default="false" minOccurs="0" name="returnSPAAImage" nillable="true" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="GetClientResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="client" type="ns0:Client"/>
            <element minOccurs="0" name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetDocumentByIdRequest">
        <complexType>
          <all>
            <element name="documentId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetDocumentByIdResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="document" type="ns0:Document"/>
            <element name="commandStatus" type="int"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetDelayDraftChangedDatesRequest">
        <complexType>
          <sequence>
            <element name="subscriberId" type="long"/>
            <element name="scheduleId" type="long"/>
            <element name="currentDraftDate" type="ns0:NpnDate"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetDelayDraftChangedDatesResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
            <element maxOccurs="unbounded" minOccurs="0" name="delayDraftChangedDatesList" type="ns0:NpnDate"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetDraftErrorListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="transactionType">
              <simpleType>
                <restriction base="string">
                  <enumeration value="DRAFT"/>
                  <enumeration value="PAYMENT"/>
                  <enumeration value="FEE"/>
                  <enumeration value="SERVICE"/>
                </restriction>
              </simpleType>
            </element>
            <element name="fromDate" nillable="true" type="ns0:NpnDate"/>
            <element name="toDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="numberOfRecordsPerPage" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
          </all>
        </complexType>
      </element>
      <element name="GetDraftErrorListResponse">
        <complexType>
          <sequence>
            <element name="totalCount" type="long"/>
            <element name="returnedCount" type="long"/>
            <element name="pageNumber" type="long"/>
            <element maxOccurs="unbounded" minOccurs="0" name="DraftErrorList" nillable="true" type="ns0:DraftError"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetDraftScheduleListRequest">
        <annotation>
          <documentation>Get draft schedules for a client for a given period</documentation>
          <documentation>"Initially Modified From/To date will query against the modified dates ,if its null it will check against the created date.."</documentation>
        </annotation>
        <complexType>
          <all>
            <element name="subscriberId" type="long">
              <annotation>
                <documentation>Subscriber Id</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="scheduleIds" type="tns:ScheduleIds"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string">
              <annotation>
                <documentation>Client Id or External Id is used to find the client.</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="startDate" nillable="true" type="ns0:NpnDate">
              <annotation>
                <documentation>start date of the look up period</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="endDate" nillable="true" type="ns0:NpnDate">
              <annotation>
                <documentation>end date of the look up period</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="modifiedFromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="modifiedToDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="order" nillable="true" type="tns:DraftScheduleOrder">
              <annotation>
                <documentation>field to order the draft list</documentation>
              </annotation>
            </element>
            <element default="true" name="ascending" type="boolean"/>
            <element minOccurs="0" name="status" nillable="true" type="ns0:ScheduleStatusForListing">
              <annotation>
                <documentation>we can filter the drafts by draft status</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="pageNumber" nillable="true" type="ns0:positiveNumber">
              <annotation>
                <documentation>page number for pagination</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="numberOfRecordsPerPage" nillable="true" type="ns0:positiveNumber">
              <annotation>
                <documentation>number of draft schedules per page for pagination</documentation>
              </annotation>
            </element>
          </all>
        </complexType>
      </element>
      <element name="GetDraftScheduleListResponse">
        <complexType>
          <sequence>
            <element name="totalCount" type="long">
              <annotation>
                <documentation>total number of draft schedules that match searching criteria</documentation>
              </annotation>
            </element>
            <element name="returnedCount" type="long">
              <annotation>
                <documentation>number of draft schedules in curant page</documentation>
              </annotation>
            </element>
            <element name="pageNumber" type="long">
              <annotation>
                <documentation>current page number</documentation>
              </annotation>
            </element>
            <element maxOccurs="unbounded" minOccurs="0" name="drafts" nillable="true" type="ns0:ScheduleDraft">
              <annotation>
                <documentation>list of draft schedules</documentation>
              </annotation>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="GetDraftScheduleListWithNextDateRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long">
              <annotation>
                <documentation>Subscriber Id</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="scheduleIds" type="tns:ScheduleIds"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string">
              <annotation>
                <documentation>Client Id or External Id is used to find the
							client.</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="startDate" nillable="true" type="ns0:NpnDate">
              <annotation>
                <documentation>start date of the look up period</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="endDate" nillable="true" type="ns0:NpnDate">
              <annotation>
                <documentation>end date of the look up period</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="modifiedFromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="modifiedToDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="order" nillable="true" type="tns:DraftScheduleOrder">
              <annotation>
                <documentation>field to order the draft list</documentation>
              </annotation>
            </element>
            <element default="true" name="ascending" type="boolean"/>
            <element minOccurs="0" name="status" nillable="true" type="ns0:ScheduleStatusForListing">
              <annotation>
                <documentation>we can filter the drafts by draft status</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="pageNumber" nillable="true" type="ns0:positiveNumber">
              <annotation>
                <documentation>page number for pagination</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="numberOfRecordsPerPage" nillable="true" type="ns0:positiveNumber">
              <annotation>
                <documentation>number of draft schedules per page for pagination</documentation>
              </annotation>
            </element>
          </all>
        </complexType>
      </element>
      <element name="GetDraftScheduleListWithNextDateResponse">
        <complexType>
          <sequence>
            <element name="totalCount" type="long">
              <annotation>
                <documentation>total number of draft schedules that match searching criteria</documentation>
              </annotation>
            </element>
            <element name="returnedCount" type="long">
              <annotation>
                <documentation>number of draft schedules in curant page</documentation>
              </annotation>
            </element>
            <element name="pageNumber" type="long">
              <annotation>
                <documentation>current page number</documentation>
              </annotation>
            </element>
            <element maxOccurs="unbounded" minOccurs="0" name="drafts" nillable="true" type="ns0:ScheduleDraft">
              <annotation>
                <documentation>list of draft schedules</documentation>
              </annotation>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="GetDraftScheduleModifiableDatesRequest">
        <complexType>
          <sequence>
            <element name="subscriberId" type="long"/>
            <element name="scheduleId" type="long"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetDraftScheduleModifiableDatesResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
            <element maxOccurs="unbounded" minOccurs="0" name="modifiableDatesList" type="ns0:NpnDate"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetDraftScheduleRequest">
        <annotation>
          <documentation>Get draft schedule by schedule id</documentation>
        </annotation>
        <complexType>
          <all>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long">
              <annotation>
                <documentation>schedule id of the draft schedule</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element name="subscriberId" type="long">
              <annotation>
                <documentation>subscriber id</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="clientId" nillable="true" type="string">
              <annotation>
                <documentation>Client Id or External Id is used to find the client.</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetDraftScheduleResponse">
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" minOccurs="0" name="draft" nillable="true" type="ns0:ScheduleDraft"/>
            <element minOccurs="0" name="transactions" type="ns0:Transactions"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetEnrollmentAffiliateListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="enrollmentId" type="long"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="ns0:EnrollmentAffiliateListOrder"/>
            <element name="pageNo" type="positiveInteger"/>
            <element name="resultsPerPage" type="positiveInteger"/>
          </all>
        </complexType>
      </element>
      <element name="GetEnrollmentAffiliateListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element name="affiliates">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" minOccurs="0" name="affiliate" type="ns0:Affiliate"/>
                </sequence>
              </complexType>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="GetEnrollmentChannelAttributeValuesListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="enrollmentId" type="long"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="ns0:EnrollmentChannelAttributeValueOrder"/>
            <element name="pageNo" type="positiveInteger"/>
            <element name="resultsPerPage" type="positiveInteger"/>
          </all>
        </complexType>
      </element>
      <element name="GetEnrollmentChannelAttributeValuesListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element name="enrollmentChannelAttributeValues">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" minOccurs="0" name="enrollmentChannelAttributeValue" type="ns0:EnrollmentChannelAttributeValue"/>
                </sequence>
              </complexType>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="GetEnrollmentCommentListRequest">
        <complexType>
          <all>
            <annotation>
              <documentation>"Schedule Id will be the first preference here.."</documentation>
              <documentation>"Initially Modified From/To date will query against the modified dates ,if its null it will check against the created date.."</documentation>
            </annotation>
            <element minOccurs="0" name="commentId" nillable="true" type="long"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="enrollmentId" nillable="true" type="long"/>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
            <element minOccurs="0" name="modifiedFromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="modifiedToDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="keyword" nillable="true" type="string"/>
            <element name="pageNo" type="int"/>
            <element name="resultsPerPage" type="int"/>
            <element minOccurs="0" name="order" type="tns:EnrollmentCommentListOrder"/>
            <element default="true" name="ascending" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="GetEnrollmentCommentListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element maxOccurs="unbounded" minOccurs="0" name="enrollmentComment" type="ns0:EnrollComment"/>
            <element minOccurs="0" name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="EnrollmentCommentListOrder">
        <sequence>
          <element name="orderBy" type="tns:EnrollmentCommentListOrderBy"/>
        </sequence>
      </complexType>
      <simpleType name="EnrollmentCommentListOrderBy">
        <restriction base="string">
          <enumeration value="ID"/>
          <enumeration value="COMMENT"/>
          <enumeration value="PAGE_CONTEXT"/>
          <enumeration value="CREATED_ON"/>
          <enumeration value="CREATED_BY"/>
          <enumeration value="MODIFIED_BY"/>
          <enumeration value="MODIFIED_ON"/>
          <enumeration value="DOCUMENT_NAME"/>
        </restriction>
      </simpleType>
      <element name="GetEnrollmentCountRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="startDate" type="ns0:NpnDate"/>
            <element name="endDate" type="ns0:NpnDate"/>
            <element minOccurs="0" name="statuses" type="tns:ClientStatuses"/>
          </all>
        </complexType>
      </element>
      <element name="GetEnrollmentCountResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="countInfos" type="ns0:CountInfos"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="status" nillable="true" type="string"/>
            <element minOccurs="0" name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetEnrollmentDocumentListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="pageNo" nillable="true" type="int"/>
            <element minOccurs="0" name="resultsPerPage" nillable="true" type="int"/>
            <element minOccurs="0" name="order" type="tns:EnrollmentDocumentOrder"/>
            <element default="true" name="ascending" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="GetEnrollmentDocumentListResponse">
        <complexType>
          <all>
            <element name="totalCount" type="int"/>
            <element name="returnedCount" type="int"/>
            <element name="pageNumber" type="int"/>
            <element minOccurs="0" name="enrollmentDocuments" type="ns0:EnrollmentDocuments"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </all>
        </complexType>
      </element>
      <complexType name="EnrollmentDocumentOrder">
        <sequence>
          <element name="orderBy" type="tns:EnrollmentDocumentOrderBy"/>
        </sequence>
      </complexType>
      <simpleType name="EnrollmentDocumentOrderBy">
        <restriction base="string">
          <enumeration value="ID"/>
          <enumeration value="NAME"/>
          <enumeration value="DESCRIPTION"/>
          <enumeration value="CONTENT_TYPE"/>
          <enumeration value="CREATED_ON"/>
          <enumeration value="CREATED_BY"/>
          <enumeration value="MODIFIED_BY"/>
          <enumeration value="MODIFIED_ON"/>
        </restriction>
      </simpleType>
      <element name="GetEnrollmentDocumentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="documentId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetEnrollmentDocumentResponse">
        <complexType>
          <all>
            <element name="enrollmentDocument" type="ns0:Document"/>
            <element name="commandStatus" type="int"/>
          </all>
        </complexType>
      </element>
      <element name="GetEnrollmentErrorListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="status" nillable="true" type="tns:ErrorStatus"/>
            <element minOccurs="0" name="reason" nillable="true" type="string"/>
            <element name="fromDate" type="ns0:NpnDate"/>
            <element name="toDate" type="ns0:NpnDate"/>
            <element default="INACTIVE" minOccurs="0" name="enrollmentStatus" type="tns:ClientStatus"/>
            <element minOccurs="0" name="order" type="tns:ErrorListOrder"/>
            <element default="true" name="ascending" type="boolean"/>
            <element name="pageNo" type="ns0:positiveNumber"/>
            <element name="resultsPerPage" type="ns0:positiveNumber"/>
          </all>
        </complexType>
      </element>
      <element name="GetEnrollmentErrorListResponse">
        <complexType>
          <sequence>
            <element name="totalCount" type="int"/>
            <element name="totalUniqueClientCount" type="int"/>
            <element name="returnedCount" type="int"/>
            <element name="pageNumber" type="int"/>
            <element maxOccurs="unbounded" minOccurs="0" name="errors" nillable="true" type="ns0:EnrollmentError"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="ErrorListOrder">
        <sequence>
          <element name="orderBy" type="tns:ErrorListOrderBy"/>
        </sequence>
      </complexType>
      <simpleType name="ErrorListOrderBy">
        <restriction base="string">
          <enumeration value="ID"/>
          <enumeration value="STATUS"/>
          <enumeration value="REASON"/>
          <enumeration value="MODIFIED_ON"/>
          <enumeration value="CREATED_ON"/>
        </restriction>
      </simpleType>
      <element name="GetEnrollmentExceptionsListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="firstname" nillable="true" type="string"/>
            <element minOccurs="0" name="lastname" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="transactionClass" nillable="true">
              <simpleType>
                <restriction base="string">
                  <enumeration value="DRAFT"/>
                  <enumeration value="PAYMENT"/>
                  <enumeration value="FEE"/>
                </restriction>
              </simpleType>
            </element>
            <element minOccurs="0" name="code" nillable="true">
              <simpleType>
                <restriction base="string">
                  <enumeration value="GENERAL"/>
                  <enumeration value="NSF"/>
                  <enumeration value="DISPUTE"/>
                </restriction>
              </simpleType>
            </element>
            <element minOccurs="0" name="fromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="toDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="numberOfRecordsPerPage" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="tns:EnrollmentExceptionsOrder"/>
            <element default="true" name="ascending" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="GetEnrollmentExceptionsListResponse">
        <complexType>
          <sequence>
            <element name="totalCount" type="long"/>
            <element name="returnedCount" type="long"/>
            <element name="pageNumber" type="long"/>
            <element maxOccurs="unbounded" minOccurs="0" name="enrollmentExceptions" nillable="true" type="ns0:EnrollmentException"/>
          </sequence>
        </complexType>
      </element>
      <simpleType name="EnrollmentExceptionsOrder">
        <restriction base="string">
          <enumeration value="id"/>
          <enumeration value="nsfAmount"/>
          <enumeration value="code"/>
          <enumeration value="transactionClass"/>
        </restriction>
      </simpleType>
      <element name="GetEnrollmentPayeeRequest">
        <complexType>
          <sequence>
            <element name="subscriberId" type="long"/>
            <element name="enrollmentId" type="long"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetEnrollmentPayeeResponse">
        <complexType>
          <sequence>
            <element name="enrollmentId" type="long"/>
            <element name="receivedDate" nillable="true" type="ns0:NpnDate"/>
            <element name="settlementAmount" nillable="true" type="double"/>
            <element name="balanceAmount" nillable="true" type="double"/>
            <element name="numberOfPayments" nillable="true" type="long"/>
            <element name="accountInfo" nillable="true" type="string"/>
            <element name="approvalRequired" nillable="true" type="boolean"/>
            <element name="settlementStatus" nillable="true" type="string"/>
            <element name="externalReferenceNumber" nillable="true" type="string"/>
            <element name="payeeId" nillable="true" type="long"/>
            <element name="payeeName" nillable="true" type="string"/>
            <element name="payeeAddress1" nillable="true" type="string"/>
            <element name="payeeAddress2" nillable="true" type="string"/>
            <element name="payeeCity" nillable="true" type="string"/>
            <element name="payeeState" nillable="true" type="string"/>
            <element name="payeeZip" nillable="true" type="string"/>
            <element name="payeeContactOfficePhone" nillable="true" type="string"/>
            <element name="payeeContactHomePhone" nillable="true" type="string"/>
            <element name="payeeContactMobilePhone" nillable="true" type="string"/>
            <element name="payeeContactEmail" nillable="true" type="string"/>
            <element name="payeeContactName" nillable="true" type="string"/>
            <element name="payeeContactDept" nillable="true" type="string"/>
            <element name="payeeContactFax" nillable="true" type="string"/>
            <element name="payeeStatus" nillable="true" type="boolean"/>
            <element name="payeeDescription" nillable="true" type="string"/>
            <element name="payeeWebsite" nillable="true" type="string"/>
            <element name="externalPayeeId" nillable="true" type="string"/>
            <element name="contactName" nillable="true" type="string"/>
            <element name="phone" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetEnrollmentTicketListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="asigneeId" nillable="true" type="long"/>
            <element minOccurs="0" name="ticketStatus" nillable="true" type="ns0:EnrollmentTicketStatus"/>
            <element minOccurs="0" name="pageNo" nillable="true" type="int"/>
            <element minOccurs="0" name="resultsPerPage" nillable="true" type="int"/>
            <element minOccurs="0" name="order" nillable="true" type="tns:EnrollmentTicketOrder"/>
            <element default="true" name="ascending" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="GetEnrollmentTicketListResponse">
        <complexType>
          <all>
            <element name="totalCount" type="int"/>
            <element name="returnedCount" type="int"/>
            <element name="pageNumber" type="int"/>
            <element minOccurs="0" name="enrollmentTickets" type="ns0:EnrollmentTickets"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </all>
        </complexType>
      </element>
      <complexType name="EnrollmentTicketOrder">
        <sequence>
          <element name="orderBy" type="tns:EnrollmentTicketOrderBy"/>
        </sequence>
      </complexType>
      <simpleType name="EnrollmentTicketOrderBy">
        <restriction base="string">
          <enumeration value="MODIFIED_BY"/>
          <enumeration value="MODIFIED_ON"/>
          <enumeration value="ASSIGNED_BY"/>
          <enumeration value="ASSIGNED_TO"/>
          <enumeration value="TYPE"/>
          <enumeration value="STATUS"/>
          <enumeration value="ID"/>
        </restriction>
      </simpleType>
      <element name="GetEnrollmentTicketRequest">
        <complexType>
          <all>
            <element name="enrollmentTicketId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="subscriberId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetEnrollmentTicketResponse">
        <complexType>
          <sequence>
            <element name="enrollmentTicket" type="ns0:EnrollmentTicket"/>
            <element maxOccurs="unbounded" minOccurs="0" name="enrollmentComment" type="ns0:EnrollComment"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetExternalPayeeListByNameRequest">
        <complexType>
          <all>
            <element name="searchName" type="string"/>
            <element minOccurs="0" name="searchCity" nillable="true" type="string"/>
            <element minOccurs="0" name="searchState" nillable="true" type="string"/>
            <element minOccurs="0" name="searchAddress2" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetExternalPayeeListByNameResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element name="externalPayeeList" type="ns0:ExternalPayeeList"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetFeeScheduleListRequest">
        <complexType>
          <all>
            <annotation>
              <documentation>"Initially Modified From/To date will query against the modified dates ,if its null
                        it will check against the created date.."</documentation>
            </annotation>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element minOccurs="0" name="owner" nillable="true" type="ns0:FeeScheduleOwner"/>
            <element minOccurs="0" name="scheduleIds" type="tns:ScheduleIds"/>
            <element minOccurs="0" name="startDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="endDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="subscriberFeeId" nillable="true" type="long"/>
            <element default="false" minOccurs="0" name="filterReversedFees" nillable="true" type="boolean"/>
            <element minOccurs="0" name="modifiedFromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="modifiedToDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="status" nillable="true" type="ns0:ScheduleStatusForListing"/>
            <element minOccurs="0" name="order" type="ns0:FeeScheduleOrder"/>
            <element default="true" name="ascending" type="boolean"/>
            <element default="false" minOccurs="0" name="showRfee" nillable="true" type="boolean"/>
            <element name="pageNumber" type="ns0:positiveNumber"/>
            <element name="numberOfRecordsPerPage" type="ns0:positiveNumber"/>
          </all>
        </complexType>
      </element>
      <element name="GetFeeScheduleListResponse">
        <complexType>
          <sequence>
            <element name="totalCount" type="long"/>
            <element name="returnedCount" type="long"/>
            <element name="pageNumber" type="long"/>
            <element maxOccurs="unbounded" minOccurs="0" name="fees" nillable="true" type="ns0:ScheduleFee"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetFeeScheduleRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetFeeScheduleResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="fee" nillable="true" type="ns0:SingleFeeSchedule"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetHierarchyAffiliateCommissionDistRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="affiliateId" type="long"/>
            <element name="affiliateType" type="ns0:SubscriberAffiliateType"/>
          </all>
        </complexType>
      </element>
      <element name="GetHierarchyAffiliateCommissionDistResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="fixed" type="ns0:FixedDistTypeUnbounded"/>
            <element minOccurs="0" name="payoutRule" type="string"/>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetNewPositivePayListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="expandUpTo" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="maximumRecords" nillable="true" type="int"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="ns0:PaymentOrder"/>
          </all>
        </complexType>
      </element>
      <element name="GetNewPositivePayListResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="paymentList" nillable="true" type="ns0:PaymentList"/>
          </all>
        </complexType>
      </element>
      <element name="GetNextScheduleRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="transactionClass" type="ns0:TransactionClass"/>
            <element name="clientId" type="string"/>
            <element name="status" type="ns0:ScheduleStatus"/>
          </all>
        </complexType>
      </element>
      <element name="GetNextScheduleResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="schedule" nillable="true" type="ns0:ScheduleDraft"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetOverriddenSubscriberFeeRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="affiliateId" type="long"/>
            <element name="feeId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetOverriddenSubscriberFeeResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="feeAmount" type="double"/>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetPartialEnrollmentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="partialEnrollmentId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetPartialEnrollmentResponse">
        <complexType>
          <sequence>
            <element name="partialEnrollmentInfo" type="ns0:PartialEnrollmentInfo"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetPartialEnrollmentListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="affiliateId" type="long"/>
            <element minOccurs="0" name="searchFirstName" type="string"/>
            <element minOccurs="0" name="searchLastName" type="string"/>
            <element minOccurs="0" name="searchCity" type="string"/>
            <element minOccurs="0" name="searchState" type="string"/>
            <element minOccurs="0" name="status" type="ns0:PartialEnrollmentStatus"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="ns0:PartialEnrollmentListOrder"/>
            <element name="pageNo" type="positiveInteger"/>
            <element name="resultsPerPage" type="positiveInteger"/>
          </all>
        </complexType>
      </element>
      <element name="GetPartialEnrollmentListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element name="partialEnrollments">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" minOccurs="0" name="partialEnrollment" type="ns0:PartialEnrollmentInfo"/>
                </sequence>
              </complexType>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="GetPartnerListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="partnerId" nillable="true" type="long"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="ns0:PartnerListOrder"/>
            <element name="pageNo" type="positiveInteger"/>
            <element name="resultsPerPage" type="positiveInteger"/>
          </all>
        </complexType>
      </element>
      <element name="GetPartnerListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element minOccurs="0" name="partners">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" name="partner">
                    <complexType>
                      <sequence>
                        <element name="partner" type="ns0:Partner"/>
                        <element minOccurs="0" name="partnerConfigs">
                          <complexType>
                            <sequence>
                              <element maxOccurs="unbounded" name="config">
                                <complexType>
                                  <sequence>
                                    <element name="name" type="string"/>
                                    <element name="value" type="string"/>
                                  </sequence>
                                </complexType>
                              </element>
                            </sequence>
                          </complexType>
                        </element>
                      </sequence>
                    </complexType>
                  </element>
                </sequence>
              </complexType>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="GetPaymentDetailsRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="scheduleId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetPaymentDetailsResponse">
        <complexType>
          <all>
            <element name="paymentDetails" nillable="true" type="ns0:PaymentDetails"/>
          </all>
        </complexType>
      </element>
      <element name="GetPaymentListOnPositivePayRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="transactionMethod" nillable="true" type="ns0:TransactionMethod"/>
            <element minOccurs="0" name="scheduleStatus" nillable="true" type="ns0:PositivePayScheduleStatus"/>
            <element name="fromDate" type="ns0:NpnDate"/>
            <element name="toDate" type="ns0:NpnDate"/>
            <element name="pageNumber" type="ns0:positiveNumber"/>
            <element name="numberOfRecordsPerPage" type="ns0:positiveNumber"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="ns0:PaymentOrder"/>
          </all>
        </complexType>
      </element>
      <element name="GetPaymentListOnPositivePayResponse">
        <complexType>
          <all>
            <element name="totalCount" type="long"/>
            <element name="returnedCount" type="long"/>
            <element name="pageNumber" type="long"/>
            <element minOccurs="0" name="paymentList" nillable="true" type="ns0:PaymentList"/>
          </all>
        </complexType>
      </element>
      <element name="GetPaymentListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientIds" type="ns0:ClientIds"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="scheduleIds" type="tns:ScheduleIds"/>
            <element minOccurs="0" name="transactionMethod" nillable="true" type="ns0:PaymentTransactionMethod"/>
            <element minOccurs="0" name="scheduleStatuses" nillable="true" type="ns0:ScheduleStatuses"/>
            <element minOccurs="0" name="fromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="toDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="modifiedFromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="modifiedToDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="fromAmount" nillable="true" type="long"/>
            <element minOccurs="0" name="toAmount" nillable="true" type="long"/>
            <element minOccurs="0" name="payeeName" nillable="true" type="string"/>
            <element minOccurs="0" name="clientName" nillable="true" type="string"/>
            <element minOccurs="0" name="checkNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="accountInfo" nillable="true" type="string"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="ns0:positiveNumber"/>
            <element minOccurs="0" name="numberOfRecordsPerPage" nillable="true" type="ns0:positiveNumber"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="ns0:PaymentOrder"/>
          </all>
        </complexType>
      </element>
      <element name="GetPaymentListResponse">
        <complexType>
          <all>
            <element name="totalCount" type="long"/>
            <element name="returnedCount" type="long"/>
            <element name="pageNumber" type="long"/>
            <element minOccurs="0" name="paymentList" nillable="true" type="ns0:PaymentList"/>
          </all>
        </complexType>
      </element>
      <element name="GetPaymentMonitorListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="numberOfDays" type="int"/>
            <element minOccurs="0" name="searchText" nillable="true" type="string"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="ns0:PaymentMonitorListOrder"/>
            <element name="pageNo" type="positiveInteger"/>
            <element name="resultsPerPage" type="positiveInteger"/>
          </all>
        </complexType>
      </element>
      <element name="GetPaymentMonitorListResponse">
        <complexType>
          <sequence>
            <element name="totalCount" type="long"/>
            <element name="returnedCount" type="long"/>
            <element name="pageNumber" type="long"/>
            <element name="paymentMonitorList">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" minOccurs="0" name="paymentMonitor" nillable="true" type="ns0:PaymentMonitor"/>
                </sequence>
              </complexType>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="GetPositivePayDetailsRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="clientId" type="string"/>
            <element name="positivePayId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetPositivePayDetailsResponse">
        <complexType>
          <all>
            <element name="positivePayDetails" nillable="true" type="ns0:PositivePayDetails"/>
          </all>
        </complexType>
      </element>
      <element name="GetPositivePayInquiriesRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="numberOfRecordsPerPage" type="ns0:positiveNumber"/>
            <element name="pageNumber" type="ns0:positiveNumber"/>
            <element name="orderBy" nillable="true" type="ns0:PositivePayExceptionsOrder"/>
          </all>
        </complexType>
      </element>
      <element name="GetPositivePayInquiriesResponse">
        <complexType>
          <sequence>
            <element name="totalCount" type="int"/>
            <element name="returnedCount" type="int"/>
            <element name="pageNumber" type="int"/>
            <element name="positivePayInquiries" type="ns0:PositivePayInquiryList"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetPositivePayListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="pageNumber" type="ns0:positiveNumber"/>
            <element name="numberOfRecordsPerPage" type="ns0:positiveNumber"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="ns0:PaymentOrder"/>
          </all>
        </complexType>
      </element>
      <element name="GetPositivePayListResponse">
        <complexType>
          <all>
            <element name="totalCount" type="long"/>
            <element name="returnedCount" type="long"/>
            <element name="pageNumber" type="long"/>
            <element minOccurs="0" name="paymentList" nillable="true" type="ns0:PaymentList"/>
          </all>
        </complexType>
      </element>
      <element name="GetPostedTransactionRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="postedTransactionId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetPostedTransactionResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="postedTransaction" type="ns0:PostedTransaction"/>
            <element minOccurs="0" name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetReferralAffiliateListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="affiliateId" type="long"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="ns0:AffiliateListOrder"/>
            <element name="pageNo" type="positiveInteger"/>
            <element name="resultsPerPage" type="positiveInteger"/>
          </all>
        </complexType>
      </element>
      <element name="GetReferralAffiliateListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element name="affiliates">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" minOccurs="0" name="affiliate" type="ns0:Affiliate"/>
                </sequence>
              </complexType>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="GetResetPasswordTokenRequest">
        <complexType>
          <all>
            <element name="username" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetResetPasswordTokenResponse">
        <complexType>
          <all>
            <element name="username" type="string"/>
            <element name="email" nillable="true" type="string"/>
            <element name="token" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetRuleSetDefinitionRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="ruleSetId" nillable="true" type="long"/>
            <element minOccurs="0" name="externalRuleSetId" nillable="true" type="string"/>
            <element minOccurs="0" name="affiliateId" nillable="true" type="long"/>
            <element minOccurs="0" name="externalAffiliateId" nillable="true" type="string"/>
            <element minOccurs="0" name="order" type="tns:RuleSetOrderBy"/>
            <element default="true" name="ascending" type="boolean"/>
            <element name="pageNo" type="int"/>
            <element name="resultsPerPage" type="int"/>
          </all>
        </complexType>
      </element>
      <element name="GetRuleSetDefinitionResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="ruleSetId" nillable="true" type="long"/>
            <element minOccurs="0" name="externalRuleSetId" nillable="true" type="string"/>
            <element minOccurs="0" name="ruleSetInfos" type="tns:RuleSetInfos"/>
            <element name="totalCount" type="int"/>
            <element name="returnedCount" type="int"/>
            <element name="pageNumber" type="int"/>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="RuleSetInfos">
        <sequence>
          <element maxOccurs="unbounded" name="ruleSetInfo" type="ns0:RuleSetInfo"/>
        </sequence>
      </complexType>
      <simpleType name="RuleSetOrderBy">
        <restriction base="string">
          <enumeration value="id"/>
          <enumeration value="ruleSetId"/>
          <enumeration value="affiliateId"/>
        </restriction>
      </simpleType>
      <element name="GetRuleSetListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="ruleSetId" nillable="true" type="long"/>
            <element minOccurs="0" name="externalRuleSetId" nillable="true" type="string"/>
            <element minOccurs="0" name="name" nillable="true" type="string"/>
            <element minOccurs="0" name="status" nillable="true" type="ns0:RuleSetStatus"/>
            <element minOccurs="0" name="createdOnStart" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="createdOnEnd" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="createdBy" nillable="true" type="string"/>
            <element minOccurs="0" name="modifiedOnStart" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="modifiedOnEnd" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="modifiedBy" nillable="true" type="string"/>
            <element minOccurs="0" name="order" type="tns:RulesetListOrder"/>
            <element default="true" name="ascending" type="boolean"/>
            <element name="pageNo" type="ns0:positiveNumber"/>
            <element name="resultsPerPage" type="ns0:positiveNumber"/>
          </all>
        </complexType>
      </element>
      <element name="GetRuleSetListResponse">
        <complexType>
          <sequence>
            <element name="totalCount" type="int"/>
            <element name="returnedCount" type="int"/>
            <element name="pageNumber" type="int"/>
            <element maxOccurs="unbounded" minOccurs="0" name="ruleSets" nillable="true" type="ns0:RuleSet"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="RulesetListOrder">
        <sequence>
          <element name="orderBy" type="tns:RulesetListOrderBy"/>
        </sequence>
      </complexType>
      <simpleType name="RulesetListOrderBy">
        <restriction base="string">
          <enumeration value="ID"/>
          <enumeration value="EXTERNAL_RULE_SET_ID"/>
          <enumeration value="NAME"/>
          <enumeration value="MODIFIED_ON"/>
          <enumeration value="MODIFIED_BY"/>
          <enumeration value="CREATED_ON"/>
          <enumeration value="CREATED_BY"/>
        </restriction>
      </simpleType>
      <element name="GetRuleSetRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="ruleSetId" nillable="true" type="long"/>
            <element minOccurs="0" name="externalRuleSetId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetRuleSetResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="ruleSetId" nillable="true" type="long"/>
            <element minOccurs="0" name="externalRuleSetId" nillable="true" type="string"/>
            <element minOccurs="0" name="name" nillable="true" type="string"/>
            <element minOccurs="0" name="status" nillable="true" type="string"/>
            <element name="commandStatus" nillable="true" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
            <element minOccurs="0" name="auditInfo" type="ns0:AuditInformation"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetScheduleListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="startDate" type="ns0:NpnDate"/>
            <element name="endDate" type="ns0:NpnDate"/>
            <element minOccurs="0" name="order" nillable="true" type="tns:DraftScheduleOrder"/>
            <element default="true" name="ascending" type="boolean"/>
            <element minOccurs="0" name="status" nillable="true" type="ns0:ScheduleStatusForListing"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="ns0:positiveNumber"/>
            <element minOccurs="0" name="numberOfRecordsPerPage" nillable="true" type="ns0:positiveNumber"/>
            <element name="transactionClasses" type="ns0:TransactionClassList"/>
            <element default="false" minOccurs="0" name="showRfee" nillable="true" type="boolean"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetScheduleListResponse">
        <complexType>
          <sequence>
            <element name="totalCount" type="long"/>
            <element name="returnedCount" type="long"/>
            <element name="pageNumber" type="long"/>
            <element maxOccurs="unbounded" minOccurs="0" name="schedules" nillable="true" type="ns0:ScheduleDraft"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetScheduleRequest">
        <annotation>
          <documentation>Get schedule by schedule id AND Transaction class</documentation>
        </annotation>
        <complexType>
          <all>
            <element name="scheduleId" type="long"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="transactionClass" type="ns0:TransactionClass"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetScheduleResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="schedule" nillable="true" type="ns0:ScheduleDraft"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetSettlementApprovalListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="approvalStatus" nillable="true" type="ns0:ApprovalStatus"/>
            <element name="pageNumber" nillable="true" type="ns0:positiveNumber"/>
            <element name="numberOfRecordsPerPage" nillable="true" type="ns0:positiveNumber"/>
          </all>
        </complexType>
      </element>
      <element name="GetSettlementApprovalListResponse">
        <complexType>
          <sequence>
            <element name="totalCount" type="int"/>
            <element name="returnedCount" type="int"/>
            <element maxOccurs="unbounded" minOccurs="0" name="approvals" nillable="true" type="ns0:Approval"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetSettlementCountRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="startDate" type="ns0:NpnDate"/>
            <element name="endDate" type="ns0:NpnDate"/>
            <element minOccurs="0" name="statuses" type="tns:SettlementStatuses"/>
            <element default="false" name="moneySaved" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="GetSettlementCountResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="countInfos" type="ns0:CountInfos"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="statuses" type="tns:SettlementStatuses"/>
            <element minOccurs="0" name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="SettlementStatuses">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="status" type="ns0:SettlementStatus"/>
        </sequence>
      </complexType>
      <element name="GetSPAForecastListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="subscriberFeeId" nillable="true" type="long"/>
            <element minOccurs="0" name="clientBankAccountId" nillable="true" type="long"/>
            <element minOccurs="0" name="payeeId" nillable="true" type="long"/>
            <element minOccurs="0" name="forecasts" nillable="true" type="ns0:SPAAForecastRequestList"/>
            <element name="endDate" type="ns0:NpnDate"/>
          </all>
        </complexType>
      </element>
      <element name="GetSPAForecastListResponse">
        <complexType>
          <sequence>
            <element name="forecasts" type="ns0:SPAAForecasts"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetSPAMonthlyBalanceListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="endDate" type="ns0:NpnDate"/>
          </all>
        </complexType>
      </element>
      <element name="GetSPAMonthlyBalanceListResponse">
        <complexType>
          <sequence>
            <element name="balances" type="ns0:SPAABalances"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetStatusEnumListRequest">
        <complexType>
          <all>
            <element name="enumName" type="tns:EnumNames"/>
          </all>
        </complexType>
      </element>
      <element name="GetStatusEnumListResponse">
        <complexType>
          <sequence>
            <element name="enumName" type="string"/>
            <element maxOccurs="unbounded" minOccurs="0" name="enum" nillable="true" type="string"/>
            <element name="commandStatus" type="int"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetSubscriberAffiliateConfigsRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="affiliateId" nillable="true" type="long"/>
            <element minOccurs="0" name="orderBy" nillable="true" type="ns0:AffiliateConfigOrder"/>
            <element name="pageNo" type="positiveInteger"/>
            <element name="resultsPerPage" type="positiveInteger"/>
          </all>
        </complexType>
      </element>
      <element name="GetSubscriberAffiliateConfigsResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element name="affiliateConfigs">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" name="config">
                    <complexType>
                      <sequence>
                        <element name="affiliateId" type="long"/>
                        <element name="partnerId" type="long"/>
                        <element name="name" type="ns0:AffiliateConfig"/>
                        <element name="value" type="string"/>
                        <element minOccurs="0" name="auditInformation" type="ns0:AuditInformation"/>
                      </sequence>
                    </complexType>
                  </element>
                </sequence>
              </complexType>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="GetSubscriberPayeeListByNameRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="searchName" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetSubscriberPayeeListByNameResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element name="payeeList" type="ns0:PayeeList"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetSubscriberPayeeListRequest">
        <complexType>
          <all>
            <annotation>
              <documentation>"Enter payeeName to filter payees by name !"</documentation>
            </annotation>
            <element name="subscriberId" type="long"/>
            <element name="numberOfRecordsPerPage" type="ns0:positiveNumber"/>
            <element name="pageNumber" type="ns0:positiveNumber"/>
            <element minOccurs="0" name="fromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="toDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="orderBy" type="ns0:SubscriberPayeeOrder"/>
            <element default="true" name="ascending" type="boolean"/>
            <element minOccurs="0" name="payeeName" nillable="true" type="string"/>
            <element minOccurs="0" name="subscriberPayeeId" nillable="true" type="string"/>
            <element minOccurs="0" name="payeeId" nillable="true" type="long"/>
            <element minOccurs="0" name="status" nillable="true" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="GetSubscriberPayeeListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element name="payeeList" type="ns0:PayeeList"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetSubscriberPayeeRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="payeeId" nillable="true" type="long">
              <annotation>
                <documentation>Either payeeId or subscriberPayeeId is required.</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="subscriberPayeeId" nillable="true" type="string">
              <annotation>
                <documentation>Either payeeId or subscriberPayeeId is required.</documentation>
              </annotation>
            </element>
          </all>
        </complexType>
      </element>
      <element name="GetSubscriberPayeeResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="payeeId" type="long"/>
            <element name="payee" type="ns0:PayeeInfo"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetSubscriberUserListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="pageNumber" type="ns0:positiveNumber"/>
            <element name="numberOfRecordsPerPage" type="ns0:positiveNumber"/>
            <element minOccurs="0" name="orderBy" type="ns0:UserOrder"/>
            <element default="true" name="ascending" type="boolean"/>
            <element default="true" minOccurs="0" name="isActive" nillable="true" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="GetSubscriberUserListResponse">
        <complexType>
          <sequence>
            <element name="userList" type="ns0:UserList"/>
            <element name="totalCount" type="int"/>
            <element name="returnedCount" type="int"/>
            <element name="pageNumber" type="long"/>
            <element name="commandStatus" type="long"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetSummaryScheduleListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="scheduleIds" type="tns:ScheduleIds"/>
            <element minOccurs="0" name="externalReferenceIds" type="tns:ExternalReferenceIds"/>
            <element minOccurs="0" name="modifiedFrom" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="modifiedTo" nillable="true" type="ns0:NpnDate"/>
            <element name="transactionClass" type="ns0:TransactionClass"/>
          </all>
        </complexType>
      </element>
      <element name="GetSummaryScheduleListResponse">
        <complexType>
          <sequence>
            <element name="totalCount" type="long"/>
            <element name="summaryScheduleList" type="tns:SummaryScheduleList"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="SummaryScheduleList">
        <sequence>
          <element maxOccurs="unbounded" name="scheduleSummary" type="ns0:ScheduleSummary"/>
        </sequence>
      </complexType>
      <complexType name="ExternalReferenceIds">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
        </sequence>
      </complexType>
      <element name="GetTransactionDetailsRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="transactionId" nillable="true" type="long"/>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
            <element default="false" name="includeCheckImage" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="GetTransactionDetailsResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="transaction" type="ns0:Transaction"/>
            <element name="base64EncodedFrontImageContent" nillable="true" type="string"/>
            <element name="base64EncodedBackImageContent" nillable="true" type="string"/>
            <element name="imageFileName" nillable="true" type="string"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetTransactionListByIdsRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientIds" type="ns0:ClientIds"/>
            <element minOccurs="0" name="transactionIds" type="tns:TransactionIds"/>
            <element minOccurs="0" name="transactionClass" nillable="true" type="ns0:TransactionClass"/>
            <element minOccurs="0" name="status" nillable="true" type="ns0:TransactionStatus"/>
            <element minOccurs="0" name="fromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="toDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="modifiedFromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="modifiedToDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="pageNo" nillable="true" type="int"/>
            <element minOccurs="0" name="resultsPerPage" nillable="true" type="int"/>
          </all>
        </complexType>
      </element>
      <element name="GetTransactionListByIdsResponse">
        <complexType>
          <all>
            <element name="returnCount" type="int"/>
            <element name="totalCount" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element minOccurs="0" name="transactions" type="ns0:Transactions"/>
          </all>
        </complexType>
      </element>
      <complexType name="TransactionIds">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="transactionId" nillable="true" type="long"/>
        </sequence>
      </complexType>
      <element name="GetTransactionListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="type" nillable="true">
              <simpleType>
                <restriction base="string">
                  <enumeration value="DRAFT"/>
                  <enumeration value="PAYMENT"/>
                  <enumeration value="FEE"/>
                  <enumeration value="SERVICE"/>
                  <enumeration value="R_FEE"/>
                </restriction>
              </simpleType>
            </element>
            <element minOccurs="0" name="status" nillable="true" type="ns0:TransactionStatus"/>
            <element minOccurs="0" name="modifiedFromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="modifiedToDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="fromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="toDate" nillable="true" type="ns0:NpnDate"/>
            <element default="false" minOccurs="0" name="skipDeleted" nillable="true" type="boolean"/>
            <element minOccurs="0" name="order" type="tns:TransactionOrder"/>
            <element default="true" minOccurs="0" name="ascending" nillable="true" type="boolean"/>
            <element minOccurs="0" name="pageNo" nillable="true" type="int"/>
            <element minOccurs="0" name="resultsPerPage" nillable="true" type="int"/>
            <element minOccurs="0" name="lastTransactionId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetTransactionListResponse">
        <complexType>
          <all>
            <element name="returnCount" type="int"/>
            <element name="totalCount" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element minOccurs="0" name="transactions" type="ns0:Transactions"/>
          </all>
        </complexType>
      </element>
      <complexType name="TransactionOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:TransactionOrderBy"/>
        </sequence>
      </complexType>
      <simpleType name="TransactionOrderBy">
        <restriction base="string">
          <enumeration value="transactionMethod"/>
          <enumeration value="scheduleDate"/>
          <enumeration value="completedDate"/>
          <enumeration value="transactionDate"/>
          <enumeration value="clearedDate"/>
          <enumeration value="trxID"/>
          <enumeration value="class"/>
          <enumeration value="source"/>
          <enumeration value="destination"/>
          <enumeration value="amount"/>
          <enumeration value="status"/>
        </restriction>
      </simpleType>
      <element name="GetTransactionMethodsRequest">
        <complexType>
          <all>
            <element name="transactionClass" type="ns0:TransactionClass"/>
          </all>
        </complexType>
      </element>
      <element name="GetTransactionMethodsResponse">
        <complexType>
          <sequence>
            <element name="transactionClass" type="string"/>
            <element name="transactionMethodsList" type="ns0:TransactionMethodsList"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetTransactionProcessorsRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="transactionProcessorType" nillable="true" type="string"/>
            <element minOccurs="0" name="direction" nillable="true" type="ns0:TransactionProcessorDirection"/>
          </all>
        </complexType>
      </element>
      <element name="GetTransactionProcessorsResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="transactionProcessors" nillable="true" type="ns0:TransactionProcessorList"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetUnprocessedPostedTransactionListRequest">
        <complexType>
          <all>
            <annotation>
              <documentation>"Return Posted Transactions that are unprocessed and unmatched to a Transaction.."</documentation>
            </annotation>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="postedTransactionStatus" type="tns:PostedTransactionStatus"/>
            <element name="pageNo" type="int"/>
            <element name="resultsPerPage" type="int"/>
            <element minOccurs="0" name="order" type="tns:PostedTransactionOrder"/>
            <element default="true" name="ascending" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="GetUnprocessedPostedTransactionListResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element name="postedTransactionList" type="ns0:PostedTransactionList"/>
            <element minOccurs="0" name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetUserByIdRequest">
        <complexType>
          <all>
            <element name="userId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetUserByIdResponse">
        <complexType>
          <all>
            <element name="userInfo" type="ns0:UserInfo"/>
            <element name="subscriberList" nillable="true" type="ns0:Subscribers"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetUserRolesListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetUserRolesListResponse">
        <complexType>
          <sequence>
            <element name="userRoles" type="ns0:Roles"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetCancelReasonCodesRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetCancelReasonCodesResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="codes">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" name="code">
                    <complexType>
                      <sequence>
                        <element name="reasonCode" type="string"/>
                        <element name="description" type="string"/>
                      </sequence>
                    </complexType>
                  </element>
                </sequence>
              </complexType>
            </element>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetReturnListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientName" nillable="true" type="string"/>
            <element minOccurs="0" name="accountNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="modifiedby" nillable="true" type="string"/>
            <element minOccurs="0" name="startDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="endDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="order" nillable="true" type="ns0:ReturnScheduleOrder"/>
            <element default="true" name="ascending" type="boolean"/>
            <element minOccurs="0" name="status" nillable="true" type="ns0:ScheduleStatusForListing"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="ns0:positiveNumber"/>
            <element minOccurs="0" name="numberOfRecordsPerPage" nillable="true" type="ns0:positiveNumber"/>
            <element minOccurs="0" name="transactionClass" nillable="true" type="ns0:ReturnTransactionClass"/>
            <element minOccurs="0" name="transactionMethod" nillable="true" type="ns0:ReturnTransactionMethod"/>
          </all>
        </complexType>
      </element>
      <element name="GetReturnListResponse">
        <complexType>
          <sequence>
            <element name="totalCount" type="long"/>
            <element name="returnedCount" type="long"/>
            <element name="pageNumber" type="long"/>
            <element maxOccurs="unbounded" minOccurs="0" name="schedules" nillable="true" type="ns0:ScheduleReturn"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetReturnScheduleRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="scheduleId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetReturnScheduleResponse">
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" minOccurs="0" name="schedules" nillable="true" type="ns0:ScheduleReturn"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetSubscriberTemplateAssetByIdRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="documentId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetSubscriberTemplateAssetByIdResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="document" type="ns0:Document"/>
            <element name="commandStatus" type="int"/>
          </sequence>
        </complexType>
      </element>
      <element name="ListEnrollmentFeeRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="feeType" nillable="true" type="ns0:FeeType"/>
            <element minOccurs="0" name="ownerType" nillable="true" type="ns0:OwnerType"/>
          </all>
        </complexType>
      </element>
      <element name="ListEnrollmentFeeResponse">
        <complexType>
          <all>
            <element name="enrollmentId" type="long"/>
            <element name="fees" type="ns0:GetEnrollmentFees"/>
            <element name="transactionFees" type="ns0:SubscriberFees"/>
          </all>
        </complexType>
      </element>
      <element name="ListSubscriberFeeRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="type" nillable="true" type="ns0:FeeType"/>
            <element default="true" minOccurs="0" name="ascending" nillable="true" type="boolean"/>
            <element minOccurs="0" name="order" type="tns:FeeOrder"/>
            <element default="1" minOccurs="0" name="pageNo" nillable="true" type="int"/>
            <element default="10" minOccurs="0" name="resultsPerPage" nillable="true" type="int"/>
          </all>
        </complexType>
      </element>
      <element name="ListSubscriberFeeResponse">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="fees" type="ns0:SubscriberFees"/>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
          </all>
        </complexType>
      </element>
      <element name="ListTopLevelFeeRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="type" nillable="true" type="ns0:FeeType"/>
          </all>
        </complexType>
      </element>
      <element name="ListTopLevelFeeResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="commandStatus" type="int"/>
            <element name="fees" type="ns0:TopLevelFees"/>
          </all>
        </complexType>
      </element>
      <element name="MakePhonePaymentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="scheduleId" type="long"/>
            <element name="checkNumber" type="string"/>
            <element minOccurs="0" name="creditorProcessingFee" nillable="true" type="double"/>
            <element minOccurs="0" name="creditorProcessingFeeCheckNumber" nillable="true" type="string"/>
            <element default="true" minOccurs="0" name="creditorProcessingFeeCombined" nillable="true" type="boolean"/>
            <element name="comment" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="MakePhonePaymentResponse">
        <complexType>
          <sequence>
            <element name="scheduleId" type="string"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="ModifyDraftScheduleRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="scheduleId" type="long"/>
            <element name="currentDraftDate" type="ns0:NpnDate"/>
            <element name="newDraftDate" type="ns0:NpnDate"/>
          </all>
        </complexType>
      </element>
      <element name="ModifyDraftScheduleResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="ModifyHierarchyAffiliateCommissionDistRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="current">
              <complexType>
                <all>
                  <element name="affiliateId" type="long"/>
                  <element name="affiliateType" type="ns0:SubscriberAffiliateType"/>
                  <element minOccurs="0" name="referalId" type="long"/>
                </all>
              </complexType>
            </element>
            <element name="new">
              <complexType>
                <all>
                  <element name="affiliateId" type="long"/>
                  <element name="affiliateType" type="ns0:SubscriberAffiliateType"/>
                  <element minOccurs="0" name="referalId" type="long"/>
                  <element minOccurs="0" name="fixed" type="ns0:FixedDistType"/>
                  <element minOccurs="0" name="payoutRule" type="string"/>
                </all>
              </complexType>
            </element>
          </all>
        </complexType>
      </element>
      <element name="ModifyHierarchyAffiliateCommissionDistResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="ModifyLoanAmountRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="enrollmentId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element name="newLoanAmount" type="double"/>
          </all>
        </complexType>
      </element>
      <element name="ModifyLoanAmountResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="ModifyLoanDueDateRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="scheduleId" type="long"/>
            <element name="currentLoanDueDate" type="ns0:NpnDate"/>
            <element name="newLoanDueDate" type="ns0:NpnDate"/>
          </all>
        </complexType>
      </element>
      <element name="ModifyLoanDueDateResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="MoveAffiliateHierarchyRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="affiliateId" type="long"/>
            <element name="affiliateType" type="ns0:SubscriberAffiliateType"/>
            <element name="currentParentAffiliateId" type="long"/>
            <element name="newParentAffilaiteId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="MoveAffiliateHierarchyResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="OverrideSubscriberFeeRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="affiliateId" type="long"/>
            <element name="affiliateType" type="ns0:SubscriberAffiliateType"/>
            <element name="feeId" type="long"/>
            <element name="feeAmount" type="double"/>
          </all>
        </complexType>
      </element>
      <element name="OverrideSubscriberFeeResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="PopulateBiweeklyEnrollmentScheduleRequest">
        <complexType>
          <all>
            <element name="enrollmentId" type="long"/>
            <element name="subscriberId" type="long"/>
            <element name="firstLoanDueDate" type="ns0:NpnDate"/>
            <element name="monthlyLoanAmount" type="double"/>
            <element name="firstDebitDate" type="ns0:NpnDate"/>
            <element name="deferredServiceFee" type="double"/>
          </all>
        </complexType>
      </element>
      <element name="PopulateBiweeklyEnrollmentScheduleResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="ReactivateDraftScheduleRequest">
        <annotation>
          <documentation>Reactivate a draft schedule by scheule id</documentation>
        </annotation>
        <complexType>
          <all>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long">
              <annotation>
                <documentation>schedule id of the draft schedule</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element name="subscriberId" type="long">
              <annotation>
                <documentation>subscriber id</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="clientId" nillable="true" type="string">
              <annotation>
                <documentation>Client Id or External Id is used to find the client.</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="ReactivateDraftScheduleResponse">
        <complexType>
          <sequence>
            <element name="scheduleId" type="string">
              <annotation>
                <documentation>schedule id of the reactivated draft schedule</documentation>
              </annotation>
            </element>
            <element name="commandStatus" type="int">
              <annotation>
                <documentation>status 1 for success, 0 for failure</documentation>
              </annotation>
            </element>
            <element name="errorMessage" type="string">
              <annotation>
                <documentation>Descriptive error message</documentation>
              </annotation>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="ReactivateFeeScheduleRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="ReactivateFeeScheduleResponse">
        <complexType>
          <sequence>
            <element name="scheduleId" type="string"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="RejectPaymentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
            <element name="positivePayInquiryId" type="long"/>
            <element minOccurs="0" name="reason" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="RejectPaymentResponse">
        <complexType>
          <sequence>
            <element name="subscriberId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="ResetPasswordRequest">
        <complexType>
          <all>
            <element name="Username" type="string"/>
            <element name="newpassword" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="ResetPasswordResponse">
        <complexType>
          <all>
            <element name="username" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="RemoveAffiliateDocumentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="affiliateId" type="long"/>
            <element minOccurs="0" name="externalAffiliateId" type="string"/>
            <element name="documentId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="RemoveAffiliateDocumentResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="RevalidateAutoEnrollmentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="enrollmentId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="RevalidateAutoEnrollmentResponse">
        <complexType>
          <all>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="SaveAutoEnrollmentAffiliatesRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="enrollmentId" type="long"/>
            <element name="agencyId" type="long"/>
            <element name="dealerId" type="long"/>
            <element minOccurs="0" name="fiMgrId" type="long"/>
            <element minOccurs="0" name="unmatchedFiMgrId" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="SaveAutoEnrollmentAffiliatesResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="SaveChannelAttributeValueRequest">
        <complexType>
          <all>
            <element name="enrollmentId" type="long"/>
            <element name="attributes">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" name="attribute">
                    <complexType>
                      <attribute name="name" type="string"/>
                      <attribute name="value" type="string"/>
                    </complexType>
                  </element>
                </sequence>
              </complexType>
            </element>
          </all>
        </complexType>
      </element>
      <element name="SaveChannelAttributeValueResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="SendEmailRequest">
        <annotation>
          <documentation>Email addresses can be comma separated</documentation>
        </annotation>
        <complexType>
          <all>
            <element name="toEmailAddress" type="string"/>
            <element minOccurs="0" name="ccEmailAddress" nillable="true" type="string"/>
            <element minOccurs="0" name="bccEmailAddress" nillable="true" type="string"/>
            <element name="subject" type="string"/>
            <element name="message" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="SendEmailResponse">
        <complexType>
          <all>
            <element name="commandStatus" type="int"/>
          </all>
        </complexType>
      </element>
      <element name="SkipDraftRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="scheduleId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="SkipDraftResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="SkipPaymentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="enrollmentId" type="long"/>
            <element name="skipPaymentDate" type="ns0:NpnDate"/>
            <element name="nextDraftDate" type="ns0:NpnDate"/>
            <element name="restartLoanPaymentDate" type="ns0:NpnDate"/>
            <element minOccurs="0" name="comment" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="SkipPaymentResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="SuspendDraftScheduleRequest">
        <annotation>
          <documentation>Suspend a draft schedule by schedule id</documentation>
        </annotation>
        <complexType>
          <all>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long">
              <annotation>
                <documentation>schedule id of the draft schedule</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element name="subscriberId" type="long">
              <annotation>
                <documentation>subscriber id</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="clientId" nillable="true" type="string">
              <annotation>
                <documentation>Client Id or External Id is used to find the client.</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="status" nillable="true" type="ns0:ScheduleStatus"/>
          </all>
        </complexType>
      </element>
      <element name="SuspendDraftScheduleResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long">
              <annotation>
                <documentation>schedule id of the suspended draft schedule</documentation>
              </annotation>
            </element>
            <element name="commandStatus" type="int">
              <annotation>
                <documentation>status 1 for success, 0 for failure</documentation>
              </annotation>
            </element>
            <element name="errorMessage" type="string">
              <annotation>
                <documentation>Descriptive error message</documentation>
              </annotation>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="SuspendFeeScheduleRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="status" nillable="true" type="ns0:ScheduleStatus"/>
            <element minOccurs="0" name="feeIdList" nillable="true" type="ns0:FeeIdList"/>
            <element minOccurs="0" name="feeTypeIdList" nillable="true" type="ns0:FeeTypeIdList"/>
            <element minOccurs="0" name="externalFeeIdList" nillable="true" type="ns0:ExternalFeeIdList"/>
          </all>
        </complexType>
      </element>
      <element name="SuspendFeeScheduleResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="SuspendSettlementRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="settlementId" type="long"/>
            <element minOccurs="0" name="comment" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="SuspendSettlementResponse">
        <complexType>
          <sequence>
            <element name="settlementId" type="long"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateAdhocTransferRequest">
        <complexType>
          <all>
            <element name="scheduleId" type="long"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="scheduleDate" type="ns0:NpnDate"/>
            <element name="amount" type="double"/>
            <element name="fromAccount" type="ns0:BankAccount"/>
            <element name="toAccount" type="ns0:BankAccount"/>
            <element name="status" type="ns0:ScheduleStatus"/>
            <element name="comment" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateAdhocTransferResponse">
        <complexType>
          <sequence>
            <element name="scheduleId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateAffiliateDocumentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="affiliateId" type="long"/>
            <element minOccurs="0" name="externalAffiliateId" type="string"/>
            <element name="document" type="ns0:AffiliateDocument"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateAffiliateDocumentResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateAffiliateRequest">
        <complexType>
          <all>
            <element name="affiliateId" type="long"/>
            <element name="affiliate" type="ns0:AffiliateUpdate"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateAffiliateResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateApprovalRequest">
        <complexType>
          <all>
            <element name="approvalId" type="long"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="comment" nillable="true" type="string"/>
            <element name="approvalStatus">
              <simpleType>
                <restriction base="string">
                  <enumeration value="PENDING"/>
                  <enumeration value="ACCEPTED"/>
                  <enumeration value="REJECTED"/>
                </restriction>
              </simpleType>
            </element>
            <element name="approvalAttemptMode" type="ns0:ApprovalAttemptMode"/>
            <element minOccurs="0" name="approvalAttemptDisposition" nillable="true" type="ns0:ApprovalAttemptDisposition"/>
            <element name="approvalType">
              <simpleType>
                <restriction base="string">
                  <enumeration value="DRAFT"/>
                  <enumeration value="SETTLEMENT"/>
                  <enumeration value="ENROLLMENT"/>
                </restriction>
              </simpleType>
            </element>
            <element minOccurs="0" name="note" nillable="true" type="string"/>
            <element minOccurs="0" name="documentName" nillable="true" type="string"/>
            <element minOccurs="0" name="documentType" nillable="true">
              <simpleType>
                <restriction base="string">
                  <enumeration value="DRAFT"/>
                  <enumeration value="SETTLEMENT"/>
                  <enumeration value="ENROLLMENT"/>
                </restriction>
              </simpleType>
            </element>
            <element minOccurs="0" name="base64EncodedContent" nillable="true" type="string"/>
            <element minOccurs="0" name="contentType" nillable="true" type="string"/>
            <element default="true" name="overwriteDocument" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateApprovalResponse">
        <complexType>
          <sequence>
            <element name="approvalId" type="long"/>
            <element name="approvalAttemptId" nillable="true" type="long"/>
            <element minOccurs="0" name="documentId" nillable="true" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateAutoEnrollmentAffiliatesRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="enrollmentId" type="long"/>
            <element name="agencyId" type="long"/>
            <element minOccurs="0" name="subAgencyId" type="long"/>
            <element name="dealerId" type="long"/>
            <element minOccurs="0" name="fiMgrId" type="long"/>
            <element minOccurs="0" name="unmatchedFiMgrId" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateAutoEnrollmentAffiliatesResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateAutoPayeeInfoRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="enrollmentId" type="long"/>
            <element name="payeeId" type="long"/>
            <element name="newLenderInfo">
              <complexType>
                <all>
                  <element minOccurs="0" name="loanNumber" type="string"/>
                  <element minOccurs="0" name="payeeId" type="long"/>
                  <element minOccurs="0" name="name" type="string"/>
                  <element minOccurs="0" name="phone" type="string"/>
                  <element minOccurs="0" name="address" type="ns0:AddressInfo"/>
                </all>
              </complexType>
            </element>
          </all>
        </complexType>
      </element>
      <element name="UpdateAutoPayeeInfoResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateChannelAttributeValueRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="enrollmentId" type="long"/>
            <element name="firstLoanDueDate" type="ns0:NpnDate"/>
            <element name="monthlyLoanAmount" type="double"/>
            <element minOccurs="0" name="firstDebitAmount" type="double"/>
            <element name="firstDebitDate" type="ns0:NpnDate"/>
            <element default="false" minOccurs="0" name="isHalfDraft" nillable="true" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateChannelAttributeValueResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateClientBankAccountRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="clientBankAccountId" nillable="true" type="long"/>
            <element name="routingNumber" type="string"/>
            <element name="accountType" type="ns0:AccountType"/>
            <element name="accountNumber" type="string"/>
            <element name="holdersName" type="string"/>
            <element minOccurs="0" name="externalBankId" nillable="true" type="string"/>
            <element minOccurs="0" name="accountNature" nillable="true" type="ns0:AccountNature"/>
            <element minOccurs="0" name="authorizationFormat" nillable="true" type="ns0:AuthorizationFormat"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateClientBankAccountResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element name="commandStatus" type="int"/>
            <element maxOccurs="unbounded" minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateClientRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="clientId" type="string"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="externalClientId" type="string"/>
            <element minOccurs="0" name="referralId" nillable="true" type="ns0:ReferralId"/>
            <element minOccurs="0" name="firstname" nillable="true" type="string"/>
            <element minOccurs="0" name="middleInitial" nillable="true" type="string"/>
            <element minOccurs="0" name="lastname" nillable="true" type="string"/>
            <element minOccurs="0" name="ssn" nillable="true" type="string"/>
            <element minOccurs="0" name="dob" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="address1" nillable="true" type="string"/>
            <element minOccurs="0" name="address2" nillable="true" type="string"/>
            <element minOccurs="0" name="city" nillable="true" type="string"/>
            <element minOccurs="0" name="state" nillable="true" type="string"/>
            <element minOccurs="0" name="zip" nillable="true" type="string"/>
            <element minOccurs="0" name="phone" nillable="true" type="string"/>
            <element minOccurs="0" name="WorkNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="mobile" nillable="true" type="string"/>
            <element minOccurs="0" name="email" nillable="true" type="string"/>
            <element minOccurs="0" name="oldPassword" nillable="true" type="string"/>
            <element minOccurs="0" name="password" nillable="true" type="string"/>
            <element minOccurs="0" name="svaDocument" type="ns0:SVADocument"/>
            <element minOccurs="0" name="enrollmentStatus" nillable="true">
              <simpleType>
                <restriction base="string">
                  <enumeration value="ACTIVE"/>
                  <enumeration value="SUSPENDED"/>
                </restriction>
              </simpleType>
            </element>
          </all>
        </complexType>
      </element>
      <element name="UpdateClientResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateCoClientRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="clientId" type="string"/>
            <element name="coClientFirstname" type="string"/>
            <element name="coClientLastname" type="string"/>
            <element minOccurs="0" name="coClientMiddleInitial" nillable="true" type="string"/>
            <element minOccurs="0" name="coClientSsn" nillable="true" type="string"/>
            <element minOccurs="0" name="coClientDob" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="coClientPhone" nillable="true" type="string"/>
            <element minOccurs="0" name="coClientWorkNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="coClientMobile" nillable="true" type="string"/>
            <element minOccurs="0" name="coClientEmail" nillable="true" type="string"/>
            <element minOccurs="0" name="coSignatory" nillable="true" type="boolean"/>
          </all>
          <attribute default="EDIT" name="operation" use="optional">
            <simpleType>
              <restriction base="string">
                <enumeration value="EDIT"/>
                <enumeration value="DELETE"/>
              </restriction>
            </simpleType>
          </attribute>
        </complexType>
      </element>
      <element name="UpdateCoClientResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateDraftScheduleRequest">
        <annotation>
          <documentation>Update a single draft schedule which was created by CreateDraftScheduleRequest</documentation>
        </annotation>
        <complexType>
          <all>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long">
              <annotation>
                <documentation>Schedule Id of the schedule to be updated</documentation>
              </annotation>
            </element>
            <element name="subscriberId" type="long">
              <annotation>
                <documentation>Subscriber Id</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="clientId" nillable="true" type="string">
              <annotation>
                <documentation>Client Id or External Id is used to find the client.</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element minOccurs="0" name="clientBankAccountId" nillable="true" type="long">
              <annotation>
                <documentation>Client bank account id of the bank account from which draft are drawn</documentation>
              </annotation>
            </element>
            <element name="status" type="ns0:ScheduleStatus"/>
            <element name="amount" type="double">
              <annotation>
                <documentation>Draft amount, this can be updated</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="scheduleDate" nillable="true" type="ns0:NpnDate">
              <annotation>
                <documentation>schedule date, this can be updated</documentation>
              </annotation>
            </element>
            <element default="false" minOccurs="0" name="updateRemainingSchedules" nillable="true" type="boolean"/>
            <element default="false" minOccurs="0" name="allowDuplicates" nillable="true" type="boolean"/>
            <element minOccurs="0" name="comment" nillable="true" type="string">
              <annotation>
                <documentation>Comments regarding the draft schedule</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="remark" nillable="true" type="string">
              <annotation>
                <documentation>Remarks</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="accountNature" nillable="true" type="ns0:AccountNature"/>
            <element minOccurs="0" name="authorizationFormat" nillable="true" type="ns0:AuthorizationFormat"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateDraftScheduleResponse">
        <complexType>
          <sequence>
            <element name="scheduleId" type="string">
              <annotation>
                <documentation>Schedule Id of the updated draft schedule</documentation>
              </annotation>
            </element>
            <element name="commandStatus" type="int">
              <annotation>
                <documentation>status 1 for success, 0 for failure</documentation>
              </annotation>
            </element>
            <element name="errorMessage" type="string">
              <annotation>
                <documentation>Descriptive error message</documentation>
              </annotation>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateEnrollmentErrorRequest">
        <complexType>
          <all>
            <element name="enrollmentErrorId" type="long"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="long"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="reason" type="string"/>
            <element minOccurs="0" name="status" nillable="true" type="tns:ErrorStatus"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateEnrollmentErrorResponse">
        <complexType>
          <sequence>
            <element name="enrollmentErrorId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateEnrollmentTicketRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="enrollmentTicketId" type="long"/>
            <element minOccurs="0" name="transactionId" nillable="true" type="long"/>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
            <element name="ticketType" type="string"/>
            <element name="ticketStatus" type="ns0:EnrollmentTicketStatus"/>
            <element name="subject" type="string"/>
            <element name="assigneeId" type="long"/>
            <element minOccurs="0" name="reviewDate" type="ns0:NpnDate"/>
            <element name="assosiatedAmount" type="double"/>
            <element name="reason" type="string"/>
            <element name="comment" type="string"/>
            <element name="message" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateEnrollmentTicketResponse">
        <complexType>
          <sequence>
            <element name="enrollmentTicketId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdatePartialEnrollmentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="partialEnrollmentInfo" type="ns0:PartialEnrollmentInfo"/>
          </all>
        </complexType>
      </element>
      <element name="UpdatePartialEnrollmentResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="partialEnrollmentId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdatePartialEnrollmentStatusRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="partialEnrollmentId" type="long"/>
            <element name="status" type="ns0:PartialEnrollmentStatus"/>
          </all>
        </complexType>
      </element>
      <element name="UpdatePartialEnrollmentStatusResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateFeeScheduleRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
            <element minOccurs="0" name="subscriberId" nillable="true" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element name="amount" type="double"/>
            <element name="scheduleDate" type="ns0:NpnDate"/>
            <element minOccurs="0" name="comment" nillable="true" type="string"/>
            <element minOccurs="0" name="status" nillable="true" type="string"/>
            <element name="updateRemainingSchedules" type="boolean"/>
            <element minOccurs="0" name="remark" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateFeeScheduleResponse">
        <complexType>
          <sequence>
            <element name="scheduleId" type="string"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdatePaymentStatusRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="clientId" type="string"/>
            <element name="paymentId" type="long"/>
            <element name="status" type="ns0:ScheduleStatus"/>
          </all>
        </complexType>
      </element>
      <element name="UpdatePaymentStatusResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdatePaymentRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element name="updatePaymentList" type="ns0:UpdatePaymentList"/>
          </all>
        </complexType>
      </element>
      <element name="UpdatePaymentResponse">
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" minOccurs="0" name="scheduleId" nillable="true" type="long"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateRuleSetDefinitionRequest">
        <complexType>
          <sequence>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="ruleSetId" nillable="true" type="long"/>
            <element minOccurs="0" name="externalRuleSetId" nillable="true" type="string"/>
            <element maxOccurs="unbounded" minOccurs="0" name="commissionSet" type="ns0:CommissionSet"/>
            <element default="true" name="makeDefault" type="boolean"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateRuleSetDefinitionResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateRuleSetRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="ruleSetId" nillable="true" type="long"/>
            <element minOccurs="0" name="externalRuleSetId" nillable="true" type="string"/>
            <element minOccurs="0" name="name" nillable="true" type="string"/>
            <element minOccurs="0" name="status" nillable="true" type="ns0:RuleSetStatus"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateRuleSetResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateSettlementScheduleRequest">
        <complexType>
          <all>
            <element name="settlementId" type="long"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element name="payeeId" type="long"/>
            <element minOccurs="0" name="payeeAddressId" nillable="true" type="long"/>
            <element minOccurs="0" name="PayeeExternalAddressId" nillable="true" type="string"/>
            <element minOccurs="0" name="payeeContactId" nillable="true" type="long"/>
            <element minOccurs="0" name="payeeExternalContactId" nillable="true" type="string"/>
            <element minOccurs="0" name="payeeBankAccountId" nillable="true" type="long"/>
            <element minOccurs="0" name="PayeeBankExternalAccountId" nillable="true" type="string"/>
            <element name="currentBalance" type="double"/>
            <element name="settlementAmount" type="double"/>
            <element minOccurs="0" name="settlementReference" nillable="true" type="string"/>
            <element minOccurs="0" name="numPayments" nillable="true" type="ns0:positiveNumber"/>
            <element name="accountNumber" type="string"/>
            <element minOccurs="0" name="comment" nillable="true" type="string"/>
            <element minOccurs="0" name="negotiator" nillable="true" type="string"/>
            <element default="true" name="isApprovalRequired" type="boolean"/>
            <element minOccurs="0" name="settlementScheduleList" nillable="true">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" minOccurs="0" name="SettlementScheduleInfo" nillable="true" type="ns0:SettlementSchedule"/>
                </sequence>
              </complexType>
            </element>
          </all>
        </complexType>
      </element>
      <element name="UpdateSettlementScheduleResponse">
        <complexType>
          <sequence>
            <element name="settlementId" type="string"/>
            <element name="ScheduleIdList" nillable="true" type="ns0:ScheduleIdList"/>
            <element ref="ns0:serviceFault"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateSignatureDateRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="enrollmentId" type="long"/>
            <element name="signatureDate" type="ns0:NpnDate"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateSignatureDateResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateSubscriberPartnerRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="partner" type="ns0:Partner"/>
            <element minOccurs="0" name="partnerConfigs">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" name="config">
                    <complexType>
                      <sequence>
                        <element name="name" type="string"/>
                        <element name="value" type="string"/>
                      </sequence>
                    </complexType>
                  </element>
                </sequence>
              </complexType>
            </element>
          </all>
        </complexType>
      </element>
      <element name="UpdateSubscriberPartnerResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="partnerId" nillable="true" type="long"/>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateSubscriberPayeeRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="payeeId" nillable="true" type="long">
              <annotation>
                <documentation>Either payeeId or subscriberPayeeId is required.</documentation>
              </annotation>
            </element>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="subscriberPayeeId" nillable="true" type="string">
              <annotation>
                <documentation>Either payeeId or subscriberPayeeId is required.</documentation>
              </annotation>
            </element>
            <element name="payeeName" nillable="true" type="string"/>
            <element default="true" minOccurs="0" name="payeeStatus" nillable="true" type="boolean"/>
            <element minOccurs="0" name="payeeDescription" nillable="true" type="string"/>
            <element minOccurs="0" name="payeeWebsite" nillable="true" type="string"/>
            <element minOccurs="0" name="externalPayeeId" nillable="true" type="long"/>
            <element minOccurs="0" name="faxNo" nillable="true" type="string"/>
            <element minOccurs="0" name="phoneNo" nillable="true" type="string"/>
            <element minOccurs="0" name="payeeAdresses" nillable="true">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" minOccurs="0" name="address" nillable="true" type="ns0:Address"/>
                </sequence>
              </complexType>
            </element>
            <element minOccurs="0" name="payeeContacts" nillable="true">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" minOccurs="0" name="contact" nillable="true" type="ns0:Contact"/>
                </sequence>
              </complexType>
            </element>
            <element minOccurs="0" name="payeeBankAccounts" nillable="true">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" minOccurs="0" name="account" nillable="true" type="ns0:Account"/>
                </sequence>
              </complexType>
            </element>
          </all>
        </complexType>
      </element>
      <element name="UpdateSubscriberPayeeResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element name="payeeId" type="long"/>
            <element minOccurs="0" name="payeeAddresses" nillable="true" type="ns0:AddressesIds"/>
            <element minOccurs="0" name="payeeContacts" nillable="true" type="ns0:ContactsIds"/>
            <element minOccurs="0" name="payeeBankAccounts" nillable="true" type="ns0:BankAccountIds"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateSubscriberUserRequest">
        <complexType>
          <all>
            <element name="userId" type="long"/>
            <element name="subscriberId" type="long"/>
            <element name="firstName" type="string"/>
            <element name="userName" type="string"/>
            <element minOccurs="0" name="middleInitial" nillable="true" type="string"/>
            <element minOccurs="0" name="lastName" nillable="true" type="string"/>
            <element name="email" type="string"/>
            <element name="phone" type="string"/>
            <element minOccurs="0" name="password" nillable="true" type="string"/>
            <element minOccurs="0" name="addressLine1" nillable="true" type="string"/>
            <element minOccurs="0" name="addressLine2" nillable="true" type="string"/>
            <element minOccurs="0" name="city" nillable="true" type="string"/>
            <element minOccurs="0" name="state" nillable="true" type="string"/>
            <element minOccurs="0" name="zip" nillable="true" type="string"/>
            <element minOccurs="0" name="comment" nillable="true" type="string"/>
            <element minOccurs="0" name="existingPassword" nillable="true" type="string"/>
            <element default="true" name="isActive" type="boolean"/>
            <element default="false" name="isLocked" type="boolean"/>
            <element name="rolePermissions" type="ns0:RolePermissionList"/>
            <element default="true" name="isIpValidationRequired" type="boolean"/>
            <element minOccurs="0" name="ipAddresses" nillable="true" type="ns0:IpAddressesList"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateSubscriberUserResponse">
        <complexType>
          <sequence>
            <element name="userId" type="long"/>
            <element name="userName" type="string"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateReturnScheduleRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element minOccurs="0" name="effectiveDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="amount" nillable="true" type="double"/>
            <element minOccurs="0" name="comment" nillable="true" type="string"/>
            <element minOccurs="0" name="status" nillable="true" type="ns0:ReturnScheduleStatusForUpdate"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateReturnScheduleResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="schedule" nillable="true" type="ns0:ScheduleReturn"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="VerifyIpRequest">
        <complexType>
          <all>
            <element name="token" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="VerifyIpResponse">
        <complexType>
          <all>
            <element name="ipAddress" nillable="true" type="string"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AdminActivateEnrollmentRequest">
        <complexType>
          <all>
            <element name="enrollmentId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="AdminActivateEnrollmentResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="enrollmentId" nillable="true" type="long"/>
            <element name="enrollmentStatuses" nillable="true" type="string"/>
            <element name="cipStatuses" nillable="true" type="string"/>
            <element name="ofacStatuses" nillable="true" type="string"/>
            <element name="spaStatuses" nillable="true" type="string"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetClientsRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="firstname" nillable="true" type="string"/>
            <element minOccurs="0" name="middleInitial" nillable="true" type="string"/>
            <element minOccurs="0" name="lastname" nillable="true" type="string"/>
            <element minOccurs="0" name="ssn" nillable="true" type="string"/>
            <element minOccurs="0" name="email" nillable="true" type="string"/>
            <element minOccurs="0" name="keyWord" nillable="true" type="string"/>
            <element minOccurs="0" name="statuses" type="tns:ClientStatuses"/>
            <element minOccurs="0" name="spaStatuses" type="tns:SPAStatuses"/>
            <element minOccurs="0" name="fromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="toDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="phoneNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="addressLine1" nillable="true" type="string"/>
            <element minOccurs="0" name="addressLine2" nillable="true" type="string"/>
            <element minOccurs="0" name="city" nillable="true" type="string"/>
            <element minOccurs="0" name="state" nillable="true" type="string"/>
            <element minOccurs="0" name="zip" nillable="true" type="string"/>
            <element minOccurs="0" name="loanNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="lenderName" nillable="true" type="string"/>
            <element minOccurs="0" name="VIN" nillable="true" type="string"/>
            <element minOccurs="0" name="routingNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="accountNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="order" type="tns:AdminClientOrder"/>
            <element default="true" name="ascending" type="boolean"/>
            <element name="pageNo" type="int"/>
            <element name="resultsPerPage" type="int"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetClientsResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element maxOccurs="unbounded" minOccurs="0" name="client" type="ns0:Client"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="AdminClientOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:AdminClientOrderBy"/>
        </sequence>
      </complexType>
      <simpleType name="AdminClientOrderBy">
        <restriction base="string">
          <enumeration value="id"/>
          <enumeration value="firstName"/>
          <enumeration value="lastName"/>
          <enumeration value="email"/>
          <enumeration value="createdOn"/>
          <enumeration value="modifiedOn"/>
          <enumeration value="modifiedBy"/>
        </restriction>
      </simpleType>
      <element name="AdminGetScheduleListRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="subscriberId" nillable="true" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="startDate" type="ns0:NpnDate"/>
            <element name="endDate" type="ns0:NpnDate"/>
            <element minOccurs="0" name="order" nillable="true" type="tns:DraftScheduleOrder"/>
            <element default="true" name="ascending" type="boolean"/>
            <element minOccurs="0" name="status" nillable="true" type="ns0:ScheduleStatusForListing"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="ns0:positiveNumber"/>
            <element minOccurs="0" name="numberOfRecordsPerPage" nillable="true" type="ns0:positiveNumber"/>
            <element name="transactionClasses" type="ns0:TransactionClassList"/>
            <element minOccurs="0" name="transactionMethods" nillable="true" type="ns0:TransactionMethodsList"/>
            <element default="false" minOccurs="0" name="showRfee" nillable="true" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetScheduleListResponse">
        <complexType>
          <sequence>
            <element name="returnedCount" type="long"/>
            <element name="pageNumber" type="long"/>
            <element maxOccurs="unbounded" minOccurs="0" name="schedules" nillable="true" type="ns0:ScheduleDraft"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminGetTransactionListRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="type" nillable="true">
              <simpleType>
                <restriction base="string">
                  <enumeration value="DRAFT"/>
                  <enumeration value="PAYMENT"/>
                  <enumeration value="FEE"/>
                  <enumeration value="SERVICE"/>
                  <enumeration value="R_FEE"/>
                </restriction>
              </simpleType>
            </element>
            <element minOccurs="0" name="status" nillable="true" type="ns0:TransactionStatus"/>
            <element minOccurs="0" name="modifiedFromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="modifiedToDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="fromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="toDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="pageNo" nillable="true" type="int"/>
            <element minOccurs="0" name="resultsPerPage" nillable="true" type="int"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetTransactionListResponse">
        <complexType>
          <all>
            <element name="returnCount" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element minOccurs="0" name="transactions" type="ns0:Transactions"/>
          </all>
        </complexType>
      </element>
      <element name="AuthorizeAndAcceptPaymentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="postedTransactionId" type="long"/>
            <element name="scheduleId" type="long"/>
            <element minOccurs="0" name="reason" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AuthorizeAndAcceptPaymentResponse">
        <complexType>
          <sequence>
            <element name="subscriberId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateEnrollmentCommentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalNoteId" nillable="true" type="string"/>
            <element name="note" type="string"/>
            <element minOccurs="0" name="documentType" nillable="true" type="string"/>
            <element minOccurs="0" name="base64EncodedContent" nillable="true" type="string"/>
            <element minOccurs="0" name="contentType" nillable="true" type="string"/>
            <element minOccurs="0" name="documentName" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="CreateEnrollmentCommentResponse">
        <complexType>
          <sequence>
            <element name="noteid" type="long"/>
            <element name="documentid" nillable="true" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CaptureDraftRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="recurringType" nillable="true" type="ns0:RecurringTypes"/>
            <element minOccurs="0" name="recurringStartDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="recurringAmount1" nillable="true" type="double"/>
            <element minOccurs="0" name="recurringDay1" nillable="true" type="long"/>
            <element minOccurs="0" name="recurringAmount2" nillable="true" type="double"/>
            <element minOccurs="0" name="recurringDay2" nillable="true" type="long"/>
            <element minOccurs="0" name="lumpSumDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="lumpSumAmount" nillable="true" type="double"/>
            <element default="false" name="lumpSumOnly" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="CaptureDraftResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminGetNonConformingDraftsRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="subscriberId" type="long"/>
            <element name="pageNumber" type="ns0:positiveNumber"/>
            <element name="numberOfRecordsPerPage" type="ns0:positiveNumber"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetNonConformingDraftsResponse">
        <complexType>
          <sequence>
            <element name="totalCount" type="int"/>
            <element name="returnedCount" type="int"/>
            <element name="pageNumber" type="int"/>
            <element name="nonConformingDraftList" type="ns0:NonConformingDraftList"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreatePrenoteScheduleRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long">
              <annotation>
                <documentation>Subscriber Id</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="clientId" nillable="true" type="string">
              <annotation>
                <documentation>Client Id or External Id is used to find the client.</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element minOccurs="0" name="clientBankAccountId" nillable="true" type="long">
              <annotation>
                <documentation>Client bank account id of the bank account from which Prenote are drawn</documentation>
              </annotation>
            </element>
            <element name="prenoteDate" type="ns0:NpnDate">
              <annotation>
                <documentation>Prenote start date</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="comment" nillable="true" type="string">
              <annotation>
                <documentation>Comments regarding the Prenote schedule</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="accountNature" nillable="true" type="ns0:AccountNature"/>
            <element minOccurs="0" name="authorizationFormat" nillable="true" type="ns0:AuthorizationFormat"/>
          </all>
        </complexType>
      </element>
      <element name="CreatePrenoteScheduleResponse">
        <complexType>
          <sequence>
            <element name="scheduleId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateDepositItemsRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="method" nillable="true" type="ns0:DepositTypes"/>
            <element name="scheduleFrequencyType" type="ns0:DraftType">
              <annotation>
                <documentation>Whether it is a Biweekly, Monthly or adhock draft</documentation>
              </annotation>
            </element>
            <element name="depositList" type="ns0:DepositList"/>
            <element minOccurs="0" name="subLoanActType" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="CreateDepositItemsResponse">
        <complexType>
          <sequence>
            <element name="scheduleList" nillable="true" type="tns:Schedules"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetCheckImageRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
            <element minOccurs="0" name="transactionId" nillable="true" type="long"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetCheckImageResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="subscriberId" type="long"/>
            <element name="scheduleId" nillable="true" type="long"/>
            <element name="transactionId" nillable="true" type="long"/>
            <element name="externalReferenceId" nillable="true" type="string"/>
            <element name="checkImageFront" nillable="true" type="base64Binary"/>
            <element name="checkImageBack" nillable="true" type="base64Binary"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="UnlockAccountRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="subscriberId" nillable="true" type="long"/>
            <element name="username" type="string"/>
            <element name="token" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="UnlockAccountResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="SendReactivationCodeRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="subscriberId" nillable="true" type="long"/>
            <element name="username" type="string"/>
            <element name="notifMethod" type="ns0:NotificationReactivationMethod"/>
          </all>
        </complexType>
      </element>
      <element name="SendReactivationCodeResponse">
        <complexType>
          <all>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="SearchCFTPayeesRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="payeeName" type="string"/>
            <element name="loanAccountNumber" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="SearchCFTPayeesResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
            <element minOccurs="0" name="payees" type="ns0:CftPayees"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateDraftItemsRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="scheduleList" type="ns0:DraftItemScheduleList"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateDraftItemsResponse">
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" name="updateScheduleList" type="ns0:UpdateScheduleList">
              <annotation>
                <documentation>Schedule Id of the updated draft schedule</documentation>
              </annotation>
            </element>
            <element name="commandStatus" type="int">
              <annotation>
                <documentation>status 1 for success, 0 for failure</documentation>
              </annotation>
            </element>
            <element name="errorMessage" type="string">
              <annotation>
                <documentation>Descriptive error message</documentation>
              </annotation>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="GetClientBalancesRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetClientBalancesResponse">
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" minOccurs="0" name="clientBalanceList" nillable="true" type="ns0:ClientBalance"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateRTPSettlementScheduleRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element name="payeeId" type="long"/>
            <element name="payeeName" type="string"/>
            <element minOccurs="0" name="payeeAddressId" nillable="true" type="long"/>
            <element minOccurs="0" name="PayeeExternalAddressId" nillable="true" type="string"/>
            <element minOccurs="0" name="payeeContactId" nillable="true" type="long"/>
            <element minOccurs="0" name="payeeExternalContactId" nillable="true" type="string"/>
            <element minOccurs="0" name="payeeBankAccountId" nillable="true" type="long"/>
            <element minOccurs="0" name="PayeeBankExternalAccountId" nillable="true" type="string"/>
            <element name="currentBalance" type="double"/>
            <element name="settlementAmount" type="double"/>
            <element minOccurs="0" name="settlementReference" nillable="true" type="string"/>
            <element minOccurs="0" name="numPayments" nillable="true" type="ns0:positiveNumber"/>
            <element name="accountNumber" type="string"/>
            <element minOccurs="0" name="comment" nillable="true" type="string"/>
            <element minOccurs="0" name="negotiator" nillable="true" type="string"/>
            <element default="true" name="isApprovalRequired" type="boolean"/>
            <element minOccurs="0" name="settlementScheduleList" nillable="true" type="ns0:SettlementRTPScheduleList"/>
          </all>
        </complexType>
      </element>
      <element name="CreateRTPSettlementScheduleResponse">
        <complexType>
          <sequence>
            <element name="settlementId" type="string"/>
            <element name="scheduleId" type="string"/>
            <element ref="ns0:serviceFault"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetClientRTPSettlementRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="settlementId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetClientRTPSettlementResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="settlementList" nillable="true" type="ns0:RTPSettlementList"/>
          </sequence>
        </complexType>
      </element>
      <element name="CheckSdnMatchRequest">
        <complexType>
          <all>
            <element name="individual" type="ns0:Individual"/>
          </all>
        </complexType>
      </element>
      <element name="CheckSdnMatchResponse">
        <complexType>
          <all>
            <element name="sdnMatch" type="ns0:SdnMatch"/>
          </all>
        </complexType>
      </element>
      <element name="CreateFeeBasisRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="debtFeeInformation" type="ns0:DebtFeeInformation"/>
            <element minOccurs="0" name="numberOfTradeLines" nillable="true" type="long"/>
            <element minOccurs="0" name="tradeLines" nillable="true" type="ns0:tradeLines"/>
          </all>
        </complexType>
      </element>
      <element name="CreateFeeBasisResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateFeeBasisRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="debtFeeInformation" type="ns0:DebtFeeInformation"/>
            <element minOccurs="0" name="numberOfTradeLines" nillable="true" type="long"/>
            <element minOccurs="0" name="tradeLines" nillable="true" type="ns0:tradeLines"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateFeeBasisResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
            <element minOccurs="0" name="warningMessage" nillable="true">
              <complexType>
                <sequence>
                  <element name="warningCode" type="string"/>
                  <element name="warningDescription" type="string"/>
                </sequence>
              </complexType>
            </element>
          </all>
        </complexType>
      </element>
      <element name="GetFeeBasisRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetFeeBasisResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="originalDebt" nillable="true" type="double"/>
            <element minOccurs="0" name="percentage" nillable="true" type="double"/>
            <element minOccurs="0" name="fixed" nillable="true" type="double"/>
            <element minOccurs="0" name="updateFeeBasisFlag" nillable="true" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
            <element minOccurs="0" name="warningMessage" nillable="true">
              <complexType>
                <sequence>
                  <element name="warningCode" type="string"/>
                  <element name="warningDescription" type="string"/>
                </sequence>
              </complexType>
            </element>
          </all>
        </complexType>
      </element>
      <element name="AdminGetSettlementFeesRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="settlementId" type="long"/>
            <element name="pageNumber" type="ns0:positiveNumber"/>
            <element name="numberOfRecordsPerPage" type="ns0:positiveNumber"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetSettlementFeesResponse">
        <complexType>
          <sequence>
            <element name="totalCount" type="long"/>
            <element name="returnedCount" type="long"/>
            <element name="pageNumber" type="long"/>
            <element maxOccurs="unbounded" minOccurs="0" name="fees" nillable="true" type="ns0:SettlementFeeBasis"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetFeeScheduleBasisRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetFeeScheduleBasisResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="fee" nillable="true" type="ns0:SingleFeeScheduleBasis"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetFeeScheduleListBasisRequest">
        <complexType>
          <all>
            <annotation>
              <documentation>"Initially Modified From/To date will query against the modified dates ,if its null
                        it will check against the created date.."</documentation>
            </annotation>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element minOccurs="0" name="owner" nillable="true" type="ns0:FeeScheduleOwner"/>
            <element minOccurs="0" name="scheduleIds" type="tns:ScheduleIds"/>
            <element minOccurs="0" name="startDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="endDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="subscriberFeeId" nillable="true" type="long"/>
            <element default="false" minOccurs="0" name="filterReversedFees" nillable="true" type="boolean"/>
            <element minOccurs="0" name="modifiedFromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="modifiedToDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="status" nillable="true" type="ns0:ScheduleStatusForListing"/>
            <element minOccurs="0" name="order" type="ns0:FeeScheduleOrder"/>
            <element default="true" name="ascending" type="boolean"/>
            <element default="false" minOccurs="0" name="showRfee" nillable="true" type="boolean"/>
            <element name="pageNumber" type="ns0:positiveNumber"/>
            <element name="numberOfRecordsPerPage" type="ns0:positiveNumber"/>
          </all>
        </complexType>
      </element>
      <element name="GetFeeScheduleListBasisResponse">
        <complexType>
          <sequence>
            <element name="totalCount" type="long"/>
            <element name="returnedCount" type="long"/>
            <element name="pageNumber" type="long"/>
            <element maxOccurs="unbounded" minOccurs="0" name="fees" nillable="true" type="ns0:ScheduleFeeBasis"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreatePerformanceSettlementBasisRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
            <element name="payeeId" type="long"/>
            <element minOccurs="0" name="payeeAddressId" nillable="true" type="long"/>
            <element minOccurs="0" name="PayeeExternalAddressId" nillable="true" type="string"/>
            <element minOccurs="0" name="payeeContactId" nillable="true" type="long"/>
            <element minOccurs="0" name="payeeExternalContactId" nillable="true" type="string"/>
            <element minOccurs="0" name="payeeBankAccountId" nillable="true" type="long"/>
            <element minOccurs="0" name="PayeeBankExternalAccountId" nillable="true" type="string"/>
            <element name="originalDebt" type="double"/>
            <element name="settlementAmount" type="double"/>
            <element minOccurs="0" name="settlementReference" nillable="true" type="string"/>
            <element minOccurs="0" name="numPayments" nillable="true" type="ns0:positiveNumber"/>
            <element name="accountNumber" type="string"/>
            <element minOccurs="0" name="comment" nillable="true" type="string"/>
            <element minOccurs="0" name="negotiator" nillable="true" type="string"/>
            <element default="true" name="isApprovalRequired" type="boolean"/>
            <element minOccurs="0" name="settlementPaymentList" nillable="true" type="ns0:SettlementPaymentList"/>
          </all>
        </complexType>
      </element>
      <element name="CreatePerformanceSettlementBasisResponse">
        <complexType>
          <sequence>
            <element name="settlementId" type="string"/>
            <element name="scheduleId" type="string"/>
            <element ref="ns0:serviceFault"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetClientsEnhancedRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="firstname" nillable="true" type="string"/>
            <element minOccurs="0" name="middleInitial" nillable="true" type="string"/>
            <element minOccurs="0" name="lastname" nillable="true" type="string"/>
            <element minOccurs="0" name="ssn" nillable="true" type="string"/>
            <element minOccurs="0" name="email" nillable="true" type="string"/>
            <element minOccurs="0" name="keyWord" nillable="true" type="string"/>
            <element minOccurs="0" name="statuses" type="tns:ClientStatuses"/>
            <element minOccurs="0" name="spaStatuses" type="tns:SPAStatuses"/>
            <element minOccurs="0" name="cipStatuses" type="tns:CIPStatuses"/>
            <element minOccurs="0" name="ofacStatuses" type="tns:OFACStatuses"/>
            <element minOccurs="0" name="fromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="toDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="enrollmentFromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="enrollmentToDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="phoneNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="addressLine1" nillable="true" type="string"/>
            <element minOccurs="0" name="addressLine2" nillable="true" type="string"/>
            <element minOccurs="0" name="city" nillable="true" type="string"/>
            <element minOccurs="0" name="state" nillable="true" type="string"/>
            <element minOccurs="0" name="zip" nillable="true" type="string"/>
            <element minOccurs="0" name="loanNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="lenderName" nillable="true" type="string"/>
            <element minOccurs="0" name="VIN" nillable="true" type="string"/>
            <element minOccurs="0" name="routingNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="accountNumber" nillable="true" type="string"/>
            <element minOccurs="0" name="order" type="tns:ClientOrder"/>
            <element default="true" name="ascending" type="boolean"/>
            <element name="pageNo" type="int"/>
            <element name="resultsPerPage" type="int"/>
            <element default="true" minOccurs="0" name="skipDeleted" nillable="true" type="boolean"/>
            <element minOccurs="0" name="searchBy" nillable="true" type="ns0:SearchClientParams"/>
            <element minOccurs="0" name="bankPartnerName" nillable="true" type="ns0:BankPartners"/>
          </all>
        </complexType>
      </element>
      <element name="GetClientsEnhancedResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
            <element maxOccurs="unbounded" minOccurs="0" name="client" type="ns0:ClientsEnhanced"/>
          </sequence>
        </complexType>
      </element>
      <element name="UploadDocumentRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="settlementId" nillable="true" type="long"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
            <element minOccurs="0" name="affiliateId" nillable="true" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="stateCode" nillable="true" type="string"/>
            <element name="document" type="ns0:ClientDocument"/>
          </all>
        </complexType>
      </element>
      <element name="UploadDocumentResponse">
        <complexType>
          <sequence>
            <element name="documentId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
            <element minOccurs="0" name="warningMessage" nillable="true">
              <complexType>
                <sequence>
                  <element name="warningCode" type="string"/>
                  <element name="warningDescription" type="string"/>
                </sequence>
              </complexType>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="GetSubscriberStatewiseFeeCapListRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetSubscriberStatewiseFeeCapListResponse">
        <complexType>
          <sequence>
            <element name="StateFeeCapList" type="ns0:StateFeeCapList"/>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="SaveStatewiseFeeCapRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="stateCode" type="string"/>
            <element name="licenseRequired" type="ns0:RequiredFlag"/>
            <element minOccurs="0" name="licenseExpiry" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="stateFeeType" nillable="true" type="ns0:FixedDistBasisTypes"/>
            <element minOccurs="0" name="stateFeeValue" nillable="true" type="double"/>
          </all>
        </complexType>
      </element>
      <element name="SaveStatewiseFeeCapResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element minOccurs="0" name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetCaptureDraftRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetCaptureDraftResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="captureSpaDrafts" type="ns0:captureSpaDrafts"/>
            <element name="errorMessage" nillable="true" type="string"/>
            <element minOccurs="0" name="warningMessage" nillable="true">
              <complexType>
                <sequence>
                  <element name="warningCode" type="string"/>
                  <element name="warningDescription" type="string"/>
                </sequence>
              </complexType>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="UpdateCaptureDraftRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="spaDraftId" type="string"/>
            <element minOccurs="0" name="recurringType" nillable="true" type="ns0:RecurringTypes"/>
            <element minOccurs="0" name="recurringStartDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="recurringAmount1" nillable="true" type="double"/>
            <element minOccurs="0" name="recurringDay1" nillable="true" type="long"/>
            <element minOccurs="0" name="recurringAmount2" nillable="true" type="double"/>
            <element minOccurs="0" name="recurringDay2" nillable="true" type="long"/>
            <element minOccurs="0" name="lumpSumDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="lumpSumAmount" nillable="true" type="double"/>
            <element default="false" name="lumpSumOnly" type="boolean"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateCaptureDraftResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="ProcessMultipleReturnsRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="transactionClass" nillable="true" type="ns0:TransactionClass"/>
            <element name="returnList" type="ns0:ReturnList"/>
          </all>
        </complexType>
      </element>
      <element name="ProcessMultipleReturnsResponse">
        <complexType>
          <sequence>
            <element name="returnList" nillable="true" type="ns0:Returns"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="AdminUpdateActivateEnrollmentRequest">
        <complexType>
          <all>
            <element name="enrollmentId" type="long"/>
            <element name="actionType" type="ns0:ActionType"/>
            <element minOccurs="0" name="updateEnrollmentParams" type="ns0:UpdateEnrollmentParams"/>
          </all>
        </complexType>
      </element>
      <element name="AdminUpdateActivateEnrollmentResponse">
        <complexType>
          <all>
            <element minOccurs="0" name="enrollmentId" nillable="true" type="long"/>
            <element minOccurs="0" name="activateEnrollmentResponseParams" nillable="true" type="ns0:ActivateEnrollmentResponseParams"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="VerifyClientManuallyRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="subscriberId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="VerifyClientManuallyResponse">
        <complexType>
          <all>
            <element name="cipStatuses" nillable="true" type="string"/>
            <element name="ofacStatuses" nillable="true" type="string"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetAvoidableReturnsFlaggedClientsRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="subscriberId" nillable="true" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="long"/>
            <element minOccurs="0" name="returnCode" nillable="true" type="string"/>
            <element minOccurs="0" name="nextDraftFromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="nextDraftToDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="returnFromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="returnToDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="order" type="tns:FlaggedClientOrderBy"/>
            <element default="true" name="ascending" type="boolean"/>
            <element name="pageNo" type="int"/>
            <element name="resultsPerPage" type="int"/>
            <element minOccurs="0" name="documentStatus" type="ns0:DocumentStatus"/>
          </all>
        </complexType>
      </element>
      <element name="AdminGetAvoidableReturnsFlaggedClientsResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
            <element minOccurs="0" name="totalCount" nillable="true" type="int"/>
            <element minOccurs="0" name="returnedCount" nillable="true" type="int"/>
            <element minOccurs="0" name="pageNumber" nillable="true" type="int"/>
            <element minOccurs="0" name="FlaggedClientList" type="ns0:AvoidableReturnFlaggedClientList"/>
          </sequence>
        </complexType>
      </element>
      <simpleType name="FlaggedClientOrderBy">
        <restriction base="string">
          <enumeration value="scheduleDate"/>
          <enumeration value="returnDate"/>
        </restriction>
      </simpleType>
      <element name="CompleteEnrollmentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="comments" type="string"/>
            <element default="USER" name="completedBy" type="ns0:CancelledBy"/>
          </all>
        </complexType>
      </element>
      <element name="CompleteEnrollmentResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GenerateClientBankStatementRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element minOccurs="0" name="fromDate" nillable="true" type="ns0:NpnDate"/>
            <element minOccurs="0" name="toDate" nillable="true" type="ns0:NpnDate"/>
          </all>
        </complexType>
      </element>
      <element name="GenerateClientBankStatementResponse">
        <complexType>
          <all>
            <element name="firstName" type="string"/>
            <element name="lastName" nillable="true" type="string"/>
            <element name="address1" nillable="true" type="string"/>
            <element name="address2" nillable="true" type="string"/>
            <element name="city" nillable="true" type="string"/>
            <element name="state" nillable="true" type="string"/>
            <element name="clientAccountNumber" type="string"/>
            <element name="previousBalance" type="double"/>
            <element name="totalDeposits" nillable="true" type="double"/>
            <element name="totalWithdrawals" nillable="true" type="double"/>
            <element name="finalBalance" type="double"/>
            <element name="serviceFees" nillable="true" type="double"/>
            <element name="returnedItemFeesForCurrentPeriod" nillable="true" type="double"/>
            <element name="returnedItemFeesYTD" nillable="true" type="double"/>
            <element minOccurs="0" name="dealings" type="ns0:Dealings"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="ModifyPostedTransactionRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
            <element name="positivePayInquiryId" type="long"/>
            <element name="reason" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="ModifyPostedTransactionResponse">
        <complexType>
          <sequence>
            <element name="subscriberId" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetEnvironmentRequest">
        <complexType>
          <all>
            <element name="instanceName" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetEnvironmentResponse">
        <complexType>
          <sequence>
            <element name="instanceName" type="string"/>
            <element name="buildRevision-DA" nillable="true" type="string"/>
            <element name="buildUpdatedDate-DA" nillable="true" type="string"/>
            <element name="buildRevision-SRV" nillable="true" type="string"/>
            <element name="buildUpdatedDate-SRV" nillable="true" type="string"/>
            <element name="buildRevision-WSRV" nillable="true" type="string"/>
            <element name="buildUpdatedDate-WSRV" nillable="true" type="string"/>
            <element name="totalMemory" nillable="true" type="long"/>
            <element name="availableMemory" nillable="true" type="long"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="FailPaymentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="scheduleId" type="long"/>
            <element minOccurs="0" name="description" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="FailPaymentResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="errorCode" nillable="true" type="string"/>
            <element name="errorDesc" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CaptureEnrollmentAddressRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="address1" type="string"/>
            <element minOccurs="0" name="address2" nillable="true" type="string"/>
            <element name="city" type="string"/>
            <element name="state" type="string"/>
            <element name="zip" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="CaptureEnrollmentAddressResponse">
        <complexType>
          <all>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetEnrollmentCaptureAddressRequest">
        <complexType>
          <all>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="GetEnrollmentCaptureAddressResponse">
        <complexType>
          <all>
            <element name="clientId" nillable="true" type="string"/>
            <element name="address1" nillable="true" type="string"/>
            <element name="address2" nillable="true" type="string"/>
            <element name="city" nillable="true" type="string"/>
            <element name="state" nillable="true" type="string"/>
            <element name="zip" nillable="true" type="string"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="DeleteClientBankAccountRequest">
        <complexType>
          <all>
            <element name="bankId" type="long"/>
            <element name="accountNo" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="DeleteClientBankAccountResponse">
        <complexType>
          <sequence>
            <element minOccurs="0" name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="UpdatePhonePaymentInquiryRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="postedTransactionId" type="long"/>
            <element name="payeeId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="UpdatePhonePaymentInquiryResponse">
        <complexType>
          <sequence>
            <element name="postedTransactionId" type="long"/>
            <element name="status" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateExternalCftPaymentRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element minOccurs="0" name="clientId" nillable="true" type="string"/>
            <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
            <element name="settlementId" type="long"/>
            <element name="subscriberPayeeId" type="long"/>
            <element name="paymentDate" type="ns0:NpnDate"/>
            <element name="paymentAmount" type="double"/>
            <element name="paymentMode" nillable="true" type="string"/>
            <element name="documentList">
              <complexType>
                <sequence>
                  <element maxOccurs="unbounded" name="document" type="ns0:PaymentReceiptDocument"/>
                </sequence>
              </complexType>
            </element>
            <element name="remarks" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="CreateExternalCftPaymentResponse">
        <complexType>
          <sequence>
            <element name="settlementId" type="long"/>
            <element name="externalPaymentId" type="long"/>
            <element name="status" type="string"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateSubscriberPayeeRelationshipRequest">
        <complexType>
          <all>
            <element name="subscriberId" type="long"/>
            <element name="parentPayeeId" type="long"/>
            <element minOccurs="0" name="parentPayeeName" nillable="true" type="string"/>
            <element name="childPayees" type="ns0:ChildPayeesList"/>
          </all>
        </complexType>
      </element>
      <element name="CreateSubscriberPayeeRelationshipResponse">
        <complexType>
          <sequence>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetSubscriberTransactionReceiptsRequest">
        <complexType>
          <all>
            <element name="subscribersId" type="long"/>
          </all>
        </complexType>
      </element>
      <element name="GetSubscriberTransactionReceiptsResponse">
        <complexType>
          <all>
            <element name="transactionReceiptSettingList" nillable="true" type="ns0:SubscriberTransactionReceiptList"/>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateSubscriberTransactionReceiptRequest">
        <complexType>
          <all>
            <element name="subscribersId" type="long"/>
            <element name="transactionClassId" type="string"/>
            <element name="status" type="int"/>
          </all>
        </complexType>
      </element>
      <element name="UpdateSubscriberTransactionReceiptResponse">
        <complexType>
          <all>
            <element name="commandStatus" type="int"/>
            <element name="errorMessage" nillable="true" type="string"/>
          </all>
        </complexType>
      </element>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://nationalpayment.net/ws/schemas/types" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:msg="http://nationalpayment.net/ws/schemas/messages" xmlns:tns="http://nationalpayment.net/ws/schemas/types">
      <import namespace="http://nationalpayment.net/ws/schemas/messages"/>
      <complexType name="Client">
        <sequence>
          <element name="id" nillable="true" type="long"/>
          <element name="externalClientId" nillable="true" type="string"/>
          <element name="firstName" type="string"/>
          <element name="middleInitial" nillable="true" type="string"/>
          <element name="lastName" type="string"/>
          <element name="username" nillable="true" type="string"/>
          <element name="ssn" nillable="true" type="string"/>
          <element name="dob" nillable="true" type="tns:NpnDate"/>
          <element name="address1" type="string"/>
          <element name="address2" nillable="true" type="string"/>
          <element name="city" type="string"/>
          <element name="state" type="string"/>
          <element name="zip" type="string"/>
          <element name="phone" type="string"/>
          <element name="WorkNumber" nillable="true" type="string"/>
          <element name="mobile" nillable="true" type="string"/>
          <element name="email" nillable="true" type="string"/>
          <element name="totalNoOfDraftsCompleted" nillable="true" type="int"/>
          <element name="totalNoOfDrafts" nillable="true" type="int"/>
          <element name="totalNoOfFeesCompleted" nillable="true" type="int"/>
          <element name="totalNoOfFees" nillable="true" type="int"/>
          <element name="lastDraftDate" nillable="true" type="tns:NpnDate"/>
          <element name="nextDraftDate" nillable="true" type="tns:NpnDate"/>
          <element name="nextDraftAmount" nillable="true" type="double"/>
          <element name="nextPaymentDate" nillable="true" type="tns:NpnDate"/>
          <element name="nextPaymentAmount" nillable="true" type="double"/>
          <element minOccurs="0" name="enrollment" type="tns:Enrollment"/>
          <element minOccurs="0" name="coClients" type="tns:CoClients"/>
          <element minOccurs="0" name="auditInfo" type="tns:AuditInformation"/>
          <element minOccurs="0" name="accountInfo" type="string"/>
          <element minOccurs="0" name="externalReferenceNumber" type="string"/>
          <element minOccurs="0" name="enrollmentAttributesList">
            <complexType>
              <sequence>
                <element maxOccurs="unbounded" name="attribute">
                  <complexType>
                    <attribute name="name" type="string"/>
                    <attribute name="value" type="string"/>
                  </complexType>
                </element>
              </sequence>
            </complexType>
          </element>
          <element name="affiliates">
            <complexType>
              <sequence>
                <element maxOccurs="unbounded" minOccurs="0" name="affiliate" type="tns:Affiliate"/>
              </sequence>
            </complexType>
          </element>
          <element name="affiliateGroup" nillable="true" type="tns:AffiliateGroup"/>
          <element name="affiliateFees">
            <complexType>
              <sequence>
                <element maxOccurs="unbounded" minOccurs="0" name="fees" type="tns:SubscriberFee"/>
              </sequence>
            </complexType>
          </element>
        </sequence>
      </complexType>
      <complexType name="ClientsEnhanced">
        <sequence>
          <element name="id" nillable="true" type="long"/>
          <element name="externalClientId" nillable="true" type="string"/>
          <element name="firstName" type="string"/>
          <element name="middleInitial" nillable="true" type="string"/>
          <element name="lastName" type="string"/>
          <element name="username" nillable="true" type="string"/>
          <element name="ssn" nillable="true" type="string"/>
          <element name="dob" nillable="true" type="tns:NpnDate"/>
          <element name="address1" type="string"/>
          <element name="address2" nillable="true" type="string"/>
          <element name="city" type="string"/>
          <element name="state" type="string"/>
          <element name="zip" type="string"/>
          <element name="phone" type="string"/>
          <element name="WorkNumber" nillable="true" type="string"/>
          <element name="mobile" nillable="true" type="string"/>
          <element name="email" nillable="true" type="string"/>
          <element name="totalNoOfDraftsCompleted" nillable="true" type="int"/>
          <element name="totalNoOfDrafts" nillable="true" type="int"/>
          <element name="totalNoOfFeesCompleted" nillable="true" type="int"/>
          <element name="totalNoOfFees" nillable="true" type="int"/>
          <element name="lastDraftDate" nillable="true" type="tns:NpnDate"/>
          <element name="nextDraftDate" nillable="true" type="tns:NpnDate"/>
          <element name="nextDraftAmount" nillable="true" type="double"/>
          <element name="nextPaymentDate" nillable="true" type="tns:NpnDate"/>
          <element name="nextPaymentAmount" nillable="true" type="double"/>
          <element minOccurs="0" name="enrollment" type="tns:Enrollment"/>
          <element minOccurs="0" name="coClients" type="tns:CoClients"/>
          <element minOccurs="0" name="auditInfo" type="tns:AuditInformation"/>
          <element minOccurs="0" name="accountInfo" type="string"/>
          <element minOccurs="0" name="externalReferenceNumber" type="string"/>
          <element name="isCplusClient" nillable="true" type="boolean"/>
          <element name="phoneSettlementAccountNumber" nillable="true" type="string"/>
          <element name="bankPartnerName" nillable="true" type="string"/>
          <element minOccurs="0" name="enrollmentAttributesList">
            <complexType>
              <sequence>
                <element maxOccurs="unbounded" name="attribute">
                  <complexType>
                    <attribute name="name" type="string"/>
                    <attribute name="value" type="string"/>
                  </complexType>
                </element>
              </sequence>
            </complexType>
          </element>
          <element name="affiliates">
            <complexType>
              <sequence>
                <element maxOccurs="unbounded" minOccurs="0" name="affiliate" type="tns:Affiliate"/>
              </sequence>
            </complexType>
          </element>
          <element name="affiliateGroup" nillable="true" type="tns:AffiliateGroup"/>
          <element name="affiliateFees">
            <complexType>
              <sequence>
                <element maxOccurs="unbounded" minOccurs="0" name="fees" type="tns:SubscriberFee"/>
              </sequence>
            </complexType>
          </element>
        </sequence>
      </complexType>
      <complexType name="SVADocument">
        <all>
          <element name="note" type="string"/>
          <element minOccurs="0" name="documentType" nillable="true" type="string"/>
          <element name="base64EncodedContent" type="string"/>
          <element name="contentType" type="string"/>
          <element name="documentName" type="string"/>
        </all>
      </complexType>
      <complexType name="NonConformingDraft">
        <all>
          <element name="briefClient" type="tns:BriefClient"/>
          <element name="briefSubscriber" type="tns:BriefSubscriber"/>
          <element name="nonConformingDraftCount" type="int"/>
        </all>
      </complexType>
      <complexType name="NonConformingDraftList">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="nonConformingDraft" type="tns:NonConformingDraft"/>
        </sequence>
      </complexType>
      <complexType name="EnrollComment">
        <sequence>
          <element name="id" type="long"/>
          <element name="enrollments_id" nillable="true" type="long"/>
          <element name="clientId" nillable="true" type="long"/>
          <element name="schedulesId" nillable="true" type="long"/>
          <element name="documentId" nillable="true" type="long"/>
          <element name="documentName" nillable="true" type="string"/>
          <element name="comment" nillable="true" type="string"/>
          <element name="context" nillable="true" type="string"/>
          <element minOccurs="0" name="auditInfo" type="tns:AuditInformation"/>
        </sequence>
      </complexType>
      <complexType name="ClientInfoForAuthResponse">
        <all>
          <element name="briefClient" type="tns:BriefClient"/>
          <element name="briefSubscriber" type="tns:BriefSubscriber"/>
        </all>
      </complexType>
      <complexType name="BriefClient">
        <all>
          <element name="id" type="long"/>
          <element name="externalClientId" nillable="true" type="string"/>
          <element name="firstName" type="string"/>
          <element name="lastName" type="string"/>
          <element name="middleInitial" nillable="true" type="string"/>
        </all>
      </complexType>
      <complexType name="BriefSubscriber">
        <all>
          <element name="id" nillable="true" type="long"/>
          <element name="name" nillable="true" type="string"/>
          <element name="phone" nillable="true" type="string"/>
          <element name="email" nillable="true" type="string"/>
          <element name="abbreviation" nillable="true" type="string"/>
        </all>
      </complexType>
      <complexType name="AuditInfo">
        <all>
          <element name="createdOn" nillable="true" type="string"/>
          <element name="createdBy" nillable="true" type="long"/>
          <element name="modifiedOn" nillable="true" type="string"/>
          <element name="modifiedBy" nillable="true" type="long"/>
          <element name="dateFormat" nillable="true" type="string"/>
        </all>
      </complexType>
      <complexType name="AuditInformation">
        <all>
          <element name="createdOn" nillable="true" type="tns:NpnDate"/>
          <element name="createdBy" nillable="true" type="string"/>
          <element name="createdUserType" nillable="true" type="string"/>
          <element name="modifiedOn" nillable="true" type="tns:NpnDate"/>
          <element name="modifiedBy" nillable="true" type="string"/>
          <element name="modifiedUserType" nillable="true" type="string"/>
        </all>
      </complexType>
      <complexType name="CoClients">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="coClient" type="tns:CoClient"/>
        </sequence>
      </complexType>
      <complexType name="CoClientSignatories">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="coClientSignatory" type="tns:CoClientSignatory"/>
        </sequence>
      </complexType>
      <complexType name="CoClientSignatory">
        <sequence>
          <element name="coClientId" nillable="true" type="long"/>
          <element name="firstname" type="string"/>
          <element name="subscriberId" type="string"/>
          <element name="subscriberName" type="string"/>
          <element name="middleInitial" nillable="true" type="string"/>
          <element name="lastname" type="string"/>
          <element name="ssn" nillable="true" type="string"/>
          <element name="dob" type="tns:NpnDate"/>
          <element name="phone" type="string"/>
          <element name="WorkNumber" nillable="true" type="string"/>
          <element name="mobile" nillable="true" type="string"/>
          <element name="email" nillable="true" type="string"/>
          <element name="coSignatory" nillable="true" type="boolean"/>
          <element name="clientId" nillable="true" type="string"/>
          <element minOccurs="0" name="auditInfo" type="tns:AuditInformation"/>
          <element name="ofacStatus" nillable="true" type="string"/>
          <element name="cipStatus" nillable="true" type="string"/>
          <element name="coClientStatus" nillable="true" type="string"/>
          <element name="ofacVerifiedDate" nillable="true" type="tns:NpnDate"/>
          <element name="cipVerifiedDate" nillable="true" type="tns:NpnDate"/>
        </sequence>
      </complexType>
      <complexType name="CoSigners">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="coClient" type="tns:CoSigner"/>
        </sequence>
      </complexType>
      <complexType name="EnrollmentExceptions">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="enrollmentExceptions" nillable="true" type="tns:EnrollmentException"/>
        </sequence>
      </complexType>
      <complexType name="CountInfo">
        <sequence>
          <element name="count" type="double"/>
          <element name="month" type="long"/>
        </sequence>
      </complexType>
      <complexType name="CountInfos">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="countInfo" type="tns:CountInfo"/>
        </sequence>
      </complexType>
      <complexType name="CoClient">
        <sequence>
          <element name="coClientId" nillable="true" type="long"/>
          <element name="firstname" type="string"/>
          <element name="middleInitial" nillable="true" type="string"/>
          <element name="lastname" type="string"/>
          <element name="ssn" nillable="true" type="string"/>
          <element name="dob" type="tns:NpnDate"/>
          <element name="phone" type="string"/>
          <element name="WorkNumber" nillable="true" type="string"/>
          <element name="mobile" nillable="true" type="string"/>
          <element name="email" nillable="true" type="string"/>
          <element minOccurs="0" name="auditInfo" type="tns:AuditInformation"/>
        </sequence>
      </complexType>
      <complexType name="CoSigner">
        <all>
          <element name="firstname" type="string"/>
          <element minOccurs="0" name="middleInitial" nillable="true" type="string"/>
          <element name="lastname" type="string"/>
          <element minOccurs="0" name="ssn" nillable="true" type="string"/>
          <element name="dob" type="tns:NpnDate"/>
          <element minOccurs="0" name="phone" nillable="true" type="string"/>
          <element minOccurs="0" name="WorkNumber" nillable="true" type="string"/>
          <element minOccurs="0" name="mobile" nillable="true" type="string"/>
          <element minOccurs="0" name="email" nillable="true" type="string"/>
        </all>
      </complexType>
      <complexType name="Enrollment">
        <sequence>
          <element name="id" nillable="true" type="long"/>
          <element name="subscriberId" nillable="true" type="long"/>
          <element name="spaaAprroval" nillable="true" type="tns:EnrollmentApproval"/>
          <element name="enrollmentStatuses" nillable="true" type="string"/>
          <element name="cipStatuses" nillable="true" type="string"/>
          <element name="ofacStatuses" nillable="true" type="string"/>
          <element name="spaStatuses" nillable="true" type="string"/>
          <element name="enrollDate" nillable="true" type="tns:NpnDate"/>
          <element name="isSvaCreated" nillable="true" type="boolean"/>
          <element name="allDocumentsSigned" nillable="true" type="boolean"/>
          <element name="draftApprovalRequired" nillable="true" type="boolean"/>
          <element name="draftApprovalStatus" nillable="true" type="string"/>
          <element name="draftAmount" nillable="true" type="double"/>
          <element name="virtualAcctId" nillable="true" type="long"/>
          <element name="virtualAcctNo" nillable="true" type="string"/>
          <element name="currentBalance" nillable="true" type="double"/>
          <element name="pendingBalance" nillable="true" type="double"/>
          <element name="noOfEnrollmentExceptions" nillable="true" type="long"/>
          <element name="ofacVerifiedDate" nillable="true" type="tns:NpnDate"/>
          <element name="cipVerifiedDate" nillable="true" type="tns:NpnDate"/>
          <element name="spaaVerifiedDate" nillable="true" type="tns:NpnDate"/>
          <element name="draftStartDate" nillable="true" type="tns:NpnDate"/>
          <element name="mostRecentAction" nillable="true" type="string"/>
          <element name="enrollmentFees" nillable="true" type="tns:EnrollmentFees"/>
          <element minOccurs="0" name="briefClient" type="tns:BriefClient"/>
          <element minOccurs="0" name="briefSubscriber" type="tns:BriefSubscriber"/>
          <element minOccurs="0" name="auditInfo" type="tns:AuditInformation"/>
        </sequence>
      </complexType>
      <complexType name="EnrollmentApproval">
        <sequence>
          <element name="approvalId" nillable="true" type="long"/>
          <element name="subscriberId" type="long"/>
          <element name="approvedDate" nillable="true" type="tns:NpnDate"/>
          <element name="approvalComment" nillable="true" type="string"/>
          <element name="approvalStatus" nillable="true">
            <simpleType>
              <restriction base="string">
                <enumeration value="PENDING"/>
                <enumeration value="ACCEPTED"/>
                <enumeration value="REJECTED"/>
              </restriction>
            </simpleType>
          </element>
          <element name="approvalMode" nillable="true">
            <simpleType>
              <restriction base="string">
                <enumeration value="EMAIL"/>
                <enumeration value="PHONE"/>
              </restriction>
            </simpleType>
          </element>
          <element name="approvalType" nillable="true">
            <simpleType>
              <restriction base="string">
                <enumeration value="DRAFT"/>
                <enumeration value="SETTLEMENT"/>
              </restriction>
            </simpleType>
          </element>
          <element minOccurs="0" name="approvalsDocument" type="tns:Document"/>
          <element minOccurs="0" name="auditInfo" type="tns:AuditInformation"/>
        </sequence>
      </complexType>
      <complexType name="BankInfo">
        <sequence>
          <element name="bankName" type="string"/>
          <element name="address1" type="string"/>
          <element name="address2" type="string"/>
          <element name="city" type="string"/>
          <element name="account_type" type="string"/>
          <element name="account_number" type="string"/>
          <element name="account_status" nillable="true" type="string"/>
          <element name="holder_name" type="string"/>
          <element name="routing_number" type="string"/>
          <element minOccurs="0" name="state" nillable="true" type="string"/>
          <element minOccurs="0" name="zipcode" nillable="true" type="string"/>
          <element minOccurs="0" name="auditInfo" type="tns:AuditInformation"/>
        </sequence>
      </complexType>
      <complexType name="PostedTransaction">
        <sequence>
          <element name="id" type="long"/>
          <element name="subscriberId" type="long"/>
          <element name="processingId" type="long"/>
          <element name="externalId" type="long"/>
          <element name="enrollmentId" nillable="true" type="long"/>
          <element name="postedTransactionStatus" type="string"/>
          <element name="checkNum" type="string"/>
          <element name="checkDate" nillable="true" type="tns:NpnDate"/>
          <element name="checkAmount" nillable="true" type="double"/>
          <element name="base64EncodedFrontImageContent" nillable="true" type="string"/>
          <element name="base64EncodedBackImageContent" nillable="true" type="string"/>
          <element name="dataFileName" nillable="true" type="string"/>
          <element name="imageFileName" nillable="true" type="string"/>
          <element name="postingType" nillable="true" type="string"/>
          <element name="sourceUrl" nillable="true" type="string"/>
          <element name="postedDate" nillable="true" type="tns:NpnDate"/>
          <element name="payer" nillable="true" type="string"/>
          <element name="payee" nillable="true" type="string"/>
          <element name="transactionId" nillable="true" type="long"/>
          <element name="isProcessed" type="boolean"/>
          <element name="authorizedAmount" type="double"/>
          <element name="notes" nillable="true" type="string"/>
          <element name="reason" nillable="true" type="string"/>
          <element name="confirmationCode" nillable="true" type="string"/>
          <element name="auditInfo" nillable="true" type="tns:AuditInformation"/>
        </sequence>
      </complexType>
      <complexType name="SettlementList">
        <sequence>
          <element maxOccurs="unbounded" name="settlementInfo" type="tns:Settlement"/>
        </sequence>
      </complexType>
      <complexType name="Settlement">
        <sequence>
          <element name="settlementId" type="long"/>
          <element name="createdDate" type="string"/>
          <element name="clientFirstName" nillable="true" type="string"/>
          <element name="clientLastName" type="string"/>
          <element name="subscriberName" type="string"/>
          <element name="subscriberId" type="long"/>
          <element name="clientId" type="string"/>
          <element name="externalClientId" nillable="true" type="string"/>
          <element name="accountNumber" nillable="true" type="string"/>
          <element name="currentBalance" type="double"/>
          <element name="settlementAmount" type="double"/>
          <element name="settlementReference" nillable="true" type="string"/>
          <element name="payeeName" type="string"/>
          <element name="payments" type="int"/>
          <element minOccurs="0" name="approvalStatus" nillable="true" type="string"/>
          <element minOccurs="0" name="approvalId" nillable="true" type="long"/>
          <element name="approvedOn" nillable="true" type="string"/>
          <element name="approvalDocumentId" nillable="true" type="long"/>
          <element name="dateFormat" nillable="true" type="string"/>
          <element name="settlementStatus" type="string"/>
          <element name="approvalAttempts" type="int"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
          <element name="approvalAttemptList" nillable="true">
            <complexType>
              <sequence>
                <element maxOccurs="unbounded" minOccurs="0" name="approvalAttempt" nillable="true" type="tns:ApprovalAttempt"/>
              </sequence>
            </complexType>
          </element>
          <element name="paymentScheduleList" nillable="true">
            <complexType>
              <sequence>
                <element maxOccurs="unbounded" name="paymentSchedule" type="tns:PaymentSchedule"/>
              </sequence>
            </complexType>
          </element>
          <element minOccurs="0" name="payeeInfo" nillable="true" type="tns:SettlementPayeeInfo"/>
        </sequence>
      </complexType>
      <complexType name="RTPSettlementList">
        <sequence>
          <element maxOccurs="unbounded" name="settlementInfo" type="tns:RTPSettlement"/>
        </sequence>
      </complexType>
      <complexType name="RTPSettlement">
        <sequence>
          <element name="settlementId" type="long"/>
          <element name="createdDate" type="string"/>
          <element name="clientFirstName" nillable="true" type="string"/>
          <element name="clientLastName" type="string"/>
          <element name="subscriberName" type="string"/>
          <element name="subscriberId" type="long"/>
          <element name="clientId" type="string"/>
          <element name="externalClientId" nillable="true" type="string"/>
          <element name="accountNumber" nillable="true" type="string"/>
          <element name="currentBalance" type="double"/>
          <element name="settlementAmount" type="double"/>
          <element name="settlementReference" nillable="true" type="string"/>
          <element name="payeeName" type="string"/>
          <element name="payments" type="int"/>
          <element minOccurs="0" name="approvalStatus" nillable="true" type="string"/>
          <element minOccurs="0" name="approvalId" nillable="true" type="long"/>
          <element name="approvedOn" nillable="true" type="string"/>
          <element name="approvalDocumentId" nillable="true" type="long"/>
          <element name="dateFormat" nillable="true" type="string"/>
          <element name="settlementStatus" type="string"/>
          <element name="approvalAttempts" type="int"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
          <element name="approvalAttemptList" nillable="true">
            <complexType>
              <sequence>
                <element maxOccurs="unbounded" minOccurs="0" name="approvalAttempt" nillable="true" type="tns:ApprovalAttempt"/>
              </sequence>
            </complexType>
          </element>
          <element name="paymentScheduleList" nillable="true">
            <complexType>
              <sequence>
                <element maxOccurs="unbounded" name="paymentSchedule" type="tns:RoutablePaymentSchedule"/>
              </sequence>
            </complexType>
          </element>
          <element minOccurs="0" name="payeeInfo" nillable="true" type="tns:RTPSettlementPayeeInfo"/>
        </sequence>
      </complexType>
      <complexType name="RTPSettlementPayeeInfo">
        <sequence>
          <element minOccurs="0" name="subscriberId" type="long"/>
          <element name="payeeId" type="long"/>
          <element name="subscriberPayeeId" nillable="true" type="string"/>
          <element minOccurs="0" name="payeeName" type="string"/>
          <element minOccurs="0" name="payeeStatus" type="boolean"/>
          <element minOccurs="0" name="payeeDescription" type="string"/>
          <element minOccurs="0" name="externalPayeeId" nillable="true" type="long"/>
          <element minOccurs="0" name="subscriberPayeeContact" type="tns:Contact"/>
          <element minOccurs="0" name="subscriberPayeeAddress" type="tns:Address"/>
          <element minOccurs="0" name="subscriberPayeeBankAccount" type="tns:Account"/>
          <element minOccurs="0" name="auditInfo" type="tns:AuditInformation"/>
          <element name="routablePayeeId" nillable="true" type="string"/>
        </sequence>
      </complexType>
      <complexType name="RoutablePaymentSchedule">
        <sequence>
          <element name="scheduledDate" type="tns:NpnDate"/>
          <element name="paymentAmount" type="double"/>
          <element name="status" nillable="true" type="string"/>
          <element name="paymentId" nillable="true" type="long"/>
          <element name="payeeId" nillable="true" type="long"/>
          <element name="agency" nillable="true" type="string"/>
          <element name="transactionMethod" type="tns:RTPTransactionMethod"/>
        </sequence>
      </complexType>
      <complexType name="SettlementScheduleList">
        <sequence>
          <element maxOccurs="unbounded" name="SettlementScheduleInfo" type="tns:SettlementSchedule"/>
        </sequence>
      </complexType>
      <complexType name="SettlementPaymentList">
        <sequence>
          <element maxOccurs="unbounded" name="settlementPayment" type="tns:SettlementPayment"/>
        </sequence>
      </complexType>
      <complexType name="SettlementRTPScheduleList">
        <sequence>
          <element maxOccurs="unbounded" name="SettlementScheduleInfo" type="tns:SettlementRTPSchedule"/>
        </sequence>
      </complexType>
      <complexType name="SettlementRTPSchedule">
        <all>
          <element name="effectiveDate" type="tns:NpnDate"/>
          <element name="paymentAmount" type="double"/>
          <element name="payeeId" nillable="true" type="long"/>
          <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
          <element minOccurs="0" name="externalCheckNumber" nillable="true" type="string"/>
          <element name="transactionMethod" type="tns:RoutablePaymentTransactionMethod"/>
        </all>
        <attribute name="scheduleId" type="long" use="optional"/>
        <attribute name="operation" type="tns:Operations" use="optional"/>
      </complexType>
      <complexType name="SettlementSchedule">
        <all>
          <element name="effectiveDate" type="tns:NpnDate"/>
          <element name="paymentAmount" type="double"/>
          <element name="payeeId" nillable="true" type="long"/>
          <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
          <element minOccurs="0" name="externalCheckNumber" nillable="true" type="string"/>
          <element name="transactionMethod" type="tns:PaymentTransactionMethod"/>
        </all>
        <attribute name="scheduleId" type="long" use="optional"/>
        <attribute name="operation" type="tns:Operations" use="optional"/>
      </complexType>
      <complexType name="SettlementPayment">
        <all>
          <element name="effectiveDate" type="tns:NpnDate"/>
          <element name="paymentAmount" type="double"/>
          <element name="payeeId" nillable="true" type="long"/>
          <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
          <element minOccurs="0" name="externalCheckNumber" nillable="true" type="string"/>
          <element name="transactionMethod" type="tns:PaymentTransactionMethod"/>
          <element minOccurs="0" name="associatedFeeList" nillable="true" type="tns:AssociatedFeeList"/>
        </all>
        <attribute name="scheduleId" type="long" use="optional"/>
        <attribute name="operation" type="tns:Operations" use="optional"/>
      </complexType>
      <complexType name="AssociatedFeeList">
        <sequence>
          <element maxOccurs="unbounded" name="associatedFee" type="tns:AssociatedFee"/>
        </sequence>
      </complexType>
      <complexType name="AssociatedFee">
        <all>
          <element name="amount" type="double"/>
          <element minOccurs="0" name="feeId" nillable="true" type="long"/>
          <element minOccurs="0" name="externalFeeId" nillable="true" type="string"/>
          <element minOccurs="0" name="effectiveDate" nillable="true" type="tns:NpnDate"/>
        </all>
        <attribute name="scheduleId" type="long" use="optional"/>
        <attribute name="operation" type="tns:Operations" use="optional"/>
      </complexType>
      <complexType name="PaymentScheduleList">
        <sequence>
          <element maxOccurs="unbounded" name="PaymentScheduleInfo" type="tns:PaymentSchedule"/>
        </sequence>
      </complexType>
      <complexType name="PaymentSchedule">
        <sequence>
          <element name="scheduledDate" type="tns:NpnDate"/>
          <element name="paymentAmount" type="double"/>
          <element name="status" nillable="true" type="string"/>
          <element name="paymentId" nillable="true" type="long"/>
          <element name="payeeId" nillable="true" type="long"/>
          <element name="agency" nillable="true" type="string"/>
          <element name="transactionMethod" type="tns:PaymentTransactionMethod"/>
        </sequence>
      </complexType>
      <complexType name="ApprovalAttempt">
        <sequence>
          <element name="attemptedDate" type="string"/>
          <element name="attemptedDateFormat" type="string"/>
          <element name="notes" nillable="true" type="string"/>
          <element name="approvalAttemptId" type="long"/>
          <element name="approvalAttemptMode" type="tns:ApprovalAttemptMode"/>
          <element name="approvalAttemptDisposition" nillable="true" type="tns:ApprovalAttemptDisposition"/>
          <element minOccurs="0" name="auditInfo" type="tns:AuditInformation"/>
        </sequence>
      </complexType>
      <complexType name="ApprovalAttemptList">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="approvalAttempts" nillable="true" type="tns:ApprovalAttempt"/>
        </sequence>
      </complexType>
      <simpleType name="ApprovalAttemptMode">
        <restriction base="string">
          <enumeration value="EMAIL"/>
          <enumeration value="PHONE"/>
        </restriction>
      </simpleType>
      <simpleType name="ApprovalAttemptDisposition">
        <restriction base="string">
          <enumeration value="NO_RESPONSE"/>
          <enumeration value="ACCEPTED"/>
          <enumeration value="REJECTED"/>
        </restriction>
      </simpleType>
      <simpleType name="ReprocessStatus">
        <restriction base="string">
          <enumeration value="REPROCESS_USING_SVA"/>
          <enumeration value="REPROCESS_USING_SUB_FEE"/>
          <enumeration value="REPROCESS_USING_CFT_FEE"/>
          <enumeration value="REPROCESS_USING_EXIST_STL"/>
          <enumeration value="REPROCESS_USING_OTHER_STL"/>
        </restriction>
      </simpleType>
      <complexType name="ScheduleDraft">
        <annotation>
          <documentation>A draft schedule</documentation>
        </annotation>
        <sequence>
          <element name="scheduleId" type="long"/>
          <element name="scheduleDate" type="tns:NpnDate"/>
          <element name="effectiveDate" type="tns:NpnDate"/>
          <element name="estimatedCompletedDate" nillable="true" type="tns:NpnDate"/>
          <element name="transactionClass" type="string"/>
          <element name="transactionMethod" type="string"/>
          <element name="sourceId" nillable="true" type="long"/>
          <element name="sourceBank" nillable="true" type="string"/>
          <element name="sourceAccount" nillable="true" type="string"/>
          <element name="status" nillable="true" type="string"/>
          <element minOccurs="0" name="statusDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="nextDraftDate" type="tns:NpnDate"/>
          <element name="type" nillable="true" type="string"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
          <element name="client" type="tns:BriefClient"/>
          <element name="amount" type="double"/>
          <element name="externalReferenceId" nillable="true" type="string"/>
          <element name="destination" nillable="true" type="long"/>
          <element name="destinationBank" nillable="true" type="string"/>
          <element name="destinationAccount" nillable="true" type="string"/>
          <element name="affiliateId" nillable="true" type="long"/>
          <element name="externalId" nillable="true" type="string"/>
          <element name="affiliateType" nillable="true" type="tns:SubscriberAffiliateType"/>
          <element minOccurs="0" name="isReferral" type="boolean"/>
          <element name="remark" nillable="true" type="string"/>
          <element name="subscriberId" nillable="true" type="long"/>
          <element name="assuranceStatus" nillable="true" type="tns:AssuranceStatus"/>
          <element name="isReprocessed" nillable="true" type="tns:ReprocessStatus"/>
          <element minOccurs="0" name="comment" type="string"/>
          <element name="enrollmentStatus" nillable="true" type="string"/>
          <element name="errorCode" nillable="true" type="string"/>
          <element name="errorDescription" nillable="true" type="string"/>
          <element minOccurs="0" name="feeId" type="long"/>
        </sequence>
      </complexType>
      <complexType name="ScheduleFee">
        <annotation>
          <documentation>A fee schedule</documentation>
        </annotation>
        <sequence>
          <element name="scheduleId" type="long"/>
          <element name="scheduleDate" type="tns:NpnDate"/>
          <element name="effectiveDate" type="tns:NpnDate"/>
          <element name="status" nillable="true" type="string"/>
          <element minOccurs="0" name="statusDate" type="tns:NpnDate"/>
          <element name="transactionClass" nillable="true" type="string"/>
          <element name="transactionMethod" nillable="true" type="string"/>
          <element name="name" nillable="true" type="string"/>
          <element name="type" nillable="true" type="string"/>
          <element name="owner" nillable="true" type="string"/>
          <element name="enrollmentFeeId" nillable="true" type="long"/>
          <element name="amount" type="double"/>
          <element name="source" nillable="true" type="string"/>
          <element name="destination" nillable="true" type="string"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
          <element minOccurs="0" name="client" type="tns:BriefClient"/>
          <element name="remark" nillable="true" type="string"/>
        </sequence>
      </complexType>
      <complexType name="SingleFeeSchedule">
        <annotation>
          <documentation>A fee schedule</documentation>
        </annotation>
        <sequence>
          <element name="scheduleId" type="long"/>
          <element name="scheduleDate" type="tns:NpnDate"/>
          <element name="effectiveDate" type="tns:NpnDate"/>
          <element name="status" nillable="true" type="string"/>
          <element name="transactionClass" nillable="true" type="string"/>
          <element name="transactionMethod" nillable="true" type="string"/>
          <element name="name" nillable="true" type="string"/>
          <element name="type" nillable="true" type="string"/>
          <element name="owner" nillable="true" type="string"/>
          <element name="enrollmentFeeId" nillable="true" type="long"/>
          <element name="amount" type="double"/>
          <element name="source" nillable="true" type="string"/>
          <element name="destination" nillable="true" type="string"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
          <element minOccurs="0" name="client" type="tns:BriefClient"/>
          <element name="recur" nillable="true" type="long"/>
          <element name="remaining" nillable="true" type="long"/>
          <element name="remark" nillable="true" type="string"/>
          <element minOccurs="0" name="comment" type="string"/>
        </sequence>
      </complexType>
      <complexType name="NpnDate">
        <all>
          <element name="date">
            <complexType>
              <attribute name="format" use="required">
                <simpleType>
                  <restriction base="string">
                    <pattern value="dd/MM/yyyy|dd-MM-yyyy|dd/MM/yy|dd-MM-yy|MM/dd/yyyy|MM-dd-yyyy|MM/dd/yy|MM-dd-yy|dd/MM/yyyy hh:mm:ss a|dd-MM-yyyy hh:mm:ss a|dd/MM/yy hh:mm:ss a|dd-MM-yy hh:mm:ss a|MM/dd/yyyy hh:mm:ss a|MM-dd-yyyy hh:mm:ss a|MM/dd/yy hh:mm:ss a|MM-dd-yy hh:mm:ss a|MM-dd-yyyy HH:mm:ss"/>
                  </restriction>
                </simpleType>
              </attribute>
              <attribute name="value" type="string" use="required"/>
            </complexType>
          </element>
        </all>
      </complexType>
      <complexType name="Transactions">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="transaction" type="tns:Transaction"/>
        </sequence>
      </complexType>
      <complexType name="Dealings">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="dealing" type="tns:Dealing"/>
        </sequence>
      </complexType>
      <complexType name="Dealing">
        <all>
          <element minOccurs="0" name="date" type="tns:NpnDate"/>
          <element name="description" type="string"/>
          <element name="deposits" type="double"/>
          <element name="withdrawals" type="double"/>
          <element name="accountBalance" type="double"/>
          <element minOccurs="0" name="pendingBalance" type="double"/>
        </all>
      </complexType>
      <complexType name="Transaction">
        <all>
          <element name="id" type="long"/>
          <element name="enrollmentId" type="long"/>
          <element name="client" type="tns:BriefClient"/>
          <element name="scheduleId" type="long"/>
          <element name="status" nillable="true" type="string"/>
          <element name="class" type="string"/>
          <element name="type" type="string"/>
          <element name="transactionDate" nillable="true" type="tns:NpnDate"/>
          <element name="processedDate" nillable="true" type="tns:NpnDate"/>
          <element name="estimatedCompletedDate" nillable="true" type="tns:NpnDate"/>
          <element name="statusDate" nillable="true" type="tns:NpnDate"/>
          <element name="scheduledDate" nillable="true" type="tns:NpnDate"/>
          <element minOccurs="0" name="updatedBy" nillable="true" type="string"/>
          <element name="fromAccount" type="string"/>
          <element name="toAccount" type="string"/>
          <element name="amount" type="double"/>
          <element name="svaBalance" type="double"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
          <element name="externalReferenceId" nillable="true" type="string"/>
          <element minOccurs="0" name="checkNumber" nillable="true" type="string"/>
          <element minOccurs="0" name="feeId" nillable="true" type="long"/>
          <element name="externalFeeId" nillable="true" type="string"/>
          <element name="feeName" nillable="true" type="string"/>
          <element name="feeType" nillable="true" type="tns:FeeType"/>
          <element name="externalExceptionCode" nillable="true" type="string"/>
          <element name="transactionProcessorExceptionCode" nillable="true" type="string"/>
          <element name="transactionProcessorExceptionName" nillable="true" type="string"/>
          <element minOccurs="0" name="enrollmentExceptions" type="tns:EnrollmentExceptions"/>
          <element name="SubscriberId" nillable="true" type="long"/>
        </all>
      </complexType>
      <complexType name="PayeeInfo">
        <sequence>
          <element minOccurs="0" name="subscriberId" type="long"/>
          <element name="payeeId" type="long"/>
          <element minOccurs="0" name="externalPayeeId" nillable="true" type="long"/>
          <element name="subscriberPayeeId" nillable="true" type="string"/>
          <element minOccurs="0" name="payeeName" type="string"/>
          <element minOccurs="0" name="payeeStatus" type="boolean"/>
          <element minOccurs="0" name="payeeDescription" type="string"/>
          <element minOccurs="0" name="payeeWebsite" type="string"/>
          <element minOccurs="0" name="faxNo" nillable="true" type="string"/>
          <element minOccurs="0" name="phoneNo" nillable="true" type="string"/>
          <element minOccurs="0" name="payeeAdresses" nillable="true">
            <complexType>
              <sequence>
                <element maxOccurs="unbounded" minOccurs="0" name="address" nillable="true" type="tns:Address"/>
              </sequence>
            </complexType>
          </element>
          <element minOccurs="0" name="payeeContacts" nillable="true">
            <complexType>
              <sequence>
                <element maxOccurs="unbounded" minOccurs="0" name="contact" nillable="true" type="tns:Contact"/>
              </sequence>
            </complexType>
          </element>
          <element minOccurs="0" name="payeeBankAccounts" nillable="true">
            <complexType>
              <sequence>
                <element maxOccurs="unbounded" minOccurs="0" name="account" nillable="true" type="tns:Account"/>
              </sequence>
            </complexType>
          </element>
          <element minOccurs="0" name="auditInfo" type="tns:AuditInformation"/>
          <element minOccurs="0" name="isCollectionAgency" type="boolean"/>
        </sequence>
      </complexType>
      <complexType name="SettlementPayeeInfo">
        <sequence>
          <element minOccurs="0" name="subscriberId" type="long"/>
          <element name="payeeId" type="long"/>
          <element name="subscriberPayeeId" nillable="true" type="string"/>
          <element minOccurs="0" name="payeeName" type="string"/>
          <element minOccurs="0" name="payeeStatus" type="boolean"/>
          <element minOccurs="0" name="payeeDescription" type="string"/>
          <element minOccurs="0" name="externalPayeeId" nillable="true" type="long"/>
          <element minOccurs="0" name="subscriberPayeeContact" type="tns:Contact"/>
          <element minOccurs="0" name="subscriberPayeeAddress" type="tns:Address"/>
          <element minOccurs="0" name="subscriberPayeeBankAccount" type="tns:Account"/>
          <element minOccurs="0" name="auditInfo" type="tns:AuditInformation"/>
        </sequence>
      </complexType>
      <complexType name="PayeeList">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="payees" nillable="true" type="tns:PayeeInfo"/>
        </sequence>
      </complexType>
      <complexType name="ExternalPayeeInfo">
        <sequence>
          <element name="externalPayeeName" type="string"/>
          <element name="externalPayeeId" type="long"/>
          <element name="address1" type="string"/>
          <element name="address2" type="string"/>
          <element name="city" type="string"/>
          <element name="state" type="string"/>
          <element name="country" type="string"/>
          <element name="zip" type="string"/>
        </sequence>
      </complexType>
      <complexType name="ExternalPayeeList">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="externalPayees" nillable="true" type="tns:ExternalPayeeInfo"/>
        </sequence>
      </complexType>
      <complexType name="Subscribers">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="subscribers" nillable="true" type="tns:Subscriber"/>
        </sequence>
      </complexType>
      <complexType name="Subscriber">
        <sequence>
          <element name="subscriberId" type="long"/>
          <element name="subscriberName" type="string"/>
          <element name="address1" type="string"/>
          <element minOccurs="0" name="address2" nillable="true" type="string"/>
          <element name="city" type="string"/>
          <element name="state" type="string"/>
          <element name="zip" type="string"/>
          <element name="contactName" type="string"/>
          <element name="phone" type="string"/>
          <element name="email" type="string"/>
          <element name="password" type="string"/>
          <element minOccurs="0" name="subscriberTheme" nillable="true" type="string"/>
        </sequence>
      </complexType>
      <complexType name="Approval">
        <sequence>
          <element name="approvalId" type="long"/>
          <element name="subscriberId" type="long"/>
          <element minOccurs="0" name="approvedDate" nillable="true" type="tns:NpnDate"/>
          <element name="approvalRequestedDate" type="tns:NpnDate"/>
          <element name="approvalStatus" nillable="true">
            <simpleType>
              <restriction base="string">
                <enumeration value="PENDING"/>
                <enumeration value="ACCEPTED"/>
                <enumeration value="REJECTED"/>
              </restriction>
            </simpleType>
          </element>
          <element name="approvalType" nillable="true">
            <simpleType>
              <restriction base="string">
                <enumeration value="DRAFT"/>
                <enumeration value="SETTLEMENT"/>
              </restriction>
            </simpleType>
          </element>
          <element name="approvalAttemptList" nillable="true" type="tns:ApprovalAttemptList"/>
          <element minOccurs="0" name="auditInfo" type="tns:AuditInformation"/>
          <element minOccurs="0" name="briefClient" type="tns:BriefClient"/>
          <element minOccurs="0" name="approvalDocument" type="tns:Document"/>
        </sequence>
      </complexType>
      <complexType name="UserList">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="user" type="tns:UserInfo"/>
        </sequence>
      </complexType>
      <complexType name="UserInfo">
        <sequence>
          <element name="userId" type="long"/>
          <element name="firstName" type="string"/>
          <element minOccurs="0" name="middleInitial" nillable="true" type="string"/>
          <element name="lastName" type="string"/>
          <element name="userName" type="string"/>
          <element name="email" type="string"/>
          <element name="phone" type="string"/>
          <element minOccurs="0" name="address1" type="string"/>
          <element minOccurs="0" name="address2" type="string"/>
          <element minOccurs="0" name="state" type="string"/>
          <element minOccurs="0" name="city" type="string"/>
          <element minOccurs="0" name="zip" type="string"/>
          <element minOccurs="0" name="comment" type="string"/>
          <element name="userType" type="tns:UserType"/>
          <element name="applicationType" type="tns:ApplicationType"/>
          <element name="status" type="boolean"/>
          <element name="lockStatus" type="boolean"/>
          <element name="ipValidationRequired" type="boolean"/>
          <element minOccurs="0" name="ipAddresses" nillable="true" type="tns:IpAddressesList"/>
          <element name="userRoles" type="tns:Roles"/>
          <element name="lastLoggin" nillable="true" type="tns:NpnDate"/>
          <element minOccurs="0" name="auditInfo" type="tns:AuditInformation"/>
          <element name="passwordReset" type="boolean"/>
        </sequence>
      </complexType>
      <complexType name="EnrollmentDocuments">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="enrollmentDocument" type="tns:Document"/>
        </sequence>
      </complexType>
      <complexType name="Document">
        <sequence>
          <element name="documentId" type="long"/>
          <element name="note" type="string"/>
          <element name="name" type="string"/>
          <element name="contentType" type="string"/>
          <element name="base64EncodedContent" nillable="true" type="string"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
        </sequence>
      </complexType>
      <complexType name="SubscriberDocuments">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="subscriberDocument" type="tns:SubscriberDocument"/>
        </sequence>
      </complexType>
      <complexType name="SubscriberDocument">
        <sequence>
          <element name="documentId" type="long"/>
          <element name="note" type="string"/>
          <element name="name" type="string"/>
          <element name="contentType" type="string"/>
          <element minOccurs="0" name="base64EncodedContent" nillable="true" type="string"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
        </sequence>
      </complexType>
      <complexType name="Roles">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="role" nillable="true" type="tns:Role"/>
        </sequence>
      </complexType>
      <complexType name="Role">
        <sequence>
          <element name="name" type="string"/>
          <element minOccurs="0" name="description" nillable="true" type="string"/>
          <element name="permissions" type="tns:Permissions"/>
        </sequence>
      </complexType>
      <complexType name="Permissions">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="permission" type="tns:Permission"/>
        </sequence>
      </complexType>
      <complexType name="Permission">
        <sequence>
          <element minOccurs="0" name="type" nillable="true" type="string"/>
          <element minOccurs="0" name="name" nillable="true" type="string"/>
          <element minOccurs="0" name="description" nillable="true" type="string"/>
        </sequence>
      </complexType>
      <complexType name="SPAAForecasts">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="forecast" type="tns:SPAAForecast"/>
        </sequence>
      </complexType>
      <complexType name="SPAAForecast">
        <sequence>
          <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
          <element name="scheduleDate" type="string"/>
          <element name="scheduleDateFormat" type="string"/>
          <element name="transactionClass" type="string"/>
          <element name="transactionMethod" type="string"/>
          <element name="clazz" nillable="true" type="string"/>
          <element name="amount" nillable="true" type="double"/>
          <element minOccurs="0" name="balance" nillable="true" type="double"/>
          <element minOccurs="0" name="startingBalance" nillable="true" type="double"/>
          <element minOccurs="0" name="source" nillable="true" type="string"/>
          <element minOccurs="0" name="destination" nillable="true" type="string"/>
          <element minOccurs="0" name="draftType" nillable="true" type="tns:DraftType"/>
          <element minOccurs="0" name="payeeName" nillable="true" type="string"/>
          <element minOccurs="0" name="feeName" nillable="true" type="string"/>
          <element minOccurs="0" name="feeType" nillable="true" type="string"/>
        </sequence>
      </complexType>
      <complexType name="SPAAForecastRequestList">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="forecast" type="tns:SPAAForecastRequest"/>
        </sequence>
      </complexType>
      <complexType name="SPAAForecastRequest">
        <all>
          <element name="scheduleDate" type="tns:NpnDate"/>
          <element name="type">
            <simpleType>
              <restriction base="string">
                <enumeration value="DRAFT"/>
                <enumeration value="FEE"/>
                <enumeration value="PAYMENT"/>
              </restriction>
            </simpleType>
          </element>
          <element name="amount" type="double"/>
          <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
          <element minOccurs="0" name="transactionMethod" nillable="true" type="tns:TransactionMethod"/>
          <element minOccurs="0" name="draftType" nillable="true" type="tns:DraftType"/>
        </all>
      </complexType>
      <complexType name="SPAABalances">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="balance" type="tns:SPAABalance"/>
        </sequence>
      </complexType>
      <complexType name="SPAABalance">
        <sequence>
          <element name="balanceDate" type="string"/>
          <element name="balanceDateFormat" type="string"/>
          <element minOccurs="0" name="balance" nillable="true" type="double"/>
        </sequence>
      </complexType>
      <complexType name="PaymentList">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="payment" nillable="true" type="tns:Payment"/>
        </sequence>
      </complexType>
      <complexType name="PaymentIdList">
        <sequence>
          <element maxOccurs="unbounded" name="paymentId" type="long"/>
        </sequence>
      </complexType>
      <complexType name="Payment">
        <sequence>
          <element name="scheduleDate" type="string"/>
          <element name="settlementId" type="long"/>
          <element minOccurs="0" name="accountInfo" nillable="true" type="string"/>
          <element name="clientId" type="string"/>
          <element name="externalClientId" nillable="true" type="string"/>
          <element name="paymentId" type="long"/>
          <element name="status" type="string"/>
          <element minOccurs="0" name="statusDate" type="tns:NpnDate"/>
          <element name="clientFirstName" type="string"/>
          <element name="clientLastName" type="string"/>
          <element minOccurs="0" name="payee" nillable="true" type="string"/>
          <element name="checkNumber" type="string"/>
          <element minOccurs="0" name="amount" nillable="true" type="double"/>
          <element name="dateFormat" type="string"/>
          <element name="transactionClass" nillable="true" type="string"/>
          <element name="transactionMethod" nillable="true" type="string"/>
          <element name="warning">
            <complexType>
              <attribute name="hasWarning" type="boolean"/>
              <attribute name="message" type="string"/>
            </complexType>
          </element>
          <element name="scheduleId" type="long"/>
          <element name="effectiveDate" type="tns:NpnDate"/>
          <element name="dueDate" type="tns:NpnDate"/>
          <element name="accountNo" type="string"/>
          <element name="externalReferenceId" nillable="true" type="string"/>
          <element minOccurs="0" name="transactionFeeAmount" nillable="true" type="double"/>
          <element name="subscriberPayee" type="tns:PayeeInfo"/>
          <element name="assuranceStatus" nillable="true" type="tns:AssuranceStatus"/>
          <element name="isReprocessed" nillable="true" type="tns:ReprocessStatus"/>
          <element name="trackingNumber" nillable="true" type="string"/>
          <element name="modifiedOn" nillable="true" type="string"/>
          <element name="modifiedBy" nillable="true" type="string"/>
          <element name="createdOn" type="tns:NpnDate"/>
          <element name="createdBy" type="string"/>
          <element name="enrollmentStatus" nillable="true" type="string"/>
        </sequence>
      </complexType>
      <complexType name="PositivePayDetails">
        <sequence>
          <element name="subscriberId" type="long"/>
          <element name="positivePayId" type="long"/>
          <element name="creditorPhoneNumber" type="string"/>
          <element name="creditorName" type="string"/>
          <element name="contactName" type="string"/>
          <element name="settlementReference" nillable="true" type="string"/>
          <element name="paymentDueDate" type="string"/>
          <element name="clientFirstName" type="string"/>
          <element name="clientLastName" type="string"/>
          <element name="clientAccountNumber" type="string"/>
          <element name="clientAddressLine1" type="string"/>
          <element name="clientAddressLine2" nillable="true" type="string"/>
          <element name="clientCity" type="string"/>
          <element name="clientState" type="string"/>
          <element name="clientZip" type="string"/>
          <element name="amount" type="double"/>
          <element minOccurs="0" name="checkNumber" nillable="true" type="string"/>
          <element name="dateFormat" type="string"/>
        </sequence>
      </complexType>
      <complexType name="UpdatePaymentList">
        <sequence>
          <element maxOccurs="unbounded" name="updatePayment" type="tns:UpdatePayment"/>
        </sequence>
      </complexType>
      <complexType name="UpdatePayment">
        <all>
          <element name="subscriberId" type="long"/>
          <element name="clientId" type="string"/>
          <element name="paymentId" type="long"/>
          <element name="payeeId" type="long"/>
          <element name="accountNumber" nillable="true" type="string"/>
          <element name="transactionMethod" type="string"/>
          <element name="amount" type="double"/>
          <element name="dueDate" type="tns:NpnDate"/>
          <element name="comment" nillable="true" type="string"/>
          <element minOccurs="0" name="accountNature" nillable="true" type="tns:AccountNature"/>
          <element minOccurs="0" name="authorizationFormat" nillable="true" type="tns:AuthorizationFormat"/>
        </all>
      </complexType>
      <complexType name="DraftError">
        <sequence>
          <element name="transactionDate" type="string"/>
          <element name="transactionId" type="long"/>
          <element name="scheduleId" type="long"/>
          <element name="clientId" type="string"/>
          <element name="clientFirstName" type="string"/>
          <element name="clientLastName" type="string"/>
          <element name="code" type="string"/>
          <element name="reason" type="string"/>
          <element name="status" type="string"/>
          <element name="dateFormat" type="string"/>
        </sequence>
      </complexType>
      <complexType name="EnrollmentException">
        <sequence>
          <element name="transactionDate" type="string"/>
          <element name="transactionId" type="long"/>
          <element name="scheduleId" type="long"/>
          <element name="transactionStatus" type="string"/>
          <element name="transactionClass" type="string"/>
          <element name="clientId" type="string"/>
          <element name="clientFirstName" type="string"/>
          <element name="clientLastName" type="string"/>
          <element name="shortDetail" type="string"/>
          <element name="amount" type="double"/>
          <element name="nsfAmount" type="double"/>
          <element name="code" type="string"/>
          <element name="reason" type="string"/>
        </sequence>
      </complexType>
      <complexType name="RolePermissionList">
        <sequence>
          <element maxOccurs="unbounded" name="rolePermission" type="string"/>
        </sequence>
      </complexType>
      <complexType name="IpAddressesList">
        <sequence>
          <element maxOccurs="unbounded" name="IpAddress" type="string"/>
        </sequence>
      </complexType>
      <complexType name="Partner">
        <sequence>
          <element minOccurs="0" name="partnerId" nillable="true" type="long"/>
          <element minOccurs="0" name="partnerName" nillable="true" type="string"/>
          <element minOccurs="0" name="partnerAddress1" nillable="true" type="string"/>
          <element minOccurs="0" name="partnerAddress2" nillable="true" type="string"/>
          <element minOccurs="0" name="partnerCity" nillable="true" type="string"/>
          <element minOccurs="0" name="partnerState" nillable="true" type="string"/>
          <element minOccurs="0" name="partnerZipcode" nillable="true" type="string"/>
          <element minOccurs="0" name="partnerPhone" nillable="true" type="string"/>
          <element minOccurs="0" name="partnerEmail" nillable="true" type="string"/>
          <element minOccurs="0" name="userName" nillable="true" type="string"/>
          <element minOccurs="0" name="status" nillable="true" type="tns:PartnerStatus"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
        </sequence>
      </complexType>
      <simpleType name="PartnerStatus">
        <restriction base="string">
          <enumeration value="ACTIVE"/>
          <enumeration value="INACTIVE"/>
        </restriction>
      </simpleType>
      <simpleType name="paymentMethod">
        <restriction base="string">
          <enumeration value="ALL"/>
          <enumeration value="BILL_PAY"/>
          <enumeration value="CHECK_BY_PHONE"/>
          <enumeration value="PHYSICAL_CHECK_BUSINESS"/>
          <enumeration value="PHYSICAL_CHECK_2DAY"/>
          <enumeration value="PHYSICAL_CHECK_OVERNIGHT"/>
          <enumeration value="WIRE_TRANSFER"/>
        </restriction>
      </simpleType>
      <simpleType name="AssuranceStatus">
        <restriction base="string">
          <enumeration value="IGNORED"/>
          <enumeration value="ASSURED"/>
        </restriction>
      </simpleType>
      <complexType name="ScheduleStatuses">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="status" nillable="true" type="tns:ScheduleStatus"/>
        </sequence>
      </complexType>
      <simpleType name="ScheduleStatus">
        <restriction base="string">
          <enumeration value="SCHEDULED"/>
          <enumeration value="SUBMITTED"/>
          <enumeration value="COMPLETED"/>
          <enumeration value="INPROCESS"/>
          <enumeration value="FAILED"/>
          <enumeration value="SUSPENDED"/>
          <enumeration value="CLEARED"/>
          <enumeration value="DELETED"/>
          <enumeration value="PENDING"/>
        </restriction>
      </simpleType>
      <simpleType name="TransactionStatus">
        <restriction base="string">
          <enumeration value="NEW"/>
          <enumeration value="IN_PROCESS"/>
          <enumeration value="SUBMITTED"/>
          <enumeration value="COMPLETED"/>
          <enumeration value="FAILED"/>
          <enumeration value="DELETED"/>
          <enumeration value="CLEARED"/>
        </restriction>
      </simpleType>
      <simpleType name="RuleSetStatus">
        <restriction base="string">
          <enumeration value="INACTIVE"/>
          <enumeration value="ACTIVE"/>
        </restriction>
      </simpleType>
      <simpleType name="TransactionMethod">
        <restriction base="string">
          <enumeration value="INTERNAL"/>
          <enumeration value="CFT_STL_CLN_SVA"/>
          <enumeration value="CLN_SVA_SUB_STL"/>
          <enumeration value="SERVICE"/>
          <enumeration value="TRANSACTION"/>
          <enumeration value="DRAFT"/>
          <enumeration value="DRAFT_BY_CHECK"/>
          <enumeration value="BILL_PAYMENT"/>
          <enumeration value="CHECK_2_DAY"/>
          <enumeration value="CHECK_STD"/>
          <enumeration value="CHECK_OVERNIGHT"/>
          <enumeration value="CHECK_PLUS"/>
          <enumeration value="WIRE"/>
          <enumeration value="PHONE"/>
          <enumeration value="ADVANCE"/>
          <enumeration value="ADJUST"/>
          <enumeration value="LOAD"/>
          <enumeration value="CLN_SVA_CFT_STL"/>
          <enumeration value="SUB_FEE_CFT_STL"/>
          <enumeration value="REFUND"/>
          <enumeration value="R-Service CFT"/>
          <enumeration value="R-Service Subscriber"/>
          <enumeration value="R-Transaction"/>
          <enumeration value="R-Recover"/>
          <enumeration value="W-ACH"/>
          <enumeration value="W-CHECK-S"/>
          <enumeration value="W-CHECK-2"/>
          <enumeration value="W-CHECK-O"/>
          <enumeration value="W-WIRE"/>
          <enumeration value="SUB_FEE-CLN_SVA"/>
          <enumeration value="L_ACH"/>
        </restriction>
      </simpleType>
      <simpleType name="PaymentTransactionMethod">
        <restriction base="string">
          <enumeration value="BILL_PAYMENT"/>
          <enumeration value="CHECK_2_DAY"/>
          <enumeration value="CHECK_STD"/>
          <enumeration value="CHECK_OVERNIGHT"/>
          <enumeration value="CHECK_PLUS"/>
          <enumeration value="WIRE"/>
          <enumeration value="PHONE"/>
          <enumeration value="P_ACH"/>
          <enumeration value="SUB_FEE_SUB_PHONE_STL"/>
          <enumeration value="SUB_PHONE_STL-CLN_SVA"/>
          <enumeration value="PAYPAL"/>
          <enumeration value="REFUND"/>
          <enumeration value="ACH_DIRECT"/>
        </restriction>
      </simpleType>
      <simpleType name="RoutablePaymentTransactionMethod">
        <restriction base="string">
          <enumeration value="ROUTABLE_PAYMENT"/>
        </restriction>
      </simpleType>
      <simpleType name="RTPTransactionMethod">
        <restriction base="string">
          <enumeration value="BILL_PAYMENT"/>
          <enumeration value="CHECK_2_DAY"/>
          <enumeration value="CHECK_STD"/>
          <enumeration value="CHECK_OVERNIGHT"/>
          <enumeration value="CHECK_PLUS"/>
          <enumeration value="WIRE"/>
          <enumeration value="PHONE"/>
          <enumeration value="P_ACH"/>
          <enumeration value="SUB_FEE_SUB_PHONE_STL"/>
          <enumeration value="SUB_PHONE_STL-CLN_SVA"/>
          <enumeration value="PAYPAL"/>
          <enumeration value="REFUND"/>
          <enumeration value="ROUTABLE_PAYMENT"/>
          <enumeration value="ACH_DIRECT"/>
        </restriction>
      </simpleType>
      <simpleType name="InstantPaymentTransactionMethod">
        <restriction base="string">
          <enumeration value="PAYPAL"/>
        </restriction>
      </simpleType>
      <simpleType name="NotificationReactivationMethod">
        <restriction base="string">
          <enumeration value="SMS"/>
          <enumeration value="EMAIL"/>
        </restriction>
      </simpleType>
      <simpleType name="PositivePayScheduleStatus">
        <restriction base="string">
          <enumeration value="ALL"/>
          <enumeration value="CLEARED"/>
          <enumeration value="NOT_CLEARED"/>
        </restriction>
      </simpleType>
      <simpleType name="SettlementStatus">
        <restriction base="string">
          <enumeration value="ACTIVE"/>
          <enumeration value="INACTIVE"/>
          <enumeration value="COMPLETED"/>
          <enumeration value="DELETED"/>
          <enumeration value="SUSPENDED"/>
        </restriction>
      </simpleType>
      <simpleType name="DraftType">
        <restriction base="string">
          <enumeration value="MONTHLY"/>
          <enumeration value="BIWEEKLY"/>
          <enumeration value="ADHOC"/>
        </restriction>
      </simpleType>
      <complexType name="PaymentOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:PaymentOrderBy"/>
        </sequence>
      </complexType>
      <complexType name="PaymentOrderBy">
        <all>
          <element name="order">
            <complexType>
              <attribute name="value">
                <simpleType>
                  <restriction base="string">
                    <enumeration value="EFFECTIVE_DATE"/>
                    <enumeration value="SCHEDULE_DATE"/>
                    <enumeration value="SETTLEMENT_ID"/>
                    <enumeration value="PAYMENT_ID"/>
                    <enumeration value="STATUS"/>
                    <enumeration value="PAYMENT_AMOUNT"/>
                    <enumeration value="MODIFIED_ON"/>
                  </restriction>
                </simpleType>
              </attribute>
              <attribute default="true" name="isAscending" type="boolean"/>
            </complexType>
          </element>
        </all>
      </complexType>
      <complexType name="SettlementOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:SettlementOrderBy"/>
        </sequence>
      </complexType>
      <complexType name="SettlementOrderBy">
        <all>
          <element name="order">
            <complexType>
              <attribute name="value">
                <simpleType>
                  <restriction base="string">
                    <enumeration value="CREATED_DATE"/>
                    <enumeration value="SETTLEMENT_ID"/>
                    <enumeration value="CLIENT_FIRST_NAME"/>
                    <enumeration value="CLIENT_LAST_NAME"/>
                    <enumeration value="SUBSCRIBER_ID"/>
                    <enumeration value="CLIENT_ID"/>
                    <enumeration value="AGENCY"/>
                    <enumeration value="BALANCE_AMOUNT"/>
                    <enumeration value="SETTLEMENT_AMOUNT"/>
                    <enumeration value="NUMBER_OF_PAYMENTS"/>
                    <enumeration value="STATUS"/>
                  </restriction>
                </simpleType>
              </attribute>
              <attribute default="true" name="isAscending" type="boolean"/>
            </complexType>
          </element>
        </all>
      </complexType>
      <complexType name="UserOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:UserOrderBy"/>
        </sequence>
      </complexType>
      <simpleType name="UserOrderBy">
        <restriction base="string">
          <enumeration value="LASTNAME"/>
          <enumeration value="FIRSTNAME"/>
          <enumeration value="STATUS"/>
          <enumeration value="USERNAME"/>
          <enumeration value="CREATEDON"/>
          <enumeration value="MODIFIEDON"/>
          <enumeration value="ID"/>
        </restriction>
      </simpleType>
      <complexType name="SubscriberPayeeOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:SubscriberPayeeOrderBy"/>
        </sequence>
      </complexType>
      <simpleType name="SubscriberPayeeOrderBy">
        <restriction base="string">
          <enumeration value="NAME"/>
          <enumeration value="DESCRIPTION"/>
          <enumeration value="STATUS"/>
          <enumeration value="ID"/>
          <enumeration value="SUBSCRIBERPAYEEID"/>
          <enumeration value="CREATEDON"/>
          <enumeration value="MODIFIEDON"/>
          <enumeration value="CREATEDBY"/>
          <enumeration value="MODIFIEDBY"/>
        </restriction>
      </simpleType>
      <complexType name="TopLevelFees">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="fee" type="tns:TopLevelFee"/>
        </sequence>
      </complexType>
      <complexType name="TopLevelFee">
        <all>
          <element minOccurs="0" name="id" nillable="true" type="long"/>
          <element name="type" type="string"/>
          <element name="owner" type="string"/>
          <element name="code" type="string"/>
          <element name="name" type="string"/>
          <element name="defPriority" type="int"/>
          <element name="defAmount" type="double"/>
          <element name="defFrequency" nillable="true" type="string"/>
        </all>
      </complexType>
      <complexType name="SubscriberFees">
        <sequence>
          <element maxOccurs="unbounded" name="fee" type="tns:SubscriberFee"/>
        </sequence>
      </complexType>
      <complexType name="CreateSubscriberFees">
        <sequence>
          <element maxOccurs="unbounded" name="fee" type="tns:CreateSubscriberFee"/>
        </sequence>
      </complexType>
      <complexType name="CreateSubscriberFee">
        <all>
          <element name="feeId" type="long"/>
          <element minOccurs="0" name="externalFeeId" nillable="true" type="string"/>
          <element name="type" type="tns:FeeType"/>
          <element name="name" type="string"/>
          <element name="description" type="string"/>
          <element name="required" type="boolean"/>
          <element name="priority" type="long"/>
          <element name="amount" type="double"/>
        </all>
      </complexType>
      <complexType name="SubscriberFee">
        <all>
          <element minOccurs="0" name="id" nillable="true" type="long"/>
          <element name="feeId" type="long"/>
          <element name="externalfeeId" nillable="true" type="string"/>
          <element name="type" type="tns:FeeType"/>
          <element name="owner" type="tns:OwnerType"/>
          <element name="name" type="string"/>
          <element name="source" nillable="true" type="string"/>
          <element name="destination" nillable="true" type="string"/>
          <element name="description" type="string"/>
          <element name="required" type="boolean"/>
          <element name="priority" type="long"/>
          <element name="amount" type="double"/>
          <element minOccurs="0" name="status" nillable="true" type="tns:SubscriberFeeStatus"/>
        </all>
      </complexType>
      <complexType name="SubscriberFeeRequest">
        <all>
          <element minOccurs="0" name="id" nillable="true" type="long"/>
          <element name="feeId" type="long"/>
          <element minOccurs="0" name="externalFeeId" nillable="true" type="string"/>
          <element name="type" type="tns:FeeType"/>
          <element name="name" type="string"/>
          <element name="description" type="string"/>
          <element name="required" type="boolean"/>
          <element name="priority" type="long"/>
          <element name="amount" type="double"/>
        </all>
      </complexType>
      <complexType name="EnrollmentFees">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="fee" type="tns:EnrollmentFee"/>
        </sequence>
      </complexType>
      <complexType name="EnrollmentFee">
        <all>
          <element name="id" nillable="true" type="long"/>
          <element name="subscriberFeeId" type="long"/>
          <element name="type" type="tns:FeeType"/>
          <element name="priority" type="long"/>
          <element name="amount" type="double"/>
          <element name="frequency" type="tns:FeeFrequencyType"/>
          <element minOccurs="0" name="auditInfo" type="tns:AuditInformation"/>
        </all>
      </complexType>
      <complexType name="GetEnrollmentFees">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="fee" type="tns:GetEnrollmentFee"/>
        </sequence>
      </complexType>
      <complexType name="GetEnrollmentFee">
        <all>
          <element name="id" nillable="true" type="long"/>
          <element name="subscriberFeeId" type="long"/>
          <element name="type" type="tns:FeeType"/>
          <element name="name" type="string"/>
          <element name="source" nillable="true" type="string"/>
          <element name="destination" nillable="true" type="string"/>
          <element name="priority" type="long"/>
          <element name="amount" type="double"/>
          <element name="frequency" type="tns:FeeFrequencyType"/>
          <element minOccurs="0" name="auditInfo" type="tns:AuditInformation"/>
        </all>
      </complexType>
      <simpleType name="FeeFrequencyType">
        <restriction base="string">
          <enumeration value="ONCE"/>
          <enumeration value="WEEKLY"/>
          <enumeration value="MONTHLY"/>
          <enumeration value="QUARTERLY"/>
          <enumeration value="YEARLY"/>
          <enumeration value="CYCLE"/>
          <enumeration value="ADHOC"/>
          <enumeration value="BIWEEKLY"/>
        </restriction>
      </simpleType>
      <simpleType name="FeeType">
        <restriction base="string">
          <enumeration value="SERVICE"/>
          <enumeration value="TRANSACTION"/>
        </restriction>
      </simpleType>
      <simpleType name="OwnerType">
        <restriction base="string">
          <enumeration value="SUB"/>
          <enumeration value="CFT"/>
          <enumeration value="AFF"/>
        </restriction>
      </simpleType>
      <simpleType name="SubscriberStatus">
        <restriction base="string">
          <enumeration value="ALL"/>
          <enumeration value="ACTIVE"/>
          <enumeration value="INACTIVE"/>
          <enumeration value="SUSPENDED"/>
        </restriction>
      </simpleType>
      <simpleType name="RecurringTypes">
        <restriction base="string">
          <enumeration value="MONTHLY"/>
          <enumeration value="BI WEEKLY"/>
          <enumeration value="SPLIT DRAFT"/>
        </restriction>
      </simpleType>
      <complexType name="SubscriberOrder">
        <sequence>
          <element minOccurs="0" name="orderBy" type="tns:SubscriberOrderBy"/>
        </sequence>
      </complexType>
      <complexType name="SubscriberOrderBy">
        <all>
          <element name="order">
            <complexType>
              <attribute name="value">
                <simpleType>
                  <restriction base="string">
                    <enumeration value="NAME"/>
                    <enumeration value="SUBSCRIBER_ID"/>
                    <enumeration value="PRIMARY_CONTACT"/>
                  </restriction>
                </simpleType>
              </attribute>
              <attribute default="true" name="isAscending" type="boolean"/>
            </complexType>
          </element>
        </all>
      </complexType>
      <complexType name="SubscriberList">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="subscriberListInfo" nillable="true" type="tns:SubscriberListInfo"/>
        </sequence>
      </complexType>
      <complexType name="SubscriberListInfo">
        <sequence>
          <element name="subscriberId" type="long"/>
          <element name="name" type="string"/>
          <element name="address1" type="string"/>
          <element minOccurs="0" name="address2" nillable="true" type="string"/>
          <element name="city" type="string"/>
          <element name="state" type="string"/>
          <element name="zip" type="string"/>
          <element name="contactName" type="string"/>
          <element name="phone" type="string"/>
          <element name="email" type="string"/>
          <element name="subscriberAbbreviation" type="string"/>
          <element name="primaryContact" nillable="true" type="string"/>
          <element name="totalEnrollments" type="long"/>
          <element name="pendingSPAAs" type="long"/>
          <element name="pendingSettlements" type="long"/>
          <element name="status" nillable="true" type="string"/>
        </sequence>
      </complexType>
      <simpleType name="UserType">
        <restriction base="string">
          <enumeration value="INTERNAL"/>
          <enumeration value="EXTERNAL"/>
          <enumeration value="CLIENT"/>
          <enumeration value="AFFILIATE"/>
          <enumeration value="AGENCY"/>
          <enumeration value="DEALER"/>
          <enumeration value="FI"/>
          <enumeration value="SUB_AGENT"/>
        </restriction>
      </simpleType>
      <simpleType name="ApplicationType">
        <restriction base="string">
          <enumeration value="NPN"/>
          <enumeration value="PARTNER"/>
        </restriction>
      </simpleType>
      <simpleType name="ApprovalStatus">
        <restriction base="string">
          <enumeration value="PENDING"/>
          <enumeration value="ACCEPTED"/>
          <enumeration value="REJECTED"/>
        </restriction>
      </simpleType>
      <complexType name="PositivePayInquiryList">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="PositivePayInquiryInfo" nillable="true" type="tns:PositivePayInquiry"/>
        </sequence>
      </complexType>
      <complexType name="PositivePayInquiry">
        <sequence>
          <element name="positivePayInquiryId" type="long"/>
          <element name="subscriberId" type="long"/>
          <element name="paymentAmount" nillable="true" type="double"/>
          <element name="checkNumber" nillable="true" type="string"/>
          <element name="issueDate" type="tns:NpnDate"/>
          <element name="payee" type="string"/>
          <element name="clientFirstName" type="string"/>
          <element name="clientLastName" nillable="true" type="string"/>
          <element name="clientId" nillable="true" type="string"/>
          <element name="presentedAs" nillable="true" type="string"/>
          <element name="exceptionType" nillable="true" type="string"/>
          <element name="description" nillable="true" type="string"/>
          <element name="status" nillable="true" type="string"/>
        </sequence>
      </complexType>
      <complexType name="PositivePayExceptionsOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:PositivePayExceptionOrderBy"/>
        </sequence>
      </complexType>
      <simpleType name="PositivePayExceptionOrderBy">
        <restriction base="string">
          <enumeration value="datePresented"/>
          <enumeration value="checkNumber"/>
          <enumeration value="clientName"/>
          <enumeration value="clientId"/>
          <enumeration value="agency"/>
          <enumeration value="paymentAmount"/>
        </restriction>
      </simpleType>
      <simpleType name="AccountType">
        <restriction base="string">
          <enumeration value="CHECKING"/>
          <enumeration value="SAVING"/>
        </restriction>
      </simpleType>
      <complexType name="NpnBankAccountList">
        <sequence>
          <element maxOccurs="unbounded" name="npnBankAccount" type="tns:npnBankAccount"/>
        </sequence>
      </complexType>
      <complexType name="npnBankAccount">
        <sequence>
          <element name="bankInfo" type="tns:BankInfo"/>
          <element name="npnBankAccountId" type="long"/>
        </sequence>
      </complexType>
      <complexType name="SubscriberBankAccountList">
        <sequence>
          <element maxOccurs="unbounded" name="subscriberBankAccount" type="tns:SubscriberBankAccount"/>
        </sequence>
      </complexType>
      <complexType name="SubscriberBankAccount">
        <sequence>
          <element name="bankInfo" type="tns:BankInfo"/>
          <element name="subscriberBankAccountId" type="long"/>
          <element name="thresholdAmount" type="double"/>
          <element name="subscriberAccountTypes" nillable="true" type="tns:SubscriberAccountTypeList"/>
        </sequence>
      </complexType>
      <complexType name="PaymentDetails">
        <sequence>
          <element name="subscriberId" type="long"/>
          <element name="scheduleId" type="long"/>
          <element name="scheduleStatus" type="string"/>
          <element name="scheduleDate" type="tns:NpnDate"/>
          <element name="statusDate" type="tns:NpnDate"/>
          <element name="scheduledAmount" type="double"/>
          <element name="clientId" type="string"/>
          <element name="clientFirstName" type="string"/>
          <element name="clientLastName" nillable="true" type="string"/>
          <element name="clientAddress1" nillable="true" type="string"/>
          <element name="clientAddress2" nillable="true" type="string"/>
          <element name="clientState" nillable="true" type="string"/>
          <element name="clientCity" nillable="true" type="string"/>
          <element name="clientZipCode" nillable="true" type="string"/>
          <element name="settlementId" nillable="true" type="long"/>
          <element name="settlementReference" nillable="true" type="string"/>
          <element name="accountInfo" nillable="true" type="string"/>
          <element name="payeeId" nillable="true" type="long"/>
          <element name="payeeName" nillable="true" type="string"/>
          <element name="payeeContactName" nillable="true" type="string"/>
          <element name="payeePhoneNumber" nillable="true" type="string"/>
          <element name="checkNumber" nillable="true" type="string"/>
        </sequence>
      </complexType>
      <complexType name="InternalUserList">
        <sequence>
          <element maxOccurs="unbounded" name="internalUserId" type="long"/>
        </sequence>
      </complexType>
      <complexType name="TransactionMethodsList">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="transactionMethod" nillable="true" type="string"/>
        </sequence>
      </complexType>
      <simpleType name="TransactionClass">
        <restriction base="string">
          <enumeration value="DRAFT"/>
          <enumeration value="FEE"/>
          <enumeration value="PAYMENT"/>
          <enumeration value="MISC"/>
          <enumeration value="COMM"/>
          <enumeration value="TRANSFER"/>
          <enumeration value="WITHDRAWAL"/>
          <enumeration value="COMM_PAYOUT"/>
          <enumeration value="PRENOTE"/>
          <enumeration value="R_COMM"/>
          <enumeration value="R_COMM_PAYOUT"/>
          <enumeration value="R_FEE"/>
          <enumeration value="REFUND"/>
        </restriction>
      </simpleType>
      <complexType name="TransactionClassList">
        <sequence>
          <element maxOccurs="unbounded" name="transactionClass" type="tns:TransactionClass"/>
        </sequence>
      </complexType>
      <simpleType name="TransactionProcessorDirection">
        <restriction base="string">
          <enumeration value="IN_BOUND"/>
          <enumeration value="OUT_BOUND"/>
        </restriction>
      </simpleType>
      <element name="serviceFault">
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" name="error">
              <complexType>
                <sequence>
                  <element name="errorCode" type="string"/>
                  <element name="errorDescription" type="string"/>
                </sequence>
              </complexType>
            </element>
          </sequence>
        </complexType>
      </element>
      <complexType name="CreateSubscriberAccount">
        <sequence>
          <element name="bankInfo" type="tns:SubscriberAccountBankDetails"/>
        </sequence>
      </complexType>
      <complexType name="SubscriberAccount">
        <sequence>
          <element name="subscriberAccountId" type="long"/>
          <element name="bankInfo" type="tns:SubscriberAccountBankDetails"/>
        </sequence>
      </complexType>
      <complexType name="SubscriberAccountBankDetails">
        <all>
          <element name="bankName" type="string"/>
          <element name="accountNumber" type="string"/>
          <element name="routingNumber" type="string"/>
          <element name="subscriberAccountType" type="tns:SubscriberAccountType"/>
        </all>
      </complexType>
      <simpleType name="SubscriberAccountType">
        <restriction base="string">
          <enumeration value="SUB_DRAFT_STL"/>
          <enumeration value="SUB_FEE"/>
          <enumeration value="SUB_CHK_STL"/>
          <enumeration value="SUB_BP_STL"/>
          <enumeration value="SUB_PHONE_STL"/>
          <enumeration value="SUB_WIRE_STL"/>
          <enumeration value="FUNDING"/>
          <enumeration value="CFT_FEE_AND_REVENUE"/>
          <enumeration value="SUB_BUSINESS"/>
          <enumeration value="SUB_LOAN_ACT"/>
          <enumeration value="SUB_PAYPAL_STL"/>
          <enumeration value="SUB_LOAN_ACT1"/>
        </restriction>
      </simpleType>
      <complexType name="SubscriberAccountTypeList">
        <sequence>
          <element maxOccurs="unbounded" name="subscriberAccountType" type="tns:SubscriberAccountType"/>
        </sequence>
      </complexType>
      <complexType name="SubscriberAccountIdList">
        <sequence>
          <element maxOccurs="unbounded" name="subscriberAccountId" type="long"/>
        </sequence>
      </complexType>
      <complexType name="TransactionProcessorList">
        <sequence>
          <element maxOccurs="unbounded" name="transactionProcessor" type="tns:TransactionProcessor"/>
        </sequence>
      </complexType>
      <complexType name="TransactionProcessor">
        <sequence>
          <element name="transactionProcessorId" type="long"/>
          <element name="transactionProcessorName" type="string"/>
          <element name="transactionProcessorType" type="string"/>
          <element minOccurs="0" name="transactionProcessorDirection" nillable="true" type="string"/>
        </sequence>
      </complexType>
      <complexType name="SubscriberProcessorSetupList">
        <sequence>
          <element maxOccurs="unbounded" name="subscriberProcessorSetup" type="tns:SubscriberProcessorSetup"/>
        </sequence>
      </complexType>
      <complexType name="SubscriberProcessorSetup">
        <sequence>
          <element name="subscriberProcessorSetupId" type="long"/>
          <element name="transactionProcessor" type="tns:TransactionProcessor"/>
        </sequence>
      </complexType>
      <complexType name="TransactionProcessorListForCreateProcessorSetup">
        <sequence>
          <element maxOccurs="unbounded" name="transactionProcessor" type="tns:TransactionProcessorForCreateProcessorSetup"/>
        </sequence>
      </complexType>
      <complexType name="TransactionProcessorForCreateProcessorSetup">
        <all>
          <element name="transactionProcessorId" type="long"/>
          <element name="transactionProcessorType" type="string"/>
        </all>
      </complexType>
      <complexType name="SubscriberProcessorSetupIds">
        <sequence>
          <element maxOccurs="unbounded" name="subscriberProcessorSetupId" type="long"/>
        </sequence>
      </complexType>
      <complexType name="Affiliate">
        <all>
          <element name="subscriberId" type="long"/>
          <element minOccurs="0" name="affiliateId" type="long"/>
          <element minOccurs="0" name="externalAffiliateId" nillable="true" type="string"/>
          <element minOccurs="0" name="parentAffiliateId" nillable="true" type="long"/>
          <element minOccurs="0" name="parentExternalAffiliateId" nillable="true" type="string"/>
          <element minOccurs="0" name="externalId" nillable="true" type="string"/>
          <element name="affiliateType" type="tns:SubscriberAffiliateType"/>
          <element name="name" type="string"/>
          <element name="address1" type="string"/>
          <element minOccurs="0" name="address2" nillable="true" type="string"/>
          <element name="city" type="string"/>
          <element name="state" type="string"/>
          <element name="zipcode" type="string"/>
          <element name="email" type="string"/>
          <element name="phone" type="string"/>
          <element minOccurs="0" name="fax" nillable="true" type="string"/>
          <element name="businessType" type="tns:BusinessType"/>
          <element minOccurs="0" name="taxId" type="string"/>
          <element default="ACH" minOccurs="0" name="payoutMethod" type="tns:PayoutMethod"/>
          <element default="MONTHLY" minOccurs="0" name="payoutFrequency" type="tns:PayoutFrequency"/>
          <element default="15" minOccurs="0" name="payoutFrequencyValue" type="string"/>
          <element minOccurs="0" name="bankName" nillable="true" type="string"/>
          <element minOccurs="0" name="routingNunber" nillable="true" type="string"/>
          <element minOccurs="0" name="accountType" nillable="true" type="tns:AccountType"/>
          <element minOccurs="0" name="accountNumber" nillable="true" type="string"/>
          <element minOccurs="0" name="holdersName" nillable="true" type="string"/>
          <element minOccurs="0" name="bankAddress1" nillable="true" type="string"/>
          <element minOccurs="0" name="bankAddress2" nillable="true" type="string"/>
          <element minOccurs="0" name="bankCity" nillable="true" type="string"/>
          <element minOccurs="0" name="bankState" nillable="true" type="string"/>
          <element minOccurs="0" name="bankZipcode" nillable="true" type="string"/>
          <element minOccurs="0" name="signatureDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="status" type="tns:AffiliateStatus"/>
          <element minOccurs="0" name="collectedBalance" type="double"/>
          <element minOccurs="0" name="pendingBalance" type="double"/>
          <element minOccurs="0" name="isPaidAsAdvance" type="boolean"/>
          <element minOccurs="0" name="checkAddress" type="tns:AddressInfo"/>
          <element minOccurs="0" name="isReferral" type="boolean"/>
          <element minOccurs="0" name="referralStartDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="referralEndDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="fixed" type="tns:FixedDistTypeUnbounded"/>
          <element minOccurs="0" name="payoutRule" type="string"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
        </all>
      </complexType>
      <complexType name="AffiliateGroup">
        <all>
          <element name="Id" type="long"/>
          <element minOccurs="0" name="name" nillable="true" type="string"/>
          <element minOccurs="0" name="externalRulesetId" nillable="true" type="string"/>
        </all>
      </complexType>
      <complexType name="AffiliateUpdate">
        <all>
          <element minOccurs="0" name="externalAffiliateId" type="string"/>
          <element minOccurs="0" name="parentAffiliateId" type="long"/>
          <element minOccurs="0" name="affiliateType" type="tns:SubscriberAffiliateType"/>
          <element minOccurs="0" name="name" type="string"/>
          <element minOccurs="0" name="address1" type="string"/>
          <element minOccurs="0" name="address2" type="string"/>
          <element minOccurs="0" name="city" type="string"/>
          <element minOccurs="0" name="state" type="string"/>
          <element minOccurs="0" name="zipcode" type="string"/>
          <element minOccurs="0" name="email" type="string"/>
          <element minOccurs="0" name="phone" type="string"/>
          <element minOccurs="0" name="fax" type="string"/>
          <element minOccurs="0" name="businessType" type="tns:BusinessType"/>
          <element minOccurs="0" name="taxId" type="string"/>
          <element minOccurs="0" name="payoutMethod" type="tns:PayoutMethod"/>
          <element minOccurs="0" name="payoutFrequency" type="tns:PayoutFrequency"/>
          <element minOccurs="0" name="payoutFrequencyValue" type="string"/>
          <element minOccurs="0" name="routingNunber" type="string"/>
          <element minOccurs="0" name="accountType" type="tns:AccountType"/>
          <element minOccurs="0" name="accountNumber" type="string"/>
          <element minOccurs="0" name="holdersName" type="string"/>
          <element minOccurs="0" name="checkAddress" type="tns:AddressInfo"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
        </all>
      </complexType>
      <complexType name="AffiliateAdmin">
        <all>
          <element name="subscriberId" type="long"/>
          <element minOccurs="0" name="externalAffiliateId" nillable="true" type="string"/>
          <element minOccurs="0" name="parentAffiliateId" nillable="true" type="long"/>
          <element minOccurs="0" name="parentExternalAffiliateId" nillable="true" type="string"/>
          <element name="affiliateType" type="tns:SubscriberAffiliateType"/>
          <element name="name" type="string"/>
          <element name="address1" type="string"/>
          <element minOccurs="0" name="address2" type="string"/>
          <element name="city" type="string"/>
          <element name="state" type="string"/>
          <element name="zipcode" type="string"/>
          <element name="email" type="string"/>
          <element name="phone" type="string"/>
          <element minOccurs="0" name="fax" type="string"/>
          <element name="businessType" type="tns:BusinessType"/>
          <element minOccurs="0" name="taxId" type="string"/>
          <element minOccurs="0" name="bankName" type="string"/>
          <element minOccurs="0" name="routingNunber" type="string"/>
          <element minOccurs="0" name="accountType" type="tns:AccountType"/>
          <element minOccurs="0" name="accountNumber" type="string"/>
          <element minOccurs="0" name="holdersName" type="string"/>
          <element minOccurs="0" name="bankAddress1" type="string"/>
          <element minOccurs="0" name="bankAddress2" type="string"/>
          <element minOccurs="0" name="bankCity" type="string"/>
          <element minOccurs="0" name="bankState" type="string"/>
          <element minOccurs="0" name="bankZipcode" type="string"/>
          <element default="ACH" name="payoutMethod" type="tns:PayoutMethod"/>
          <element default="MONTHLY" name="payoutFrequency" type="tns:PayoutFrequency"/>
          <element default="15" name="payoutFrequencyValue" type="string"/>
          <element default="100" name="payoutThreshold" type="double"/>
          <element minOccurs="0" name="level" type="int"/>
          <element minOccurs="0" name="classification" type="string"/>
          <element name="isReferral" type="boolean"/>
          <element minOccurs="0" name="referralStartDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="referralEndDate" type="tns:NpnDate"/>
          <element name="commStartDate" type="tns:NpnDate"/>
          <element name="commEndDate" type="tns:NpnDate"/>
          <element name="isAdvanceComm" type="boolean"/>
          <element minOccurs="0" name="advanceCommPercentage" type="double"/>
          <element minOccurs="0" name="advanceCommStartDate" type="tns:NpnDate"/>
          <element name="enableRedirect" type="boolean"/>
          <element minOccurs="0" name="redirectToType" type="tns:CommissionDistributionOwnerType"/>
          <element minOccurs="0" name="redirectStartDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="redirectEndDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="redirectTo" type="long"/>
          <element name="comments" type="string"/>
          <element name="signatureDate" type="tns:NpnDate"/>
          <element name="status" type="tns:AffiliateStatus"/>
          <element minOccurs="0" name="checkAddress" type="tns:AddressInfo"/>
          <element minOccurs="0" name="fixed" type="tns:FixedDistTypeUnbounded"/>
          <element minOccurs="0" name="payoutRule" type="string"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
          <element minOccurs="0" name="isGuaranteed" type="boolean"/>
          <element minOccurs="0" name="isFlexyDrafts" type="boolean"/>
        </all>
      </complexType>
      <complexType name="AffiliateAdminUpdate">
        <all>
          <element minOccurs="0" name="externalAffiliateId" type="string"/>
          <element minOccurs="0" name="parentAffiliateId" type="long"/>
          <element minOccurs="0" name="affiliateType" type="tns:SubscriberAffiliateType"/>
          <element minOccurs="0" name="name" type="string"/>
          <element minOccurs="0" name="address1" type="string"/>
          <element minOccurs="0" name="address2" type="string"/>
          <element minOccurs="0" name="city" type="string"/>
          <element minOccurs="0" name="state" type="string"/>
          <element minOccurs="0" name="zipcode" type="string"/>
          <element minOccurs="0" name="email" type="string"/>
          <element minOccurs="0" name="phone" type="string"/>
          <element minOccurs="0" name="fax" type="string"/>
          <element minOccurs="0" name="businessType" type="tns:BusinessType"/>
          <element minOccurs="0" name="taxId" type="string"/>
          <element minOccurs="0" name="routingNunber" type="string"/>
          <element minOccurs="0" name="accountType" type="tns:AccountType"/>
          <element minOccurs="0" name="accountNumber" type="string"/>
          <element minOccurs="0" name="holdersName" type="string"/>
          <element minOccurs="0" name="payoutMethod" type="tns:PayoutMethod"/>
          <element minOccurs="0" name="payoutFrequency" type="tns:PayoutFrequency"/>
          <element minOccurs="0" name="payoutFrequencyValue" type="string"/>
          <element minOccurs="0" name="payoutThreshold" type="double"/>
          <element minOccurs="0" name="level" type="int"/>
          <element minOccurs="0" name="classification" type="string"/>
          <element minOccurs="0" name="isReferral" type="boolean"/>
          <element minOccurs="0" name="referralStartDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="referralEndDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="commStartDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="commEndDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="isAdvanceComm" type="boolean"/>
          <element minOccurs="0" name="advanceCommPercentage" type="double"/>
          <element minOccurs="0" name="advanceCommStartDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="enableRedirect" type="boolean"/>
          <element minOccurs="0" name="redirectToType" type="tns:CommissionDistributionOwnerType"/>
          <element minOccurs="0" name="redirectStartDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="redirectEndDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="redirectTo" type="long"/>
          <element minOccurs="0" name="comments" type="string"/>
          <element minOccurs="0" name="signatureDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="status" type="tns:AffiliateStatus"/>
          <element minOccurs="0" name="checkAddress" type="tns:AddressInfo"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
          <element minOccurs="0" name="isGuaranteed" type="boolean"/>
          <element minOccurs="0" name="isFlexyDrafts" type="boolean"/>
        </all>
      </complexType>
      <simpleType name="BusinessType">
        <restriction base="string">
          <enumeration value="INDIVIDUAL"/>
          <enumeration value="COMPANY"/>
        </restriction>
      </simpleType>
      <simpleType name="SubscriberAffiliateType">
        <restriction base="string">
          <enumeration value="AFF"/>
          <enumeration value="AGN"/>
          <enumeration value="SAG"/>
          <enumeration value="DLR"/>
          <enumeration value="FIM"/>
          <enumeration value="NPN"/>
          <enumeration value="BRK"/>
          <enumeration value="LOA"/>
        </restriction>
      </simpleType>
      <simpleType name="AffiliateStatus">
        <restriction base="string">
          <enumeration value="ACTIVE"/>
          <enumeration value="INACTIVE"/>
          <enumeration value="PENDING"/>
        </restriction>
      </simpleType>
      <simpleType name="CommissionDistributionOwnerType">
        <restriction base="string">
          <enumeration value="SUBSCRIBER"/>
          <enumeration value="AFFILIATE"/>
        </restriction>
      </simpleType>
      <simpleType name="PayoutMethod">
        <restriction base="string">
          <enumeration value="ACH"/>
          <enumeration value="CHECK"/>
        </restriction>
      </simpleType>
      <simpleType name="PayoutFrequency">
        <restriction base="string">
          <enumeration value="DAILY"/>
          <enumeration value="WEEKLY"/>
          <enumeration value="MONTHLY"/>
        </restriction>
      </simpleType>
      <complexType name="AffiliateConfigOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:AffiliateConfigOrderBy"/>
        </sequence>
      </complexType>
      <complexType name="AffiliateListOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:AffiliateListOrderBy"/>
        </sequence>
      </complexType>
      <complexType name="AffiliateConfigOrderBy">
        <all>
          <element name="order">
            <complexType>
              <attribute name="value">
                <simpleType>
                  <restriction base="string">
                    <enumeration value="ID"/>
                    <enumeration value="NAME"/>
                  </restriction>
                </simpleType>
              </attribute>
              <attribute default="true" name="isAscending" type="boolean"/>
            </complexType>
          </element>
        </all>
      </complexType>
      <complexType name="AffiliateListOrderBy">
        <all>
          <element name="order">
            <complexType>
              <attribute name="value">
                <simpleType>
                  <restriction base="string">
                    <enumeration value="ID"/>
                    <enumeration value="NAME"/>
                  </restriction>
                </simpleType>
              </attribute>
              <attribute default="true" name="isAscending" type="boolean"/>
            </complexType>
          </element>
        </all>
      </complexType>
      <complexType name="AffiliateUserOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:AffiliateUserOrderBy"/>
        </sequence>
      </complexType>
      <complexType name="AffiliateUserOrderBy">
        <all>
          <element name="order">
            <complexType>
              <attribute name="value">
                <simpleType>
                  <restriction base="string">
                    <enumeration value="LASTNAME"/>
                    <enumeration value="FIRSTNAME"/>
                    <enumeration value="STATUS"/>
                    <enumeration value="USERNAME"/>
                    <enumeration value="CREATEDON"/>
                    <enumeration value="MODIFIEDON"/>
                    <enumeration value="ID"/>
                  </restriction>
                </simpleType>
              </attribute>
              <attribute default="true" name="isAscending" type="boolean"/>
            </complexType>
          </element>
        </all>
      </complexType>
      <complexType name="AffiliateDocumentListOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:AffiliateDocumentListOrderBy"/>
        </sequence>
      </complexType>
      <complexType name="AffiliateDocumentListOrderBy">
        <all>
          <element name="order">
            <complexType>
              <attribute name="value">
                <simpleType>
                  <restriction base="string">
                    <enumeration value="ID"/>
                    <enumeration value="NAME"/>
                  </restriction>
                </simpleType>
              </attribute>
              <attribute default="true" name="isAscending" type="boolean"/>
            </complexType>
          </element>
        </all>
      </complexType>
      <complexType name="AffiliateStatusList">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="status" type="tns:AffiliateStatus"/>
        </sequence>
      </complexType>
      <complexType name="EnrollmentAffiliateListOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:EnrollmentAffiliateListOrderBy"/>
        </sequence>
      </complexType>
      <complexType name="EnrollmentAffiliateListOrderBy">
        <all>
          <element name="order">
            <complexType>
              <attribute name="value">
                <simpleType>
                  <restriction base="string">
                    <enumeration value="ID"/>
                  </restriction>
                </simpleType>
              </attribute>
              <attribute default="true" name="isAscending" type="boolean"/>
            </complexType>
          </element>
        </all>
      </complexType>
      <complexType name="FixedDistType">
        <sequence>
          <element maxOccurs="2" minOccurs="2" name="cycle">
            <complexType>
              <all>
                <element name="distType" type="tns:FixedDistBasisTypes"/>
                <element name="cycleId" type="long"/>
                <element name="value" type="double"/>
              </all>
            </complexType>
          </element>
        </sequence>
      </complexType>
      <complexType name="FixedDistTypeUnbounded">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="cycle">
            <complexType>
              <all>
                <element name="distType" nillable="true" type="tns:FixedDistBasisTypes"/>
                <element name="cycleId" nillable="true" type="long"/>
                <element name="value" nillable="true" type="double"/>
              </all>
            </complexType>
          </element>
        </sequence>
      </complexType>
      <complexType name="RuleSetInfo">
        <sequence>
          <element minOccurs="0" name="commissionSet" type="tns:CommissionSet"/>
          <element minOccurs="0" name="auditInfo" type="tns:AuditInformation"/>
        </sequence>
      </complexType>
      <complexType name="CommissionSets">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="commissionSet" type="tns:CommissionSet"/>
        </sequence>
      </complexType>
      <complexType name="RuleSet">
        <sequence>
          <element name="ruleSetId" type="long"/>
          <element name="externalRuleSetId" type="string"/>
          <element name="name" type="string"/>
          <element name="status" type="string"/>
          <element name="modifiedOn" type="tns:NpnDate"/>
          <element name="modifiedBy" type="string"/>
          <element name="createdOn" type="tns:NpnDate"/>
          <element name="createdBy" type="string"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
        </sequence>
      </complexType>
      <complexType name="EnrollmentError">
        <sequence>
          <element name="enrollmentErrorId" type="long"/>
          <element name="enrollmentErrorCode" type="string"/>
          <element name="reason" type="string"/>
          <element name="status" type="string"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
          <element minOccurs="0" name="client" type="tns:BriefClient"/>
        </sequence>
      </complexType>
      <complexType name="CommissionSet">
        <sequence>
          <element name="number" type="long"/>
          <element name="amount" type="double"/>
          <element name="basis" type="tns:BasisTypes"/>
          <element minOccurs="0" name="distributionRule" nillable="true" type="tns:DistributionRules"/>
          <element minOccurs="0" name="occuranceType" nillable="true" type="tns:OccurranceType"/>
          <element minOccurs="0" name="occuranceRange" nillable="true" type="tns:OccurranceRange"/>
        </sequence>
        <attribute name="affiliateId" type="long" use="optional"/>
        <attribute name="externalAffiliateId" use="optional"/>
        <attribute name="feeId" type="long" use="optional"/>
        <attribute name="externalFeeId" use="optional"/>
      </complexType>
      <simpleType name="BasisTypes">
        <restriction base="string">
          <enumeration value="FIXED"/>
          <enumeration value="PERCENTAGE"/>
          <enumeration value="PAYOUT_RULE"/>
        </restriction>
      </simpleType>
      <simpleType name="DistributionRules">
        <restriction base="string">
          <enumeration value="ALWAYS"/>
          <enumeration value="ONLY_WHEN_SUFFICIENT_FEE_EXIST"/>
        </restriction>
      </simpleType>
      <complexType name="OccurranceRange">
        <all>
          <element name="startValue" type="long"/>
          <element name="endValue" type="long"/>
        </all>
      </complexType>
      <simpleType name="OccurranceType">
        <restriction base="string">
          <enumeration value="ALL"/>
          <enumeration value="DISCRETE"/>
          <enumeration value="RANGE"/>
        </restriction>
      </simpleType>
      <simpleType name="FixedDistBasisTypes">
        <restriction base="string">
          <enumeration value="FIXED"/>
          <enumeration value="PERCENTAGE"/>
        </restriction>
      </simpleType>
      <simpleType name="RequiredFlag">
        <restriction base="string">
          <enumeration value="YES"/>
          <enumeration value="NO"/>
        </restriction>
      </simpleType>
      <complexType name="Error">
        <sequence>
          <element minOccurs="0" name="errorCode" nillable="true" type="string"/>
          <element minOccurs="0" name="errorDescription" nillable="true" type="string"/>
        </sequence>
      </complexType>
      <simpleType name="Channel">
        <restriction base="string">
          <enumeration value="AUTO"/>
          <enumeration value="MORTGAGE"/>
          <enumeration value="DEBT"/>
        </restriction>
      </simpleType>
      <complexType name="EnrollmentChannelAttributeValue">
        <sequence>
          <element name="code" type="string"/>
          <element name="name" type="string"/>
          <element name="isRequired" type="boolean"/>
          <element name="numericValue" nillable="true" type="long"/>
          <element name="alphaValue" nillable="true" type="string"/>
          <element name="dateValue" nillable="true" type="tns:NpnDate"/>
        </sequence>
      </complexType>
      <complexType name="EnrollmentChannelAttributeValueOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:EnrollmentChannelAttributeValueOrderBy"/>
        </sequence>
      </complexType>
      <complexType name="EnrollmentChannelAttributeValueOrderBy">
        <all>
          <element name="order">
            <complexType>
              <attribute name="value">
                <simpleType>
                  <restriction base="string">
                    <enumeration value="ID"/>
                  </restriction>
                </simpleType>
              </attribute>
              <attribute default="true" name="isAscending" type="boolean"/>
            </complexType>
          </element>
        </all>
      </complexType>
      <complexType name="EnrollmentTicket">
        <sequence>
          <element name="enrollmentTicketId" type="long"/>
          <element name="enrollmentId" type="long"/>
          <element name="clientId" nillable="true" type="long"/>
          <element minOccurs="0" name="referenceTicketId" nillable="true" type="long"/>
          <element minOccurs="0" name="transactionId" nillable="true" type="long"/>
          <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
          <element name="ticketType" type="string"/>
          <element name="ticketStatus" type="tns:EnrollmentTicketStatus"/>
          <element name="subject" type="string"/>
          <element name="assigneeId" type="long"/>
          <element name="assigneeName" type="string"/>
          <element minOccurs="0" name="reviewDate" type="tns:NpnDate"/>
          <element name="assosiatedAmount" type="double"/>
          <element name="reason" type="string"/>
          <element name="message" type="string"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
          <element maxOccurs="unbounded" minOccurs="0" name="enrollmentComments" type="tns:EnrollComment"/>
        </sequence>
      </complexType>
      <complexType name="EnrollmentTickets">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="enrollmentTicket" type="tns:EnrollmentTicket"/>
        </sequence>
      </complexType>
      <simpleType name="EnrollmentTicketStatus">
        <restriction base="string">
          <enumeration value="NEW"/>
          <enumeration value="IN_PROCESS"/>
          <enumeration value="RESOLVED"/>
        </restriction>
      </simpleType>
      <complexType name="AffiliateDocument">
        <all>
          <element minOccurs="0" name="documentId" type="long"/>
          <element name="note" type="string"/>
          <element name="name" type="string"/>
          <element name="contentType" type="string"/>
          <element name="base64EncodedContent" nillable="true" type="string"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
        </all>
      </complexType>
      <complexType name="AddressInfo">
        <all>
          <element minOccurs="0" name="address1" type="string"/>
          <element minOccurs="0" name="address2" type="string"/>
          <element minOccurs="0" name="city" type="string"/>
          <element minOccurs="0" name="state" type="string"/>
          <element minOccurs="0" name="zip" type="string"/>
        </all>
      </complexType>
      <complexType name="ClientContactInfo">
        <all>
          <element name="firstName" type="string"/>
          <element name="lastName" type="string"/>
          <element name="address" type="tns:AddressInfo"/>
          <element minOccurs="0" name="ssn" type="string"/>
          <element minOccurs="0" name="birthDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="phone" type="string"/>
          <element minOccurs="0" name="email" type="string"/>
        </all>
      </complexType>
      <complexType name="ClientPaymentInfo">
        <all>
          <element minOccurs="0" name="loanNumber" type="string"/>
          <element name="draftAmount" type="double"/>
          <element minOccurs="0" name="term" type="string"/>
          <element minOccurs="0" name="vin" type="string"/>
          <element minOccurs="0" name="year" type="string"/>
          <element minOccurs="0" name="make" type="string"/>
          <element minOccurs="0" name="model" type="string"/>
          <element minOccurs="0" name="brand" type="string"/>
        </all>
      </complexType>
      <complexType name="LenderInfo">
        <all>
          <element minOccurs="0" name="payeeId" type="long"/>
          <element minOccurs="0" name="addressId" type="long"/>
          <element minOccurs="0" name="name" type="string"/>
          <element minOccurs="0" name="phone" type="string"/>
          <element minOccurs="0" name="address" type="tns:AddressInfo"/>
          <element minOccurs="0" name="routingNumber" type="string"/>
        </all>
      </complexType>
      <complexType name="DebitAuthorization">
        <all>
          <element minOccurs="0" name="phone" type="string"/>
          <element minOccurs="0" name="accountName" type="string"/>
          <element minOccurs="0" name="accountType" type="tns:AccountType"/>
          <element minOccurs="0" name="accountNumber" type="string"/>
          <element minOccurs="0" name="routingNumber" type="string"/>
          <element minOccurs="0" name="firstDebitDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="firstDebitAmount" type="double"/>
          <element minOccurs="0" name="firstBiweeklyDebitDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="firstBiweeklyDebitAmount" type="double"/>
          <element minOccurs="0" name="firstLoanDueDate" type="tns:NpnDate"/>
        </all>
      </complexType>
      <complexType name="Acknowledgment">
        <all>
          <element minOccurs="0" name="signaturePresent" type="boolean"/>
          <element minOccurs="0" name="signatureDate" type="tns:NpnDate"/>
        </all>
      </complexType>
      <complexType name="PartialEnrollmentInfo">
        <sequence>
          <element minOccurs="0" name="partialEnrollmentId" type="long"/>
          <element minOccurs="0" name="affiliatesInfo" type="tns:PartialEnrollmentAffiliateInfoList"/>
          <element minOccurs="0" name="partnerId" type="long"/>
          <element minOccurs="0" name="partner" type="tns:Partner"/>
          <element minOccurs="0" name="affiliates" type="tns:PartialEnrollmentAffiliatesList"/>
          <element minOccurs="0" name="status" type="tns:PartialEnrollmentStatus"/>
          <element minOccurs="0" name="firstName" type="string"/>
          <element minOccurs="0" name="lastName" type="string"/>
          <element minOccurs="0" name="address1" type="string"/>
          <element minOccurs="0" name="address2" type="string"/>
          <element minOccurs="0" name="city" type="string"/>
          <element minOccurs="0" name="state" type="string"/>
          <element minOccurs="0" name="zipcode" type="string"/>
          <element minOccurs="0" name="emailAddress" type="string"/>
          <element minOccurs="0" name="phoneNumber1" type="string"/>
          <element minOccurs="0" name="phoneNumber2" type="string"/>
          <element minOccurs="0" name="flex_1" type="string"/>
          <element minOccurs="0" name="flex_2" type="string"/>
          <element minOccurs="0" name="flex_3" type="string"/>
          <element minOccurs="0" name="flex_4" type="string"/>
          <element minOccurs="0" name="flex_5" type="string"/>
          <element minOccurs="0" name="flex_6" type="string"/>
          <element minOccurs="0" name="flex_7" type="string"/>
          <element minOccurs="0" name="flex_8" type="string"/>
          <element minOccurs="0" name="flex_9" type="string"/>
          <element minOccurs="0" name="flex_10" type="string"/>
          <element minOccurs="0" name="flex_11" type="string"/>
          <element minOccurs="0" name="flex_12" type="string"/>
          <element minOccurs="0" name="flex_13" type="string"/>
          <element minOccurs="0" name="flex_14" type="string"/>
          <element minOccurs="0" name="flex_15" type="string"/>
          <element minOccurs="0" name="flex_16" type="string"/>
          <element minOccurs="0" name="flex_17" type="string"/>
          <element minOccurs="0" name="flex_18" type="string"/>
          <element minOccurs="0" name="flex_19" type="string"/>
          <element minOccurs="0" name="flex_20" type="string"/>
          <element minOccurs="0" name="flex_21" type="string"/>
          <element minOccurs="0" name="flex_22" type="string"/>
          <element minOccurs="0" name="flex_23" type="string"/>
          <element minOccurs="0" name="flex_24" type="string"/>
          <element minOccurs="0" name="flex_25" type="string"/>
          <element minOccurs="0" name="flex_26" type="string"/>
          <element minOccurs="0" name="flex_27" type="string"/>
          <element minOccurs="0" name="flex_28" type="string"/>
          <element minOccurs="0" name="flex_29" type="string"/>
          <element minOccurs="0" name="flex_30" type="string"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
        </sequence>
      </complexType>
      <complexType name="PartialEnrollmentAffiliateInfoList">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="partialEnrollmentAffiliateInfo" type="tns:PartialEnrollmentAffiliateInfo"/>
        </sequence>
      </complexType>
      <complexType name="PartialEnrollmentAffiliateInfo">
        <sequence>
          <element name="affiliateId" nillable="true" type="long"/>
          <element name="affiliateType" nillable="true" type="tns:SubscriberAffiliateType"/>
        </sequence>
      </complexType>
      <complexType name="PartialEnrollmentAffiliatesList">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="partialEnrollmentAffiliates" type="tns:Affiliate"/>
        </sequence>
      </complexType>
      <complexType name="PartialEnrollmentListOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:PartialEnrollmentListOrderBy"/>
        </sequence>
      </complexType>
      <complexType name="PartialEnrollmentListOrderBy">
        <all>
          <element name="order">
            <complexType>
              <attribute name="value">
                <simpleType>
                  <restriction base="string">
                    <enumeration value="ID"/>
                    <enumeration value="FIRST_NAME"/>
                    <enumeration value="LAST_NAME"/>
                  </restriction>
                </simpleType>
              </attribute>
              <attribute default="true" name="isAscending" type="boolean"/>
            </complexType>
          </element>
        </all>
      </complexType>
      <simpleType name="PartialEnrollmentStatus">
        <restriction base="string">
          <enumeration value="PARTIAL"/>
          <enumeration value="COMPLETED"/>
          <enumeration value="DELETED"/>
        </restriction>
      </simpleType>
      <complexType name="PaymentMonitor">
        <sequence>
          <element name="clientId" type="string"/>
          <element name="lastName" type="string"/>
          <element name="middleInitial" type="string"/>
          <element name="firstName" type="string"/>
          <element name="loanAccountNumber" type="string"/>
          <element name="dealerId" type="string"/>
          <element name="clearedFunds" type="double"/>
          <element name="pendingFunds" type="double"/>
          <element name="previousDraftDate" nillable="true" type="tns:NpnDate"/>
          <element name="previousDraftAmount" nillable="true" type="double"/>
          <element name="nextDraftDate" nillable="true" type="tns:NpnDate"/>
          <element name="nextDraftAmount" nillable="true" type="double"/>
          <element name="paymentDate" type="tns:NpnDate"/>
          <element name="paymentAmount" type="double"/>
          <element name="payeeName" type="string"/>
        </sequence>
      </complexType>
      <complexType name="PaymentMonitorListOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:PaymentMonitorListOrderBy"/>
        </sequence>
      </complexType>
      <complexType name="BankAccount">
        <sequence>
          <element name="accountType">
            <simpleType>
              <restriction base="string">
                <enumeration value="CLN_SVA"/>
                <enumeration value="CLIENT_DDA"/>
                <enumeration value="SUB_PHONE_STL"/>
                <enumeration value="SUB_CHK_STL"/>
                <enumeration value="SUB_WIRE_STL"/>
                <enumeration value="SUB_DRAFT_STL"/>
                <enumeration value="SUB_BP_STL"/>
                <enumeration value="SUB_FEE"/>
                <enumeration value="CFT_FEE"/>
              </restriction>
            </simpleType>
          </element>
          <element minOccurs="0" name="accountId" nillable="true" type="long"/>
        </sequence>
      </complexType>
      <complexType name="ScheduleSummary">
        <annotation>
          <documentation>Summary schedule</documentation>
        </annotation>
        <sequence>
          <element name="groupKey" type="int"/>
          <element name="noOfOccurences" type="int"/>
          <element name="remainingOccurances" type="int"/>
          <element name="completeOccurances" type="int"/>
          <element name="scheduleId" type="long"/>
          <element name="clientId" type="long"/>
          <element name="transactionClass" nillable="true" type="string"/>
          <element name="transactionMethod" nillable="true" type="string"/>
          <element name="scheduleAmount" nillable="true" type="double"/>
          <element name="externalRefenceId" nillable="true" type="string"/>
          <element name="nextOccuranceDate" nillable="true" type="tns:NpnDate"/>
          <element name="nextTransactionFeeDate" nillable="true" type="tns:NpnDate"/>
          <element name="nextTransactionFeeAmount" nillable="true" type="double"/>
          <element name="scheduleStatus" nillable="true" type="string"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
        </sequence>
      </complexType>
      <complexType name="PaymentMonitorListOrderBy">
        <all>
          <element name="order">
            <complexType>
              <attribute name="value">
                <simpleType>
                  <restriction base="string">
                    <enumeration value="ID"/>
                    <enumeration value="FIRST_NAME"/>
                    <enumeration value="LAST_NAME"/>
                    <enumeration value="PAYEE"/>
                  </restriction>
                </simpleType>
              </attribute>
              <attribute default="true" name="isAscending" type="boolean"/>
            </complexType>
          </element>
        </all>
      </complexType>
      <complexType name="Address">
        <all>
          <element minOccurs="0" name="id" nillable="true" type="long"/>
          <element minOccurs="0" name="externalId" nillable="true" type="string"/>
          <element minOccurs="0" name="address1" nillable="true" type="string"/>
          <element minOccurs="0" name="address2" nillable="true" type="string"/>
          <element minOccurs="0" name="city" nillable="true" type="string"/>
          <element minOccurs="0" name="state" nillable="true" type="string"/>
          <element minOccurs="0" name="zip" nillable="true" type="string"/>
        </all>
        <attribute name="operation" type="tns:Operations" use="optional"/>
      </complexType>
      <complexType name="Contact">
        <all>
          <element minOccurs="0" name="id" nillable="true" type="long"/>
          <element minOccurs="0" name="externalId" nillable="true" type="string"/>
          <element minOccurs="0" name="department" nillable="true" type="string"/>
          <element name="name" type="string"/>
          <element minOccurs="0" name="title" nillable="true" type="string"/>
          <element minOccurs="0" name="homePhone" nillable="true">
            <complexType>
              <simpleContent>
                <extension base="string">
                  <attribute name="ext"/>
                </extension>
              </simpleContent>
            </complexType>
          </element>
          <element minOccurs="0" name="businessPhone" nillable="true">
            <complexType>
              <simpleContent>
                <extension base="string">
                  <attribute name="ext"/>
                </extension>
              </simpleContent>
            </complexType>
          </element>
          <element minOccurs="0" name="mobilePhone" nillable="true" type="string"/>
          <element minOccurs="0" name="fax" nillable="true" type="string"/>
          <element minOccurs="0" name="email" nillable="true" type="string"/>
        </all>
        <attribute name="operation" type="tns:Operations" use="optional"/>
      </complexType>
      <complexType name="Account">
        <all>
          <element minOccurs="0" name="id" nillable="true" type="long"/>
          <element minOccurs="0" name="externalId" nillable="true" type="string"/>
          <element minOccurs="0" name="bankName" nillable="true" type="string"/>
          <element name="routingNumber" type="string"/>
          <element minOccurs="0" name="accountHolderName" nillable="true" type="string"/>
          <element minOccurs="0" name="accountNumber" nillable="true" type="string"/>
          <element minOccurs="0" name="accountType" nillable="true" type="tns:AccountType"/>
          <element minOccurs="0" name="status" nillable="true" type="string"/>
          <element minOccurs="0" name="accountLabel" nillable="true" type="string"/>
        </all>
        <attribute name="operation" type="tns:Operations" use="optional"/>
      </complexType>
      <simpleType name="Operations">
        <restriction base="string">
          <enumeration value="EDIT"/>
          <enumeration value="DELETE"/>
          <enumeration value="CREATE"/>
        </restriction>
      </simpleType>
      <complexType name="FeeScheduleList">
        <sequence>
          <element maxOccurs="unbounded" name="schedule" type="tns:FeeSchedule"/>
        </sequence>
      </complexType>
      <complexType name="FeeSchedule">
        <all>
          <element name="scheduleDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
          <element minOccurs="0" name="comment" nillable="true" type="string"/>
          <element minOccurs="0" name="feeId" nillable="true" type="long"/>
          <element minOccurs="0" name="externalFeeId" nillable="true" type="string"/>
          <element name="amount" type="double"/>
          <element minOccurs="0" name="remark" nillable="true" type="string"/>
        </all>
      </complexType>
      <complexType name="DraftItemScheduleList">
        <sequence>
          <element maxOccurs="unbounded" name="draftItemSchedule" type="tns:DraftItemSchedule"/>
        </sequence>
      </complexType>
      <complexType name="DraftItemSchedule">
        <all>
          <element minOccurs="0" name="scheduleId" nillable="true" type="long"/>
          <element minOccurs="0" name="clientId" nillable="true" type="long"/>
          <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
          <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
          <element minOccurs="0" name="clientBankAccountId" nillable="true" type="long"/>
          <element name="status" type="tns:ScheduleStatus"/>
          <element name="amount" type="double"/>
          <element minOccurs="0" name="scheduleDate" nillable="true" type="tns:NpnDate"/>
          <element default="false" minOccurs="0" name="updateRemainingSchedules" nillable="true" type="boolean"/>
          <element default="false" minOccurs="0" name="allowDuplicates" nillable="true" type="boolean"/>
          <element minOccurs="0" name="comment" nillable="true" type="string"/>
          <element minOccurs="0" name="remark" nillable="true" type="string"/>
          <element minOccurs="0" name="accountNature" nillable="true" type="tns:AccountNature"/>
          <element minOccurs="0" name="authorizationFormat" nillable="true" type="tns:AuthorizationFormat"/>
        </all>
      </complexType>
      <complexType name="ScheduleList">
        <sequence>
          <element maxOccurs="unbounded" name="schedule" type="tns:Schedule"/>
        </sequence>
      </complexType>
      <complexType name="Schedule">
        <all>
          <element name="scheduleDate" type="tns:NpnDate"/>
          <element name="amount" type="double"/>
          <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
          <element minOccurs="0" name="clientBankAccountId" nillable="true" type="long"/>
          <element minOccurs="0" name="comment" nillable="true" type="string"/>
          <element minOccurs="0" name="remark" nillable="true" type="string"/>
          <element default="false" minOccurs="0" name="allowDuplicates" nillable="true" type="boolean"/>
          <element minOccurs="0" name="accountNature" nillable="true" type="tns:AccountNature"/>
          <element minOccurs="0" name="authorizationFormat" nillable="true" type="tns:AuthorizationFormat"/>
        </all>
      </complexType>
      <complexType name="DepositList">
        <sequence>
          <element maxOccurs="unbounded" name="deposit" type="tns:Deposit"/>
        </sequence>
      </complexType>
      <complexType name="Deposit">
        <all>
          <element name="scheduleDate" type="tns:NpnDate"/>
          <element name="amount" type="double"/>
          <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
          <element minOccurs="0" name="comment" nillable="true" type="string"/>
          <element minOccurs="0" name="remark" nillable="true" type="string"/>
          <element default="false" minOccurs="0" name="allowDuplicates" nillable="true" type="boolean"/>
        </all>
      </complexType>
      <complexType name="ReferralId">
        <all>
          <element name="id" type="string"/>
        </all>
        <attribute default="RULESET" name="type">
          <simpleType>
            <restriction base="string">
              <enumeration value="RULESET"/>
            </restriction>
          </simpleType>
        </attribute>
        <attribute default="YES" name="internal">
          <simpleType>
            <restriction base="string">
              <enumeration value="YES"/>
              <enumeration value="NO"/>
            </restriction>
          </simpleType>
        </attribute>
      </complexType>
      <complexType name="ClientIds">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="clientId" nillable="true" type="string"/>
        </sequence>
      </complexType>
      <simpleType name="positiveNumber">
        <restriction base="int">
          <pattern value="[0-9]*"/>
        </restriction>
      </simpleType>
      <complexType name="ClientBankAccountList">
        <sequence>
          <element maxOccurs="unbounded" name="clientBankAccount" type="tns:clientBankAccount"/>
        </sequence>
      </complexType>
      <complexType name="clientBankAccount">
        <sequence>
          <element name="bankInfo" type="tns:BankInfo"/>
          <element name="clientBankAccountId" type="long"/>
          <element name="clientId" nillable="true" type="long"/>
          <element name="externalBankId" nillable="true" type="string"/>
        </sequence>
      </complexType>
      <complexType name="PostedTransactionList">
        <sequence>
          <element maxOccurs="unbounded" name="postedTransaction" type="tns:PostedTransaction"/>
        </sequence>
      </complexType>
      <complexType name="Id">
        <all>
          <element name="internalId" type="long"/>
          <element name="externalReferenceId" nillable="true" type="string"/>
        </all>
      </complexType>
      <complexType name="AddressesIds">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="addressId" nillable="true" type="tns:Id"/>
        </sequence>
      </complexType>
      <complexType name="ContactsIds">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="contactId" nillable="true" type="tns:Id"/>
        </sequence>
      </complexType>
      <complexType name="BankAccountIds">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="bankAccountId" nillable="true" type="tns:Id"/>
        </sequence>
      </complexType>
      <complexType name="ScheduleReturn">
        <annotation>
          <documentation>A Return schedule</documentation>
        </annotation>
        <sequence>
          <element name="scheduleId" type="long"/>
          <element name="scheduleDate" type="tns:NpnDate"/>
          <element name="effectiveDate" type="tns:NpnDate"/>
          <element name="transactionClass" type="string"/>
          <element name="transactionMethod" type="string"/>
          <element name="sourceId" nillable="true" type="long"/>
          <element name="sourceBank" nillable="true" type="string"/>
          <element name="sourceAccount" nillable="true" type="string"/>
          <element name="status" nillable="true" type="string"/>
          <element name="parentId" nillable="true" type="long"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
          <element name="client" type="tns:BriefClient"/>
          <element name="amount" type="double"/>
          <element name="externalReferenceId" nillable="true" type="string"/>
          <element name="destination" nillable="true" type="long"/>
          <element name="destinationBank" nillable="true" type="string"/>
          <element name="destinationAccount" nillable="true" type="string"/>
          <element name="recoupeFeeDate" nillable="true" type="tns:NpnDate"/>
          <element name="enrollmentStatus" nillable="true" type="string"/>
        </sequence>
      </complexType>
      <simpleType name="ScheduleStatusForListing">
        <restriction base="string">
          <enumeration value="SCHEDULED"/>
          <enumeration value="SUBMITTED"/>
          <enumeration value="COMPLETED"/>
          <enumeration value="INPROCESS"/>
          <enumeration value="FAILED"/>
          <enumeration value="SUSPENDED"/>
          <enumeration value="CLEARED"/>
          <enumeration value="ZOMBIE"/>
          <enumeration value="PENDING"/>
        </restriction>
      </simpleType>
      <simpleType name="ReturnScheduleOrder">
        <restriction base="string">
          <enumeration value="scheduleDate"/>
          <enumeration value="scheduleId"/>
          <enumeration value="transactionDate"/>
          <enumeration value="transactionId"/>
          <enumeration value="status"/>
          <enumeration value="amount"/>
          <enumeration value="modifiedOn"/>
          <enumeration value="modifiedBy"/>
        </restriction>
      </simpleType>
      <simpleType name="ReturnTransactionClass">
        <restriction base="string">
          <enumeration value="R_FEE"/>
          <enumeration value="REFUND"/>
          <enumeration value="WITHDRAWAL"/>
          <enumeration value="ADVANCE"/>
        </restriction>
      </simpleType>
      <simpleType name="DepositTypes">
        <restriction base="string">
          <enumeration value="L_ACH"/>
          <enumeration value="Draft"/>
        </restriction>
      </simpleType>
      <simpleType name="ReturnTransactionMethod">
        <restriction base="string">
          <enumeration value="REFUND"/>
          <enumeration value="R-Service CFT"/>
          <enumeration value="R-Service Subscriber"/>
          <enumeration value="R-Transaction"/>
          <enumeration value="R-Recover"/>
          <enumeration value="W-ACH"/>
          <enumeration value="W-CHECK-S"/>
          <enumeration value="W-CHECK-2"/>
          <enumeration value="W-CHECK-O"/>
          <enumeration value="W-WIRE"/>
          <enumeration value="SUB_FEE-CLN_SVA"/>
          <enumeration value="L_ACH"/>
        </restriction>
      </simpleType>
      <simpleType name="CancelReasonCode">
        <restriction base="string">
          <enumeration value="RS-01"/>
          <enumeration value="RS-02"/>
          <enumeration value="RS-03"/>
          <enumeration value="RS-04"/>
          <enumeration value="RS-05"/>
          <enumeration value="RS-06"/>
          <enumeration value="RS-07"/>
          <enumeration value="RS-08"/>
          <enumeration value="RS-09"/>
          <enumeration value="RS-10"/>
          <enumeration value="RS-11"/>
          <enumeration value="RS-12"/>
          <enumeration value="RS-13"/>
          <enumeration value="RS-14"/>
          <enumeration value="RS-15"/>
          <enumeration value="RS-16"/>
          <enumeration value="RS-17"/>
        </restriction>
      </simpleType>
      <simpleType name="CancelledBy">
        <restriction base="string">
          <enumeration value="SYSTEM"/>
          <enumeration value="USER"/>
        </restriction>
      </simpleType>
      <simpleType name="AffiliateUserType">
        <restriction base="string">
          <enumeration value="AFFILIATE"/>
          <enumeration value="AGENCY"/>
          <enumeration value="DEALER"/>
          <enumeration value="FI"/>
          <enumeration value="SUB_AGENT"/>
        </restriction>
      </simpleType>
      <complexType name="PartnerListOrder">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="orderBy" type="tns:PartnerListOrderBy"/>
        </sequence>
      </complexType>
      <complexType name="PartnerListOrderBy">
        <all>
          <element name="order">
            <complexType>
              <attribute name="value">
                <simpleType>
                  <restriction base="string">
                    <enumeration value="ID"/>
                    <enumeration value="NAME"/>
                  </restriction>
                </simpleType>
              </attribute>
              <attribute default="true" name="isAscending" type="boolean"/>
            </complexType>
          </element>
        </all>
      </complexType>
      <simpleType name="AffiliateConfig">
        <restriction base="string">
          <enumeration value="PRODUCER_ID"/>
          <enumeration value="CLIENT_CODE"/>
          <enumeration value="PASSWORD"/>
          <enumeration value="USER_ID"/>
          <enumeration value="PULL_TYPE"/>
        </restriction>
      </simpleType>
      <simpleType name="PartnerConfig">
        <restriction base="string">
          <enumeration value="HOST_NAME"/>
          <enumeration value="HOST_ADDRESS"/>
          <enumeration value="PORT"/>
        </restriction>
      </simpleType>
      <simpleType name="AddressType">
        <restriction base="string">
          <enumeration value="PHYSICAL"/>
          <enumeration value="MAILING"/>
          <enumeration value="RESIDENTIAL"/>
        </restriction>
      </simpleType>
      <complexType name="KeyValue">
        <all>
          <element name="key" type="string"/>
          <element name="value" nillable="true" type="string"/>
        </all>
      </complexType>
      <complexType name="Settings">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="settingValue" nillable="true" type="tns:KeyValue"/>
        </sequence>
      </complexType>
      <complexType name="ScheduleIdList">
        <sequence>
          <element maxOccurs="unbounded" name="scheduleId" type="long"/>
        </sequence>
      </complexType>
      <complexType name="UpdateScheduleList">
        <sequence>
          <element name="scheduleId" type="long"/>
          <element name="status" type="int">
            <annotation>
              <documentation>status 1 for success, 0 for failure</documentation>
            </annotation>
          </element>
          <element name="message" type="string">
            <annotation>
              <documentation>Descriptive message</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="ReturnScheduleStatusForUpdate">
        <restriction base="string">
          <enumeration value="SUSPENDED"/>
        </restriction>
      </simpleType>
      <simpleType name="SubscriberFeeStatus">
        <restriction base="string">
          <enumeration value="ACTIVE"/>
          <enumeration value="DELETED"/>
        </restriction>
      </simpleType>
      <complexType name="FeeIdList">
        <sequence>
          <element maxOccurs="unbounded" name="feeId" type="long"/>
        </sequence>
      </complexType>
      <complexType name="FeeTypeIdList">
        <sequence>
          <element maxOccurs="unbounded" name="feeTypeId" type="long"/>
        </sequence>
      </complexType>
      <complexType name="ExternalFeeIdList">
        <sequence>
          <element maxOccurs="unbounded" name="externalFeeId" type="string"/>
        </sequence>
      </complexType>
      <complexType name="CftPayees">
        <sequence>
          <element maxOccurs="unbounded" name="payee" type="tns:CftPayee"/>
        </sequence>
      </complexType>
      <complexType name="CftPayee">
        <sequence>
          <element name="externalPayeeId" type="long"/>
          <element name="payeeName" type="string"/>
          <element minOccurs="0" name="addresses" type="tns:CftPayeeAddress"/>
        </sequence>
      </complexType>
      <complexType name="CftPayeeAddress">
        <sequence>
          <element maxOccurs="unbounded" name="addressInfo" type="tns:AddressInfo"/>
        </sequence>
      </complexType>
      <complexType name="ClientBalance">
        <sequence>
          <element name="clientId" type="long"/>
          <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
          <element name="accountNumber" type="long"/>
          <element name="currentBalance" type="double"/>
        </sequence>
      </complexType>
      <complexType name="Individual">
        <sequence>
          <element minOccurs="0" name="firstName" type="string"/>
          <element minOccurs="0" name="lastName" type="string"/>
        </sequence>
      </complexType>
      <complexType name="SdnMatch">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="sdn" type="tns:SdnName"/>
        </sequence>
      </complexType>
      <complexType name="SdnName">
        <sequence>
          <element name="entryNumber" type="long"/>
          <element minOccurs="0" name="name" type="string"/>
          <element minOccurs="0" name="addresses" type="tns:SdnAddressList"/>
          <element minOccurs="0" name="aliases" type="tns:SdnAliasList"/>
          <element minOccurs="0" name="remarks" type="string"/>
        </sequence>
      </complexType>
      <complexType name="SdnAddressList">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="sdnAddress" type="tns:SdnAddress"/>
        </sequence>
      </complexType>
      <complexType name="SdnAddress">
        <sequence>
          <element name="addressId" type="long"/>
          <element minOccurs="0" name="address" type="string"/>
          <element minOccurs="0" name="cityStateZip" type="string"/>
          <element minOccurs="0" name="country" type="string"/>
          <element minOccurs="0" name="remarks" type="string"/>
        </sequence>
      </complexType>
      <complexType name="SdnAliasList">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="sdnAlias" type="tns:SdnAlias"/>
        </sequence>
      </complexType>
      <complexType name="SdnAlias">
        <sequence>
          <element name="aliasId" type="long"/>
          <element minOccurs="0" name="alias" type="string"/>
          <element minOccurs="0" name="type" type="string"/>
          <element minOccurs="0" name="remarks" type="string"/>
        </sequence>
      </complexType>
      <complexType name="DebtFeeInformation">
        <sequence>
          <element name="originalDebt" type="double"/>
          <element name="dscFeeBasis" type="tns:DscFeeBasis"/>
        </sequence>
      </complexType>
      <complexType name="DscFeeBasis">
        <sequence>
          <choice>
            <element name="Percentage" type="double"/>
            <element name="Fixed" type="double"/>
          </choice>
        </sequence>
      </complexType>
      <complexType name="SingleFeeScheduleBasis">
        <annotation>
          <documentation>A fee schedule</documentation>
        </annotation>
        <sequence>
          <element name="scheduleId" type="long"/>
          <element name="scheduleDate" type="tns:NpnDate"/>
          <element name="effectiveDate" type="tns:NpnDate"/>
          <element name="status" nillable="true" type="string"/>
          <element name="transactionClass" nillable="true" type="string"/>
          <element name="transactionMethod" nillable="true" type="string"/>
          <element name="name" nillable="true" type="string"/>
          <element name="type" nillable="true" type="string"/>
          <element name="owner" nillable="true" type="string"/>
          <element name="enrollmentFeeId" nillable="true" type="long"/>
          <element name="amount" type="double"/>
          <element name="source" nillable="true" type="string"/>
          <element name="destination" nillable="true" type="string"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
          <element minOccurs="0" name="client" type="tns:BriefClient"/>
          <element name="recur" nillable="true" type="long"/>
          <element name="remaining" nillable="true" type="long"/>
          <element name="remark" nillable="true" type="string"/>
          <element minOccurs="0" name="comment" type="string"/>
          <element name="settlementId" nillable="true" type="long"/>
        </sequence>
      </complexType>
      <complexType name="ScheduleFeeBasis">
        <annotation>
          <documentation>A fee schedule</documentation>
        </annotation>
        <sequence>
          <element name="scheduleId" type="long"/>
          <element name="scheduleDate" type="tns:NpnDate"/>
          <element name="effectiveDate" type="tns:NpnDate"/>
          <element name="status" nillable="true" type="string"/>
          <element minOccurs="0" name="statusDate" type="tns:NpnDate"/>
          <element name="transactionClass" nillable="true" type="string"/>
          <element name="transactionMethod" nillable="true" type="string"/>
          <element name="name" nillable="true" type="string"/>
          <element name="type" nillable="true" type="string"/>
          <element name="owner" nillable="true" type="string"/>
          <element name="enrollmentFeeId" nillable="true" type="long"/>
          <element name="amount" type="double"/>
          <element name="source" nillable="true" type="string"/>
          <element name="destination" nillable="true" type="string"/>
          <element minOccurs="0" name="auditInformation" type="tns:AuditInformation"/>
          <element minOccurs="0" name="client" type="tns:BriefClient"/>
          <element name="remark" nillable="true" type="string"/>
          <element name="settlementId" nillable="true" type="long"/>
        </sequence>
      </complexType>
      <simpleType name="FeeScheduleOrder">
        <restriction base="string">
          <enumeration value="scheduleDate"/>
          <enumeration value="scheduleId"/>
          <enumeration value="status"/>
          <enumeration value="amount"/>
          <enumeration value="modifiedOn"/>
          <enumeration value="modifiedBy"/>
        </restriction>
      </simpleType>
      <simpleType name="FeeScheduleOwner">
        <restriction base="string">
          <enumeration value="CFT"/>
          <enumeration value="SUB"/>
        </restriction>
      </simpleType>
      <complexType name="SettlementFeeBasis">
        <sequence>
          <element name="transactionId" type="long"/>
          <element name="feeType" nillable="true" type="string"/>
          <element name="amount" type="double"/>
        </sequence>
      </complexType>
      <complexType name="ClientDocument">
        <all>
          <element name="note" nillable="true" type="string"/>
          <element name="documentType">
            <simpleType>
              <restriction base="string">
                <enumeration value="SETTLEMENT"/>
                <enumeration value="DRAFT"/>
                <enumeration value="ENROLLMENT"/>
                <enumeration value="SUBSCRIBER_DOC"/>
                <enumeration value="AFFILIATE_DOC"/>
                <enumeration value="CONFIRMATION_LETTER"/>
                <enumeration value="STATE_LICENSE"/>
              </restriction>
            </simpleType>
          </element>
          <element name="base64EncodedContent" type="string"/>
          <element name="contentType" type="string"/>
          <element name="documentName" type="string"/>
        </all>
      </complexType>
      <complexType name="tradeLines">
        <sequence>
          <element maxOccurs="unbounded" name="tradeLine" nillable="true" type="tns:FeeTradeLine"/>
        </sequence>
      </complexType>
      <complexType name="FeeTradeLine">
        <sequence>
          <element name="tradeLineName" nillable="true" type="string"/>
          <element name="currentBalance" nillable="true" type="double"/>
        </sequence>
      </complexType>
      <complexType name="StateFeeCapList">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="stateFeeCap" type="tns:StateFeeCapInfo"/>
        </sequence>
      </complexType>
      <complexType name="StateFeeCapInfo">
        <sequence>
          <element name="stateCode" type="string"/>
          <element name="stateName" type="string"/>
          <element name="isRestricted" type="string"/>
          <element name="licenseRequired" type="string"/>
          <element name="isDocumentUploaded" type="boolean"/>
          <element name="licenseExpiry" nillable="true" type="tns:NpnDate"/>
          <element name="stateFeeType" type="string"/>
          <element name="stateFeeValue" nillable="true" type="double"/>
        </sequence>
      </complexType>
      <complexType name="captureSpaDrafts">
        <sequence>
          <element maxOccurs="unbounded" name="captureSpaDraft" nillable="true" type="tns:spaDraft"/>
        </sequence>
      </complexType>
      <complexType name="spaDraft">
        <sequence>
          <element minOccurs="0" name="captureDraftId" nillable="true" type="string"/>
          <element minOccurs="0" name="recurringType" nillable="true" type="tns:RecurringTypes"/>
          <element minOccurs="0" name="recurringStartDate" nillable="true" type="tns:NpnDate"/>
          <element minOccurs="0" name="recurringAmount1" nillable="true" type="double"/>
          <element minOccurs="0" name="recurringDay1" nillable="true" type="long"/>
          <element minOccurs="0" name="recurringAmount2" nillable="true" type="double"/>
          <element minOccurs="0" name="recurringDay2" nillable="true" type="long"/>
          <element minOccurs="0" name="lumpSumDate" nillable="true" type="tns:NpnDate"/>
          <element minOccurs="0" name="lumpSumAmount" nillable="true" type="double"/>
          <element default="false" name="lumpSumOnly" type="boolean"/>
        </sequence>
      </complexType>
      <complexType name="ReturnList">
        <sequence>
          <element maxOccurs="unbounded" name="return" type="tns:Return"/>
        </sequence>
      </complexType>
      <complexType name="Return">
        <all>
          <element minOccurs="0" name="transactionMethod" type="tns:TransactionMethod"/>
          <element minOccurs="0" name="scheduleId" type="long"/>
          <element minOccurs="0" name="feeScheduleId" nillable="true" type="long"/>
          <element minOccurs="0" name="scheduleDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="recoupFeeDate" nillable="true" type="tns:NpnDate"/>
          <element minOccurs="0" name="clientBankAccountId" nillable="true" type="long"/>
          <element minOccurs="0" name="amount" type="double"/>
          <element minOccurs="0" name="remark" nillable="true" type="string"/>
          <element minOccurs="0" name="comment" nillable="true" type="string"/>
          <element minOccurs="0" name="clientId" nillable="true" type="string"/>
          <element minOccurs="0" name="externalClientId" nillable="true" type="string"/>
          <element minOccurs="0" name="externalReferenceId" nillable="true" type="string"/>
          <element minOccurs="0" name="scheduleFrequencyType" type="tns:DraftType">
            <annotation>
              <documentation>Whether it is a Biweekly, Monthly or adhock draft</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="lenderName" nillable="true" type="string"/>
        </all>
      </complexType>
      <complexType name="Returns">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="tns:ReturnInfo"/>
        </sequence>
      </complexType>
      <complexType name="ReturnInfo">
        <all>
          <element name="relatedSpaAccpunt" nillable="true" type="long"/>
          <element name="clientAccountNumber" nillable="true" type="string"/>
          <element name="message" nillable="true" type="string"/>
        </all>
      </complexType>
      <complexType name="UpdateEnrollmentParams">
        <all>
          <element minOccurs="0" name="enrollDate" type="tns:NpnDate"/>
          <element minOccurs="0" name="verticalId" type="long"/>
          <element minOccurs="0" name="isSvaCreated" type="boolean"/>
          <element minOccurs="0" name="areAllDocumentSigned" type="boolean"/>
          <element minOccurs="0" name="systemId" type="long"/>
          <element minOccurs="0" name="spaaApprovalRequired" type="boolean"/>
          <element minOccurs="0" name="draftAmount" type="double"/>
          <element minOccurs="0" name="mostRecentAction" type="string"/>
          <element minOccurs="0" name="enrollmentStatus" type="msg:ClientStatus"/>
          <element minOccurs="0" name="cipStatus" type="msg:CIPStatus"/>
          <element minOccurs="0" name="ofacStatus" type="msg:OFACStatus"/>
          <element minOccurs="0" name="spaStatus" type="msg:SPAStatus"/>
          <element minOccurs="0" name="spaRejectReason" type="string"/>
        </all>
      </complexType>
      <complexType name="ActivateEnrollmentResponseParams">
        <all>
          <element name="enrollmentStatuses" nillable="true" type="string"/>
          <element name="cipStatuses" nillable="true" type="string"/>
          <element name="ofacStatuses" nillable="true" type="string"/>
          <element name="spaStatuses" nillable="true" type="string"/>
        </all>
      </complexType>
      <simpleType name="ActionType">
        <restriction base="string">
          <enumeration value="UPDATE"/>
          <enumeration value="ACTIVATE"/>
        </restriction>
      </simpleType>
      <complexType name="AvoidableReturnFlaggedClientList">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="avoidableReturnFlaggedClient" nillable="true" type="tns:AvoidableReturnFlaggedClient"/>
        </sequence>
      </complexType>
      <complexType name="AvoidableReturnFlaggedClient">
        <all>
          <element name="internalId" type="long"/>
          <element minOccurs="0" name="subscriberId" type="long"/>
          <element minOccurs="0" name="clientId" type="long"/>
          <element minOccurs="0" name="clientName" type="string"/>
          <element minOccurs="0" name="returnScheduleId" type="long"/>
          <element name="returnDate" type="tns:NpnDate"/>
          <element name="nextDraftDate" nillable="true" type="tns:NpnDate"/>
          <element minOccurs="0" name="nextdraftAmount" nillable="true" type="double"/>
          <element minOccurs="0" name="returnCode" type="string"/>
          <element minOccurs="0" name="draftAuthorizationdocument" nillable="true" type="tns:draftAuthorizationDocumentInfo"/>
          <element minOccurs="0" name="documentId" nillable="true" type="long"/>
        </all>
      </complexType>
      <complexType name="draftAuthorizationDocumentInfo">
        <all>
          <element minOccurs="0" name="documentId" type="long"/>
          <element minOccurs="0" name="documentName" type="string"/>
        </all>
      </complexType>
      <simpleType name="DocumentStatus">
        <restriction base="string">
          <enumeration value="ALL"/>
          <enumeration value="UPLD"/>
          <enumeration value="NPLD"/>
        </restriction>
      </simpleType>
      <simpleType name="BankPartners">
        <restriction base="string">
          <enumeration value="FOB"/>
          <enumeration value="CRB"/>
          <enumeration value="HSB"/>
          <enumeration value="WFB"/>
          <enumeration value="TPB"/>
          <enumeration value="BOI"/>
        </restriction>
      </simpleType>
      <simpleType name="SearchClientParams">
        <restriction base="string">
          <enumeration value="CPLUS_CLIENTS"/>
          <enumeration value="PHONE_SET_ACC"/>
        </restriction>
      </simpleType>
      <simpleType name="AccountNature">
        <restriction base="string">
          <enumeration value="CONSUMER"/>
          <enumeration value="CORPORATE"/>
        </restriction>
      </simpleType>
      <simpleType name="AuthorizationFormat">
        <restriction base="string">
          <enumeration value="WRITTEN_AGREEMENT"/>
          <enumeration value="SIGNED_AGREEMENT"/>
          <enumeration value="ORAL_AUTHORIZATION"/>
          <enumeration value="NON_WRITTEN_MEANS"/>
          <enumeration value="AUTHORIZATION_OVER_WEB_EMAIL"/>
          <enumeration value="AUTHORIZATION_OVER_WEB_ESIGN"/>
          <enumeration value="TRANSFER_AGREEMENT"/>
        </restriction>
      </simpleType>
      <complexType name="PaymentReceiptDocument">
        <all>
          <element name="note" nillable="true" type="string"/>
          <element name="documentType">
            <simpleType>
              <restriction base="string">
                <enumeration value="PAYMENT_RECEIPT"/>
              </restriction>
            </simpleType>
          </element>
          <element name="base64EncodedContent" type="string"/>
          <element name="contentType" type="string"/>
          <element name="documentName" type="string"/>
        </all>
      </complexType>
      <complexType name="ChildPayeesList">
        <sequence>
          <element maxOccurs="unbounded" name="childPayee" type="tns:ChildPayee"/>
        </sequence>
      </complexType>
      <complexType name="ChildPayee">
        <all>
          <element name="childPayeeId" type="long"/>
          <element minOccurs="0" name="childPayeeName" nillable="true" type="string"/>
        </all>
      </complexType>
      <complexType name="SubscriberTransactionReceiptList">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="SubscriberTransactionReceipts" nillable="true" type="tns:SubscriberTransactionReceipt"/>
        </sequence>
      </complexType>
      <complexType name="SubscriberTransactionReceipt">
        <sequence>
          <element name="subscribersId" type="long"/>
          <element name="transactionClassId" type="string"/>
          <element name="status" type="int"/>
        </sequence>
      </complexType>
    </schema>
  </wsdl:types>
  <wsdl:message name="RejectPaymentResponse">
    <wsdl:part element="sch0:RejectPaymentResponse" name="RejectPaymentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPartialEnrollmentRequest">
    <wsdl:part element="sch0:GetPartialEnrollmentRequest" name="GetPartialEnrollmentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetDraftErrorListRequest">
    <wsdl:part element="sch0:GetDraftErrorListRequest" name="GetDraftErrorListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ResetPasswordRequest">
    <wsdl:part element="sch0:ResetPasswordRequest" name="ResetPasswordRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminCreateSubscriberRequest">
    <wsdl:part element="sch0:AdminCreateSubscriberRequest" name="AdminCreateSubscriberRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="VerifyClientManuallyResponse">
    <wsdl:part element="sch0:VerifyClientManuallyResponse" name="VerifyClientManuallyResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentTicketResponse">
    <wsdl:part element="sch0:GetEnrollmentTicketResponse" name="GetEnrollmentTicketResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetApprovalsByIdResponse">
    <wsdl:part element="sch0:GetApprovalsByIdResponse" name="GetApprovalsByIdResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AddReferralAffiliateResponse">
    <wsdl:part element="sch0:AddReferralAffiliateResponse" name="AddReferralAffiliateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetAffiliateListRequest">
    <wsdl:part element="sch0:AdminGetAffiliateListRequest" name="AdminGetAffiliateListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminActivateEnrollmentResponse">
    <wsdl:part element="sch0:AdminActivateEnrollmentResponse" name="AdminActivateEnrollmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="FailPaymentRequest">
    <wsdl:part element="sch0:FailPaymentRequest" name="FailPaymentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="OverrideSubscriberFeeResponse">
    <wsdl:part element="sch0:OverrideSubscriberFeeResponse" name="OverrideSubscriberFeeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateReturnScheduleRequest">
    <wsdl:part element="sch0:UpdateReturnScheduleRequest" name="UpdateReturnScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetSettlementFeesResponse">
    <wsdl:part element="sch0:AdminGetSettlementFeesResponse" name="AdminGetSettlementFeesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateAutoPayeeInfoResponse">
    <wsdl:part element="sch0:UpdateAutoPayeeInfoResponse" name="UpdateAutoPayeeInfoResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreatePartialEnrollmentResponse">
    <wsdl:part element="sch0:CreatePartialEnrollmentResponse" name="CreatePartialEnrollmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetFeeScheduleRequest">
    <wsdl:part element="sch0:GetFeeScheduleRequest" name="GetFeeScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateRuleSetResponse">
    <wsdl:part element="sch0:UpdateRuleSetResponse" name="UpdateRuleSetResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetCoClientsResponse">
    <wsdl:part element="sch0:GetCoClientsResponse" name="GetCoClientsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AuthorizePaymentResponse">
    <wsdl:part element="sch0:AuthorizePaymentResponse" name="AuthorizePaymentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="OverrideSubscriberFeeRequest">
    <wsdl:part element="sch0:OverrideSubscriberFeeRequest" name="OverrideSubscriberFeeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAutoEnrollmentDetailFromStoneEagleResponse">
    <wsdl:part element="sch0:GetAutoEnrollmentDetailFromStoneEagleResponse" name="GetAutoEnrollmentDetailFromStoneEagleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientsEnhancedRequest">
    <wsdl:part element="sch0:GetClientsEnhancedRequest" name="GetClientsEnhancedRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateSubscriberAffiliateConfigsResponse">
    <wsdl:part element="sch0:CreateSubscriberAffiliateConfigsResponse" name="CreateSubscriberAffiliateConfigsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetSubscriberDetailRequest">
    <wsdl:part element="sch0:AdminGetSubscriberDetailRequest" name="AdminGetSubscriberDetailRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateSignatureDateRequest">
    <wsdl:part element="sch0:UpdateSignatureDateRequest" name="UpdateSignatureDateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminCreateSubscriberProcessorSetupRequest">
    <wsdl:part element="sch0:AdminCreateSubscriberProcessorSetupRequest" name="AdminCreateSubscriberProcessorSetupRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminCreateSubscriberBankAccountResponse">
    <wsdl:part element="sch0:AdminCreateSubscriberBankAccountResponse" name="AdminCreateSubscriberBankAccountResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetOverriddenSubscriberFeeRequest">
    <wsdl:part element="sch0:GetOverriddenSubscriberFeeRequest" name="GetOverriddenSubscriberFeeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateInterClientTransferRequest">
    <wsdl:part element="sch0:CreateInterClientTransferRequest" name="CreateInterClientTransferRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateSubscriberPayeeResponse">
    <wsdl:part element="sch0:CreateSubscriberPayeeResponse" name="CreateSubscriberPayeeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetTransactionListRequest">
    <wsdl:part element="sch0:AdminGetTransactionListRequest" name="AdminGetTransactionListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSPAMonthlyBalanceListResponse">
    <wsdl:part element="sch0:GetSPAMonthlyBalanceListResponse" name="GetSPAMonthlyBalanceListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetNewPositivePayListResponse">
    <wsdl:part element="sch0:GetNewPositivePayListResponse" name="GetNewPositivePayListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SaveStatewiseFeeCapRequest">
    <wsdl:part element="sch0:SaveStatewiseFeeCapRequest" name="SaveStatewiseFeeCapRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPositivePayInquiriesResponse">
    <wsdl:part element="sch0:GetPositivePayInquiriesResponse" name="GetPositivePayInquiriesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminCreateAffiliateRequest">
    <wsdl:part element="sch0:AdminCreateAffiliateRequest" name="AdminCreateAffiliateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ProcessMultipleReturnsRequest">
    <wsdl:part element="sch0:ProcessMultipleReturnsRequest" name="ProcessMultipleReturnsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreatePerformanceSettlementResponse">
    <wsdl:part element="sch0:CreatePerformanceSettlementResponse" name="CreatePerformanceSettlementResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateSubscriberFeeRequest">
    <wsdl:part element="sch0:CreateSubscriberFeeRequest" name="CreateSubscriberFeeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTransactionMethodsResponse">
    <wsdl:part element="sch0:GetTransactionMethodsResponse" name="GetTransactionMethodsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateAutoNPNFeeRequest">
    <wsdl:part element="sch0:CreateAutoNPNFeeRequest" name="CreateAutoNPNFeeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreatePerformanceSettlementBasisRequest">
    <wsdl:part element="sch0:CreatePerformanceSettlementBasisRequest" name="CreatePerformanceSettlementBasisRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentChannelAttributeValuesListRequest">
    <wsdl:part element="sch0:GetEnrollmentChannelAttributeValuesListRequest" name="GetEnrollmentChannelAttributeValuesListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetFeeScheduleBasisResponse">
    <wsdl:part element="sch0:GetFeeScheduleBasisResponse" name="GetFeeScheduleBasisResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetCaptureDraftResponse">
    <wsdl:part element="sch0:GetCaptureDraftResponse" name="GetCaptureDraftResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPaymentListOnPositivePayResponse">
    <wsdl:part element="sch0:GetPaymentListOnPositivePayResponse" name="GetPaymentListOnPositivePayResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminUpdateEnrollmentResponse">
    <wsdl:part element="sch0:AdminUpdateEnrollmentResponse" name="AdminUpdateEnrollmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPartialEnrollmentListResponse">
    <wsdl:part element="sch0:GetPartialEnrollmentListResponse" name="GetPartialEnrollmentListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateFeeItemsResponse">
    <wsdl:part element="sch0:CreateFeeItemsResponse" name="CreateFeeItemsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetScheduleListRequest">
    <wsdl:part element="sch0:GetScheduleListRequest" name="GetScheduleListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateDraftItemsRequest">
    <wsdl:part element="sch0:CreateDraftItemsRequest" name="CreateDraftItemsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AuthorizeAndAdvancePaymentRequest">
    <wsdl:part element="sch0:AuthorizeAndAdvancePaymentRequest" name="AuthorizeAndAdvancePaymentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetSettlementListResponse">
    <wsdl:part element="sch0:AdminGetSettlementListResponse" name="AdminGetSettlementListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SkipPaymentResponse">
    <wsdl:part element="sch0:SkipPaymentResponse" name="SkipPaymentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateSubscriberTransactionReceiptResponse">
    <wsdl:part element="sch0:UpdateSubscriberTransactionReceiptResponse" name="UpdateSubscriberTransactionReceiptResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RemoveAffiliateDocumentResponse">
    <wsdl:part element="sch0:RemoveAffiliateDocumentResponse" name="RemoveAffiliateDocumentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentPayeeResponse">
    <wsdl:part element="sch0:GetEnrollmentPayeeResponse" name="GetEnrollmentPayeeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateEnrollmentErrorRequest">
    <wsdl:part element="sch0:CreateEnrollmentErrorRequest" name="CreateEnrollmentErrorRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateSettlementScheduleRequest">
    <wsdl:part element="sch0:UpdateSettlementScheduleRequest" name="UpdateSettlementScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetCFTBankAccountListRequest">
    <wsdl:part element="sch0:AdminGetCFTBankAccountListRequest" name="AdminGetCFTBankAccountListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateDraftScheduleResponse">
    <wsdl:part element="sch0:UpdateDraftScheduleResponse" name="UpdateDraftScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAffiliateUserListRequest">
    <wsdl:part element="sch0:GetAffiliateUserListRequest" name="GetAffiliateUserListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SuspendSettlementResponse">
    <wsdl:part element="sch0:SuspendSettlementResponse" name="SuspendSettlementResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetCancelReasonCodesRequest">
    <wsdl:part element="sch0:GetCancelReasonCodesRequest" name="GetCancelReasonCodesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminCreateSubscriberBankAccountRequest">
    <wsdl:part element="sch0:AdminCreateSubscriberBankAccountRequest" name="AdminCreateSubscriberBankAccountRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminUpdateInternalUserResponse">
    <wsdl:part element="sch0:AdminUpdateInternalUserResponse" name="AdminUpdateInternalUserResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetClientsRequest">
    <wsdl:part element="sch0:AdminGetClientsRequest" name="AdminGetClientsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetSubscriberListResponse">
    <wsdl:part element="sch0:AdminGetSubscriberListResponse" name="AdminGetSubscriberListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPartialEnrollmentListRequest">
    <wsdl:part element="sch0:GetPartialEnrollmentListRequest" name="GetPartialEnrollmentListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdatePartialEnrollmentStatusResponse">
    <wsdl:part element="sch0:UpdatePartialEnrollmentStatusResponse" name="UpdatePartialEnrollmentStatusResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPostedTransactionRequest">
    <wsdl:part element="sch0:GetPostedTransactionRequest" name="GetPostedTransactionRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SaveStatewiseFeeCapResponse">
    <wsdl:part element="sch0:SaveStatewiseFeeCapResponse" name="SaveStatewiseFeeCapResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ResetPasswordResponse">
    <wsdl:part element="sch0:ResetPasswordResponse" name="ResetPasswordResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentDocumentListRequest">
    <wsdl:part element="sch0:GetEnrollmentDocumentListRequest" name="GetEnrollmentDocumentListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetFeeBasisResponse">
    <wsdl:part element="sch0:GetFeeBasisResponse" name="GetFeeBasisResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateSubscriberFeeResponse">
    <wsdl:part element="sch0:CreateSubscriberFeeResponse" name="CreateSubscriberFeeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPaymentDetailsResponse">
    <wsdl:part element="sch0:GetPaymentDetailsResponse" name="GetPaymentDetailsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CheckSdnMatchRequest">
    <wsdl:part element="sch0:CheckSdnMatchRequest" name="CheckSdnMatchRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateFeeBasisResponse">
    <wsdl:part element="sch0:UpdateFeeBasisResponse" name="UpdateFeeBasisResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateApprovalAttemptResponse">
    <wsdl:part element="sch0:CreateApprovalAttemptResponse" name="CreateApprovalAttemptResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ReactivateFeeScheduleResponse">
    <wsdl:part element="sch0:ReactivateFeeScheduleResponse" name="ReactivateFeeScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAffiliateDocumentListRequest">
    <wsdl:part element="sch0:GetAffiliateDocumentListRequest" name="GetAffiliateDocumentListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPartialEnrollmentResponse">
    <wsdl:part element="sch0:GetPartialEnrollmentResponse" name="GetPartialEnrollmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetFeeScheduleBasisRequest">
    <wsdl:part element="sch0:GetFeeScheduleBasisRequest" name="GetFeeScheduleBasisRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DeleteClientBankAccountRequest">
    <wsdl:part element="sch0:DeleteClientBankAccountRequest" name="DeleteClientBankAccountRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetHierarchyAffiliateCommissionDistResponse">
    <wsdl:part element="sch0:GetHierarchyAffiliateCommissionDistResponse" name="GetHierarchyAffiliateCommissionDistResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAffiliateTransactionListResponse">
    <wsdl:part element="sch0:GetAffiliateTransactionListResponse" name="GetAffiliateTransactionListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateSubscriberAffiliateConfigsRequest">
    <wsdl:part element="sch0:CreateSubscriberAffiliateConfigsRequest" name="CreateSubscriberAffiliateConfigsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateSuscriberTemplateAssetRequest">
    <wsdl:part element="sch0:CreateSuscriberTemplateAssetRequest" name="CreateSuscriberTemplateAssetRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RevalidateAutoEnrollmentResponse">
    <wsdl:part element="sch0:RevalidateAutoEnrollmentResponse" name="RevalidateAutoEnrollmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSubscriberPayeeResponse">
    <wsdl:part element="sch0:GetSubscriberPayeeResponse" name="GetSubscriberPayeeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSummaryScheduleListRequest">
    <wsdl:part element="sch0:GetSummaryScheduleListRequest" name="GetSummaryScheduleListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateFeeScheduleResponse">
    <wsdl:part element="sch0:UpdateFeeScheduleResponse" name="UpdateFeeScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateRuleSetDefinitionResponse">
    <wsdl:part element="sch0:UpdateRuleSetDefinitionResponse" name="UpdateRuleSetDefinitionResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateClientBankAccountResponse">
    <wsdl:part element="sch0:UpdateClientBankAccountResponse" name="UpdateClientBankAccountResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminUpdateSubscriberFeeRequest">
    <wsdl:part element="sch0:AdminUpdateSubscriberFeeRequest" name="AdminUpdateSubscriberFeeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientStatusRequest">
    <wsdl:part element="sch0:GetClientStatusRequest" name="GetClientStatusRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateEnrollmentErrorResponse">
    <wsdl:part element="sch0:UpdateEnrollmentErrorResponse" name="UpdateEnrollmentErrorResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetPostedTransactionListResponse">
    <wsdl:part element="sch0:AdminGetPostedTransactionListResponse" name="AdminGetPostedTransactionListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPartnerListResponse">
    <wsdl:part element="sch0:GetPartnerListResponse" name="GetPartnerListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetStatusEnumListResponse">
    <wsdl:part element="sch0:GetStatusEnumListResponse" name="GetStatusEnumListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSubscriberAffiliateConfigsRequest">
    <wsdl:part element="sch0:GetSubscriberAffiliateConfigsRequest" name="GetSubscriberAffiliateConfigsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateApprovalResponse">
    <wsdl:part element="sch0:UpdateApprovalResponse" name="UpdateApprovalResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminViewEnrollmentRequest">
    <wsdl:part element="sch0:AdminViewEnrollmentRequest" name="AdminViewEnrollmentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserRolesListRequest">
    <wsdl:part element="sch0:GetUserRolesListRequest" name="GetUserRolesListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPositivePayDetailsResponse">
    <wsdl:part element="sch0:GetPositivePayDetailsResponse" name="GetPositivePayDetailsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserRolesListResponse">
    <wsdl:part element="sch0:GetUserRolesListResponse" name="GetUserRolesListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentAffiliateListRequest">
    <wsdl:part element="sch0:GetEnrollmentAffiliateListRequest" name="GetEnrollmentAffiliateListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateSubscriberPartnerResponse">
    <wsdl:part element="sch0:UpdateSubscriberPartnerResponse" name="UpdateSubscriberPartnerResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GenerateClientBankStatementRequest">
    <wsdl:part element="sch0:GenerateClientBankStatementRequest" name="GenerateClientBankStatementRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateSubscriberUserRequest">
    <wsdl:part element="sch0:UpdateSubscriberUserRequest" name="UpdateSubscriberUserRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateChannelAttributeValueResponse">
    <wsdl:part element="sch0:UpdateChannelAttributeValueResponse" name="UpdateChannelAttributeValueResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SearchCFTPayeesRequest">
    <wsdl:part element="sch0:SearchCFTPayeesRequest" name="SearchCFTPayeesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetSubscriberBankAccountResponse">
    <wsdl:part element="sch0:AdminGetSubscriberBankAccountResponse" name="AdminGetSubscriberBankAccountResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ActivateSettlementRequest">
    <wsdl:part element="sch0:ActivateSettlementRequest" name="ActivateSettlementRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SkipDraftRequest">
    <wsdl:part element="sch0:SkipDraftRequest" name="SkipDraftRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTransactionProcessorsRequest">
    <wsdl:part element="sch0:GetTransactionProcessorsRequest" name="GetTransactionProcessorsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientBankAccountRequest">
    <wsdl:part element="sch0:GetClientBankAccountRequest" name="GetClientBankAccountRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientRequest">
    <wsdl:part element="sch0:GetClientRequest" name="GetClientRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SendEmailRequest">
    <wsdl:part element="sch0:SendEmailRequest" name="SendEmailRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetScheduleListResponse">
    <wsdl:part element="sch0:AdminGetScheduleListResponse" name="AdminGetScheduleListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ModifyLoanAmountResponse">
    <wsdl:part element="sch0:ModifyLoanAmountResponse" name="ModifyLoanAmountResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RejectPaymentRequest">
    <wsdl:part element="sch0:RejectPaymentRequest" name="RejectPaymentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateFeeItemsRequest">
    <wsdl:part element="sch0:CreateFeeItemsRequest" name="CreateFeeItemsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetRuleSetResponse">
    <wsdl:part element="sch0:GetRuleSetResponse" name="GetRuleSetResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ModifyLoanDueDateResponse">
    <wsdl:part element="sch0:ModifyLoanDueDateResponse" name="ModifyLoanDueDateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetCheckImageRequest">
    <wsdl:part element="sch0:GetCheckImageRequest" name="GetCheckImageRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetTransferBankAccountListResponse">
    <wsdl:part element="sch0:AdminGetTransferBankAccountListResponse" name="AdminGetTransferBankAccountListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetDelayDraftChangedDatesRequest">
    <wsdl:part element="sch0:GetDelayDraftChangedDatesRequest" name="GetDelayDraftChangedDatesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AuthorizeAndLoadPaymentRequest">
    <wsdl:part element="sch0:AuthorizeAndLoadPaymentRequest" name="AuthorizeAndLoadPaymentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetHierarchyAffiliateCommissionDistRequest">
    <wsdl:part element="sch0:GetHierarchyAffiliateCommissionDistRequest" name="GetHierarchyAffiliateCommissionDistRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetRuleSetDefinitionResponse">
    <wsdl:part element="sch0:GetRuleSetDefinitionResponse" name="GetRuleSetDefinitionResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetAffiliateResponse">
    <wsdl:part element="sch0:AdminGetAffiliateResponse" name="AdminGetAffiliateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ClientVerificationResponse">
    <wsdl:part element="sch0:ClientVerificationResponse" name="ClientVerificationResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateDraftScheduleResponse">
    <wsdl:part element="sch0:CreateDraftScheduleResponse" name="CreateDraftScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ModifyHierarchyAffiliateCommissionDistResponse">
    <wsdl:part element="sch0:ModifyHierarchyAffiliateCommissionDistResponse" name="ModifyHierarchyAffiliateCommissionDistResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateFeeScheduleRequest">
    <wsdl:part element="sch0:CreateFeeScheduleRequest" name="CreateFeeScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserByIdResponse">
    <wsdl:part element="sch0:GetUserByIdResponse" name="GetUserByIdResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetChildAffiliateListResponse">
    <wsdl:part element="sch0:GetChildAffiliateListResponse" name="GetChildAffiliateListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateAffiliateResponse">
    <wsdl:part element="sch0:UpdateAffiliateResponse" name="UpdateAffiliateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminUpdateSubscriberRequest">
    <wsdl:part element="sch0:AdminUpdateSubscriberRequest" name="AdminUpdateSubscriberRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="MakePhonePaymentRequest">
    <wsdl:part element="sch0:MakePhonePaymentRequest" name="MakePhonePaymentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAffiliateListRequest">
    <wsdl:part element="sch0:GetAffiliateListRequest" name="GetAffiliateListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RevalidateAutoEnrollmentRequest">
    <wsdl:part element="sch0:RevalidateAutoEnrollmentRequest" name="RevalidateAutoEnrollmentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetNewPositivePayListRequest">
    <wsdl:part element="sch0:GetNewPositivePayListRequest" name="GetNewPositivePayListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPaymentMonitorListResponse">
    <wsdl:part element="sch0:GetPaymentMonitorListResponse" name="GetPaymentMonitorListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTransactionProcessorsResponse">
    <wsdl:part element="sch0:GetTransactionProcessorsResponse" name="GetTransactionProcessorsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetApprovalsByIdRequest">
    <wsdl:part element="sch0:GetApprovalsByIdRequest" name="GetApprovalsByIdRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DeleteClientBankAccountResponse">
    <wsdl:part element="sch0:DeleteClientBankAccountResponse" name="DeleteClientBankAccountResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientRTPSettlementResponse">
    <wsdl:part element="sch0:GetClientRTPSettlementResponse" name="GetClientRTPSettlementResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateReturnScheduleRequest">
    <wsdl:part element="sch0:CreateReturnScheduleRequest" name="CreateReturnScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetOverriddenSubscriberFeeResponse">
    <wsdl:part element="sch0:GetOverriddenSubscriberFeeResponse" name="GetOverriddenSubscriberFeeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetEnrollmentsResponse">
    <wsdl:part element="sch0:AdminGetEnrollmentsResponse" name="AdminGetEnrollmentsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminRejectPostedTransactionRequest">
    <wsdl:part element="sch0:AdminRejectPostedTransactionRequest" name="AdminRejectPostedTransactionRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPositivePayListRequest">
    <wsdl:part element="sch0:GetPositivePayListRequest" name="GetPositivePayListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateDraftScheduleRequest">
    <wsdl:part element="sch0:UpdateDraftScheduleRequest" name="UpdateDraftScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientBankAccountListResponse">
    <wsdl:part element="sch0:GetClientBankAccountListResponse" name="GetClientBankAccountListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSubscriberPayeeListResponse">
    <wsdl:part element="sch0:GetSubscriberPayeeListResponse" name="GetSubscriberPayeeListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminActivateEnrollmentRequest">
    <wsdl:part element="sch0:AdminActivateEnrollmentRequest" name="AdminActivateEnrollmentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminCreateSubscriberProcessorSetupResponse">
    <wsdl:part element="sch0:AdminCreateSubscriberProcessorSetupResponse" name="AdminCreateSubscriberProcessorSetupResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetSubscriberProcessorSetupResponse">
    <wsdl:part element="sch0:AdminGetSubscriberProcessorSetupResponse" name="AdminGetSubscriberProcessorSetupResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSPAMonthlyBalanceListRequest">
    <wsdl:part element="sch0:GetSPAMonthlyBalanceListRequest" name="GetSPAMonthlyBalanceListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminListSubscriberFeeRequest">
    <wsdl:part element="sch0:AdminListSubscriberFeeRequest" name="AdminListSubscriberFeeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentExceptionsListRequest">
    <wsdl:part element="sch0:GetEnrollmentExceptionsListRequest" name="GetEnrollmentExceptionsListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateSignatureDateResponse">
    <wsdl:part element="sch0:UpdateSignatureDateResponse" name="UpdateSignatureDateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAffiliateClientsResponse">
    <wsdl:part element="sch0:GetAffiliateClientsResponse" name="GetAffiliateClientsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnvironmentResponse">
    <wsdl:part element="sch0:GetEnvironmentResponse" name="GetEnvironmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSettlementApprovalListResponse">
    <wsdl:part element="sch0:GetSettlementApprovalListResponse" name="GetSettlementApprovalListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CompleteEnrollmentRequest">
    <wsdl:part element="sch0:CompleteEnrollmentRequest" name="CompleteEnrollmentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateAffiliateResponse">
    <wsdl:part element="sch0:CreateAffiliateResponse" name="CreateAffiliateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdatePaymentRequest">
    <wsdl:part element="sch0:UpdatePaymentRequest" name="UpdatePaymentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ReactivateDraftScheduleRequest">
    <wsdl:part element="sch0:ReactivateDraftScheduleRequest" name="ReactivateDraftScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetResetPasswordTokenRequest">
    <wsdl:part element="sch0:GetResetPasswordTokenRequest" name="GetResetPasswordTokenRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateReturnScheduleResponse">
    <wsdl:part element="sch0:UpdateReturnScheduleResponse" name="UpdateReturnScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateHierarchyEnrollmentAffiliateResponse">
    <wsdl:part element="sch0:CreateHierarchyEnrollmentAffiliateResponse" name="CreateHierarchyEnrollmentAffiliateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GenerateClientBankStatementResponse">
    <wsdl:part element="sch0:GenerateClientBankStatementResponse" name="GenerateClientBankStatementResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UnlockAccountResponse">
    <wsdl:part element="sch0:UnlockAccountResponse" name="UnlockAccountResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateEnrollmentErrorRequest">
    <wsdl:part element="sch0:UpdateEnrollmentErrorRequest" name="UpdateEnrollmentErrorRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateSubscriberPayeeResponse">
    <wsdl:part element="sch0:UpdateSubscriberPayeeResponse" name="UpdateSubscriberPayeeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ClientVerificationRequest">
    <wsdl:part element="sch0:ClientVerificationRequest" name="ClientVerificationRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SuspendSettlementRequest">
    <wsdl:part element="sch0:SuspendSettlementRequest" name="SuspendSettlementRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSummaryScheduleListResponse">
    <wsdl:part element="sch0:GetSummaryScheduleListResponse" name="GetSummaryScheduleListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DelayDraftRequest">
    <wsdl:part element="sch0:DelayDraftRequest" name="DelayDraftRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetResetPasswordTokenResponse">
    <wsdl:part element="sch0:GetResetPasswordTokenResponse" name="GetResetPasswordTokenResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="PopulateBiweeklyEnrollmentScheduleResponse">
    <wsdl:part element="sch0:PopulateBiweeklyEnrollmentScheduleResponse" name="PopulateBiweeklyEnrollmentScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateSubscriberPayeeRequest">
    <wsdl:part element="sch0:UpdateSubscriberPayeeRequest" name="UpdateSubscriberPayeeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ModifyHierarchyAffiliateCommissionDistRequest">
    <wsdl:part element="sch0:ModifyHierarchyAffiliateCommissionDistRequest" name="ModifyHierarchyAffiliateCommissionDistRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateClientBankAccountRequest">
    <wsdl:part element="sch0:UpdateClientBankAccountRequest" name="UpdateClientBankAccountRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAffiliateHierarchyResponse">
    <wsdl:part element="sch0:GetAffiliateHierarchyResponse" name="GetAffiliateHierarchyResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="PopulateBiweeklyEnrollmentScheduleRequest">
    <wsdl:part element="sch0:PopulateBiweeklyEnrollmentScheduleRequest" name="PopulateBiweeklyEnrollmentScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPaymentListRequest">
    <wsdl:part element="sch0:GetPaymentListRequest" name="GetPaymentListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSubscriberTransactionReceiptsResponse">
    <wsdl:part element="sch0:GetSubscriberTransactionReceiptsResponse" name="GetSubscriberTransactionReceiptsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentCountResponse">
    <wsdl:part element="sch0:GetEnrollmentCountResponse" name="GetEnrollmentCountResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UploadDocumentResponse">
    <wsdl:part element="sch0:UploadDocumentResponse" name="UploadDocumentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateGroupEnrollmentAffiliateResponse">
    <wsdl:part element="sch0:CreateGroupEnrollmentAffiliateResponse" name="CreateGroupEnrollmentAffiliateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetRuleSetDefinitionRequest">
    <wsdl:part element="sch0:GetRuleSetDefinitionRequest" name="GetRuleSetDefinitionRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetBankListResponse">
    <wsdl:part element="sch0:GetBankListResponse" name="GetBankListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminCreateSubscriberResponse">
    <wsdl:part element="sch0:AdminCreateSubscriberResponse" name="AdminCreateSubscriberResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientsRequest">
    <wsdl:part element="sch0:GetClientsRequest" name="GetClientsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetSubscriberBankAccountListRequest">
    <wsdl:part element="sch0:AdminGetSubscriberBankAccountListRequest" name="AdminGetSubscriberBankAccountListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateAdhocTransferRequest">
    <wsdl:part element="sch0:UpdateAdhocTransferRequest" name="UpdateAdhocTransferRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReturnScheduleResponse">
    <wsdl:part element="sch0:GetReturnScheduleResponse" name="GetReturnScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SaveAutoEnrollmentAffiliatesResponse">
    <wsdl:part element="sch0:SaveAutoEnrollmentAffiliatesResponse" name="SaveAutoEnrollmentAffiliatesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetCheckImageResponse">
    <wsdl:part element="sch0:GetCheckImageResponse" name="GetCheckImageResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SuspendDraftScheduleResponse">
    <wsdl:part element="sch0:SuspendDraftScheduleResponse" name="SuspendDraftScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetNextScheduleResponse">
    <wsdl:part element="sch0:GetNextScheduleResponse" name="GetNextScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetDelayDraftChangedDatesResponse">
    <wsdl:part element="sch0:GetDelayDraftChangedDatesResponse" name="GetDelayDraftChangedDatesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SendEmailResponse">
    <wsdl:part element="sch0:SendEmailResponse" name="SendEmailResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ChangePasswordForTokenRequest">
    <wsdl:part element="sch0:ChangePasswordForTokenRequest" name="ChangePasswordForTokenRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateCaptureDraftResponse">
    <wsdl:part element="sch0:UpdateCaptureDraftResponse" name="UpdateCaptureDraftResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentDocumentResponse">
    <wsdl:part element="sch0:GetEnrollmentDocumentResponse" name="GetEnrollmentDocumentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPositivePayInquiriesRequest">
    <wsdl:part element="sch0:GetPositivePayInquiriesRequest" name="GetPositivePayInquiriesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateGroupEnrollmentAffiliateRequest">
    <wsdl:part element="sch0:CreateGroupEnrollmentAffiliateRequest" name="CreateGroupEnrollmentAffiliateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminCreateSubscriberFeesResponse">
    <wsdl:part element="sch0:AdminCreateSubscriberFeesResponse" name="AdminCreateSubscriberFeesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminUpdateEnrollmentRequest">
    <wsdl:part element="sch0:AdminUpdateEnrollmentRequest" name="AdminUpdateEnrollmentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SuspendFeeScheduleResponse">
    <wsdl:part element="sch0:SuspendFeeScheduleResponse" name="SuspendFeeScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSubscriberTransactionReceiptsRequest">
    <wsdl:part element="sch0:GetSubscriberTransactionReceiptsRequest" name="GetSubscriberTransactionReceiptsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateAdhocTransferResponse">
    <wsdl:part element="sch0:CreateAdhocTransferResponse" name="CreateAdhocTransferResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetScheduleListRequest">
    <wsdl:part element="sch0:AdminGetScheduleListRequest" name="AdminGetScheduleListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateCoClientResponse">
    <wsdl:part element="sch0:CreateCoClientResponse" name="CreateCoClientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminListSubscriberFeeResponse">
    <wsdl:part element="sch0:AdminListSubscriberFeeResponse" name="AdminListSubscriberFeeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentCaptureAddressResponse">
    <wsdl:part element="sch0:GetEnrollmentCaptureAddressResponse" name="GetEnrollmentCaptureAddressResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateApprovalRequest">
    <wsdl:part element="sch0:UpdateApprovalRequest" name="UpdateApprovalRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentDocumentListResponse">
    <wsdl:part element="sch0:GetEnrollmentDocumentListResponse" name="GetEnrollmentDocumentListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetEnrollmentsRequest">
    <wsdl:part element="sch0:AdminGetEnrollmentsRequest" name="AdminGetEnrollmentsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdatePaymentResponse">
    <wsdl:part element="sch0:UpdatePaymentResponse" name="UpdatePaymentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ListEnrollmentFeeResponse">
    <wsdl:part element="sch0:ListEnrollmentFeeResponse" name="ListEnrollmentFeeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAllOverriddenSubscriberFeeRequest">
    <wsdl:part element="sch0:GetAllOverriddenSubscriberFeeRequest" name="GetAllOverriddenSubscriberFeeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminCreateSubscriberFeesRequest">
    <wsdl:part element="sch0:AdminCreateSubscriberFeesRequest" name="AdminCreateSubscriberFeesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminCreateSubscriberDocumentResponse">
    <wsdl:part element="sch0:AdminCreateSubscriberDocumentResponse" name="AdminCreateSubscriberDocumentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetAvoidableReturnsFlaggedClientsResponse">
    <wsdl:part element="sch0:AdminGetAvoidableReturnsFlaggedClientsResponse" name="AdminGetAvoidableReturnsFlaggedClientsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateClientResponse">
    <wsdl:part element="sch0:UpdateClientResponse" name="UpdateClientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateAffiliateUserResponse">
    <wsdl:part element="sch0:CreateAffiliateUserResponse" name="CreateAffiliateUserResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentErrorListRequest">
    <wsdl:part element="sch0:GetEnrollmentErrorListRequest" name="GetEnrollmentErrorListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPaymentListOnPositivePayRequest">
    <wsdl:part element="sch0:GetPaymentListOnPositivePayRequest" name="GetPaymentListOnPositivePayRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetCaptureDraftRequest">
    <wsdl:part element="sch0:GetCaptureDraftRequest" name="GetCaptureDraftRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="FailPaymentResponse">
    <wsdl:part element="sch0:FailPaymentResponse" name="FailPaymentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateFeeScheduleRequest">
    <wsdl:part element="sch0:UpdateFeeScheduleRequest" name="UpdateFeeScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetSubscriberProcessorSetupRequest">
    <wsdl:part element="sch0:AdminGetSubscriberProcessorSetupRequest" name="AdminGetSubscriberProcessorSetupRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SendReactivationCodeRequest">
    <wsdl:part element="sch0:SendReactivationCodeRequest" name="SendReactivationCodeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateHierarchyAffiliateCommissionDistRequest">
    <wsdl:part element="sch0:CreateHierarchyAffiliateCommissionDistRequest" name="CreateHierarchyAffiliateCommissionDistRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateRTPSettlementScheduleRequest">
    <wsdl:part element="sch0:CreateRTPSettlementScheduleRequest" name="CreateRTPSettlementScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreatePositivePayListRequest">
    <wsdl:part element="sch0:CreatePositivePayListRequest" name="CreatePositivePayListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetExternalPayeeListByNameRequest">
    <wsdl:part element="sch0:GetExternalPayeeListByNameRequest" name="GetExternalPayeeListByNameRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ModifyPostedTransactionResponse">
    <wsdl:part element="sch0:ModifyPostedTransactionResponse" name="ModifyPostedTransactionResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPaymentListResponse">
    <wsdl:part element="sch0:GetPaymentListResponse" name="GetPaymentListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSubscriberAffiliateConfigsResponse">
    <wsdl:part element="sch0:GetSubscriberAffiliateConfigsResponse" name="GetSubscriberAffiliateConfigsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAffiliateRequest">
    <wsdl:part element="sch0:GetAffiliateRequest" name="GetAffiliateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateAutoEnrollmentResponse">
    <wsdl:part element="sch0:CreateAutoEnrollmentResponse" name="CreateAutoEnrollmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ActivateSettlementResponse">
    <wsdl:part element="sch0:ActivateSettlementResponse" name="ActivateSettlementResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentTicketListResponse">
    <wsdl:part element="sch0:GetEnrollmentTicketListResponse" name="GetEnrollmentTicketListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateFeeBasisRequest">
    <wsdl:part element="sch0:CreateFeeBasisRequest" name="CreateFeeBasisRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateDraftScheduleRequest">
    <wsdl:part element="sch0:CreateDraftScheduleRequest" name="CreateDraftScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientRTPSettlementRequest">
    <wsdl:part element="sch0:GetClientRTPSettlementRequest" name="GetClientRTPSettlementRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateSubscriberPartnerRequest">
    <wsdl:part element="sch0:CreateSubscriberPartnerRequest" name="CreateSubscriberPartnerRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnvironmentRequest">
    <wsdl:part element="sch0:GetEnvironmentRequest" name="GetEnvironmentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetCoClientsRequest">
    <wsdl:part element="sch0:GetCoClientsRequest" name="GetCoClientsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReturnListResponse">
    <wsdl:part element="sch0:GetReturnListResponse" name="GetReturnListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateRuleSetResponse">
    <wsdl:part element="sch0:CreateRuleSetResponse" name="CreateRuleSetResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateAffiliateUserRequest">
    <wsdl:part element="sch0:CreateAffiliateUserRequest" name="CreateAffiliateUserRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetFeeScheduleListRequest">
    <wsdl:part element="sch0:GetFeeScheduleListRequest" name="GetFeeScheduleListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTransactionListByIdsResponse">
    <wsdl:part element="sch0:GetTransactionListByIdsResponse" name="GetTransactionListByIdsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetTransactionListResponse">
    <wsdl:part element="sch0:AdminGetTransactionListResponse" name="AdminGetTransactionListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminCreateInternalUserRequest">
    <wsdl:part element="sch0:AdminCreateInternalUserRequest" name="AdminCreateInternalUserRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetChildAffiliateListRequest">
    <wsdl:part element="sch0:GetChildAffiliateListRequest" name="GetChildAffiliateListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateSettlementScheduleResponse">
    <wsdl:part element="sch0:UpdateSettlementScheduleResponse" name="UpdateSettlementScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminUpdateAffiliateRequest">
    <wsdl:part element="sch0:AdminUpdateAffiliateRequest" name="AdminUpdateAffiliateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientSettlementListResponse">
    <wsdl:part element="sch0:GetClientSettlementListResponse" name="GetClientSettlementListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetCFTBankAccountListResponse">
    <wsdl:part element="sch0:AdminGetCFTBankAccountListResponse" name="AdminGetCFTBankAccountListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetClientsResponse">
    <wsdl:part element="sch0:AdminGetClientsResponse" name="AdminGetClientsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AddReferralAffiliateRequest">
    <wsdl:part element="sch0:AddReferralAffiliateRequest" name="AddReferralAffiliateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentCommentListRequest">
    <wsdl:part element="sch0:GetEnrollmentCommentListRequest" name="GetEnrollmentCommentListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ReactivateDraftScheduleResponse">
    <wsdl:part element="sch0:ReactivateDraftScheduleResponse" name="ReactivateDraftScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateEnrollmentTicketRequest">
    <wsdl:part element="sch0:CreateEnrollmentTicketRequest" name="CreateEnrollmentTicketRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetStatusEnumListRequest">
    <wsdl:part element="sch0:GetStatusEnumListRequest" name="GetStatusEnumListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateCoClientRequest">
    <wsdl:part element="sch0:UpdateCoClientRequest" name="UpdateCoClientRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSubscriberUserListRequest">
    <wsdl:part element="sch0:GetSubscriberUserListRequest" name="GetSubscriberUserListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="MoveAffiliateHierarchyRequest">
    <wsdl:part element="sch0:MoveAffiliateHierarchyRequest" name="MoveAffiliateHierarchyRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentCaptureAddressRequest">
    <wsdl:part element="sch0:GetEnrollmentCaptureAddressRequest" name="GetEnrollmentCaptureAddressRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetSubscriberDocumentListRequest">
    <wsdl:part element="sch0:AdminGetSubscriberDocumentListRequest" name="AdminGetSubscriberDocumentListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="MakePhonePaymentResponse">
    <wsdl:part element="sch0:MakePhonePaymentResponse" name="MakePhonePaymentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdatePaymentStatusRequest">
    <wsdl:part element="sch0:UpdatePaymentStatusRequest" name="UpdatePaymentStatusRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateExternalCftPaymentResponse">
    <wsdl:part element="sch0:CreateExternalCftPaymentResponse" name="CreateExternalCftPaymentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetSubscriberBankAccountRequest">
    <wsdl:part element="sch0:AdminGetSubscriberBankAccountRequest" name="AdminGetSubscriberBankAccountRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AuthorizeAndLoadPaymentResponse">
    <wsdl:part element="sch0:AuthorizeAndLoadPaymentResponse" name="AuthorizeAndLoadPaymentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientStatusResponse">
    <wsdl:part element="sch0:GetClientStatusResponse" name="GetClientStatusResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SkipDraftResponse">
    <wsdl:part element="sch0:SkipDraftResponse" name="SkipDraftResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateChannelAttributeValueRequest">
    <wsdl:part element="sch0:UpdateChannelAttributeValueRequest" name="UpdateChannelAttributeValueRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReferralAffiliateListRequest">
    <wsdl:part element="sch0:GetReferralAffiliateListRequest" name="GetReferralAffiliateListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetRuleSetListResponse">
    <wsdl:part element="sch0:GetRuleSetListResponse" name="GetRuleSetListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSubscriberPayeeRequest">
    <wsdl:part element="sch0:GetSubscriberPayeeRequest" name="GetSubscriberPayeeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateHierarchyEnrollmentAffiliateRequest">
    <wsdl:part element="sch0:CreateHierarchyEnrollmentAffiliateRequest" name="CreateHierarchyEnrollmentAffiliateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentChannelAttributeValuesListResponse">
    <wsdl:part element="sch0:GetEnrollmentChannelAttributeValuesListResponse" name="GetEnrollmentChannelAttributeValuesListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAffiliateScheduleListRequest">
    <wsdl:part element="sch0:GetAffiliateScheduleListRequest" name="GetAffiliateScheduleListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientBalancesResponse">
    <wsdl:part element="sch0:GetClientBalancesResponse" name="GetClientBalancesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SaveAutoEnrollmentAffiliatesRequest">
    <wsdl:part element="sch0:SaveAutoEnrollmentAffiliatesRequest" name="SaveAutoEnrollmentAffiliatesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminUpdateInternalUserRequest">
    <wsdl:part element="sch0:AdminUpdateInternalUserRequest" name="AdminUpdateInternalUserRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminCreateSubscriberDocumentRequest">
    <wsdl:part element="sch0:AdminCreateSubscriberDocumentRequest" name="AdminCreateSubscriberDocumentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetFeeScheduleListResponse">
    <wsdl:part element="sch0:GetFeeScheduleListResponse" name="GetFeeScheduleListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentCountRequest">
    <wsdl:part element="sch0:GetEnrollmentCountRequest" name="GetEnrollmentCountRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTransactionMethodsRequest">
    <wsdl:part element="sch0:GetTransactionMethodsRequest" name="GetTransactionMethodsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSubscriberPayeeListByNameResponse">
    <wsdl:part element="sch0:GetSubscriberPayeeListByNameResponse" name="GetSubscriberPayeeListByNameResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAffiliateResponse">
    <wsdl:part element="sch0:GetAffiliateResponse" name="GetAffiliateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSettlementCountResponse">
    <wsdl:part element="sch0:GetSettlementCountResponse" name="GetSettlementCountResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateSubscriberPartnerRequest">
    <wsdl:part element="sch0:UpdateSubscriberPartnerRequest" name="UpdateSubscriberPartnerRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateSubscriberPartnerResponse">
    <wsdl:part element="sch0:CreateSubscriberPartnerResponse" name="CreateSubscriberPartnerResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateSuscriberTemplateAssetResponse">
    <wsdl:part element="sch0:CreateSuscriberTemplateAssetResponse" name="CreateSuscriberTemplateAssetResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetSubscriberDocumentListResponse">
    <wsdl:part element="sch0:AdminGetSubscriberDocumentListResponse" name="AdminGetSubscriberDocumentListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminUpdateAffiliateResponse">
    <wsdl:part element="sch0:AdminUpdateAffiliateResponse" name="AdminUpdateAffiliateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientSettlementListRequest">
    <wsdl:part element="sch0:GetClientSettlementListRequest" name="GetClientSettlementListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPaymentDetailsRequest">
    <wsdl:part element="sch0:GetPaymentDetailsRequest" name="GetPaymentDetailsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateDepositItemsResponse">
    <wsdl:part element="sch0:CreateDepositItemsResponse" name="CreateDepositItemsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateDraftItemsResponse">
    <wsdl:part element="sch0:UpdateDraftItemsResponse" name="UpdateDraftItemsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTransactionListResponse">
    <wsdl:part element="sch0:GetTransactionListResponse" name="GetTransactionListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentAffiliateListResponse">
    <wsdl:part element="sch0:GetEnrollmentAffiliateListResponse" name="GetEnrollmentAffiliateListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateAutoEnrollmentAffiliatesResponse">
    <wsdl:part element="sch0:UpdateAutoEnrollmentAffiliatesResponse" name="UpdateAutoEnrollmentAffiliatesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAffiliateUserListResponse">
    <wsdl:part element="sch0:GetAffiliateUserListResponse" name="GetAffiliateUserListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetCheckNumberRequest">
    <wsdl:part element="sch0:GetCheckNumberRequest" name="GetCheckNumberRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateInterClientTransferResponse">
    <wsdl:part element="sch0:CreateInterClientTransferResponse" name="CreateInterClientTransferResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SuspendDraftScheduleRequest">
    <wsdl:part element="sch0:SuspendDraftScheduleRequest" name="SuspendDraftScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminRejectPostedTransactionResponse">
    <wsdl:part element="sch0:AdminRejectPostedTransactionResponse" name="AdminRejectPostedTransactionResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreatePerformanceSettlementBasisResponse">
    <wsdl:part element="sch0:CreatePerformanceSettlementBasisResponse" name="CreatePerformanceSettlementBasisResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="VerifyIpRequest">
    <wsdl:part element="sch0:VerifyIpRequest" name="VerifyIpRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAffiliateTransactionListRequest">
    <wsdl:part element="sch0:GetAffiliateTransactionListRequest" name="GetAffiliateTransactionListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="InstantRemittanceResponse">
    <wsdl:part element="sch0:InstantRemittanceResponse" name="InstantRemittanceResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CancelEnrollmentRequest">
    <wsdl:part element="sch0:CancelEnrollmentRequest" name="CancelEnrollmentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateRTPSettlementScheduleResponse">
    <wsdl:part element="sch0:CreateRTPSettlementScheduleResponse" name="CreateRTPSettlementScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetPostedTransactionListRequest">
    <wsdl:part element="sch0:AdminGetPostedTransactionListRequest" name="AdminGetPostedTransactionListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateSubscriberPayeeRelationshipRequest">
    <wsdl:part element="sch0:CreateSubscriberPayeeRelationshipRequest" name="CreateSubscriberPayeeRelationshipRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateFeeBasisResponse">
    <wsdl:part element="sch0:CreateFeeBasisResponse" name="CreateFeeBasisResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateSubscriberPayeeRequest">
    <wsdl:part element="sch0:CreateSubscriberPayeeRequest" name="CreateSubscriberPayeeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetFeeScheduleResponse">
    <wsdl:part element="sch0:GetFeeScheduleResponse" name="GetFeeScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetScheduleListResponse">
    <wsdl:part element="sch0:GetScheduleListResponse" name="GetScheduleListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdatePartialEnrollmentStatusRequest">
    <wsdl:part element="sch0:UpdatePartialEnrollmentStatusRequest" name="UpdatePartialEnrollmentStatusRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetDraftScheduleResponse">
    <wsdl:part element="sch0:GetDraftScheduleResponse" name="GetDraftScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateAffiliateRequest">
    <wsdl:part element="sch0:CreateAffiliateRequest" name="CreateAffiliateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTransactionDetailsResponse">
    <wsdl:part element="sch0:GetTransactionDetailsResponse" name="GetTransactionDetailsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ListSubscriberFeeResponse">
    <wsdl:part element="sch0:ListSubscriberFeeResponse" name="ListSubscriberFeeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetNonConformingDraftsResponse">
    <wsdl:part element="sch0:AdminGetNonConformingDraftsResponse" name="AdminGetNonConformingDraftsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CompleteEnrollmentResponse">
    <wsdl:part element="sch0:CompleteEnrollmentResponse" name="CompleteEnrollmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetSettlementListRequest">
    <wsdl:part element="sch0:AdminGetSettlementListRequest" name="AdminGetSettlementListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ListEnrollmentFeeRequest">
    <wsdl:part element="sch0:ListEnrollmentFeeRequest" name="ListEnrollmentFeeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminUpdateSubscriberBankAccountResponse">
    <wsdl:part element="sch0:AdminUpdateSubscriberBankAccountResponse" name="AdminUpdateSubscriberBankAccountResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AuthRequest">
    <wsdl:part element="sch0:AuthRequest" name="AuthRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPostedTransactionResponse">
    <wsdl:part element="sch0:GetPostedTransactionResponse" name="GetPostedTransactionResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateEnrollmentCommentRequest">
    <wsdl:part element="sch0:CreateEnrollmentCommentRequest" name="CreateEnrollmentCommentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AuthorizeAndAcceptPaymentRequest">
    <wsdl:part element="sch0:AuthorizeAndAcceptPaymentRequest" name="AuthorizeAndAcceptPaymentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserByIdRequest">
    <wsdl:part element="sch0:GetUserByIdRequest" name="GetUserByIdRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ProcessMultipleReturnsResponse">
    <wsdl:part element="sch0:ProcessMultipleReturnsResponse" name="ProcessMultipleReturnsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetSubscriberDetailResponse">
    <wsdl:part element="sch0:AdminGetSubscriberDetailResponse" name="AdminGetSubscriberDetailResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentTicketListRequest">
    <wsdl:part element="sch0:GetEnrollmentTicketListRequest" name="GetEnrollmentTicketListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetAffiliateRequest">
    <wsdl:part element="sch0:AdminGetAffiliateRequest" name="AdminGetAffiliateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTransactionDetailsRequest">
    <wsdl:part element="sch0:GetTransactionDetailsRequest" name="GetTransactionDetailsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateCoClientRequest">
    <wsdl:part element="sch0:CreateCoClientRequest" name="CreateCoClientRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateAdhocTransferRequest">
    <wsdl:part element="sch0:CreateAdhocTransferRequest" name="CreateAdhocTransferRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetSettlementFeesRequest">
    <wsdl:part element="sch0:AdminGetSettlementFeesRequest" name="AdminGetSettlementFeesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateSubscriberPayeeRelationshipResponse">
    <wsdl:part element="sch0:CreateSubscriberPayeeRelationshipResponse" name="CreateSubscriberPayeeRelationshipResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetTransferBankAccountListRequest">
    <wsdl:part element="sch0:AdminGetTransferBankAccountListRequest" name="AdminGetTransferBankAccountListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetDraftScheduleRequest">
    <wsdl:part element="sch0:GetDraftScheduleRequest" name="GetDraftScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CheckSdnMatchResponse">
    <wsdl:part element="sch0:CheckSdnMatchResponse" name="CheckSdnMatchResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CancelEnrollmentResponse">
    <wsdl:part element="sch0:CancelEnrollmentResponse" name="CancelEnrollmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateApprovalAttemptRequest">
    <wsdl:part element="sch0:CreateApprovalAttemptRequest" name="CreateApprovalAttemptRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AuthorizeAndAdjustPaymentRequest">
    <wsdl:part element="sch0:AuthorizeAndAdjustPaymentRequest" name="AuthorizeAndAdjustPaymentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateAutoEnrollmentRequest">
    <wsdl:part element="sch0:CreateAutoEnrollmentRequest" name="CreateAutoEnrollmentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetSubscriberAccountsResponse">
    <wsdl:part element="sch0:AdminGetSubscriberAccountsResponse" name="AdminGetSubscriberAccountsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetSubscriberListRequest">
    <wsdl:part element="sch0:AdminGetSubscriberListRequest" name="AdminGetSubscriberListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateFeeBasisRequest">
    <wsdl:part element="sch0:UpdateFeeBasisRequest" name="UpdateFeeBasisRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ModifyDraftScheduleResponse">
    <wsdl:part element="sch0:ModifyDraftScheduleResponse" name="ModifyDraftScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAutoEnrollmentDetailFromStoneEagleRequest">
    <wsdl:part element="sch0:GetAutoEnrollmentDetailFromStoneEagleRequest" name="GetAutoEnrollmentDetailFromStoneEagleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUnprocessedPostedTransactionListRequest">
    <wsdl:part element="sch0:GetUnprocessedPostedTransactionListRequest" name="GetUnprocessedPostedTransactionListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSubscriberStatewiseFeeCapListResponse">
    <wsdl:part element="sch0:GetSubscriberStatewiseFeeCapListResponse" name="GetSubscriberStatewiseFeeCapListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientSettlementRequest">
    <wsdl:part element="sch0:GetClientSettlementRequest" name="GetClientSettlementRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReferralAffiliateListResponse">
    <wsdl:part element="sch0:GetReferralAffiliateListResponse" name="GetReferralAffiliateListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateChannelAttributeResponse">
    <wsdl:part element="sch0:CreateChannelAttributeResponse" name="CreateChannelAttributeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdatePartialEnrollmentResponse">
    <wsdl:part element="sch0:UpdatePartialEnrollmentResponse" name="UpdatePartialEnrollmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSettlementCountRequest">
    <wsdl:part element="sch0:GetSettlementCountRequest" name="GetSettlementCountRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetDocumentByIdRequest">
    <wsdl:part element="sch0:GetDocumentByIdRequest" name="GetDocumentByIdRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SuspendFeeScheduleRequest">
    <wsdl:part element="sch0:SuspendFeeScheduleRequest" name="SuspendFeeScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientResponse">
    <wsdl:part element="sch0:GetClientResponse" name="GetClientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientsResponse">
    <wsdl:part element="sch0:GetClientsResponse" name="GetClientsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateEnrollmentTicketRequest">
    <wsdl:part element="sch0:UpdateEnrollmentTicketRequest" name="UpdateEnrollmentTicketRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateClientResponse">
    <wsdl:part element="sch0:CreateClientResponse" name="CreateClientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="MoveAffiliateHierarchyResponse">
    <wsdl:part element="sch0:MoveAffiliateHierarchyResponse" name="MoveAffiliateHierarchyResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="VerifyIpResponse">
    <wsdl:part element="sch0:VerifyIpResponse" name="VerifyIpResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSubscriberUserListResponse">
    <wsdl:part element="sch0:GetSubscriberUserListResponse" name="GetSubscriberUserListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminUpdateSubscriberFeeResponse">
    <wsdl:part element="sch0:AdminUpdateSubscriberFeeResponse" name="AdminUpdateSubscriberFeeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentCommentListResponse">
    <wsdl:part element="sch0:GetEnrollmentCommentListResponse" name="GetEnrollmentCommentListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateSettlementScheduleResponse">
    <wsdl:part element="sch0:CreateSettlementScheduleResponse" name="CreateSettlementScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UnlockAccountRequest">
    <wsdl:part element="sch0:UnlockAccountRequest" name="UnlockAccountRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetFeeScheduleListBasisRequest">
    <wsdl:part element="sch0:GetFeeScheduleListBasisRequest" name="GetFeeScheduleListBasisRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSubscriberTemplateAssetByIdRequest">
    <wsdl:part element="sch0:GetSubscriberTemplateAssetByIdRequest" name="GetSubscriberTemplateAssetByIdRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetNonConformingDraftsRequest">
    <wsdl:part element="sch0:AdminGetNonConformingDraftsRequest" name="AdminGetNonConformingDraftsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ListTopLevelFeeRequest">
    <wsdl:part element="sch0:ListTopLevelFeeRequest" name="ListTopLevelFeeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ModifyDraftScheduleRequest">
    <wsdl:part element="sch0:ModifyDraftScheduleRequest" name="ModifyDraftScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentPayeeRequest">
    <wsdl:part element="sch0:GetEnrollmentPayeeRequest" name="GetEnrollmentPayeeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateAffiliateDocumentResponse">
    <wsdl:part element="sch0:UpdateAffiliateDocumentResponse" name="UpdateAffiliateDocumentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPositivePayListResponse">
    <wsdl:part element="sch0:GetPositivePayListResponse" name="GetPositivePayListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ListSubscriberFeeRequest">
    <wsdl:part element="sch0:ListSubscriberFeeRequest" name="ListSubscriberFeeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreatePrenoteScheduleResponse">
    <wsdl:part element="sch0:CreatePrenoteScheduleResponse" name="CreatePrenoteScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateAdhocTransferResponse">
    <wsdl:part element="sch0:UpdateAdhocTransferResponse" name="UpdateAdhocTransferResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientBalancesRequest">
    <wsdl:part element="sch0:GetClientBalancesRequest" name="GetClientBalancesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdatePartialEnrollmentRequest">
    <wsdl:part element="sch0:UpdatePartialEnrollmentRequest" name="UpdatePartialEnrollmentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientSettlementResponse">
    <wsdl:part element="sch0:GetClientSettlementResponse" name="GetClientSettlementResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SaveChannelAttributeValueRequest">
    <wsdl:part element="sch0:SaveChannelAttributeValueRequest" name="SaveChannelAttributeValueRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ReactivateFeeScheduleRequest">
    <wsdl:part element="sch0:ReactivateFeeScheduleRequest" name="ReactivateFeeScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSPAForecastListResponse">
    <wsdl:part element="sch0:GetSPAForecastListResponse" name="GetSPAForecastListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateEnrollmentTicketResponse">
    <wsdl:part element="sch0:UpdateEnrollmentTicketResponse" name="UpdateEnrollmentTicketResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ModifyLoanAmountRequest">
    <wsdl:part element="sch0:ModifyLoanAmountRequest" name="ModifyLoanAmountRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSettlementApprovalListRequest">
    <wsdl:part element="sch0:GetSettlementApprovalListRequest" name="GetSettlementApprovalListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetExternalPayeeListByNameResponse">
    <wsdl:part element="sch0:GetExternalPayeeListByNameResponse" name="GetExternalPayeeListByNameResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SkipPaymentRequest">
    <wsdl:part element="sch0:SkipPaymentRequest" name="SkipPaymentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetRuleSetListRequest">
    <wsdl:part element="sch0:GetRuleSetListRequest" name="GetRuleSetListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetInternalUserListResponse">
    <wsdl:part element="sch0:AdminGetInternalUserListResponse" name="AdminGetInternalUserListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SaveChannelAttributeValueResponse">
    <wsdl:part element="sch0:SaveChannelAttributeValueResponse" name="SaveChannelAttributeValueResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientIdsRequest">
    <wsdl:part element="sch0:GetClientIdsRequest" name="GetClientIdsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateChannelAttributeRequest">
    <wsdl:part element="sch0:CreateChannelAttributeRequest" name="CreateChannelAttributeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetDraftScheduleListWithNextDateResponse">
    <wsdl:part element="sch0:GetDraftScheduleListWithNextDateResponse" name="GetDraftScheduleListWithNextDateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateAffiliateDocumentRequest">
    <wsdl:part element="sch0:UpdateAffiliateDocumentRequest" name="UpdateAffiliateDocumentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetNextScheduleRequest">
    <wsdl:part element="sch0:GetNextScheduleRequest" name="GetNextScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAffiliateDocumentListResponse">
    <wsdl:part element="sch0:GetAffiliateDocumentListResponse" name="GetAffiliateDocumentListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="InstantRemittanceRequest">
    <wsdl:part element="sch0:InstantRemittanceRequest" name="InstantRemittanceRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetAffiliateListResponse">
    <wsdl:part element="sch0:AdminGetAffiliateListResponse" name="AdminGetAffiliateListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminListTopLevelFeeRequest">
    <wsdl:part element="sch0:AdminListTopLevelFeeRequest" name="AdminListTopLevelFeeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUnprocessedPostedTransactionListResponse">
    <wsdl:part element="sch0:GetUnprocessedPostedTransactionListResponse" name="GetUnprocessedPostedTransactionListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="VerifyClientManuallyRequest">
    <wsdl:part element="sch0:VerifyClientManuallyRequest" name="VerifyClientManuallyRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AuthorizeAndAdvancePaymentResponse">
    <wsdl:part element="sch0:AuthorizeAndAdvancePaymentResponse" name="AuthorizeAndAdvancePaymentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAffiliateListResponse">
    <wsdl:part element="sch0:GetAffiliateListResponse" name="GetAffiliateListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UploadDocumentRequest">
    <wsdl:part element="sch0:UploadDocumentRequest" name="UploadDocumentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPositivePayDetailsRequest">
    <wsdl:part element="sch0:GetPositivePayDetailsRequest" name="GetPositivePayDetailsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetDocumentByIdResponse">
    <wsdl:part element="sch0:GetDocumentByIdResponse" name="GetDocumentByIdResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminCreateInternalUserResponse">
    <wsdl:part element="sch0:AdminCreateInternalUserResponse" name="AdminCreateInternalUserResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AuthorizeAndAdjustPaymentResponse">
    <wsdl:part element="sch0:AuthorizeAndAdjustPaymentResponse" name="AuthorizeAndAdjustPaymentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdatePhonePaymentInquiryRequest">
    <wsdl:part element="sch0:UpdatePhonePaymentInquiryRequest" name="UpdatePhonePaymentInquiryRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ChangePasswordForTokenResponse">
    <wsdl:part element="sch0:ChangePasswordForTokenResponse" name="ChangePasswordForTokenResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientsEnhancedResponse">
    <wsdl:part element="sch0:GetClientsEnhancedResponse" name="GetClientsEnhancedResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetCheckNumberResponse">
    <wsdl:part element="sch0:GetCheckNumberResponse" name="GetCheckNumberResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetInternalUserListRequest">
    <wsdl:part element="sch0:AdminGetInternalUserListRequest" name="AdminGetInternalUserListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateCaptureDraftRequest">
    <wsdl:part element="sch0:UpdateCaptureDraftRequest" name="UpdateCaptureDraftRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AuthResponse">
    <wsdl:part element="sch0:AuthResponse" name="AuthResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SearchCFTPayeesResponse">
    <wsdl:part element="sch0:SearchCFTPayeesResponse" name="SearchCFTPayeesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateClientBankAccountResponse">
    <wsdl:part element="sch0:CreateClientBankAccountResponse" name="CreateClientBankAccountResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DelayDraftResponse">
    <wsdl:part element="sch0:DelayDraftResponse" name="DelayDraftResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPartnerListRequest">
    <wsdl:part element="sch0:GetPartnerListRequest" name="GetPartnerListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateEnrollmentCommentResponse">
    <wsdl:part element="sch0:CreateEnrollmentCommentResponse" name="CreateEnrollmentCommentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreatePositivePayListResponse">
    <wsdl:part element="sch0:CreatePositivePayListResponse" name="CreatePositivePayListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentErrorListResponse">
    <wsdl:part element="sch0:GetEnrollmentErrorListResponse" name="GetEnrollmentErrorListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetScheduleResponse">
    <wsdl:part element="sch0:GetScheduleResponse" name="GetScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateEnrollmentDocumentResponse">
    <wsdl:part element="sch0:CreateEnrollmentDocumentResponse" name="CreateEnrollmentDocumentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminListTopLevelFeeResponse">
    <wsdl:part element="sch0:AdminListTopLevelFeeResponse" name="AdminListTopLevelFeeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CaptureDraftRequest">
    <wsdl:part element="sch0:CaptureDraftRequest" name="CaptureDraftRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentTicketRequest">
    <wsdl:part element="sch0:GetEnrollmentTicketRequest" name="GetEnrollmentTicketRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSubscriberTemplateAssetByIdResponse">
    <wsdl:part element="sch0:GetSubscriberTemplateAssetByIdResponse" name="GetSubscriberTemplateAssetByIdResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateSubscriberTransactionReceiptRequest">
    <wsdl:part element="sch0:UpdateSubscriberTransactionReceiptRequest" name="UpdateSubscriberTransactionReceiptRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateClientBankAccountRequest">
    <wsdl:part element="sch0:CreateClientBankAccountRequest" name="CreateClientBankAccountRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetDraftScheduleListResponse">
    <wsdl:part element="sch0:GetDraftScheduleListResponse" name="GetDraftScheduleListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateSubscriberUserRequest">
    <wsdl:part element="sch0:CreateSubscriberUserRequest" name="CreateSubscriberUserRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CaptureEnrollmentAddressResponse">
    <wsdl:part element="sch0:CaptureEnrollmentAddressResponse" name="CaptureEnrollmentAddressResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ModifyPostedTransactionRequest">
    <wsdl:part element="sch0:ModifyPostedTransactionRequest" name="ModifyPostedTransactionRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminUpdateActivateEnrollmentResponse">
    <wsdl:part element="sch0:AdminUpdateActivateEnrollmentResponse" name="AdminUpdateActivateEnrollmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateAutoPayeeInfoRequest">
    <wsdl:part element="sch0:UpdateAutoPayeeInfoRequest" name="UpdateAutoPayeeInfoRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SendReactivationCodeResponse">
    <wsdl:part element="sch0:SendReactivationCodeResponse" name="SendReactivationCodeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateEnrollmentErrorResponse">
    <wsdl:part element="sch0:CreateEnrollmentErrorResponse" name="CreateEnrollmentErrorResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateAffiliateRequest">
    <wsdl:part element="sch0:UpdateAffiliateRequest" name="UpdateAffiliateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAffiliateClientsRequest">
    <wsdl:part element="sch0:GetAffiliateClientsRequest" name="GetAffiliateClientsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateCoClientResponse">
    <wsdl:part element="sch0:UpdateCoClientResponse" name="UpdateCoClientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSubscriberPayeeListByNameRequest">
    <wsdl:part element="sch0:GetSubscriberPayeeListByNameRequest" name="GetSubscriberPayeeListByNameRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateSubscriberUserResponse">
    <wsdl:part element="sch0:UpdateSubscriberUserResponse" name="UpdateSubscriberUserResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetFeeScheduleListBasisResponse">
    <wsdl:part element="sch0:GetFeeScheduleListBasisResponse" name="GetFeeScheduleListBasisResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminViewEnrollmentResponse">
    <wsdl:part element="sch0:AdminViewEnrollmentResponse" name="AdminViewEnrollmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreatePerformanceSettlementRequest">
    <wsdl:part element="sch0:CreatePerformanceSettlementRequest" name="CreatePerformanceSettlementRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreatePartialEnrollmentRequest">
    <wsdl:part element="sch0:CreatePartialEnrollmentRequest" name="CreatePartialEnrollmentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminUpdateActivateEnrollmentRequest">
    <wsdl:part element="sch0:AdminUpdateActivateEnrollmentRequest" name="AdminUpdateActivateEnrollmentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetFeeBasisRequest">
    <wsdl:part element="sch0:GetFeeBasisRequest" name="GetFeeBasisRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateClientRequest">
    <wsdl:part element="sch0:CreateClientRequest" name="CreateClientRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetDraftScheduleModifiableDatesRequest">
    <wsdl:part element="sch0:GetDraftScheduleModifiableDatesRequest" name="GetDraftScheduleModifiableDatesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateAutoNPNFeeResponse">
    <wsdl:part element="sch0:CreateAutoNPNFeeResponse" name="CreateAutoNPNFeeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetAvoidableReturnsFlaggedClientsRequest">
    <wsdl:part element="sch0:AdminGetAvoidableReturnsFlaggedClientsRequest" name="AdminGetAvoidableReturnsFlaggedClientsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetSubscriberBankAccountListResponse">
    <wsdl:part element="sch0:AdminGetSubscriberBankAccountListResponse" name="AdminGetSubscriberBankAccountListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateEnrollmentTicketResponse">
    <wsdl:part element="sch0:CreateEnrollmentTicketResponse" name="CreateEnrollmentTicketResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientBankAccountResponse">
    <wsdl:part element="sch0:GetClientBankAccountResponse" name="GetClientBankAccountResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateAutoEnrollmentAffiliatesRequest">
    <wsdl:part element="sch0:UpdateAutoEnrollmentAffiliatesRequest" name="UpdateAutoEnrollmentAffiliatesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ListTopLevelFeeResponse">
    <wsdl:part element="sch0:ListTopLevelFeeResponse" name="ListTopLevelFeeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetScheduleRequest">
    <wsdl:part element="sch0:GetScheduleRequest" name="GetScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AuthorizeAndAcceptPaymentResponse">
    <wsdl:part element="sch0:AuthorizeAndAcceptPaymentResponse" name="AuthorizeAndAcceptPaymentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateSubscriberUserResponse">
    <wsdl:part element="sch0:CreateSubscriberUserResponse" name="CreateSubscriberUserResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminUpdateSubscriberResponse">
    <wsdl:part element="sch0:AdminUpdateSubscriberResponse" name="AdminUpdateSubscriberResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CaptureEnrollmentAddressRequest">
    <wsdl:part element="sch0:CaptureEnrollmentAddressRequest" name="CaptureEnrollmentAddressRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateSettlementScheduleRequest">
    <wsdl:part element="sch0:CreateSettlementScheduleRequest" name="CreateSettlementScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateFeeScheduleResponse">
    <wsdl:part element="sch0:CreateFeeScheduleResponse" name="CreateFeeScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetCancelReasonCodesResponse">
    <wsdl:part element="sch0:GetCancelReasonCodesResponse" name="GetCancelReasonCodesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientBankAccountListRequest">
    <wsdl:part element="sch0:GetClientBankAccountListRequest" name="GetClientBankAccountListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateEnrollmentDocumentRequest">
    <wsdl:part element="sch0:CreateEnrollmentDocumentRequest" name="CreateEnrollmentDocumentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSubscriberPayeeListRequest">
    <wsdl:part element="sch0:GetSubscriberPayeeListRequest" name="GetSubscriberPayeeListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAffiliateHierarchyRequest">
    <wsdl:part element="sch0:GetAffiliateHierarchyRequest" name="GetAffiliateHierarchyRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSPAForecastListRequest">
    <wsdl:part element="sch0:GetSPAForecastListRequest" name="GetSPAForecastListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAllOverriddenSubscriberFeeResponse">
    <wsdl:part element="sch0:GetAllOverriddenSubscriberFeeResponse" name="GetAllOverriddenSubscriberFeeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReturnListRequest">
    <wsdl:part element="sch0:GetReturnListRequest" name="GetReturnListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdatePhonePaymentInquiryResponse">
    <wsdl:part element="sch0:UpdatePhonePaymentInquiryResponse" name="UpdatePhonePaymentInquiryResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPaymentMonitorListRequest">
    <wsdl:part element="sch0:GetPaymentMonitorListRequest" name="GetPaymentMonitorListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdatePaymentStatusResponse">
    <wsdl:part element="sch0:UpdatePaymentStatusResponse" name="UpdatePaymentStatusResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AuthorizePaymentRequest">
    <wsdl:part element="sch0:AuthorizePaymentRequest" name="AuthorizePaymentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateExternalCftPaymentRequest">
    <wsdl:part element="sch0:CreateExternalCftPaymentRequest" name="CreateExternalCftPaymentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateHierarchyAffiliateCommissionDistResponse">
    <wsdl:part element="sch0:CreateHierarchyAffiliateCommissionDistResponse" name="CreateHierarchyAffiliateCommissionDistResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSubscriberStatewiseFeeCapListRequest">
    <wsdl:part element="sch0:GetSubscriberStatewiseFeeCapListRequest" name="GetSubscriberStatewiseFeeCapListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetDraftScheduleModifiableDatesResponse">
    <wsdl:part element="sch0:GetDraftScheduleModifiableDatesResponse" name="GetDraftScheduleModifiableDatesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetDraftErrorListResponse">
    <wsdl:part element="sch0:GetDraftErrorListResponse" name="GetDraftErrorListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTransactionListRequest">
    <wsdl:part element="sch0:GetTransactionListRequest" name="GetTransactionListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateRuleSetDefinitionRequest">
    <wsdl:part element="sch0:UpdateRuleSetDefinitionRequest" name="UpdateRuleSetDefinitionRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentExceptionsListResponse">
    <wsdl:part element="sch0:GetEnrollmentExceptionsListResponse" name="GetEnrollmentExceptionsListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetAffiliateScheduleListResponse">
    <wsdl:part element="sch0:GetAffiliateScheduleListResponse" name="GetAffiliateScheduleListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetRuleSetRequest">
    <wsdl:part element="sch0:GetRuleSetRequest" name="GetRuleSetRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminUpdateSubscriberBankAccountRequest">
    <wsdl:part element="sch0:AdminUpdateSubscriberBankAccountRequest" name="AdminUpdateSubscriberBankAccountRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateDepositItemsRequest">
    <wsdl:part element="sch0:CreateDepositItemsRequest" name="CreateDepositItemsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CaptureDraftResponse">
    <wsdl:part element="sch0:CaptureDraftResponse" name="CaptureDraftResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateReturnScheduleResponse">
    <wsdl:part element="sch0:CreateReturnScheduleResponse" name="CreateReturnScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetClientIdsResponse">
    <wsdl:part element="sch0:GetClientIdsResponse" name="GetClientIdsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetBankListRequest">
    <wsdl:part element="sch0:GetBankListRequest" name="GetBankListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateDraftItemsRequest">
    <wsdl:part element="sch0:UpdateDraftItemsRequest" name="UpdateDraftItemsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateDraftItemsResponse">
    <wsdl:part element="sch0:CreateDraftItemsResponse" name="CreateDraftItemsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateRuleSetRequest">
    <wsdl:part element="sch0:UpdateRuleSetRequest" name="UpdateRuleSetRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateRuleSetRequest">
    <wsdl:part element="sch0:CreateRuleSetRequest" name="CreateRuleSetRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminCreateAffiliateResponse">
    <wsdl:part element="sch0:AdminCreateAffiliateResponse" name="AdminCreateAffiliateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetDraftScheduleListRequest">
    <wsdl:part element="sch0:GetDraftScheduleListRequest" name="GetDraftScheduleListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetDraftScheduleListWithNextDateRequest">
    <wsdl:part element="sch0:GetDraftScheduleListWithNextDateRequest" name="GetDraftScheduleListWithNextDateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetReturnScheduleRequest">
    <wsdl:part element="sch0:GetReturnScheduleRequest" name="GetReturnScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTransactionListByIdsRequest">
    <wsdl:part element="sch0:GetTransactionListByIdsRequest" name="GetTransactionListByIdsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEnrollmentDocumentRequest">
    <wsdl:part element="sch0:GetEnrollmentDocumentRequest" name="GetEnrollmentDocumentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ModifyLoanDueDateRequest">
    <wsdl:part element="sch0:ModifyLoanDueDateRequest" name="ModifyLoanDueDateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreatePrenoteScheduleRequest">
    <wsdl:part element="sch0:CreatePrenoteScheduleRequest" name="CreatePrenoteScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateClientRequest">
    <wsdl:part element="sch0:UpdateClientRequest" name="UpdateClientRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminGetSubscriberAccountsRequest">
    <wsdl:part element="sch0:AdminGetSubscriberAccountsRequest" name="AdminGetSubscriberAccountsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RemoveAffiliateDocumentRequest">
    <wsdl:part element="sch0:RemoveAffiliateDocumentRequest" name="RemoveAffiliateDocumentRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="npn">
    <wsdl:operation name="CreateSubscriberUser">
      <wsdl:input message="tns:CreateSubscriberUserRequest" name="CreateSubscriberUserRequest"></wsdl:input>
      <wsdl:output message="tns:CreateSubscriberUserResponse" name="CreateSubscriberUserResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateSubscriberPartner">
      <wsdl:input message="tns:CreateSubscriberPartnerRequest" name="CreateSubscriberPartnerRequest"></wsdl:input>
      <wsdl:output message="tns:CreateSubscriberPartnerResponse" name="CreateSubscriberPartnerResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteClientBankAccount">
      <wsdl:input message="tns:DeleteClientBankAccountRequest" name="DeleteClientBankAccountRequest"></wsdl:input>
      <wsdl:output message="tns:DeleteClientBankAccountResponse" name="DeleteClientBankAccountResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPositivePayList">
      <wsdl:input message="tns:GetPositivePayListRequest" name="GetPositivePayListRequest"></wsdl:input>
      <wsdl:output message="tns:GetPositivePayListResponse" name="GetPositivePayListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminCreateSubscriber">
      <wsdl:input message="tns:AdminCreateSubscriberRequest" name="AdminCreateSubscriberRequest"></wsdl:input>
      <wsdl:output message="tns:AdminCreateSubscriberResponse" name="AdminCreateSubscriberResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdatePaymentStatus">
      <wsdl:input message="tns:UpdatePaymentStatusRequest" name="UpdatePaymentStatusRequest"></wsdl:input>
      <wsdl:output message="tns:UpdatePaymentStatusResponse" name="UpdatePaymentStatusResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SendReactivationCode">
      <wsdl:input message="tns:SendReactivationCodeRequest" name="SendReactivationCodeRequest"></wsdl:input>
      <wsdl:output message="tns:SendReactivationCodeResponse" name="SendReactivationCodeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetSubscriberProcessorSetup">
      <wsdl:input message="tns:AdminGetSubscriberProcessorSetupRequest" name="AdminGetSubscriberProcessorSetupRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetSubscriberProcessorSetupResponse" name="AdminGetSubscriberProcessorSetupResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdatePartialEnrollment">
      <wsdl:input message="tns:UpdatePartialEnrollmentRequest" name="UpdatePartialEnrollmentRequest"></wsdl:input>
      <wsdl:output message="tns:UpdatePartialEnrollmentResponse" name="UpdatePartialEnrollmentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetSubscriberAccounts">
      <wsdl:input message="tns:AdminGetSubscriberAccountsRequest" name="AdminGetSubscriberAccountsRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetSubscriberAccountsResponse" name="AdminGetSubscriberAccountsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCoClients">
      <wsdl:input message="tns:GetCoClientsRequest" name="GetCoClientsRequest"></wsdl:input>
      <wsdl:output message="tns:GetCoClientsResponse" name="GetCoClientsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentCount">
      <wsdl:input message="tns:GetEnrollmentCountRequest" name="GetEnrollmentCountRequest"></wsdl:input>
      <wsdl:output message="tns:GetEnrollmentCountResponse" name="GetEnrollmentCountResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AuthorizeAndAdjustPayment">
      <wsdl:input message="tns:AuthorizeAndAdjustPaymentRequest" name="AuthorizeAndAdjustPaymentRequest"></wsdl:input>
      <wsdl:output message="tns:AuthorizeAndAdjustPaymentResponse" name="AuthorizeAndAdjustPaymentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTransactionList">
      <wsdl:input message="tns:GetTransactionListRequest" name="GetTransactionListRequest"></wsdl:input>
      <wsdl:output message="tns:GetTransactionListResponse" name="GetTransactionListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateFeeSchedule">
      <wsdl:input message="tns:CreateFeeScheduleRequest" name="CreateFeeScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:CreateFeeScheduleResponse" name="CreateFeeScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateSettlementSchedule">
      <wsdl:input message="tns:UpdateSettlementScheduleRequest" name="UpdateSettlementScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateSettlementScheduleResponse" name="UpdateSettlementScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateEnrollmentTicket">
      <wsdl:input message="tns:UpdateEnrollmentTicketRequest" name="UpdateEnrollmentTicketRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateEnrollmentTicketResponse" name="UpdateEnrollmentTicketResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ActivateSettlement">
      <wsdl:input message="tns:ActivateSettlementRequest" name="ActivateSettlementRequest"></wsdl:input>
      <wsdl:output message="tns:ActivateSettlementResponse" name="ActivateSettlementResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateDraftSchedule">
      <wsdl:input message="tns:UpdateDraftScheduleRequest" name="UpdateDraftScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateDraftScheduleResponse" name="UpdateDraftScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetSubscriberDetail">
      <wsdl:input message="tns:AdminGetSubscriberDetailRequest" name="AdminGetSubscriberDetailRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetSubscriberDetailResponse" name="AdminGetSubscriberDetailResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClients">
      <wsdl:input message="tns:GetClientsRequest" name="GetClientsRequest"></wsdl:input>
      <wsdl:output message="tns:GetClientsResponse" name="GetClientsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateFeeBasis">
      <wsdl:input message="tns:CreateFeeBasisRequest" name="CreateFeeBasisRequest"></wsdl:input>
      <wsdl:output message="tns:CreateFeeBasisResponse" name="CreateFeeBasisResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAffiliateDocumentList">
      <wsdl:input message="tns:GetAffiliateDocumentListRequest" name="GetAffiliateDocumentListRequest"></wsdl:input>
      <wsdl:output message="tns:GetAffiliateDocumentListResponse" name="GetAffiliateDocumentListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ListTopLevelFee">
      <wsdl:input message="tns:ListTopLevelFeeRequest" name="ListTopLevelFeeRequest"></wsdl:input>
      <wsdl:output message="tns:ListTopLevelFeeResponse" name="ListTopLevelFeeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriberAffiliateConfigs">
      <wsdl:input message="tns:GetSubscriberAffiliateConfigsRequest" name="GetSubscriberAffiliateConfigsRequest"></wsdl:input>
      <wsdl:output message="tns:GetSubscriberAffiliateConfigsResponse" name="GetSubscriberAffiliateConfigsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReferralAffiliateList">
      <wsdl:input message="tns:GetReferralAffiliateListRequest" name="GetReferralAffiliateListRequest"></wsdl:input>
      <wsdl:output message="tns:GetReferralAffiliateListResponse" name="GetReferralAffiliateListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateApprovalAttempt">
      <wsdl:input message="tns:CreateApprovalAttemptRequest" name="CreateApprovalAttemptRequest"></wsdl:input>
      <wsdl:output message="tns:CreateApprovalAttemptResponse" name="CreateApprovalAttemptResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateSubscriberPayeeRelationship">
      <wsdl:input message="tns:CreateSubscriberPayeeRelationshipRequest" name="CreateSubscriberPayeeRelationshipRequest"></wsdl:input>
      <wsdl:output message="tns:CreateSubscriberPayeeRelationshipResponse" name="CreateSubscriberPayeeRelationshipResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateSubscriberAffiliateConfigs">
      <wsdl:input message="tns:CreateSubscriberAffiliateConfigsRequest" name="CreateSubscriberAffiliateConfigsRequest"></wsdl:input>
      <wsdl:output message="tns:CreateSubscriberAffiliateConfigsResponse" name="CreateSubscriberAffiliateConfigsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSummaryScheduleList">
      <wsdl:input message="tns:GetSummaryScheduleListRequest" name="GetSummaryScheduleListRequest"></wsdl:input>
      <wsdl:output message="tns:GetSummaryScheduleListResponse" name="GetSummaryScheduleListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateReturnSchedule">
      <wsdl:input message="tns:UpdateReturnScheduleRequest" name="UpdateReturnScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateReturnScheduleResponse" name="UpdateReturnScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSchedule">
      <wsdl:input message="tns:GetScheduleRequest" name="GetScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:GetScheduleResponse" name="GetScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RemoveAffiliateDocument">
      <wsdl:input message="tns:RemoveAffiliateDocumentRequest" name="RemoveAffiliateDocumentRequest"></wsdl:input>
      <wsdl:output message="tns:RemoveAffiliateDocumentResponse" name="RemoveAffiliateDocumentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreatePerformanceSettlement">
      <wsdl:input message="tns:CreatePerformanceSettlementRequest" name="CreatePerformanceSettlementRequest"></wsdl:input>
      <wsdl:output message="tns:CreatePerformanceSettlementResponse" name="CreatePerformanceSettlementResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateExternalCftPayment">
      <wsdl:input message="tns:CreateExternalCftPaymentRequest" name="CreateExternalCftPaymentRequest"></wsdl:input>
      <wsdl:output message="tns:CreateExternalCftPaymentResponse" name="CreateExternalCftPaymentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReturnSchedule">
      <wsdl:input message="tns:GetReturnScheduleRequest" name="GetReturnScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:GetReturnScheduleResponse" name="GetReturnScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetSettlementFees">
      <wsdl:input message="tns:AdminGetSettlementFeesRequest" name="AdminGetSettlementFeesRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetSettlementFeesResponse" name="AdminGetSettlementFeesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentAffiliateList">
      <wsdl:input message="tns:GetEnrollmentAffiliateListRequest" name="GetEnrollmentAffiliateListRequest"></wsdl:input>
      <wsdl:output message="tns:GetEnrollmentAffiliateListResponse" name="GetEnrollmentAffiliateListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdatePayment">
      <wsdl:input message="tns:UpdatePaymentRequest" name="UpdatePaymentRequest"></wsdl:input>
      <wsdl:output message="tns:UpdatePaymentResponse" name="UpdatePaymentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriberPayeeListByName">
      <wsdl:input message="tns:GetSubscriberPayeeListByNameRequest" name="GetSubscriberPayeeListByNameRequest"></wsdl:input>
      <wsdl:output message="tns:GetSubscriberPayeeListByNameResponse" name="GetSubscriberPayeeListByNameResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyLoanDueDate">
      <wsdl:input message="tns:ModifyLoanDueDateRequest" name="ModifyLoanDueDateRequest"></wsdl:input>
      <wsdl:output message="tns:ModifyLoanDueDateResponse" name="ModifyLoanDueDateResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UploadDocument">
      <wsdl:input message="tns:UploadDocumentRequest" name="UploadDocumentRequest"></wsdl:input>
      <wsdl:output message="tns:UploadDocumentResponse" name="UploadDocumentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateFeeSchedule">
      <wsdl:input message="tns:UpdateFeeScheduleRequest" name="UpdateFeeScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateFeeScheduleResponse" name="UpdateFeeScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCancelReasonCodes">
      <wsdl:input message="tns:GetCancelReasonCodesRequest" name="GetCancelReasonCodesRequest"></wsdl:input>
      <wsdl:output message="tns:GetCancelReasonCodesResponse" name="GetCancelReasonCodesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateChannelAttributeValue">
      <wsdl:input message="tns:UpdateChannelAttributeValueRequest" name="UpdateChannelAttributeValueRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateChannelAttributeValueResponse" name="UpdateChannelAttributeValueResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateEnrollmentDocument">
      <wsdl:input message="tns:CreateEnrollmentDocumentRequest" name="CreateEnrollmentDocumentRequest"></wsdl:input>
      <wsdl:output message="tns:CreateEnrollmentDocumentResponse" name="CreateEnrollmentDocumentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetAffiliate">
      <wsdl:input message="tns:AdminGetAffiliateRequest" name="AdminGetAffiliateRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetAffiliateResponse" name="AdminGetAffiliateResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdatePartialEnrollmentStatus">
      <wsdl:input message="tns:UpdatePartialEnrollmentStatusRequest" name="UpdatePartialEnrollmentStatusRequest"></wsdl:input>
      <wsdl:output message="tns:UpdatePartialEnrollmentStatusResponse" name="UpdatePartialEnrollmentStatusResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetAffiliateList">
      <wsdl:input message="tns:AdminGetAffiliateListRequest" name="AdminGetAffiliateListRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetAffiliateListResponse" name="AdminGetAffiliateListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GenerateClientBankStatement">
      <wsdl:input message="tns:GenerateClientBankStatementRequest" name="GenerateClientBankStatementRequest"></wsdl:input>
      <wsdl:output message="tns:GenerateClientBankStatementResponse" name="GenerateClientBankStatementResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetScheduleList">
      <wsdl:input message="tns:AdminGetScheduleListRequest" name="AdminGetScheduleListRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetScheduleListResponse" name="AdminGetScheduleListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateEnrollmentError">
      <wsdl:input message="tns:UpdateEnrollmentErrorRequest" name="UpdateEnrollmentErrorRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateEnrollmentErrorResponse" name="UpdateEnrollmentErrorResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetBankList">
      <wsdl:input message="tns:GetBankListRequest" name="GetBankListRequest"></wsdl:input>
      <wsdl:output message="tns:GetBankListResponse" name="GetBankListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateAutoEnrollmentAffiliates">
      <wsdl:input message="tns:UpdateAutoEnrollmentAffiliatesRequest" name="UpdateAutoEnrollmentAffiliatesRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateAutoEnrollmentAffiliatesResponse" name="UpdateAutoEnrollmentAffiliatesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyHierarchyAffiliateCommissionDist">
      <wsdl:input message="tns:ModifyHierarchyAffiliateCommissionDistRequest" name="ModifyHierarchyAffiliateCommissionDistRequest"></wsdl:input>
      <wsdl:output message="tns:ModifyHierarchyAffiliateCommissionDistResponse" name="ModifyHierarchyAffiliateCommissionDistResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateAdhocTransfer">
      <wsdl:input message="tns:CreateAdhocTransferRequest" name="CreateAdhocTransferRequest"></wsdl:input>
      <wsdl:output message="tns:CreateAdhocTransferResponse" name="CreateAdhocTransferResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateAutoNPNFee">
      <wsdl:input message="tns:CreateAutoNPNFeeRequest" name="CreateAutoNPNFeeRequest"></wsdl:input>
      <wsdl:output message="tns:CreateAutoNPNFeeResponse" name="CreateAutoNPNFeeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetChildAffiliateList">
      <wsdl:input message="tns:GetChildAffiliateListRequest" name="GetChildAffiliateListRequest"></wsdl:input>
      <wsdl:output message="tns:GetChildAffiliateListResponse" name="GetChildAffiliateListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyDraftSchedule">
      <wsdl:input message="tns:ModifyDraftScheduleRequest" name="ModifyDraftScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:ModifyDraftScheduleResponse" name="ModifyDraftScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPositivePayDetails">
      <wsdl:input message="tns:GetPositivePayDetailsRequest" name="GetPositivePayDetailsRequest"></wsdl:input>
      <wsdl:output message="tns:GetPositivePayDetailsResponse" name="GetPositivePayDetailsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriberPayee">
      <wsdl:input message="tns:GetSubscriberPayeeRequest" name="GetSubscriberPayeeRequest"></wsdl:input>
      <wsdl:output message="tns:GetSubscriberPayeeResponse" name="GetSubscriberPayeeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientIds">
      <wsdl:input message="tns:GetClientIdsRequest" name="GetClientIdsRequest"></wsdl:input>
      <wsdl:output message="tns:GetClientIdsResponse" name="GetClientIdsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetNonConformingDrafts">
      <wsdl:input message="tns:AdminGetNonConformingDraftsRequest" name="AdminGetNonConformingDraftsRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetNonConformingDraftsResponse" name="AdminGetNonConformingDraftsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAllOverriddenSubscriberFee">
      <wsdl:input message="tns:GetAllOverriddenSubscriberFeeRequest" name="GetAllOverriddenSubscriberFeeRequest"></wsdl:input>
      <wsdl:output message="tns:GetAllOverriddenSubscriberFeeResponse" name="GetAllOverriddenSubscriberFeeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateHierarchyAffiliateCommissionDist">
      <wsdl:input message="tns:CreateHierarchyAffiliateCommissionDistRequest" name="CreateHierarchyAffiliateCommissionDistRequest"></wsdl:input>
      <wsdl:output message="tns:CreateHierarchyAffiliateCommissionDistResponse" name="CreateHierarchyAffiliateCommissionDistResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPaymentDetails">
      <wsdl:input message="tns:GetPaymentDetailsRequest" name="GetPaymentDetailsRequest"></wsdl:input>
      <wsdl:output message="tns:GetPaymentDetailsResponse" name="GetPaymentDetailsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateSubscriberPayee">
      <wsdl:input message="tns:UpdateSubscriberPayeeRequest" name="UpdateSubscriberPayeeRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateSubscriberPayeeResponse" name="UpdateSubscriberPayeeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SearchCFTPayees">
      <wsdl:input message="tns:SearchCFTPayeesRequest" name="SearchCFTPayeesRequest"></wsdl:input>
      <wsdl:output message="tns:SearchCFTPayeesResponse" name="SearchCFTPayeesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTransactionDetails">
      <wsdl:input message="tns:GetTransactionDetailsRequest" name="GetTransactionDetailsRequest"></wsdl:input>
      <wsdl:output message="tns:GetTransactionDetailsResponse" name="GetTransactionDetailsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateClientBankAccount">
      <wsdl:input message="tns:CreateClientBankAccountRequest" name="CreateClientBankAccountRequest"></wsdl:input>
      <wsdl:output message="tns:CreateClientBankAccountResponse" name="CreateClientBankAccountResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyPostedTransaction">
      <wsdl:input message="tns:ModifyPostedTransactionRequest" name="ModifyPostedTransactionRequest"></wsdl:input>
      <wsdl:output message="tns:ModifyPostedTransactionResponse" name="ModifyPostedTransactionResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriberPayeeList">
      <wsdl:input message="tns:GetSubscriberPayeeListRequest" name="GetSubscriberPayeeListRequest"></wsdl:input>
      <wsdl:output message="tns:GetSubscriberPayeeListResponse" name="GetSubscriberPayeeListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetApprovalsById">
      <wsdl:input message="tns:GetApprovalsByIdRequest" name="GetApprovalsByIdRequest"></wsdl:input>
      <wsdl:output message="tns:GetApprovalsByIdResponse" name="GetApprovalsByIdResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SaveChannelAttributeValue">
      <wsdl:input message="tns:SaveChannelAttributeValueRequest" name="SaveChannelAttributeValueRequest"></wsdl:input>
      <wsdl:output message="tns:SaveChannelAttributeValueResponse" name="SaveChannelAttributeValueResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetFeeScheduleList">
      <wsdl:input message="tns:GetFeeScheduleListRequest" name="GetFeeScheduleListRequest"></wsdl:input>
      <wsdl:output message="tns:GetFeeScheduleListResponse" name="GetFeeScheduleListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminCreateInternalUser">
      <wsdl:input message="tns:AdminCreateInternalUserRequest" name="AdminCreateInternalUserRequest"></wsdl:input>
      <wsdl:output message="tns:AdminCreateInternalUserResponse" name="AdminCreateInternalUserResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="MoveAffiliateHierarchy">
      <wsdl:input message="tns:MoveAffiliateHierarchyRequest" name="MoveAffiliateHierarchyRequest"></wsdl:input>
      <wsdl:output message="tns:MoveAffiliateHierarchyResponse" name="MoveAffiliateHierarchyResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetSubscriberBankAccountList">
      <wsdl:input message="tns:AdminGetSubscriberBankAccountListRequest" name="AdminGetSubscriberBankAccountListRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetSubscriberBankAccountListResponse" name="AdminGetSubscriberBankAccountListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateFeeBasis">
      <wsdl:input message="tns:UpdateFeeBasisRequest" name="UpdateFeeBasisRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateFeeBasisResponse" name="UpdateFeeBasisResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRuleSet">
      <wsdl:input message="tns:GetRuleSetRequest" name="GetRuleSetRequest"></wsdl:input>
      <wsdl:output message="tns:GetRuleSetResponse" name="GetRuleSetResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreatePrenoteSchedule">
      <wsdl:input message="tns:CreatePrenoteScheduleRequest" name="CreatePrenoteScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:CreatePrenoteScheduleResponse" name="CreatePrenoteScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetNextSchedule">
      <wsdl:input message="tns:GetNextScheduleRequest" name="GetNextScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:GetNextScheduleResponse" name="GetNextScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetCFTBankAccountList">
      <wsdl:input message="tns:AdminGetCFTBankAccountListRequest" name="AdminGetCFTBankAccountListRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetCFTBankAccountListResponse" name="AdminGetCFTBankAccountListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateApproval">
      <wsdl:input message="tns:UpdateApprovalRequest" name="UpdateApprovalRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateApprovalResponse" name="UpdateApprovalResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientSettlement">
      <wsdl:input message="tns:GetClientSettlementRequest" name="GetClientSettlementRequest"></wsdl:input>
      <wsdl:output message="tns:GetClientSettlementResponse" name="GetClientSettlementResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminCreateSubscriberProcessorSetup">
      <wsdl:input message="tns:AdminCreateSubscriberProcessorSetupRequest" name="AdminCreateSubscriberProcessorSetupRequest"></wsdl:input>
      <wsdl:output message="tns:AdminCreateSubscriberProcessorSetupResponse" name="AdminCreateSubscriberProcessorSetupResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriberTemplateAssetById">
      <wsdl:input message="tns:GetSubscriberTemplateAssetByIdRequest" name="GetSubscriberTemplateAssetByIdRequest"></wsdl:input>
      <wsdl:output message="tns:GetSubscriberTemplateAssetByIdResponse" name="GetSubscriberTemplateAssetByIdResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClient">
      <wsdl:input message="tns:GetClientRequest" name="GetClientRequest"></wsdl:input>
      <wsdl:output message="tns:GetClientResponse" name="GetClientResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUnprocessedPostedTransactionList">
      <wsdl:input message="tns:GetUnprocessedPostedTransactionListRequest" name="GetUnprocessedPostedTransactionListRequest"></wsdl:input>
      <wsdl:output message="tns:GetUnprocessedPostedTransactionListResponse" name="GetUnprocessedPostedTransactionListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminUpdateEnrollment">
      <wsdl:input message="tns:AdminUpdateEnrollmentRequest" name="AdminUpdateEnrollmentRequest"></wsdl:input>
      <wsdl:output message="tns:AdminUpdateEnrollmentResponse" name="AdminUpdateEnrollmentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientRTPSettlement">
      <wsdl:input message="tns:GetClientRTPSettlementRequest" name="GetClientRTPSettlementRequest"></wsdl:input>
      <wsdl:output message="tns:GetClientRTPSettlementResponse" name="GetClientRTPSettlementResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserRolesList">
      <wsdl:input message="tns:GetUserRolesListRequest" name="GetUserRolesListRequest"></wsdl:input>
      <wsdl:output message="tns:GetUserRolesListResponse" name="GetUserRolesListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPaymentMonitorList">
      <wsdl:input message="tns:GetPaymentMonitorListRequest" name="GetPaymentMonitorListRequest"></wsdl:input>
      <wsdl:output message="tns:GetPaymentMonitorListResponse" name="GetPaymentMonitorListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDraftSchedule">
      <wsdl:input message="tns:GetDraftScheduleRequest" name="GetDraftScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:GetDraftScheduleResponse" name="GetDraftScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTransactionMethods">
      <wsdl:input message="tns:GetTransactionMethodsRequest" name="GetTransactionMethodsRequest"></wsdl:input>
      <wsdl:output message="tns:GetTransactionMethodsResponse" name="GetTransactionMethodsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AuthorizeAndLoadPayment">
      <wsdl:input message="tns:AuthorizeAndLoadPaymentRequest" name="AuthorizeAndLoadPaymentRequest"></wsdl:input>
      <wsdl:output message="tns:AuthorizeAndLoadPaymentResponse" name="AuthorizeAndLoadPaymentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriberStatewiseFeeCapList">
      <wsdl:input message="tns:GetSubscriberStatewiseFeeCapListRequest" name="GetSubscriberStatewiseFeeCapListRequest"></wsdl:input>
      <wsdl:output message="tns:GetSubscriberStatewiseFeeCapListResponse" name="GetSubscriberStatewiseFeeCapListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDocumentById">
      <wsdl:input message="tns:GetDocumentByIdRequest" name="GetDocumentByIdRequest"></wsdl:input>
      <wsdl:output message="tns:GetDocumentByIdResponse" name="GetDocumentByIdResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientBalances">
      <wsdl:input message="tns:GetClientBalancesRequest" name="GetClientBalancesRequest"></wsdl:input>
      <wsdl:output message="tns:GetClientBalancesResponse" name="GetClientBalancesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SuspendDraftSchedule">
      <wsdl:input message="tns:SuspendDraftScheduleRequest" name="SuspendDraftScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:SuspendDraftScheduleResponse" name="SuspendDraftScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetPostedTransactionList">
      <wsdl:input message="tns:AdminGetPostedTransactionListRequest" name="AdminGetPostedTransactionListRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetPostedTransactionListResponse" name="AdminGetPostedTransactionListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminUpdateSubscriberFee">
      <wsdl:input message="tns:AdminUpdateSubscriberFeeRequest" name="AdminUpdateSubscriberFeeRequest"></wsdl:input>
      <wsdl:output message="tns:AdminUpdateSubscriberFeeResponse" name="AdminUpdateSubscriberFeeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPartnerList">
      <wsdl:input message="tns:GetPartnerListRequest" name="GetPartnerListRequest"></wsdl:input>
      <wsdl:output message="tns:GetPartnerListResponse" name="GetPartnerListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRuleSetList">
      <wsdl:input message="tns:GetRuleSetListRequest" name="GetRuleSetListRequest"></wsdl:input>
      <wsdl:output message="tns:GetRuleSetListResponse" name="GetRuleSetListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetStatusEnumList">
      <wsdl:input message="tns:GetStatusEnumListRequest" name="GetStatusEnumListRequest"></wsdl:input>
      <wsdl:output message="tns:GetStatusEnumListResponse" name="GetStatusEnumListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminRejectPostedTransaction">
      <wsdl:input message="tns:AdminRejectPostedTransactionRequest" name="AdminRejectPostedTransactionRequest"></wsdl:input>
      <wsdl:output message="tns:AdminRejectPostedTransactionResponse" name="AdminRejectPostedTransactionResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VerifyClientManually">
      <wsdl:input message="tns:VerifyClientManuallyRequest" name="VerifyClientManuallyRequest"></wsdl:input>
      <wsdl:output message="tns:VerifyClientManuallyResponse" name="VerifyClientManuallyResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPaymentList">
      <wsdl:input message="tns:GetPaymentListRequest" name="GetPaymentListRequest"></wsdl:input>
      <wsdl:output message="tns:GetPaymentListResponse" name="GetPaymentListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateSubscriberFee">
      <wsdl:input message="tns:CreateSubscriberFeeRequest" name="CreateSubscriberFeeRequest"></wsdl:input>
      <wsdl:output message="tns:CreateSubscriberFeeResponse" name="CreateSubscriberFeeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminCreateSubscriberBankAccount">
      <wsdl:input message="tns:AdminCreateSubscriberBankAccountRequest" name="AdminCreateSubscriberBankAccountRequest"></wsdl:input>
      <wsdl:output message="tns:AdminCreateSubscriberBankAccountResponse" name="AdminCreateSubscriberBankAccountResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetClients">
      <wsdl:input message="tns:AdminGetClientsRequest" name="AdminGetClientsRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetClientsResponse" name="AdminGetClientsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateEnrollmentTicket">
      <wsdl:input message="tns:CreateEnrollmentTicketRequest" name="CreateEnrollmentTicketRequest"></wsdl:input>
      <wsdl:output message="tns:CreateEnrollmentTicketResponse" name="CreateEnrollmentTicketResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateHierarchyEnrollmentAffiliate">
      <wsdl:input message="tns:CreateHierarchyEnrollmentAffiliateRequest" name="CreateHierarchyEnrollmentAffiliateRequest"></wsdl:input>
      <wsdl:output message="tns:CreateHierarchyEnrollmentAffiliateResponse" name="CreateHierarchyEnrollmentAffiliateResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentTicket">
      <wsdl:input message="tns:GetEnrollmentTicketRequest" name="GetEnrollmentTicketRequest"></wsdl:input>
      <wsdl:output message="tns:GetEnrollmentTicketResponse" name="GetEnrollmentTicketResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPaymentListOnPositivePay">
      <wsdl:input message="tns:GetPaymentListOnPositivePayRequest" name="GetPaymentListOnPositivePayRequest"></wsdl:input>
      <wsdl:output message="tns:GetPaymentListOnPositivePayResponse" name="GetPaymentListOnPositivePayResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAffiliateUserList">
      <wsdl:input message="tns:GetAffiliateUserListRequest" name="GetAffiliateUserListRequest"></wsdl:input>
      <wsdl:output message="tns:GetAffiliateUserListResponse" name="GetAffiliateUserListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateReturnSchedule">
      <wsdl:input message="tns:CreateReturnScheduleRequest" name="CreateReturnScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:CreateReturnScheduleResponse" name="CreateReturnScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateCoClient">
      <wsdl:input message="tns:CreateCoClientRequest" name="CreateCoClientRequest"></wsdl:input>
      <wsdl:output message="tns:CreateCoClientResponse" name="CreateCoClientResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ResetPassword">
      <wsdl:input message="tns:ResetPasswordRequest" name="ResetPasswordRequest"></wsdl:input>
      <wsdl:output message="tns:ResetPasswordResponse" name="ResetPasswordResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminUpdateSubscriberBankAccount">
      <wsdl:input message="tns:AdminUpdateSubscriberBankAccountRequest" name="AdminUpdateSubscriberBankAccountRequest"></wsdl:input>
      <wsdl:output message="tns:AdminUpdateSubscriberBankAccountResponse" name="AdminUpdateSubscriberBankAccountResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetSettlementList">
      <wsdl:input message="tns:AdminGetSettlementListRequest" name="AdminGetSettlementListRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetSettlementListResponse" name="AdminGetSettlementListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriberUserList">
      <wsdl:input message="tns:GetSubscriberUserListRequest" name="GetSubscriberUserListRequest"></wsdl:input>
      <wsdl:output message="tns:GetSubscriberUserListResponse" name="GetSubscriberUserListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetAvoidableReturnsFlaggedClients">
      <wsdl:input message="tns:AdminGetAvoidableReturnsFlaggedClientsRequest" name="AdminGetAvoidableReturnsFlaggedClientsRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetAvoidableReturnsFlaggedClientsResponse" name="AdminGetAvoidableReturnsFlaggedClientsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDelayDraftChangedDates">
      <wsdl:input message="tns:GetDelayDraftChangedDatesRequest" name="GetDelayDraftChangedDatesRequest"></wsdl:input>
      <wsdl:output message="tns:GetDelayDraftChangedDatesResponse" name="GetDelayDraftChangedDatesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCheckImage">
      <wsdl:input message="tns:GetCheckImageRequest" name="GetCheckImageRequest"></wsdl:input>
      <wsdl:output message="tns:GetCheckImageResponse" name="GetCheckImageResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetTransferBankAccountList">
      <wsdl:input message="tns:AdminGetTransferBankAccountListRequest" name="AdminGetTransferBankAccountListRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetTransferBankAccountListResponse" name="AdminGetTransferBankAccountListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminListTopLevelFee">
      <wsdl:input message="tns:AdminListTopLevelFeeRequest" name="AdminListTopLevelFeeRequest"></wsdl:input>
      <wsdl:output message="tns:AdminListTopLevelFeeResponse" name="AdminListTopLevelFeeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AuthorizePayment">
      <wsdl:input message="tns:AuthorizePaymentRequest" name="AuthorizePaymentRequest"></wsdl:input>
      <wsdl:output message="tns:AuthorizePaymentResponse" name="AuthorizePaymentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateCaptureDraft">
      <wsdl:input message="tns:UpdateCaptureDraftRequest" name="UpdateCaptureDraftRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateCaptureDraftResponse" name="UpdateCaptureDraftResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentCommentList">
      <wsdl:input message="tns:GetEnrollmentCommentListRequest" name="GetEnrollmentCommentListRequest"></wsdl:input>
      <wsdl:output message="tns:GetEnrollmentCommentListResponse" name="GetEnrollmentCommentListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDraftScheduleModifiableDates">
      <wsdl:input message="tns:GetDraftScheduleModifiableDatesRequest" name="GetDraftScheduleModifiableDatesRequest"></wsdl:input>
      <wsdl:output message="tns:GetDraftScheduleModifiableDatesResponse" name="GetDraftScheduleModifiableDatesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateRuleSetDefinition">
      <wsdl:input message="tns:UpdateRuleSetDefinitionRequest" name="UpdateRuleSetDefinitionRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateRuleSetDefinitionResponse" name="UpdateRuleSetDefinitionResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetFeeBasis">
      <wsdl:input message="tns:GetFeeBasisRequest" name="GetFeeBasisRequest"></wsdl:input>
      <wsdl:output message="tns:GetFeeBasisResponse" name="GetFeeBasisResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateSubscriberPayee">
      <wsdl:input message="tns:CreateSubscriberPayeeRequest" name="CreateSubscriberPayeeRequest"></wsdl:input>
      <wsdl:output message="tns:CreateSubscriberPayeeResponse" name="CreateSubscriberPayeeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="MakePhonePayment">
      <wsdl:input message="tns:MakePhonePaymentRequest" name="MakePhonePaymentRequest"></wsdl:input>
      <wsdl:output message="tns:MakePhonePaymentResponse" name="MakePhonePaymentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateAdhocTransfer">
      <wsdl:input message="tns:UpdateAdhocTransferRequest" name="UpdateAdhocTransferRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateAdhocTransferResponse" name="UpdateAdhocTransferResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetExternalPayeeListByName">
      <wsdl:input message="tns:GetExternalPayeeListByNameRequest" name="GetExternalPayeeListByNameRequest"></wsdl:input>
      <wsdl:output message="tns:GetExternalPayeeListByNameResponse" name="GetExternalPayeeListByNameResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelEnrollment">
      <wsdl:input message="tns:CancelEnrollmentRequest" name="CancelEnrollmentRequest"></wsdl:input>
      <wsdl:output message="tns:CancelEnrollmentResponse" name="CancelEnrollmentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAffiliateHierarchy">
      <wsdl:input message="tns:GetAffiliateHierarchyRequest" name="GetAffiliateHierarchyRequest"></wsdl:input>
      <wsdl:output message="tns:GetAffiliateHierarchyResponse" name="GetAffiliateHierarchyResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ReactivateDraftSchedule">
      <wsdl:input message="tns:ReactivateDraftScheduleRequest" name="ReactivateDraftScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:ReactivateDraftScheduleResponse" name="ReactivateDraftScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSPAForecastList">
      <wsdl:input message="tns:GetSPAForecastListRequest" name="GetSPAForecastListRequest"></wsdl:input>
      <wsdl:output message="tns:GetSPAForecastListResponse" name="GetSPAForecastListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SuspendSettlement">
      <wsdl:input message="tns:SuspendSettlementRequest" name="SuspendSettlementRequest"></wsdl:input>
      <wsdl:output message="tns:SuspendSettlementResponse" name="SuspendSettlementResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetFeeScheduleBasis">
      <wsdl:input message="tns:GetFeeScheduleBasisRequest" name="GetFeeScheduleBasisRequest"></wsdl:input>
      <wsdl:output message="tns:GetFeeScheduleBasisResponse" name="GetFeeScheduleBasisResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ChangePasswordForToken">
      <wsdl:input message="tns:ChangePasswordForTokenRequest" name="ChangePasswordForTokenRequest"></wsdl:input>
      <wsdl:output message="tns:ChangePasswordForTokenResponse" name="ChangePasswordForTokenResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreatePerformanceSettlementBasis">
      <wsdl:input message="tns:CreatePerformanceSettlementBasisRequest" name="CreatePerformanceSettlementBasisRequest"></wsdl:input>
      <wsdl:output message="tns:CreatePerformanceSettlementBasisResponse" name="CreatePerformanceSettlementBasisResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminActivateEnrollment">
      <wsdl:input message="tns:AdminActivateEnrollmentRequest" name="AdminActivateEnrollmentRequest"></wsdl:input>
      <wsdl:output message="tns:AdminActivateEnrollmentResponse" name="AdminActivateEnrollmentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPositivePayInquiries">
      <wsdl:input message="tns:GetPositivePayInquiriesRequest" name="GetPositivePayInquiriesRequest"></wsdl:input>
      <wsdl:output message="tns:GetPositivePayInquiriesResponse" name="GetPositivePayInquiriesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserById">
      <wsdl:input message="tns:GetUserByIdRequest" name="GetUserByIdRequest"></wsdl:input>
      <wsdl:output message="tns:GetUserByIdResponse" name="GetUserByIdResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetInternalUserList">
      <wsdl:input message="tns:AdminGetInternalUserListRequest" name="AdminGetInternalUserListRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetInternalUserListResponse" name="AdminGetInternalUserListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReturnList">
      <wsdl:input message="tns:GetReturnListRequest" name="GetReturnListRequest"></wsdl:input>
      <wsdl:output message="tns:GetReturnListResponse" name="GetReturnListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateAffiliate">
      <wsdl:input message="tns:CreateAffiliateRequest" name="CreateAffiliateRequest"></wsdl:input>
      <wsdl:output message="tns:CreateAffiliateResponse" name="CreateAffiliateResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateCoClient">
      <wsdl:input message="tns:UpdateCoClientRequest" name="UpdateCoClientRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateCoClientResponse" name="UpdateCoClientResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateEnrollmentError">
      <wsdl:input message="tns:CreateEnrollmentErrorRequest" name="CreateEnrollmentErrorRequest"></wsdl:input>
      <wsdl:output message="tns:CreateEnrollmentErrorResponse" name="CreateEnrollmentErrorResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetHierarchyAffiliateCommissionDist">
      <wsdl:input message="tns:GetHierarchyAffiliateCommissionDistRequest" name="GetHierarchyAffiliateCommissionDistRequest"></wsdl:input>
      <wsdl:output message="tns:GetHierarchyAffiliateCommissionDistResponse" name="GetHierarchyAffiliateCommissionDistResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateFeeItems">
      <wsdl:input message="tns:CreateFeeItemsRequest" name="CreateFeeItemsRequest"></wsdl:input>
      <wsdl:output message="tns:CreateFeeItemsResponse" name="CreateFeeItemsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RejectPayment">
      <wsdl:input message="tns:RejectPaymentRequest" name="RejectPaymentRequest"></wsdl:input>
      <wsdl:output message="tns:RejectPaymentResponse" name="RejectPaymentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAffiliate">
      <wsdl:input message="tns:GetAffiliateRequest" name="GetAffiliateRequest"></wsdl:input>
      <wsdl:output message="tns:GetAffiliateResponse" name="GetAffiliateResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDraftErrorList">
      <wsdl:input message="tns:GetDraftErrorListRequest" name="GetDraftErrorListRequest"></wsdl:input>
      <wsdl:output message="tns:GetDraftErrorListResponse" name="GetDraftErrorListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCaptureDraft">
      <wsdl:input message="tns:GetCaptureDraftRequest" name="GetCaptureDraftRequest"></wsdl:input>
      <wsdl:output message="tns:GetCaptureDraftResponse" name="GetCaptureDraftResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateInterClientTransfer">
      <wsdl:input message="tns:CreateInterClientTransferRequest" name="CreateInterClientTransferRequest"></wsdl:input>
      <wsdl:output message="tns:CreateInterClientTransferResponse" name="CreateInterClientTransferResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DelayDraft">
      <wsdl:input message="tns:DelayDraftRequest" name="DelayDraftRequest"></wsdl:input>
      <wsdl:output message="tns:DelayDraftResponse" name="DelayDraftResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyLoanAmount">
      <wsdl:input message="tns:ModifyLoanAmountRequest" name="ModifyLoanAmountRequest"></wsdl:input>
      <wsdl:output message="tns:ModifyLoanAmountResponse" name="ModifyLoanAmountResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SaveStatewiseFeeCap">
      <wsdl:input message="tns:SaveStatewiseFeeCapRequest" name="SaveStatewiseFeeCapRequest"></wsdl:input>
      <wsdl:output message="tns:SaveStatewiseFeeCapResponse" name="SaveStatewiseFeeCapResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetEnrollments">
      <wsdl:input message="tns:AdminGetEnrollmentsRequest" name="AdminGetEnrollmentsRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetEnrollmentsResponse" name="AdminGetEnrollmentsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnvironment">
      <wsdl:input message="tns:GetEnvironmentRequest" name="GetEnvironmentRequest"></wsdl:input>
      <wsdl:output message="tns:GetEnvironmentResponse" name="GetEnvironmentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientBankAccountList">
      <wsdl:input message="tns:GetClientBankAccountListRequest" name="GetClientBankAccountListRequest"></wsdl:input>
      <wsdl:output message="tns:GetClientBankAccountListResponse" name="GetClientBankAccountListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateDraftSchedule">
      <wsdl:input message="tns:CreateDraftScheduleRequest" name="CreateDraftScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:CreateDraftScheduleResponse" name="CreateDraftScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreatePartialEnrollment">
      <wsdl:input message="tns:CreatePartialEnrollmentRequest" name="CreatePartialEnrollmentRequest"></wsdl:input>
      <wsdl:output message="tns:CreatePartialEnrollmentResponse" name="CreatePartialEnrollmentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSettlementCount">
      <wsdl:input message="tns:GetSettlementCountRequest" name="GetSettlementCountRequest"></wsdl:input>
      <wsdl:output message="tns:GetSettlementCountResponse" name="GetSettlementCountResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSettlementApprovalList">
      <wsdl:input message="tns:GetSettlementApprovalListRequest" name="GetSettlementApprovalListRequest"></wsdl:input>
      <wsdl:output message="tns:GetSettlementApprovalListResponse" name="GetSettlementApprovalListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetTransactionList">
      <wsdl:input message="tns:AdminGetTransactionListRequest" name="AdminGetTransactionListRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetTransactionListResponse" name="AdminGetTransactionListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RevalidateAutoEnrollment">
      <wsdl:input message="tns:RevalidateAutoEnrollmentRequest" name="RevalidateAutoEnrollmentRequest"></wsdl:input>
      <wsdl:output message="tns:RevalidateAutoEnrollmentResponse" name="RevalidateAutoEnrollmentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CheckSdnMatch">
      <wsdl:input message="tns:CheckSdnMatchRequest" name="CheckSdnMatchRequest"></wsdl:input>
      <wsdl:output message="tns:CheckSdnMatchResponse" name="CheckSdnMatchResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateAutoPayeeInfo">
      <wsdl:input message="tns:UpdateAutoPayeeInfoRequest" name="UpdateAutoPayeeInfoRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateAutoPayeeInfoResponse" name="UpdateAutoPayeeInfoResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetScheduleList">
      <wsdl:input message="tns:GetScheduleListRequest" name="GetScheduleListRequest"></wsdl:input>
      <wsdl:output message="tns:GetScheduleListResponse" name="GetScheduleListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAffiliateClients">
      <wsdl:input message="tns:GetAffiliateClientsRequest" name="GetAffiliateClientsRequest"></wsdl:input>
      <wsdl:output message="tns:GetAffiliateClientsResponse" name="GetAffiliateClientsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminUpdateInternalUser">
      <wsdl:input message="tns:AdminUpdateInternalUserRequest" name="AdminUpdateInternalUserRequest"></wsdl:input>
      <wsdl:output message="tns:AdminUpdateInternalUserResponse" name="AdminUpdateInternalUserResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentErrorList">
      <wsdl:input message="tns:GetEnrollmentErrorListRequest" name="GetEnrollmentErrorListRequest"></wsdl:input>
      <wsdl:output message="tns:GetEnrollmentErrorListResponse" name="GetEnrollmentErrorListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPostedTransaction">
      <wsdl:input message="tns:GetPostedTransactionRequest" name="GetPostedTransactionRequest"></wsdl:input>
      <wsdl:output message="tns:GetPostedTransactionResponse" name="GetPostedTransactionResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminUpdateSubscriber">
      <wsdl:input message="tns:AdminUpdateSubscriberRequest" name="AdminUpdateSubscriberRequest"></wsdl:input>
      <wsdl:output message="tns:AdminUpdateSubscriberResponse" name="AdminUpdateSubscriberResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentCaptureAddress">
      <wsdl:input message="tns:GetEnrollmentCaptureAddressRequest" name="GetEnrollmentCaptureAddressRequest"></wsdl:input>
      <wsdl:output message="tns:GetEnrollmentCaptureAddressResponse" name="GetEnrollmentCaptureAddressResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateDraftItems">
      <wsdl:input message="tns:UpdateDraftItemsRequest" name="UpdateDraftItemsRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateDraftItemsResponse" name="UpdateDraftItemsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPartialEnrollment">
      <wsdl:input message="tns:GetPartialEnrollmentRequest" name="GetPartialEnrollmentRequest"></wsdl:input>
      <wsdl:output message="tns:GetPartialEnrollmentResponse" name="GetPartialEnrollmentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateSubscriberUser">
      <wsdl:input message="tns:UpdateSubscriberUserRequest" name="UpdateSubscriberUserRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateSubscriberUserResponse" name="UpdateSubscriberUserResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SaveAutoEnrollmentAffiliates">
      <wsdl:input message="tns:SaveAutoEnrollmentAffiliatesRequest" name="SaveAutoEnrollmentAffiliatesRequest"></wsdl:input>
      <wsdl:output message="tns:SaveAutoEnrollmentAffiliatesResponse" name="SaveAutoEnrollmentAffiliatesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateSignatureDate">
      <wsdl:input message="tns:UpdateSignatureDateRequest" name="UpdateSignatureDateRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateSignatureDateResponse" name="UpdateSignatureDateResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreatePositivePayList">
      <wsdl:input message="tns:CreatePositivePayListRequest" name="CreatePositivePayListRequest"></wsdl:input>
      <wsdl:output message="tns:CreatePositivePayListResponse" name="CreatePositivePayListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAffiliateList">
      <wsdl:input message="tns:GetAffiliateListRequest" name="GetAffiliateListRequest"></wsdl:input>
      <wsdl:output message="tns:GetAffiliateListResponse" name="GetAffiliateListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDraftScheduleListWithNextDate">
      <wsdl:input message="tns:GetDraftScheduleListWithNextDateRequest" name="GetDraftScheduleListWithNextDateRequest"></wsdl:input>
      <wsdl:output message="tns:GetDraftScheduleListWithNextDateResponse" name="GetDraftScheduleListWithNextDateResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateSettlementSchedule">
      <wsdl:input message="tns:CreateSettlementScheduleRequest" name="CreateSettlementScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:CreateSettlementScheduleResponse" name="CreateSettlementScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SkipPayment">
      <wsdl:input message="tns:SkipPaymentRequest" name="SkipPaymentRequest"></wsdl:input>
      <wsdl:output message="tns:SkipPaymentResponse" name="SkipPaymentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDraftScheduleList">
      <wsdl:input message="tns:GetDraftScheduleListRequest" name="GetDraftScheduleListRequest"></wsdl:input>
      <wsdl:output message="tns:GetDraftScheduleListResponse" name="GetDraftScheduleListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentDocument">
      <wsdl:input message="tns:GetEnrollmentDocumentRequest" name="GetEnrollmentDocumentRequest"></wsdl:input>
      <wsdl:output message="tns:GetEnrollmentDocumentResponse" name="GetEnrollmentDocumentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateClientBankAccount">
      <wsdl:input message="tns:UpdateClientBankAccountRequest" name="UpdateClientBankAccountRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateClientBankAccountResponse" name="UpdateClientBankAccountResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SendEmail">
      <wsdl:input message="tns:SendEmailRequest" name="SendEmailRequest"></wsdl:input>
      <wsdl:output message="tns:SendEmailResponse" name="SendEmailResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddReferralAffiliate">
      <wsdl:input message="tns:AddReferralAffiliateRequest" name="AddReferralAffiliateRequest"></wsdl:input>
      <wsdl:output message="tns:AddReferralAffiliateResponse" name="AddReferralAffiliateResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRuleSetDefinition">
      <wsdl:input message="tns:GetRuleSetDefinitionRequest" name="GetRuleSetDefinitionRequest"></wsdl:input>
      <wsdl:output message="tns:GetRuleSetDefinitionResponse" name="GetRuleSetDefinitionResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateAutoEnrollment">
      <wsdl:input message="tns:CreateAutoEnrollmentRequest" name="CreateAutoEnrollmentRequest"></wsdl:input>
      <wsdl:output message="tns:CreateAutoEnrollmentResponse" name="CreateAutoEnrollmentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriberTransactionReceipts">
      <wsdl:input message="tns:GetSubscriberTransactionReceiptsRequest" name="GetSubscriberTransactionReceiptsRequest"></wsdl:input>
      <wsdl:output message="tns:GetSubscriberTransactionReceiptsResponse" name="GetSubscriberTransactionReceiptsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateEnrollmentComment">
      <wsdl:input message="tns:CreateEnrollmentCommentRequest" name="CreateEnrollmentCommentRequest"></wsdl:input>
      <wsdl:output message="tns:CreateEnrollmentCommentResponse" name="CreateEnrollmentCommentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FailPayment">
      <wsdl:input message="tns:FailPaymentRequest" name="FailPaymentRequest"></wsdl:input>
      <wsdl:output message="tns:FailPaymentResponse" name="FailPaymentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CompleteEnrollment">
      <wsdl:input message="tns:CompleteEnrollmentRequest" name="CompleteEnrollmentRequest"></wsdl:input>
      <wsdl:output message="tns:CompleteEnrollmentResponse" name="CompleteEnrollmentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetFeeScheduleListBasis">
      <wsdl:input message="tns:GetFeeScheduleListBasisRequest" name="GetFeeScheduleListBasisRequest"></wsdl:input>
      <wsdl:output message="tns:GetFeeScheduleListBasisResponse" name="GetFeeScheduleListBasisResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CaptureEnrollmentAddress">
      <wsdl:input message="tns:CaptureEnrollmentAddressRequest" name="CaptureEnrollmentAddressRequest"></wsdl:input>
      <wsdl:output message="tns:CaptureEnrollmentAddressResponse" name="CaptureEnrollmentAddressResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetSubscriberBankAccount">
      <wsdl:input message="tns:AdminGetSubscriberBankAccountRequest" name="AdminGetSubscriberBankAccountRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetSubscriberBankAccountResponse" name="AdminGetSubscriberBankAccountResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCheckNumber">
      <wsdl:input message="tns:GetCheckNumberRequest" name="GetCheckNumberRequest"></wsdl:input>
      <wsdl:output message="tns:GetCheckNumberResponse" name="GetCheckNumberResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ListSubscriberFee">
      <wsdl:input message="tns:ListSubscriberFeeRequest" name="ListSubscriberFeeRequest"></wsdl:input>
      <wsdl:output message="tns:ListSubscriberFeeResponse" name="ListSubscriberFeeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateChannelAttribute">
      <wsdl:input message="tns:CreateChannelAttributeRequest" name="CreateChannelAttributeRequest"></wsdl:input>
      <wsdl:output message="tns:CreateChannelAttributeResponse" name="CreateChannelAttributeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminCreateSubscriberDocument">
      <wsdl:input message="tns:AdminCreateSubscriberDocumentRequest" name="AdminCreateSubscriberDocumentRequest"></wsdl:input>
      <wsdl:output message="tns:AdminCreateSubscriberDocumentResponse" name="AdminCreateSubscriberDocumentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientSettlementList">
      <wsdl:input message="tns:GetClientSettlementListRequest" name="GetClientSettlementListRequest"></wsdl:input>
      <wsdl:output message="tns:GetClientSettlementListResponse" name="GetClientSettlementListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetOverriddenSubscriberFee">
      <wsdl:input message="tns:GetOverriddenSubscriberFeeRequest" name="GetOverriddenSubscriberFeeRequest"></wsdl:input>
      <wsdl:output message="tns:GetOverriddenSubscriberFeeResponse" name="GetOverriddenSubscriberFeeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTransactionProcessors">
      <wsdl:input message="tns:GetTransactionProcessorsRequest" name="GetTransactionProcessorsRequest"></wsdl:input>
      <wsdl:output message="tns:GetTransactionProcessorsResponse" name="GetTransactionProcessorsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientStatus">
      <wsdl:input message="tns:GetClientStatusRequest" name="GetClientStatusRequest"></wsdl:input>
      <wsdl:output message="tns:GetClientStatusResponse" name="GetClientStatusResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateGroupEnrollmentAffiliate">
      <wsdl:input message="tns:CreateGroupEnrollmentAffiliateRequest" name="CreateGroupEnrollmentAffiliateRequest"></wsdl:input>
      <wsdl:output message="tns:CreateGroupEnrollmentAffiliateResponse" name="CreateGroupEnrollmentAffiliateResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentDocumentList">
      <wsdl:input message="tns:GetEnrollmentDocumentListRequest" name="GetEnrollmentDocumentListRequest"></wsdl:input>
      <wsdl:output message="tns:GetEnrollmentDocumentListResponse" name="GetEnrollmentDocumentListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ClientVerification">
      <wsdl:input message="tns:ClientVerificationRequest" name="ClientVerificationRequest"></wsdl:input>
      <wsdl:output message="tns:ClientVerificationResponse" name="ClientVerificationResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminViewEnrollment">
      <wsdl:input message="tns:AdminViewEnrollmentRequest" name="AdminViewEnrollmentRequest"></wsdl:input>
      <wsdl:output message="tns:AdminViewEnrollmentResponse" name="AdminViewEnrollmentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateAffiliateUser">
      <wsdl:input message="tns:CreateAffiliateUserRequest" name="CreateAffiliateUserRequest"></wsdl:input>
      <wsdl:output message="tns:CreateAffiliateUserResponse" name="CreateAffiliateUserResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateAffiliateDocument">
      <wsdl:input message="tns:UpdateAffiliateDocumentRequest" name="UpdateAffiliateDocumentRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateAffiliateDocumentResponse" name="UpdateAffiliateDocumentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateClient">
      <wsdl:input message="tns:CreateClientRequest" name="CreateClientRequest"></wsdl:input>
      <wsdl:output message="tns:CreateClientResponse" name="CreateClientResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAffiliateScheduleList">
      <wsdl:input message="tns:GetAffiliateScheduleListRequest" name="GetAffiliateScheduleListRequest"></wsdl:input>
      <wsdl:output message="tns:GetAffiliateScheduleListResponse" name="GetAffiliateScheduleListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAutoEnrollmentDetailFromStoneEagle">
      <wsdl:input message="tns:GetAutoEnrollmentDetailFromStoneEagleRequest" name="GetAutoEnrollmentDetailFromStoneEagleRequest"></wsdl:input>
      <wsdl:output message="tns:GetAutoEnrollmentDetailFromStoneEagleResponse" name="GetAutoEnrollmentDetailFromStoneEagleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Auth">
      <wsdl:input message="tns:AuthRequest" name="AuthRequest"></wsdl:input>
      <wsdl:output message="tns:AuthResponse" name="AuthResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CaptureDraft">
      <wsdl:input message="tns:CaptureDraftRequest" name="CaptureDraftRequest"></wsdl:input>
      <wsdl:output message="tns:CaptureDraftResponse" name="CaptureDraftResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminCreateAffiliate">
      <wsdl:input message="tns:AdminCreateAffiliateRequest" name="AdminCreateAffiliateRequest"></wsdl:input>
      <wsdl:output message="tns:AdminCreateAffiliateResponse" name="AdminCreateAffiliateResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AuthorizeAndAcceptPayment">
      <wsdl:input message="tns:AuthorizeAndAcceptPaymentRequest" name="AuthorizeAndAcceptPaymentRequest"></wsdl:input>
      <wsdl:output message="tns:AuthorizeAndAcceptPaymentResponse" name="AuthorizeAndAcceptPaymentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateAffiliate">
      <wsdl:input message="tns:UpdateAffiliateRequest" name="UpdateAffiliateRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateAffiliateResponse" name="UpdateAffiliateResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetNewPositivePayList">
      <wsdl:input message="tns:GetNewPositivePayListRequest" name="GetNewPositivePayListRequest"></wsdl:input>
      <wsdl:output message="tns:GetNewPositivePayListResponse" name="GetNewPositivePayListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateClient">
      <wsdl:input message="tns:UpdateClientRequest" name="UpdateClientRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateClientResponse" name="UpdateClientResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentChannelAttributeValuesList">
      <wsdl:input message="tns:GetEnrollmentChannelAttributeValuesListRequest" name="GetEnrollmentChannelAttributeValuesListRequest"></wsdl:input>
      <wsdl:output message="tns:GetEnrollmentChannelAttributeValuesListResponse" name="GetEnrollmentChannelAttributeValuesListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetSubscriberList">
      <wsdl:input message="tns:AdminGetSubscriberListRequest" name="AdminGetSubscriberListRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetSubscriberListResponse" name="AdminGetSubscriberListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UnlockAccount">
      <wsdl:input message="tns:UnlockAccountRequest" name="UnlockAccountRequest"></wsdl:input>
      <wsdl:output message="tns:UnlockAccountResponse" name="UnlockAccountResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminUpdateAffiliate">
      <wsdl:input message="tns:AdminUpdateAffiliateRequest" name="AdminUpdateAffiliateRequest"></wsdl:input>
      <wsdl:output message="tns:AdminUpdateAffiliateResponse" name="AdminUpdateAffiliateResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateSuscriberTemplateAsset">
      <wsdl:input message="tns:CreateSuscriberTemplateAssetRequest" name="CreateSuscriberTemplateAssetRequest"></wsdl:input>
      <wsdl:output message="tns:CreateSuscriberTemplateAssetResponse" name="CreateSuscriberTemplateAssetResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientBankAccount">
      <wsdl:input message="tns:GetClientBankAccountRequest" name="GetClientBankAccountRequest"></wsdl:input>
      <wsdl:output message="tns:GetClientBankAccountResponse" name="GetClientBankAccountResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminListSubscriberFee">
      <wsdl:input message="tns:AdminListSubscriberFeeRequest" name="AdminListSubscriberFeeRequest"></wsdl:input>
      <wsdl:output message="tns:AdminListSubscriberFeeResponse" name="AdminListSubscriberFeeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AuthorizeAndAdvancePayment">
      <wsdl:input message="tns:AuthorizeAndAdvancePaymentRequest" name="AuthorizeAndAdvancePaymentRequest"></wsdl:input>
      <wsdl:output message="tns:AuthorizeAndAdvancePaymentResponse" name="AuthorizeAndAdvancePaymentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateSubscriberTransactionReceipt">
      <wsdl:input message="tns:UpdateSubscriberTransactionReceiptRequest" name="UpdateSubscriberTransactionReceiptRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateSubscriberTransactionReceiptResponse" name="UpdateSubscriberTransactionReceiptResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateRuleSet">
      <wsdl:input message="tns:CreateRuleSetRequest" name="CreateRuleSetRequest"></wsdl:input>
      <wsdl:output message="tns:CreateRuleSetResponse" name="CreateRuleSetResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateRTPSettlementSchedule">
      <wsdl:input message="tns:CreateRTPSettlementScheduleRequest" name="CreateRTPSettlementScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:CreateRTPSettlementScheduleResponse" name="CreateRTPSettlementScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdatePhonePaymentInquiry">
      <wsdl:input message="tns:UpdatePhonePaymentInquiryRequest" name="UpdatePhonePaymentInquiryRequest"></wsdl:input>
      <wsdl:output message="tns:UpdatePhonePaymentInquiryResponse" name="UpdatePhonePaymentInquiryResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateRuleSet">
      <wsdl:input message="tns:UpdateRuleSetRequest" name="UpdateRuleSetRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateRuleSetResponse" name="UpdateRuleSetResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSPAMonthlyBalanceList">
      <wsdl:input message="tns:GetSPAMonthlyBalanceListRequest" name="GetSPAMonthlyBalanceListRequest"></wsdl:input>
      <wsdl:output message="tns:GetSPAMonthlyBalanceListResponse" name="GetSPAMonthlyBalanceListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPartialEnrollmentList">
      <wsdl:input message="tns:GetPartialEnrollmentListRequest" name="GetPartialEnrollmentListRequest"></wsdl:input>
      <wsdl:output message="tns:GetPartialEnrollmentListResponse" name="GetPartialEnrollmentListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="OverrideSubscriberFee">
      <wsdl:input message="tns:OverrideSubscriberFeeRequest" name="OverrideSubscriberFeeRequest"></wsdl:input>
      <wsdl:output message="tns:OverrideSubscriberFeeResponse" name="OverrideSubscriberFeeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SuspendFeeSchedule">
      <wsdl:input message="tns:SuspendFeeScheduleRequest" name="SuspendFeeScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:SuspendFeeScheduleResponse" name="SuspendFeeScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ListEnrollmentFee">
      <wsdl:input message="tns:ListEnrollmentFeeRequest" name="ListEnrollmentFeeRequest"></wsdl:input>
      <wsdl:output message="tns:ListEnrollmentFeeResponse" name="ListEnrollmentFeeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminCreateSubscriberFees">
      <wsdl:input message="tns:AdminCreateSubscriberFeesRequest" name="AdminCreateSubscriberFeesRequest"></wsdl:input>
      <wsdl:output message="tns:AdminCreateSubscriberFeesResponse" name="AdminCreateSubscriberFeesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientsEnhanced">
      <wsdl:input message="tns:GetClientsEnhancedRequest" name="GetClientsEnhancedRequest"></wsdl:input>
      <wsdl:output message="tns:GetClientsEnhancedResponse" name="GetClientsEnhancedResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentExceptionsList">
      <wsdl:input message="tns:GetEnrollmentExceptionsListRequest" name="GetEnrollmentExceptionsListRequest"></wsdl:input>
      <wsdl:output message="tns:GetEnrollmentExceptionsListResponse" name="GetEnrollmentExceptionsListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PopulateBiweeklyEnrollmentSchedule">
      <wsdl:input message="tns:PopulateBiweeklyEnrollmentScheduleRequest" name="PopulateBiweeklyEnrollmentScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:PopulateBiweeklyEnrollmentScheduleResponse" name="PopulateBiweeklyEnrollmentScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentPayee">
      <wsdl:input message="tns:GetEnrollmentPayeeRequest" name="GetEnrollmentPayeeRequest"></wsdl:input>
      <wsdl:output message="tns:GetEnrollmentPayeeResponse" name="GetEnrollmentPayeeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ProcessMultipleReturns">
      <wsdl:input message="tns:ProcessMultipleReturnsRequest" name="ProcessMultipleReturnsRequest"></wsdl:input>
      <wsdl:output message="tns:ProcessMultipleReturnsResponse" name="ProcessMultipleReturnsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="InstantRemittance">
      <wsdl:input message="tns:InstantRemittanceRequest" name="InstantRemittanceRequest"></wsdl:input>
      <wsdl:output message="tns:InstantRemittanceResponse" name="InstantRemittanceResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTransactionListByIds">
      <wsdl:input message="tns:GetTransactionListByIdsRequest" name="GetTransactionListByIdsRequest"></wsdl:input>
      <wsdl:output message="tns:GetTransactionListByIdsResponse" name="GetTransactionListByIdsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentTicketList">
      <wsdl:input message="tns:GetEnrollmentTicketListRequest" name="GetEnrollmentTicketListRequest"></wsdl:input>
      <wsdl:output message="tns:GetEnrollmentTicketListResponse" name="GetEnrollmentTicketListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAffiliateTransactionList">
      <wsdl:input message="tns:GetAffiliateTransactionListRequest" name="GetAffiliateTransactionListRequest"></wsdl:input>
      <wsdl:output message="tns:GetAffiliateTransactionListResponse" name="GetAffiliateTransactionListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetFeeSchedule">
      <wsdl:input message="tns:GetFeeScheduleRequest" name="GetFeeScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:GetFeeScheduleResponse" name="GetFeeScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VerifyIp">
      <wsdl:input message="tns:VerifyIpRequest" name="VerifyIpRequest"></wsdl:input>
      <wsdl:output message="tns:VerifyIpResponse" name="VerifyIpResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SkipDraft">
      <wsdl:input message="tns:SkipDraftRequest" name="SkipDraftRequest"></wsdl:input>
      <wsdl:output message="tns:SkipDraftResponse" name="SkipDraftResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminUpdateActivateEnrollment">
      <wsdl:input message="tns:AdminUpdateActivateEnrollmentRequest" name="AdminUpdateActivateEnrollmentRequest"></wsdl:input>
      <wsdl:output message="tns:AdminUpdateActivateEnrollmentResponse" name="AdminUpdateActivateEnrollmentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ReactivateFeeSchedule">
      <wsdl:input message="tns:ReactivateFeeScheduleRequest" name="ReactivateFeeScheduleRequest"></wsdl:input>
      <wsdl:output message="tns:ReactivateFeeScheduleResponse" name="ReactivateFeeScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateDraftItems">
      <wsdl:input message="tns:CreateDraftItemsRequest" name="CreateDraftItemsRequest"></wsdl:input>
      <wsdl:output message="tns:CreateDraftItemsResponse" name="CreateDraftItemsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateSubscriberPartner">
      <wsdl:input message="tns:UpdateSubscriberPartnerRequest" name="UpdateSubscriberPartnerRequest"></wsdl:input>
      <wsdl:output message="tns:UpdateSubscriberPartnerResponse" name="UpdateSubscriberPartnerResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateDepositItems">
      <wsdl:input message="tns:CreateDepositItemsRequest" name="CreateDepositItemsRequest"></wsdl:input>
      <wsdl:output message="tns:CreateDepositItemsResponse" name="CreateDepositItemsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetSubscriberDocumentList">
      <wsdl:input message="tns:AdminGetSubscriberDocumentListRequest" name="AdminGetSubscriberDocumentListRequest"></wsdl:input>
      <wsdl:output message="tns:AdminGetSubscriberDocumentListResponse" name="AdminGetSubscriberDocumentListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetResetPasswordToken">
      <wsdl:input message="tns:GetResetPasswordTokenRequest" name="GetResetPasswordTokenRequest"></wsdl:input>
      <wsdl:output message="tns:GetResetPasswordTokenResponse" name="GetResetPasswordTokenResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="npnSoap11" type="tns:npn">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="CreateSubscriberUser">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateSubscriberUserRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateSubscriberUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateSubscriberPartner">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateSubscriberPartnerRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateSubscriberPartnerResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteClientBankAccount">
      <soap:operation soapAction=""/>
      <wsdl:input name="DeleteClientBankAccountRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="DeleteClientBankAccountResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPositivePayList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetPositivePayListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetPositivePayListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminCreateSubscriber">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminCreateSubscriberRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminCreateSubscriberResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdatePaymentStatus">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdatePaymentStatusRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdatePaymentStatusResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SendReactivationCode">
      <soap:operation soapAction=""/>
      <wsdl:input name="SendReactivationCodeRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="SendReactivationCodeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetSubscriberProcessorSetup">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetSubscriberProcessorSetupRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetSubscriberProcessorSetupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdatePartialEnrollment">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdatePartialEnrollmentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdatePartialEnrollmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetSubscriberAccounts">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetSubscriberAccountsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetSubscriberAccountsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCoClients">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetCoClientsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetCoClientsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentCount">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetEnrollmentCountRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetEnrollmentCountResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AuthorizeAndAdjustPayment">
      <soap:operation soapAction=""/>
      <wsdl:input name="AuthorizeAndAdjustPaymentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AuthorizeAndAdjustPaymentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTransactionList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetTransactionListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetTransactionListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateFeeSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateFeeScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateFeeScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateSettlementSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateSettlementScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateSettlementScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateEnrollmentTicket">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateEnrollmentTicketRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateEnrollmentTicketResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ActivateSettlement">
      <soap:operation soapAction=""/>
      <wsdl:input name="ActivateSettlementRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ActivateSettlementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateDraftSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateDraftScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateDraftScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetSubscriberDetail">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetSubscriberDetailRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetSubscriberDetailResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClients">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetClientsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetClientsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateFeeBasis">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateFeeBasisRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateFeeBasisResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAffiliateDocumentList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetAffiliateDocumentListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetAffiliateDocumentListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ListTopLevelFee">
      <soap:operation soapAction=""/>
      <wsdl:input name="ListTopLevelFeeRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ListTopLevelFeeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriberAffiliateConfigs">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetSubscriberAffiliateConfigsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetSubscriberAffiliateConfigsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReferralAffiliateList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetReferralAffiliateListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetReferralAffiliateListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateApprovalAttempt">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateApprovalAttemptRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateApprovalAttemptResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateSubscriberPayeeRelationship">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateSubscriberPayeeRelationshipRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateSubscriberPayeeRelationshipResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateSubscriberAffiliateConfigs">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateSubscriberAffiliateConfigsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateSubscriberAffiliateConfigsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSummaryScheduleList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetSummaryScheduleListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetSummaryScheduleListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateReturnSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateReturnScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateReturnScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RemoveAffiliateDocument">
      <soap:operation soapAction=""/>
      <wsdl:input name="RemoveAffiliateDocumentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="RemoveAffiliateDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreatePerformanceSettlement">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreatePerformanceSettlementRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreatePerformanceSettlementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateExternalCftPayment">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateExternalCftPaymentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateExternalCftPaymentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReturnSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetReturnScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetReturnScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetSettlementFees">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetSettlementFeesRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetSettlementFeesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentAffiliateList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetEnrollmentAffiliateListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetEnrollmentAffiliateListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdatePayment">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdatePaymentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdatePaymentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriberPayeeListByName">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetSubscriberPayeeListByNameRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetSubscriberPayeeListByNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyLoanDueDate">
      <soap:operation soapAction=""/>
      <wsdl:input name="ModifyLoanDueDateRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ModifyLoanDueDateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UploadDocument">
      <soap:operation soapAction=""/>
      <wsdl:input name="UploadDocumentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UploadDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateFeeSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateFeeScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateFeeScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCancelReasonCodes">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetCancelReasonCodesRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetCancelReasonCodesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateChannelAttributeValue">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateChannelAttributeValueRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateChannelAttributeValueResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateEnrollmentDocument">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateEnrollmentDocumentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateEnrollmentDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetAffiliate">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetAffiliateRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetAffiliateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdatePartialEnrollmentStatus">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdatePartialEnrollmentStatusRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdatePartialEnrollmentStatusResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetAffiliateList">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetAffiliateListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetAffiliateListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GenerateClientBankStatement">
      <soap:operation soapAction=""/>
      <wsdl:input name="GenerateClientBankStatementRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GenerateClientBankStatementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetScheduleList">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetScheduleListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetScheduleListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateEnrollmentError">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateEnrollmentErrorRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateEnrollmentErrorResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetBankList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetBankListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetBankListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateAutoEnrollmentAffiliates">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateAutoEnrollmentAffiliatesRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateAutoEnrollmentAffiliatesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyHierarchyAffiliateCommissionDist">
      <soap:operation soapAction=""/>
      <wsdl:input name="ModifyHierarchyAffiliateCommissionDistRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ModifyHierarchyAffiliateCommissionDistResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateAdhocTransfer">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateAdhocTransferRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateAdhocTransferResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateAutoNPNFee">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateAutoNPNFeeRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateAutoNPNFeeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetChildAffiliateList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetChildAffiliateListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetChildAffiliateListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyDraftSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="ModifyDraftScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ModifyDraftScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPositivePayDetails">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetPositivePayDetailsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetPositivePayDetailsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriberPayee">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetSubscriberPayeeRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetSubscriberPayeeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientIds">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetClientIdsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetClientIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetNonConformingDrafts">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetNonConformingDraftsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetNonConformingDraftsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAllOverriddenSubscriberFee">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetAllOverriddenSubscriberFeeRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetAllOverriddenSubscriberFeeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateHierarchyAffiliateCommissionDist">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateHierarchyAffiliateCommissionDistRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateHierarchyAffiliateCommissionDistResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPaymentDetails">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetPaymentDetailsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetPaymentDetailsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateSubscriberPayee">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateSubscriberPayeeRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateSubscriberPayeeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SearchCFTPayees">
      <soap:operation soapAction=""/>
      <wsdl:input name="SearchCFTPayeesRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="SearchCFTPayeesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTransactionDetails">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetTransactionDetailsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetTransactionDetailsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateClientBankAccount">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateClientBankAccountRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateClientBankAccountResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyPostedTransaction">
      <soap:operation soapAction=""/>
      <wsdl:input name="ModifyPostedTransactionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ModifyPostedTransactionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriberPayeeList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetSubscriberPayeeListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetSubscriberPayeeListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetApprovalsById">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetApprovalsByIdRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetApprovalsByIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SaveChannelAttributeValue">
      <soap:operation soapAction=""/>
      <wsdl:input name="SaveChannelAttributeValueRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="SaveChannelAttributeValueResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetFeeScheduleList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetFeeScheduleListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetFeeScheduleListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminCreateInternalUser">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminCreateInternalUserRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminCreateInternalUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="MoveAffiliateHierarchy">
      <soap:operation soapAction=""/>
      <wsdl:input name="MoveAffiliateHierarchyRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="MoveAffiliateHierarchyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetSubscriberBankAccountList">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetSubscriberBankAccountListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetSubscriberBankAccountListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateFeeBasis">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateFeeBasisRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateFeeBasisResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRuleSet">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetRuleSetRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetRuleSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreatePrenoteSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreatePrenoteScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreatePrenoteScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetNextSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetNextScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetNextScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetCFTBankAccountList">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetCFTBankAccountListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetCFTBankAccountListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateApproval">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateApprovalRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateApprovalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientSettlement">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetClientSettlementRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetClientSettlementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminCreateSubscriberProcessorSetup">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminCreateSubscriberProcessorSetupRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminCreateSubscriberProcessorSetupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriberTemplateAssetById">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetSubscriberTemplateAssetByIdRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetSubscriberTemplateAssetByIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClient">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetClientRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetClientResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUnprocessedPostedTransactionList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetUnprocessedPostedTransactionListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetUnprocessedPostedTransactionListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminUpdateEnrollment">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminUpdateEnrollmentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminUpdateEnrollmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientRTPSettlement">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetClientRTPSettlementRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetClientRTPSettlementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserRolesList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetUserRolesListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetUserRolesListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPaymentMonitorList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetPaymentMonitorListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetPaymentMonitorListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDraftSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetDraftScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetDraftScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTransactionMethods">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetTransactionMethodsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetTransactionMethodsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AuthorizeAndLoadPayment">
      <soap:operation soapAction=""/>
      <wsdl:input name="AuthorizeAndLoadPaymentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AuthorizeAndLoadPaymentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriberStatewiseFeeCapList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetSubscriberStatewiseFeeCapListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetSubscriberStatewiseFeeCapListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDocumentById">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetDocumentByIdRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetDocumentByIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientBalances">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetClientBalancesRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetClientBalancesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SuspendDraftSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="SuspendDraftScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="SuspendDraftScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetPostedTransactionList">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetPostedTransactionListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetPostedTransactionListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminUpdateSubscriberFee">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminUpdateSubscriberFeeRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminUpdateSubscriberFeeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPartnerList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetPartnerListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetPartnerListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRuleSetList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetRuleSetListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetRuleSetListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetStatusEnumList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetStatusEnumListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetStatusEnumListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminRejectPostedTransaction">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminRejectPostedTransactionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminRejectPostedTransactionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VerifyClientManually">
      <soap:operation soapAction=""/>
      <wsdl:input name="VerifyClientManuallyRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="VerifyClientManuallyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPaymentList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetPaymentListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetPaymentListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateSubscriberFee">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateSubscriberFeeRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateSubscriberFeeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminCreateSubscriberBankAccount">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminCreateSubscriberBankAccountRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminCreateSubscriberBankAccountResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetClients">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetClientsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetClientsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateEnrollmentTicket">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateEnrollmentTicketRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateEnrollmentTicketResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateHierarchyEnrollmentAffiliate">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateHierarchyEnrollmentAffiliateRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateHierarchyEnrollmentAffiliateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentTicket">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetEnrollmentTicketRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetEnrollmentTicketResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPaymentListOnPositivePay">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetPaymentListOnPositivePayRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetPaymentListOnPositivePayResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAffiliateUserList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetAffiliateUserListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetAffiliateUserListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateReturnSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateReturnScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateReturnScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateCoClient">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateCoClientRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateCoClientResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ResetPassword">
      <soap:operation soapAction=""/>
      <wsdl:input name="ResetPasswordRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ResetPasswordResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminUpdateSubscriberBankAccount">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminUpdateSubscriberBankAccountRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminUpdateSubscriberBankAccountResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetSettlementList">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetSettlementListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetSettlementListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriberUserList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetSubscriberUserListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetSubscriberUserListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetAvoidableReturnsFlaggedClients">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetAvoidableReturnsFlaggedClientsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetAvoidableReturnsFlaggedClientsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDelayDraftChangedDates">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetDelayDraftChangedDatesRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetDelayDraftChangedDatesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCheckImage">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetCheckImageRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetCheckImageResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetTransferBankAccountList">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetTransferBankAccountListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetTransferBankAccountListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminListTopLevelFee">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminListTopLevelFeeRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminListTopLevelFeeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AuthorizePayment">
      <soap:operation soapAction=""/>
      <wsdl:input name="AuthorizePaymentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AuthorizePaymentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateCaptureDraft">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateCaptureDraftRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateCaptureDraftResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentCommentList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetEnrollmentCommentListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetEnrollmentCommentListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDraftScheduleModifiableDates">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetDraftScheduleModifiableDatesRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetDraftScheduleModifiableDatesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateRuleSetDefinition">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateRuleSetDefinitionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateRuleSetDefinitionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetFeeBasis">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetFeeBasisRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetFeeBasisResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateSubscriberPayee">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateSubscriberPayeeRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateSubscriberPayeeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="MakePhonePayment">
      <soap:operation soapAction=""/>
      <wsdl:input name="MakePhonePaymentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="MakePhonePaymentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateAdhocTransfer">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateAdhocTransferRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateAdhocTransferResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetExternalPayeeListByName">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetExternalPayeeListByNameRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetExternalPayeeListByNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelEnrollment">
      <soap:operation soapAction=""/>
      <wsdl:input name="CancelEnrollmentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CancelEnrollmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAffiliateHierarchy">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetAffiliateHierarchyRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetAffiliateHierarchyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ReactivateDraftSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="ReactivateDraftScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ReactivateDraftScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSPAForecastList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetSPAForecastListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetSPAForecastListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SuspendSettlement">
      <soap:operation soapAction=""/>
      <wsdl:input name="SuspendSettlementRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="SuspendSettlementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetFeeScheduleBasis">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetFeeScheduleBasisRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetFeeScheduleBasisResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ChangePasswordForToken">
      <soap:operation soapAction=""/>
      <wsdl:input name="ChangePasswordForTokenRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ChangePasswordForTokenResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreatePerformanceSettlementBasis">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreatePerformanceSettlementBasisRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreatePerformanceSettlementBasisResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminActivateEnrollment">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminActivateEnrollmentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminActivateEnrollmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPositivePayInquiries">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetPositivePayInquiriesRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetPositivePayInquiriesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserById">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetUserByIdRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetUserByIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetInternalUserList">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetInternalUserListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetInternalUserListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetReturnList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetReturnListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetReturnListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateAffiliate">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateAffiliateRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateAffiliateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateCoClient">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateCoClientRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateCoClientResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateEnrollmentError">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateEnrollmentErrorRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateEnrollmentErrorResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetHierarchyAffiliateCommissionDist">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetHierarchyAffiliateCommissionDistRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetHierarchyAffiliateCommissionDistResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateFeeItems">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateFeeItemsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateFeeItemsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RejectPayment">
      <soap:operation soapAction=""/>
      <wsdl:input name="RejectPaymentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="RejectPaymentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAffiliate">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetAffiliateRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetAffiliateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDraftErrorList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetDraftErrorListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetDraftErrorListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCaptureDraft">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetCaptureDraftRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetCaptureDraftResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateInterClientTransfer">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateInterClientTransferRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateInterClientTransferResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DelayDraft">
      <soap:operation soapAction=""/>
      <wsdl:input name="DelayDraftRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="DelayDraftResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyLoanAmount">
      <soap:operation soapAction=""/>
      <wsdl:input name="ModifyLoanAmountRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ModifyLoanAmountResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SaveStatewiseFeeCap">
      <soap:operation soapAction=""/>
      <wsdl:input name="SaveStatewiseFeeCapRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="SaveStatewiseFeeCapResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetEnrollments">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetEnrollmentsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetEnrollmentsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnvironment">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetEnvironmentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetEnvironmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientBankAccountList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetClientBankAccountListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetClientBankAccountListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateDraftSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateDraftScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateDraftScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreatePartialEnrollment">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreatePartialEnrollmentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreatePartialEnrollmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSettlementCount">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetSettlementCountRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetSettlementCountResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSettlementApprovalList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetSettlementApprovalListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetSettlementApprovalListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetTransactionList">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetTransactionListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetTransactionListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RevalidateAutoEnrollment">
      <soap:operation soapAction=""/>
      <wsdl:input name="RevalidateAutoEnrollmentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="RevalidateAutoEnrollmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CheckSdnMatch">
      <soap:operation soapAction=""/>
      <wsdl:input name="CheckSdnMatchRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CheckSdnMatchResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateAutoPayeeInfo">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateAutoPayeeInfoRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateAutoPayeeInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetScheduleList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetScheduleListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetScheduleListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAffiliateClients">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetAffiliateClientsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetAffiliateClientsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminUpdateInternalUser">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminUpdateInternalUserRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminUpdateInternalUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentErrorList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetEnrollmentErrorListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetEnrollmentErrorListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPostedTransaction">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetPostedTransactionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetPostedTransactionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminUpdateSubscriber">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminUpdateSubscriberRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminUpdateSubscriberResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentCaptureAddress">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetEnrollmentCaptureAddressRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetEnrollmentCaptureAddressResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateDraftItems">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateDraftItemsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateDraftItemsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPartialEnrollment">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetPartialEnrollmentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetPartialEnrollmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateSubscriberUser">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateSubscriberUserRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateSubscriberUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SaveAutoEnrollmentAffiliates">
      <soap:operation soapAction=""/>
      <wsdl:input name="SaveAutoEnrollmentAffiliatesRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="SaveAutoEnrollmentAffiliatesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateSignatureDate">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateSignatureDateRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateSignatureDateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreatePositivePayList">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreatePositivePayListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreatePositivePayListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAffiliateList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetAffiliateListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetAffiliateListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDraftScheduleListWithNextDate">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetDraftScheduleListWithNextDateRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetDraftScheduleListWithNextDateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateSettlementSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateSettlementScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateSettlementScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SkipPayment">
      <soap:operation soapAction=""/>
      <wsdl:input name="SkipPaymentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="SkipPaymentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDraftScheduleList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetDraftScheduleListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetDraftScheduleListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentDocument">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetEnrollmentDocumentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetEnrollmentDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateClientBankAccount">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateClientBankAccountRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateClientBankAccountResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SendEmail">
      <soap:operation soapAction=""/>
      <wsdl:input name="SendEmailRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="SendEmailResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddReferralAffiliate">
      <soap:operation soapAction=""/>
      <wsdl:input name="AddReferralAffiliateRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AddReferralAffiliateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRuleSetDefinition">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetRuleSetDefinitionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetRuleSetDefinitionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateAutoEnrollment">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateAutoEnrollmentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateAutoEnrollmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriberTransactionReceipts">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetSubscriberTransactionReceiptsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetSubscriberTransactionReceiptsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateEnrollmentComment">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateEnrollmentCommentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateEnrollmentCommentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FailPayment">
      <soap:operation soapAction=""/>
      <wsdl:input name="FailPaymentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="FailPaymentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CompleteEnrollment">
      <soap:operation soapAction=""/>
      <wsdl:input name="CompleteEnrollmentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CompleteEnrollmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetFeeScheduleListBasis">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetFeeScheduleListBasisRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetFeeScheduleListBasisResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CaptureEnrollmentAddress">
      <soap:operation soapAction=""/>
      <wsdl:input name="CaptureEnrollmentAddressRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CaptureEnrollmentAddressResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetSubscriberBankAccount">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetSubscriberBankAccountRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetSubscriberBankAccountResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCheckNumber">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetCheckNumberRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetCheckNumberResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ListSubscriberFee">
      <soap:operation soapAction=""/>
      <wsdl:input name="ListSubscriberFeeRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ListSubscriberFeeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateChannelAttribute">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateChannelAttributeRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateChannelAttributeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminCreateSubscriberDocument">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminCreateSubscriberDocumentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminCreateSubscriberDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientSettlementList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetClientSettlementListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetClientSettlementListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetOverriddenSubscriberFee">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetOverriddenSubscriberFeeRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetOverriddenSubscriberFeeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTransactionProcessors">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetTransactionProcessorsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetTransactionProcessorsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientStatus">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetClientStatusRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetClientStatusResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateGroupEnrollmentAffiliate">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateGroupEnrollmentAffiliateRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateGroupEnrollmentAffiliateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentDocumentList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetEnrollmentDocumentListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetEnrollmentDocumentListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ClientVerification">
      <soap:operation soapAction=""/>
      <wsdl:input name="ClientVerificationRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ClientVerificationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminViewEnrollment">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminViewEnrollmentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminViewEnrollmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateAffiliateUser">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateAffiliateUserRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateAffiliateUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateAffiliateDocument">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateAffiliateDocumentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateAffiliateDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateClient">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateClientRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateClientResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAffiliateScheduleList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetAffiliateScheduleListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetAffiliateScheduleListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAutoEnrollmentDetailFromStoneEagle">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetAutoEnrollmentDetailFromStoneEagleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetAutoEnrollmentDetailFromStoneEagleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Auth">
      <soap:operation soapAction=""/>
      <wsdl:input name="AuthRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AuthResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CaptureDraft">
      <soap:operation soapAction=""/>
      <wsdl:input name="CaptureDraftRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CaptureDraftResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminCreateAffiliate">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminCreateAffiliateRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminCreateAffiliateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AuthorizeAndAcceptPayment">
      <soap:operation soapAction=""/>
      <wsdl:input name="AuthorizeAndAcceptPaymentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AuthorizeAndAcceptPaymentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateAffiliate">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateAffiliateRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateAffiliateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetNewPositivePayList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetNewPositivePayListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetNewPositivePayListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateClient">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateClientRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateClientResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentChannelAttributeValuesList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetEnrollmentChannelAttributeValuesListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetEnrollmentChannelAttributeValuesListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetSubscriberList">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetSubscriberListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetSubscriberListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UnlockAccount">
      <soap:operation soapAction=""/>
      <wsdl:input name="UnlockAccountRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UnlockAccountResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminUpdateAffiliate">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminUpdateAffiliateRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminUpdateAffiliateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateSuscriberTemplateAsset">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateSuscriberTemplateAssetRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateSuscriberTemplateAssetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientBankAccount">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetClientBankAccountRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetClientBankAccountResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminListSubscriberFee">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminListSubscriberFeeRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminListSubscriberFeeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AuthorizeAndAdvancePayment">
      <soap:operation soapAction=""/>
      <wsdl:input name="AuthorizeAndAdvancePaymentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AuthorizeAndAdvancePaymentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateSubscriberTransactionReceipt">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateSubscriberTransactionReceiptRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateSubscriberTransactionReceiptResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateRuleSet">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateRuleSetRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateRuleSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateRTPSettlementSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateRTPSettlementScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateRTPSettlementScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdatePhonePaymentInquiry">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdatePhonePaymentInquiryRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdatePhonePaymentInquiryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateRuleSet">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateRuleSetRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateRuleSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSPAMonthlyBalanceList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetSPAMonthlyBalanceListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetSPAMonthlyBalanceListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPartialEnrollmentList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetPartialEnrollmentListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetPartialEnrollmentListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="OverrideSubscriberFee">
      <soap:operation soapAction=""/>
      <wsdl:input name="OverrideSubscriberFeeRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="OverrideSubscriberFeeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SuspendFeeSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="SuspendFeeScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="SuspendFeeScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ListEnrollmentFee">
      <soap:operation soapAction=""/>
      <wsdl:input name="ListEnrollmentFeeRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ListEnrollmentFeeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminCreateSubscriberFees">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminCreateSubscriberFeesRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminCreateSubscriberFeesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClientsEnhanced">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetClientsEnhancedRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetClientsEnhancedResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentExceptionsList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetEnrollmentExceptionsListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetEnrollmentExceptionsListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PopulateBiweeklyEnrollmentSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="PopulateBiweeklyEnrollmentScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="PopulateBiweeklyEnrollmentScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentPayee">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetEnrollmentPayeeRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetEnrollmentPayeeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ProcessMultipleReturns">
      <soap:operation soapAction=""/>
      <wsdl:input name="ProcessMultipleReturnsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ProcessMultipleReturnsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="InstantRemittance">
      <soap:operation soapAction=""/>
      <wsdl:input name="InstantRemittanceRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="InstantRemittanceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTransactionListByIds">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetTransactionListByIdsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetTransactionListByIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEnrollmentTicketList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetEnrollmentTicketListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetEnrollmentTicketListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAffiliateTransactionList">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetAffiliateTransactionListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetAffiliateTransactionListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetFeeSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetFeeScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetFeeScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VerifyIp">
      <soap:operation soapAction=""/>
      <wsdl:input name="VerifyIpRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="VerifyIpResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SkipDraft">
      <soap:operation soapAction=""/>
      <wsdl:input name="SkipDraftRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="SkipDraftResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminUpdateActivateEnrollment">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminUpdateActivateEnrollmentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminUpdateActivateEnrollmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ReactivateFeeSchedule">
      <soap:operation soapAction=""/>
      <wsdl:input name="ReactivateFeeScheduleRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ReactivateFeeScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateDraftItems">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateDraftItemsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateDraftItemsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateSubscriberPartner">
      <soap:operation soapAction=""/>
      <wsdl:input name="UpdateSubscriberPartnerRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateSubscriberPartnerResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateDepositItems">
      <soap:operation soapAction=""/>
      <wsdl:input name="CreateDepositItemsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateDepositItemsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdminGetSubscriberDocumentList">
      <soap:operation soapAction=""/>
      <wsdl:input name="AdminGetSubscriberDocumentListRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminGetSubscriberDocumentListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetResetPasswordToken">
      <soap:operation soapAction=""/>
      <wsdl:input name="GetResetPasswordTokenRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetResetPasswordTokenResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="npnService">
    <wsdl:port binding="tns:npnSoap11" name="npnSoap11">
      <soap:address location="http://qaws.cftpay.com:8080/wsrv/services"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:operation id="b82576ec-a24d-49a7-a593-3d55da0ac052" isOneWay="false" action="" name="ActivateSettlement" bindingOperationName="ActivateSettlement" type="Request-Response" outputName="ActivateSettlementResponse" inputName="ActivateSettlementRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a06c0fd3-4ab9-4bde-bbbc-660f1e54ceb0" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:ActivateSettlementRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:settlementId>?</mes:settlementId>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
      </mes:ActivateSettlementRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/ActivateSettlementRequest"/></con:call></con:operation><con:operation id="97913e20-93f4-4fe6-90dc-0ddfab1439ea" isOneWay="false" action="" name="AddReferralAffiliate" bindingOperationName="AddReferralAffiliate" type="Request-Response" outputName="AddReferralAffiliateResponse" inputName="AddReferralAffiliateRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="899a86c9-cbd7-4249-830f-6fef998b10e8" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AddReferralAffiliateRequest>
         <!--You may enter the following 9 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:affiliateId>?</mes:affiliateId>
         <mes:affiliateType>?</mes:affiliateType>
         <mes:referralAffiliateId>?</mes:referralAffiliateId>
         <mes:referralAffiliateType>?</mes:referralAffiliateType>
         <mes:startDate>
            <typ:date format="?" value="?"/>
         </mes:startDate>
         <mes:endDate>
            <typ:date format="?" value="?"/>
         </mes:endDate>
         <mes:cycle1Amount>?</mes:cycle1Amount>
         <mes:cycle2Amount>?</mes:cycle2Amount>
      </mes:AddReferralAffiliateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AddReferralAffiliateRequest"/></con:call></con:operation><con:operation id="d9bb6996-2d2a-4adc-8aa2-c3170b4fd542" isOneWay="false" action="" name="AdminActivateEnrollment" bindingOperationName="AdminActivateEnrollment" type="Request-Response" outputName="AdminActivateEnrollmentResponse" inputName="AdminActivateEnrollmentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d75fd9d5-6ed3-4494-a64c-4a235921dc4e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminActivateEnrollmentRequest>
         <mes:enrollmentId>?</mes:enrollmentId>
      </mes:AdminActivateEnrollmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminActivateEnrollmentRequest"/></con:call></con:operation><con:operation id="c8d4f437-8b76-4239-85b0-5c919858207c" isOneWay="false" action="" name="AdminCreateAffiliate" bindingOperationName="AdminCreateAffiliate" type="Request-Response" outputName="AdminCreateAffiliateResponse" inputName="AdminCreateAffiliateRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bab0a3ed-0901-4057-8d69-44972bb797d2" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminCreateAffiliateRequest>
         <mes:affiliate>
            <!--You may enter the following 54 items in any order-->
            <typ:subscriberId>?</typ:subscriberId>
            <!--Optional:-->
            <typ:externalAffiliateId>?</typ:externalAffiliateId>
            <!--Optional:-->
            <typ:parentAffiliateId>?</typ:parentAffiliateId>
            <!--Optional:-->
            <typ:parentExternalAffiliateId>?</typ:parentExternalAffiliateId>
            <typ:affiliateType>?</typ:affiliateType>
            <typ:name>?</typ:name>
            <typ:address1>?</typ:address1>
            <!--Optional:-->
            <typ:address2>?</typ:address2>
            <typ:city>?</typ:city>
            <typ:state>?</typ:state>
            <typ:zipcode>?</typ:zipcode>
            <typ:email>?</typ:email>
            <typ:phone>?</typ:phone>
            <!--Optional:-->
            <typ:fax>?</typ:fax>
            <typ:businessType>?</typ:businessType>
            <!--Optional:-->
            <typ:taxId>?</typ:taxId>
            <!--Optional:-->
            <typ:bankName>?</typ:bankName>
            <!--Optional:-->
            <typ:routingNunber>?</typ:routingNunber>
            <!--Optional:-->
            <typ:accountType>?</typ:accountType>
            <!--Optional:-->
            <typ:accountNumber>?</typ:accountNumber>
            <!--Optional:-->
            <typ:holdersName>?</typ:holdersName>
            <!--Optional:-->
            <typ:bankAddress1>?</typ:bankAddress1>
            <!--Optional:-->
            <typ:bankAddress2>?</typ:bankAddress2>
            <!--Optional:-->
            <typ:bankCity>?</typ:bankCity>
            <!--Optional:-->
            <typ:bankState>?</typ:bankState>
            <!--Optional:-->
            <typ:bankZipcode>?</typ:bankZipcode>
            <typ:payoutMethod>ACH</typ:payoutMethod>
            <typ:payoutFrequency>MONTHLY</typ:payoutFrequency>
            <typ:payoutFrequencyValue>15</typ:payoutFrequencyValue>
            <typ:payoutThreshold>100</typ:payoutThreshold>
            <!--Optional:-->
            <typ:level>?</typ:level>
            <!--Optional:-->
            <typ:classification>?</typ:classification>
            <typ:isReferral>?</typ:isReferral>
            <!--Optional:-->
            <typ:referralStartDate>
               <typ:date format="?" value="?"/>
            </typ:referralStartDate>
            <!--Optional:-->
            <typ:referralEndDate>
               <typ:date format="?" value="?"/>
            </typ:referralEndDate>
            <typ:commStartDate>
               <typ:date format="?" value="?"/>
            </typ:commStartDate>
            <typ:commEndDate>
               <typ:date format="?" value="?"/>
            </typ:commEndDate>
            <typ:isAdvanceComm>?</typ:isAdvanceComm>
            <!--Optional:-->
            <typ:advanceCommPercentage>?</typ:advanceCommPercentage>
            <!--Optional:-->
            <typ:advanceCommStartDate>
               <typ:date format="?" value="?"/>
            </typ:advanceCommStartDate>
            <typ:enableRedirect>?</typ:enableRedirect>
            <!--Optional:-->
            <typ:redirectToType>?</typ:redirectToType>
            <!--Optional:-->
            <typ:redirectStartDate>
               <typ:date format="?" value="?"/>
            </typ:redirectStartDate>
            <!--Optional:-->
            <typ:redirectEndDate>
               <typ:date format="?" value="?"/>
            </typ:redirectEndDate>
            <!--Optional:-->
            <typ:redirectTo>?</typ:redirectTo>
            <typ:comments>?</typ:comments>
            <typ:signatureDate>
               <typ:date format="?" value="?"/>
            </typ:signatureDate>
            <typ:status>?</typ:status>
            <!--Optional:-->
            <typ:checkAddress>
               <!--You may enter the following 5 items in any order-->
               <!--Optional:-->
               <typ:address1>?</typ:address1>
               <!--Optional:-->
               <typ:address2>?</typ:address2>
               <!--Optional:-->
               <typ:city>?</typ:city>
               <!--Optional:-->
               <typ:state>?</typ:state>
               <!--Optional:-->
               <typ:zip>?</typ:zip>
            </typ:checkAddress>
            <!--Optional:-->
            <typ:fixed>
               <!--Zero or more repetitions:-->
               <typ:cycle>
                  <!--You may enter the following 3 items in any order-->
                  <typ:distType>?</typ:distType>
                  <typ:cycleId>?</typ:cycleId>
                  <typ:value>?</typ:value>
               </typ:cycle>
            </typ:fixed>
            <!--Optional:-->
            <typ:payoutRule>?</typ:payoutRule>
            <!--Optional:-->
            <typ:auditInformation>
               <!--You may enter the following 6 items in any order-->
               <typ:createdOn>
                  <typ:date format="?" value="?"/>
               </typ:createdOn>
               <typ:createdBy>?</typ:createdBy>
               <typ:createdUserType>?</typ:createdUserType>
               <typ:modifiedOn>
                  <typ:date format="?" value="?"/>
               </typ:modifiedOn>
               <typ:modifiedBy>?</typ:modifiedBy>
               <typ:modifiedUserType>?</typ:modifiedUserType>
            </typ:auditInformation>
            <!--Optional:-->
            <typ:isGuaranteed>?</typ:isGuaranteed>
            <!--Optional:-->
            <typ:isFlexyDrafts>?</typ:isFlexyDrafts>
         </mes:affiliate>
      </mes:AdminCreateAffiliateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminCreateAffiliateRequest"/></con:call></con:operation><con:operation id="331dc237-8b3f-4995-bec4-e44f43c9f54e" isOneWay="false" action="" name="AdminCreateInternalUser" bindingOperationName="AdminCreateInternalUser" type="Request-Response" outputName="AdminCreateInternalUserResponse" inputName="AdminCreateInternalUserRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6b532ec4-03be-48ed-a071-913612e76c9c" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminCreateInternalUserRequest>
         <!--You may enter the following 12 items in any order-->
         <!--Optional:-->
         <mes:subscriberIdList>
            <!--Zero or more repetitions:-->
            <mes:subscriberId>?</mes:subscriberId>
         </mes:subscriberIdList>
         <mes:firstName>?</mes:firstName>
         <mes:userName>?</mes:userName>
         <!--Optional:-->
         <mes:middleInitial>?</mes:middleInitial>
         <mes:lastName>?</mes:lastName>
         <mes:email>?</mes:email>
         <mes:phone>?</mes:phone>
         <mes:password>?</mes:password>
         <mes:isActive>true</mes:isActive>
         <mes:rolePermissions>
            <!--1 or more repetitions:-->
            <typ:rolePermission>?</typ:rolePermission>
         </mes:rolePermissions>
         <mes:isIpValidationRequired>true</mes:isIpValidationRequired>
         <!--Optional:-->
         <mes:ipAddresses>
            <!--1 or more repetitions:-->
            <typ:IpAddress>?</typ:IpAddress>
         </mes:ipAddresses>
      </mes:AdminCreateInternalUserRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminCreateInternalUserRequest"/></con:call></con:operation><con:operation id="5bb0784c-2516-44b3-8229-f2c81551aaee" isOneWay="false" action="" name="AdminCreateSubscriber" bindingOperationName="AdminCreateSubscriber" type="Request-Response" outputName="AdminCreateSubscriberResponse" inputName="AdminCreateSubscriberRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7c6e2f82-a41a-4b31-9040-bd1ea2bae594" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminCreateSubscriberRequest>
         <!--You may enter the following 17 items in any order-->
         <mes:subscriberName>?</mes:subscriberName>
         <mes:address1>?</mes:address1>
         <!--Optional:-->
         <mes:address2>?</mes:address2>
         <mes:city>?</mes:city>
         <mes:state>?</mes:state>
         <mes:zip>?</mes:zip>
         <mes:addressType>?</mes:addressType>
         <mes:commissionStructureName>?</mes:commissionStructureName>
         <mes:contactName>?</mes:contactName>
         <!--Optional:-->
         <mes:website>?</mes:website>
         <mes:phone>?</mes:phone>
         <!--Optional:-->
         <mes:mobilePhone>?</mes:mobilePhone>
         <!--Optional:-->
         <mes:subscriberAbbreviation>?</mes:subscriberAbbreviation>
         <!--Optional:-->
         <mes:checkNumberStart>1000</mes:checkNumberStart>
         <mes:email>?</mes:email>
         <mes:vertical>?</mes:vertical>
         <!--Optional:-->
         <mes:internalUserList>
            <!--1 or more repetitions:-->
            <typ:internalUserId>?</typ:internalUserId>
         </mes:internalUserList>
      </mes:AdminCreateSubscriberRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminCreateSubscriberRequest"/></con:call></con:operation><con:operation id="0ef7c22c-fd30-4b5c-9dcd-7d22c5778f69" isOneWay="false" action="" name="AdminCreateSubscriberBankAccount" bindingOperationName="AdminCreateSubscriberBankAccount" type="Request-Response" outputName="AdminCreateSubscriberBankAccountResponse" inputName="AdminCreateSubscriberBankAccountRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="762ea29c-089b-4425-9f82-ee57f6c56a5f" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminCreateSubscriberBankAccountRequest>
         <!--You may enter the following 8 items in any order-->
         <mes:bankPartnerId>?</mes:bankPartnerId>
         <mes:subscriberId>?</mes:subscriberId>
         <mes:routingNumber>?</mes:routingNumber>
         <mes:accountType>?</mes:accountType>
         <mes:thresholdAmount>?</mes:thresholdAmount>
         <mes:accountNumber>?</mes:accountNumber>
         <mes:holdersName>?</mes:holdersName>
         <mes:subscriberAccountType>?</mes:subscriberAccountType>
      </mes:AdminCreateSubscriberBankAccountRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminCreateSubscriberBankAccountRequest"/></con:call></con:operation><con:operation id="cd970472-f577-45c9-9377-afea895fa455" isOneWay="false" action="" name="AdminCreateSubscriberDocument" bindingOperationName="AdminCreateSubscriberDocument" type="Request-Response" outputName="AdminCreateSubscriberDocumentResponse" inputName="AdminCreateSubscriberDocumentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1c9e62e2-c109-453a-90ac-97a2385fc23f" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminCreateSubscriberDocumentRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:base64EncodedContent>?</mes:base64EncodedContent>
         <mes:note>?</mes:note>
         <mes:name>?</mes:name>
         <mes:contentType>?</mes:contentType>
      </mes:AdminCreateSubscriberDocumentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminCreateSubscriberDocumentRequest"/></con:call></con:operation><con:operation id="0a5319b0-c245-4dc2-9a39-844a75b0f966" isOneWay="false" action="" name="AdminCreateSubscriberFees" bindingOperationName="AdminCreateSubscriberFees" type="Request-Response" outputName="AdminCreateSubscriberFeesResponse" inputName="AdminCreateSubscriberFeesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="de6d5d20-17d0-4615-baab-1cd3677bd61e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminCreateSubscriberFeesRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:fees>
            <!--1 or more repetitions:-->
            <typ:fee>
               <!--You may enter the following 8 items in any order-->
               <typ:feeId>?</typ:feeId>
               <!--Optional:-->
               <typ:externalFeeId>?</typ:externalFeeId>
               <typ:type>?</typ:type>
               <typ:name>?</typ:name>
               <typ:description>?</typ:description>
               <typ:required>?</typ:required>
               <typ:priority>?</typ:priority>
               <typ:amount>?</typ:amount>
            </typ:fee>
         </mes:fees>
      </mes:AdminCreateSubscriberFeesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminCreateSubscriberFeesRequest"/></con:call></con:operation><con:operation id="dfcb463f-84a0-4daa-9ca9-fe992875ceec" isOneWay="false" action="" name="AdminCreateSubscriberProcessorSetup" bindingOperationName="AdminCreateSubscriberProcessorSetup" type="Request-Response" outputName="AdminCreateSubscriberProcessorSetupResponse" inputName="AdminCreateSubscriberProcessorSetupRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bd2363c7-2320-4319-816e-e04cc2ec72da" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminCreateSubscriberProcessorSetupRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:transactionProcessors>
            <!--1 or more repetitions:-->
            <typ:transactionProcessor>
               <!--You may enter the following 2 items in any order-->
               <typ:transactionProcessorId>?</typ:transactionProcessorId>
               <typ:transactionProcessorType>?</typ:transactionProcessorType>
            </typ:transactionProcessor>
         </mes:transactionProcessors>
         <mes:subscriberId>?</mes:subscriberId>
      </mes:AdminCreateSubscriberProcessorSetupRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminCreateSubscriberProcessorSetupRequest"/></con:call></con:operation><con:operation id="1cca55e2-bea4-4cc3-a333-b1ab8a8191f8" isOneWay="false" action="" name="AdminGetAffiliate" bindingOperationName="AdminGetAffiliate" type="Request-Response" outputName="AdminGetAffiliateResponse" inputName="AdminGetAffiliateRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b0e645f8-557a-454f-bee0-4bfd8ba1544f" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetAffiliateRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:affiliateId>?</mes:affiliateId>
         <!--Optional:-->
         <mes:externalAffiliateId>?</mes:externalAffiliateId>
      </mes:AdminGetAffiliateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetAffiliateRequest"/></con:call></con:operation><con:operation id="b7022710-aaca-4f44-9edc-f0758d714724" isOneWay="false" action="" name="AdminGetAffiliateList" bindingOperationName="AdminGetAffiliateList" type="Request-Response" outputName="AdminGetAffiliateListResponse" inputName="AdminGetAffiliateListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3d89f47b-f67c-424a-85a4-349ce0a1648e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetAffiliateListRequest>
         <!--You may enter the following 8 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:name>?</mes:name>
         <!--Optional:-->
         <mes:externalAffiliateId>?</mes:externalAffiliateId>
         <!--Optional:-->
         <mes:affiliateType>?</mes:affiliateType>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>
               <typ:order value="?" isAscending="true"/>
            </typ:orderBy>
         </mes:orderBy>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:AdminGetAffiliateListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetAffiliateListRequest"/></con:call></con:operation><con:operation id="55cd8b12-15f7-4b65-9de1-a4986930f994" isOneWay="false" action="" name="AdminGetAvoidableReturnsFlaggedClients" bindingOperationName="AdminGetAvoidableReturnsFlaggedClients" type="Request-Response" outputName="AdminGetAvoidableReturnsFlaggedClientsResponse" inputName="AdminGetAvoidableReturnsFlaggedClientsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="70a808cd-4176-42e9-b821-88ad414f96cd" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetAvoidableReturnsFlaggedClientsRequest>
         <!--You may enter the following 12 items in any order-->
         <!--Optional:-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:returnCode>?</mes:returnCode>
         <!--Optional:-->
         <mes:nextDraftFromDate>
            <typ:date format="?" value="?"/>
         </mes:nextDraftFromDate>
         <!--Optional:-->
         <mes:nextDraftToDate>
            <typ:date format="?" value="?"/>
         </mes:nextDraftToDate>
         <!--Optional:-->
         <mes:returnFromDate>
            <typ:date format="?" value="?"/>
         </mes:returnFromDate>
         <!--Optional:-->
         <mes:returnToDate>
            <typ:date format="?" value="?"/>
         </mes:returnToDate>
         <!--Optional:-->
         <mes:order>?</mes:order>
         <mes:ascending>true</mes:ascending>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
         <!--Optional:-->
         <mes:documentStatus>?</mes:documentStatus>
      </mes:AdminGetAvoidableReturnsFlaggedClientsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetAvoidableReturnsFlaggedClientsRequest"/></con:call></con:operation><con:operation id="8d3c9859-8c4c-483f-93f7-29ab7c5a26d0" isOneWay="false" action="" name="AdminGetCFTBankAccountList" bindingOperationName="AdminGetCFTBankAccountList" type="Request-Response" outputName="AdminGetCFTBankAccountListResponse" inputName="AdminGetCFTBankAccountListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bba818ba-17c5-45d3-9254-642b78f20ae4" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetCFTBankAccountListRequest>
         <mes:subscriberId>?</mes:subscriberId>
      </mes:AdminGetCFTBankAccountListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetCFTBankAccountListRequest"/></con:call></con:operation><con:operation id="9da25aa2-0fa4-4cee-8c36-fb29270862da" isOneWay="false" action="" name="AdminGetClients" bindingOperationName="AdminGetClients" type="Request-Response" outputName="AdminGetClientsResponse" inputName="AdminGetClientsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b785f3b2-fa4c-4b48-bdf5-fcff1a72acd8" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetClientsRequest>
         <!--You may enter the following 27 items in any order-->
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:firstname>?</mes:firstname>
         <!--Optional:-->
         <mes:middleInitial>?</mes:middleInitial>
         <!--Optional:-->
         <mes:lastname>?</mes:lastname>
         <!--Optional:-->
         <mes:ssn>?</mes:ssn>
         <!--Optional:-->
         <mes:email>?</mes:email>
         <!--Optional:-->
         <mes:keyWord>?</mes:keyWord>
         <!--Optional:-->
         <mes:statuses>
            <!--Zero or more repetitions:-->
            <mes:status>?</mes:status>
         </mes:statuses>
         <!--Optional:-->
         <mes:spaStatuses>
            <!--Zero or more repetitions:-->
            <mes:status>?</mes:status>
         </mes:spaStatuses>
         <!--Optional:-->
         <mes:fromDate>
            <typ:date format="?" value="?"/>
         </mes:fromDate>
         <!--Optional:-->
         <mes:toDate>
            <typ:date format="?" value="?"/>
         </mes:toDate>
         <!--Optional:-->
         <mes:phoneNumber>?</mes:phoneNumber>
         <!--Optional:-->
         <mes:addressLine1>?</mes:addressLine1>
         <!--Optional:-->
         <mes:addressLine2>?</mes:addressLine2>
         <!--Optional:-->
         <mes:city>?</mes:city>
         <!--Optional:-->
         <mes:state>?</mes:state>
         <!--Optional:-->
         <mes:zip>?</mes:zip>
         <!--Optional:-->
         <mes:loanNumber>?</mes:loanNumber>
         <!--Optional:-->
         <mes:lenderName>?</mes:lenderName>
         <!--Optional:-->
         <mes:VIN>?</mes:VIN>
         <!--Optional:-->
         <mes:routingNumber>?</mes:routingNumber>
         <!--Optional:-->
         <mes:accountNumber>?</mes:accountNumber>
         <!--Optional:-->
         <mes:order>
            <!--Zero or more repetitions:-->
            <mes:orderBy>?</mes:orderBy>
         </mes:order>
         <mes:ascending>true</mes:ascending>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:AdminGetClientsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetClientsRequest"/></con:call></con:operation><con:operation id="1046a0c8-7c67-4b33-84d0-f7d95853e4b2" isOneWay="false" action="" name="AdminGetEnrollments" bindingOperationName="AdminGetEnrollments" type="Request-Response" outputName="AdminGetEnrollmentsResponse" inputName="AdminGetEnrollmentsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f6b5437d-156a-4894-83bc-7ff0ccfd1fbf" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetEnrollmentsRequest>
         <!--You may enter the following 16 items in any order-->
         <!--Optional:-->
         <mes:enrollmentIds>
            <!--Zero or more repetitions:-->
            <mes:enrollmentId>?</mes:enrollmentId>
         </mes:enrollmentIds>
         <!--Optional:-->
         <mes:subscriberIds>
            <!--Zero or more repetitions:-->
            <mes:subscriberId>?</mes:subscriberId>
         </mes:subscriberIds>
         <!--Optional:-->
         <mes:subscriberName>?</mes:subscriberName>
         <!--Optional:-->
         <mes:clientIds>
            <!--Zero or more repetitions:-->
            <typ:clientId>?</typ:clientId>
         </mes:clientIds>
         <!--Optional:-->
         <mes:firstname>?</mes:firstname>
         <!--Optional:-->
         <mes:middleInitial>?</mes:middleInitial>
         <!--Optional:-->
         <mes:lastname>?</mes:lastname>
         <!--Optional:-->
         <mes:externalClientIds>
            <!--Zero or more repetitions:-->
            <mes:externalClientId>?</mes:externalClientId>
         </mes:externalClientIds>
         <!--Optional:-->
         <mes:enrollmentStatuses>
            <!--Zero or more repetitions:-->
            <mes:status>?</mes:status>
         </mes:enrollmentStatuses>
         <!--Optional:-->
         <mes:cipStatuses>
            <!--Zero or more repetitions:-->
            <mes:status>?</mes:status>
         </mes:cipStatuses>
         <!--Optional:-->
         <mes:ofacStatuses>
            <!--Zero or more repetitions:-->
            <mes:status>?</mes:status>
         </mes:ofacStatuses>
         <!--Optional:-->
         <mes:spaStatuses>
            <!--Zero or more repetitions:-->
            <mes:status>?</mes:status>
         </mes:spaStatuses>
         <mes:ascending>true</mes:ascending>
         <!--Optional:-->
         <mes:order>
            <!--Zero or more repetitions:-->
            <mes:orderBy>?</mes:orderBy>
         </mes:order>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:AdminGetEnrollmentsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetEnrollmentsRequest"/></con:call></con:operation><con:operation id="e7fc1820-a040-45d7-9c71-ac1fc1c8ada4" isOneWay="false" action="" name="AdminGetInternalUserList" bindingOperationName="AdminGetInternalUserList" type="Request-Response" outputName="AdminGetInternalUserListResponse" inputName="AdminGetInternalUserListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7dffe2fe-88e9-48bc-af13-dc9b96e7669d" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetInternalUserListRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:pageNumber>?</mes:pageNumber>
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>?</typ:orderBy>
         </mes:orderBy>
         <mes:ascending>true</mes:ascending>
         <!--Optional:-->
         <mes:isActive>true</mes:isActive>
      </mes:AdminGetInternalUserListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetInternalUserListRequest"/></con:call></con:operation><con:operation id="00c1829a-d4e7-4f30-af83-cbdd335bc305" isOneWay="false" action="" name="AdminGetNonConformingDrafts" bindingOperationName="AdminGetNonConformingDrafts" type="Request-Response" outputName="AdminGetNonConformingDraftsResponse" inputName="AdminGetNonConformingDraftsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5ca5fe78-428f-460d-af79-b30f618413d1" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetNonConformingDraftsRequest>
         <!--You may enter the following 3 items in any order-->
         <!--Optional:-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:pageNumber>?</mes:pageNumber>
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
      </mes:AdminGetNonConformingDraftsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetNonConformingDraftsRequest"/></con:call></con:operation><con:operation id="1f58646b-3ab6-4e19-a533-e6416c8df669" isOneWay="false" action="" name="AdminGetPostedTransactionList" bindingOperationName="AdminGetPostedTransactionList" type="Request-Response" outputName="AdminGetPostedTransactionListResponse" inputName="AdminGetPostedTransactionListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f684d52e-190d-450f-8dd3-c6d516aa4d0e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetPostedTransactionListRequest>
         <!--You may enter the following 5 items in any order-->
         <!--Optional:-->
         <mes:postedTransactionStatus>?</mes:postedTransactionStatus>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
         <!--Optional:-->
         <mes:order>
            <mes:orderBy>?</mes:orderBy>
         </mes:order>
         <mes:ascending>true</mes:ascending>
      </mes:AdminGetPostedTransactionListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetPostedTransactionListRequest"/></con:call></con:operation><con:operation id="4010cfff-3ccb-4d84-a296-44be11c3bd39" isOneWay="false" action="" name="AdminGetScheduleList" bindingOperationName="AdminGetScheduleList" type="Request-Response" outputName="AdminGetScheduleListResponse" inputName="AdminGetScheduleListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e808d103-8e06-4aa3-98cf-f401294f1d84" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetScheduleListRequest>
         <!--You may enter the following 13 items in any order-->
         <!--Optional:-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:startDate>
            <typ:date format="?" value="?"/>
         </mes:startDate>
         <mes:endDate>
            <typ:date format="?" value="?"/>
         </mes:endDate>
         <!--Optional:-->
         <mes:order>?</mes:order>
         <mes:ascending>true</mes:ascending>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:pageNumber>?</mes:pageNumber>
         <!--Optional:-->
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
         <mes:transactionClasses>
            <!--1 or more repetitions:-->
            <typ:transactionClass>?</typ:transactionClass>
         </mes:transactionClasses>
         <!--Optional:-->
         <mes:transactionMethods>
            <!--Zero or more repetitions:-->
            <typ:transactionMethod>?</typ:transactionMethod>
         </mes:transactionMethods>
         <!--Optional:-->
         <mes:showRfee>false</mes:showRfee>
      </mes:AdminGetScheduleListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetScheduleListRequest"/></con:call></con:operation><con:operation id="55b4067a-a7e2-45a8-966e-897e0bf0878d" isOneWay="false" action="" name="AdminGetSettlementFees" bindingOperationName="AdminGetSettlementFees" type="Request-Response" outputName="AdminGetSettlementFeesResponse" inputName="AdminGetSettlementFeesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e959eda6-7dc7-44d7-b437-de5d28fa9c57" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetSettlementFeesRequest>
         <!--You may enter the following 6 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:settlementId>?</mes:settlementId>
         <mes:pageNumber>?</mes:pageNumber>
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
      </mes:AdminGetSettlementFeesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetSettlementFeesRequest"/></con:call></con:operation><con:operation id="545a9b7c-41e0-47ae-b643-3e815b4a78c6" isOneWay="false" action="" name="AdminGetSettlementList" bindingOperationName="AdminGetSettlementList" type="Request-Response" outputName="AdminGetSettlementListResponse" inputName="AdminGetSettlementListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3155d864-12cb-4fe0-a501-b39200555f8c" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetSettlementListRequest>
         <!--You may enter the following 7 items in any order-->
         <!--Optional:-->
         <mes:subscriberName>?</mes:subscriberName>
         <!--Optional:-->
         <mes:clientName>?</mes:clientName>
         <!--Optional:-->
         <mes:settlementStatus>?</mes:settlementStatus>
         <!--Optional:-->
         <mes:approvalStatus>?</mes:approvalStatus>
         <mes:pageNumber>?</mes:pageNumber>
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>
               <typ:order value="?" isAscending="true"/>
            </typ:orderBy>
         </mes:orderBy>
      </mes:AdminGetSettlementListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetSettlementListRequest"/></con:call></con:operation><con:operation id="02c5979b-6fcd-49ed-833b-84d8027ab114" isOneWay="false" action="" name="AdminGetSubscriberAccounts" bindingOperationName="AdminGetSubscriberAccounts" type="Request-Response" outputName="AdminGetSubscriberAccountsResponse" inputName="AdminGetSubscriberAccountsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b0b0f6be-c8cb-43ae-b38c-52e197737141" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetSubscriberAccountsRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:subscriberAccountId>?</mes:subscriberAccountId>
      </mes:AdminGetSubscriberAccountsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetSubscriberAccountsRequest"/></con:call></con:operation><con:operation id="6905228b-e62f-478f-bb7e-776f66ef6cbc" isOneWay="false" action="" name="AdminGetSubscriberBankAccount" bindingOperationName="AdminGetSubscriberBankAccount" type="Request-Response" outputName="AdminGetSubscriberBankAccountResponse" inputName="AdminGetSubscriberBankAccountRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="846c58b3-2b86-47ee-a12d-ecbd3d0fb35a" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetSubscriberBankAccountRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:subscriberBankAccountId>?</mes:subscriberBankAccountId>
         <mes:subscriberId>?</mes:subscriberId>
      </mes:AdminGetSubscriberBankAccountRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetSubscriberBankAccountRequest"/></con:call></con:operation><con:operation id="f149ad1b-848b-40b4-a5e6-9447574e0284" isOneWay="false" action="" name="AdminGetSubscriberBankAccountList" bindingOperationName="AdminGetSubscriberBankAccountList" type="Request-Response" outputName="AdminGetSubscriberBankAccountListResponse" inputName="AdminGetSubscriberBankAccountListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d522068c-acec-4c79-b5b7-8813c156796a" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetSubscriberBankAccountListRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
         <!--Optional:-->
         <mes:pageNumber>?</mes:pageNumber>
      </mes:AdminGetSubscriberBankAccountListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetSubscriberBankAccountListRequest"/></con:call></con:operation><con:operation id="4e855a78-6d00-4cfc-9bf5-2b4a7a0464d4" isOneWay="false" action="" name="AdminGetSubscriberDetail" bindingOperationName="AdminGetSubscriberDetail" type="Request-Response" outputName="AdminGetSubscriberDetailResponse" inputName="AdminGetSubscriberDetailRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c1cf5cd6-46d9-4e8c-afe1-fc60855829f4" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetSubscriberDetailRequest>
         <mes:subscriberId>?</mes:subscriberId>
      </mes:AdminGetSubscriberDetailRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetSubscriberDetailRequest"/></con:call></con:operation><con:operation id="ae34d6fc-ec82-4ba3-98e7-236707dd34b5" isOneWay="false" action="" name="AdminGetSubscriberDocumentList" bindingOperationName="AdminGetSubscriberDocumentList" type="Request-Response" outputName="AdminGetSubscriberDocumentListResponse" inputName="AdminGetSubscriberDocumentListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e62dd666-d912-4c57-a189-da8489070a6a" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetSubscriberDocumentListRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:pageNo>?</mes:pageNo>
         <!--Optional:-->
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:AdminGetSubscriberDocumentListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetSubscriberDocumentListRequest"/></con:call></con:operation><con:operation id="2b551eb0-ed3c-4201-bc49-c0c16a85f33a" isOneWay="false" action="" name="AdminGetSubscriberList" bindingOperationName="AdminGetSubscriberList" type="Request-Response" outputName="AdminGetSubscriberListResponse" inputName="AdminGetSubscriberListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4e327fc1-9ac4-44d7-94b9-09b7c3bfcf3d" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetSubscriberListRequest>
         <!--You may enter the following 8 items in any order-->
         <!--Optional:-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:userId>?</mes:userId>
         <!--Optional:-->
         <mes:name>?</mes:name>
         <!--Optional:-->
         <mes:contactName>?</mes:contactName>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:orderBy>
            <!--Optional:-->
            <typ:orderBy>
               <typ:order value="?" isAscending="true"/>
            </typ:orderBy>
         </mes:orderBy>
         <mes:pageNumber>?</mes:pageNumber>
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
      </mes:AdminGetSubscriberListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetSubscriberListRequest"/></con:call></con:operation><con:operation id="4b7d06ad-046a-418f-a4ec-90233a801bdd" isOneWay="false" action="" name="AdminGetSubscriberProcessorSetup" bindingOperationName="AdminGetSubscriberProcessorSetup" type="Request-Response" outputName="AdminGetSubscriberProcessorSetupResponse" inputName="AdminGetSubscriberProcessorSetupRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8c0f1f57-beed-47bf-b848-28822b944f19" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetSubscriberProcessorSetupRequest>
         <mes:subscriberId>?</mes:subscriberId>
      </mes:AdminGetSubscriberProcessorSetupRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetSubscriberProcessorSetupRequest"/></con:call></con:operation><con:operation id="ce46ce9a-6594-469d-888d-ff16acf441bb" isOneWay="false" action="" name="AdminGetTransactionList" bindingOperationName="AdminGetTransactionList" type="Request-Response" outputName="AdminGetTransactionListResponse" inputName="AdminGetTransactionListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bb1fc5f4-c62b-4ed6-8c32-ab1718c3e572" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetTransactionListRequest>
         <!--You may enter the following 10 items in any order-->
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:type>?</mes:type>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:modifiedFromDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedFromDate>
         <!--Optional:-->
         <mes:modifiedToDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedToDate>
         <!--Optional:-->
         <mes:fromDate>
            <typ:date format="?" value="?"/>
         </mes:fromDate>
         <!--Optional:-->
         <mes:toDate>
            <typ:date format="?" value="?"/>
         </mes:toDate>
         <!--Optional:-->
         <mes:pageNo>?</mes:pageNo>
         <!--Optional:-->
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:AdminGetTransactionListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetTransactionListRequest"/></con:call></con:operation><con:operation id="d10bc196-a40a-48a4-ae8c-918a439ec39f" isOneWay="false" action="" name="AdminGetTransferBankAccountList" bindingOperationName="AdminGetTransferBankAccountList" type="Request-Response" outputName="AdminGetTransferBankAccountListResponse" inputName="AdminGetTransferBankAccountListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cdc75ab5-30c9-4090-9ff9-c97bf54b508f" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminGetTransferBankAccountListRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
      </mes:AdminGetTransferBankAccountListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminGetTransferBankAccountListRequest"/></con:call></con:operation><con:operation id="8118fb2c-ce68-43f5-8ffd-f0c3607d4d1a" isOneWay="false" action="" name="AdminListSubscriberFee" bindingOperationName="AdminListSubscriberFee" type="Request-Response" outputName="AdminListSubscriberFeeResponse" inputName="AdminListSubscriberFeeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6bda17b3-0e01-496c-8735-e40ccf4d35c6" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminListSubscriberFeeRequest>
         <!--You may enter the following 8 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:type>?</mes:type>
         <!--Optional:-->
         <mes:owner>?</mes:owner>
         <!--Optional:-->
         <mes:ascending>true</mes:ascending>
         <!--Optional:-->
         <mes:order>
            <!--Optional:-->
            <mes:orderBy>?</mes:orderBy>
         </mes:order>
         <!--Optional:-->
         <mes:pageNo>1</mes:pageNo>
         <!--Optional:-->
         <mes:resultsPerPage>10</mes:resultsPerPage>
         <!--Optional:-->
         <mes:includeDeleted>false</mes:includeDeleted>
      </mes:AdminListSubscriberFeeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminListSubscriberFeeRequest"/></con:call></con:operation><con:operation id="58d8c109-1b6c-4dac-8266-abac9a63ceb0" isOneWay="false" action="" name="AdminListTopLevelFee" bindingOperationName="AdminListTopLevelFee" type="Request-Response" outputName="AdminListTopLevelFeeResponse" inputName="AdminListTopLevelFeeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7ffaaf79-4567-4520-b394-06bbb9b1eb97" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminListTopLevelFeeRequest>
         <!--Optional:-->
         <mes:type>?</mes:type>
      </mes:AdminListTopLevelFeeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminListTopLevelFeeRequest"/></con:call></con:operation><con:operation id="d225b894-5dae-4cfa-ab87-c82f6b022fdb" isOneWay="false" action="" name="AdminRejectPostedTransaction" bindingOperationName="AdminRejectPostedTransaction" type="Request-Response" outputName="AdminRejectPostedTransactionResponse" inputName="AdminRejectPostedTransactionRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1c3e8ad9-12c8-41e7-865b-6396a40a4b94" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminRejectPostedTransactionRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:postedTransactionId>?</mes:postedTransactionId>
         <mes:confirmationCode>?</mes:confirmationCode>
      </mes:AdminRejectPostedTransactionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminRejectPostedTransactionRequest"/></con:call></con:operation><con:operation id="a7ee3d92-b089-4e19-988c-14cb3c25ede4" isOneWay="false" action="" name="AdminUpdateActivateEnrollment" bindingOperationName="AdminUpdateActivateEnrollment" type="Request-Response" outputName="AdminUpdateActivateEnrollmentResponse" inputName="AdminUpdateActivateEnrollmentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="48840bcf-ded8-4271-8f3f-46652083ba3b" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminUpdateActivateEnrollmentRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:enrollmentId>?</mes:enrollmentId>
         <mes:actionType>?</mes:actionType>
         <!--Optional:-->
         <mes:updateEnrollmentParams>
            <!--You may enter the following 13 items in any order-->
            <!--Optional:-->
            <typ:enrollDate>
               <typ:date format="?" value="?"/>
            </typ:enrollDate>
            <!--Optional:-->
            <typ:verticalId>?</typ:verticalId>
            <!--Optional:-->
            <typ:isSvaCreated>?</typ:isSvaCreated>
            <!--Optional:-->
            <typ:areAllDocumentSigned>?</typ:areAllDocumentSigned>
            <!--Optional:-->
            <typ:systemId>?</typ:systemId>
            <!--Optional:-->
            <typ:spaaApprovalRequired>?</typ:spaaApprovalRequired>
            <!--Optional:-->
            <typ:draftAmount>?</typ:draftAmount>
            <!--Optional:-->
            <typ:mostRecentAction>?</typ:mostRecentAction>
            <!--Optional:-->
            <typ:enrollmentStatus>?</typ:enrollmentStatus>
            <!--Optional:-->
            <typ:cipStatus>?</typ:cipStatus>
            <!--Optional:-->
            <typ:ofacStatus>?</typ:ofacStatus>
            <!--Optional:-->
            <typ:spaStatus>?</typ:spaStatus>
            <!--Optional:-->
            <typ:spaRejectReason>?</typ:spaRejectReason>
         </mes:updateEnrollmentParams>
      </mes:AdminUpdateActivateEnrollmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateActivateEnrollmentRequest"/></con:call></con:operation><con:operation id="85dcab15-785d-44ab-bae0-1fd3836b6e00" isOneWay="false" action="" name="AdminUpdateAffiliate" bindingOperationName="AdminUpdateAffiliate" type="Request-Response" outputName="AdminUpdateAffiliateResponse" inputName="AdminUpdateAffiliateRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0be897cd-bcd4-42f5-a670-172ce9f16d09" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminUpdateAffiliateRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:affiliateId>?</mes:affiliateId>
         <mes:affiliate>
            <!--You may enter the following 44 items in any order-->
            <!--Optional:-->
            <typ:externalAffiliateId>?</typ:externalAffiliateId>
            <!--Optional:-->
            <typ:parentAffiliateId>?</typ:parentAffiliateId>
            <!--Optional:-->
            <typ:affiliateType>?</typ:affiliateType>
            <!--Optional:-->
            <typ:name>?</typ:name>
            <!--Optional:-->
            <typ:address1>?</typ:address1>
            <!--Optional:-->
            <typ:address2>?</typ:address2>
            <!--Optional:-->
            <typ:city>?</typ:city>
            <!--Optional:-->
            <typ:state>?</typ:state>
            <!--Optional:-->
            <typ:zipcode>?</typ:zipcode>
            <!--Optional:-->
            <typ:email>?</typ:email>
            <!--Optional:-->
            <typ:phone>?</typ:phone>
            <!--Optional:-->
            <typ:fax>?</typ:fax>
            <!--Optional:-->
            <typ:businessType>?</typ:businessType>
            <!--Optional:-->
            <typ:taxId>?</typ:taxId>
            <!--Optional:-->
            <typ:routingNunber>?</typ:routingNunber>
            <!--Optional:-->
            <typ:accountType>?</typ:accountType>
            <!--Optional:-->
            <typ:accountNumber>?</typ:accountNumber>
            <!--Optional:-->
            <typ:holdersName>?</typ:holdersName>
            <!--Optional:-->
            <typ:payoutMethod>?</typ:payoutMethod>
            <!--Optional:-->
            <typ:payoutFrequency>?</typ:payoutFrequency>
            <!--Optional:-->
            <typ:payoutFrequencyValue>?</typ:payoutFrequencyValue>
            <!--Optional:-->
            <typ:payoutThreshold>?</typ:payoutThreshold>
            <!--Optional:-->
            <typ:level>?</typ:level>
            <!--Optional:-->
            <typ:classification>?</typ:classification>
            <!--Optional:-->
            <typ:isReferral>?</typ:isReferral>
            <!--Optional:-->
            <typ:referralStartDate>
               <typ:date format="?" value="?"/>
            </typ:referralStartDate>
            <!--Optional:-->
            <typ:referralEndDate>
               <typ:date format="?" value="?"/>
            </typ:referralEndDate>
            <!--Optional:-->
            <typ:commStartDate>
               <typ:date format="?" value="?"/>
            </typ:commStartDate>
            <!--Optional:-->
            <typ:commEndDate>
               <typ:date format="?" value="?"/>
            </typ:commEndDate>
            <!--Optional:-->
            <typ:isAdvanceComm>?</typ:isAdvanceComm>
            <!--Optional:-->
            <typ:advanceCommPercentage>?</typ:advanceCommPercentage>
            <!--Optional:-->
            <typ:advanceCommStartDate>
               <typ:date format="?" value="?"/>
            </typ:advanceCommStartDate>
            <!--Optional:-->
            <typ:enableRedirect>?</typ:enableRedirect>
            <!--Optional:-->
            <typ:redirectToType>?</typ:redirectToType>
            <!--Optional:-->
            <typ:redirectStartDate>
               <typ:date format="?" value="?"/>
            </typ:redirectStartDate>
            <!--Optional:-->
            <typ:redirectEndDate>
               <typ:date format="?" value="?"/>
            </typ:redirectEndDate>
            <!--Optional:-->
            <typ:redirectTo>?</typ:redirectTo>
            <!--Optional:-->
            <typ:comments>?</typ:comments>
            <!--Optional:-->
            <typ:signatureDate>
               <typ:date format="?" value="?"/>
            </typ:signatureDate>
            <!--Optional:-->
            <typ:status>?</typ:status>
            <!--Optional:-->
            <typ:checkAddress>
               <!--You may enter the following 5 items in any order-->
               <!--Optional:-->
               <typ:address1>?</typ:address1>
               <!--Optional:-->
               <typ:address2>?</typ:address2>
               <!--Optional:-->
               <typ:city>?</typ:city>
               <!--Optional:-->
               <typ:state>?</typ:state>
               <!--Optional:-->
               <typ:zip>?</typ:zip>
            </typ:checkAddress>
            <!--Optional:-->
            <typ:auditInformation>
               <!--You may enter the following 6 items in any order-->
               <typ:createdOn>
                  <typ:date format="?" value="?"/>
               </typ:createdOn>
               <typ:createdBy>?</typ:createdBy>
               <typ:createdUserType>?</typ:createdUserType>
               <typ:modifiedOn>
                  <typ:date format="?" value="?"/>
               </typ:modifiedOn>
               <typ:modifiedBy>?</typ:modifiedBy>
               <typ:modifiedUserType>?</typ:modifiedUserType>
            </typ:auditInformation>
            <!--Optional:-->
            <typ:isGuaranteed>?</typ:isGuaranteed>
            <!--Optional:-->
            <typ:isFlexyDrafts>?</typ:isFlexyDrafts>
         </mes:affiliate>
      </mes:AdminUpdateAffiliateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateAffiliateRequest"/></con:call></con:operation><con:operation id="c1c67fdb-e91f-4165-922b-41e25d3044bb" isOneWay="false" action="" name="AdminUpdateEnrollment" bindingOperationName="AdminUpdateEnrollment" type="Request-Response" outputName="AdminUpdateEnrollmentResponse" inputName="AdminUpdateEnrollmentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1c482ef5-5818-43e6-afdc-9333c26662ba" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminUpdateEnrollmentRequest>
         <!--You may enter the following 14 items in any order-->
         <mes:enrollmentId>?</mes:enrollmentId>
         <!--Optional:-->
         <mes:enrollDate>
            <typ:date format="?" value="?"/>
         </mes:enrollDate>
         <!--Optional:-->
         <mes:verticalId>?</mes:verticalId>
         <!--Optional:-->
         <mes:isSvaCreated>?</mes:isSvaCreated>
         <!--Optional:-->
         <mes:areAllDocumentSigned>?</mes:areAllDocumentSigned>
         <!--Optional:-->
         <mes:systemId>?</mes:systemId>
         <!--Optional:-->
         <mes:spaaApprovalRequired>?</mes:spaaApprovalRequired>
         <!--Optional:-->
         <mes:draftAmount>?</mes:draftAmount>
         <!--Optional:-->
         <mes:mostRecentAction>?</mes:mostRecentAction>
         <!--Optional:-->
         <mes:enrollmentStatus>?</mes:enrollmentStatus>
         <!--Optional:-->
         <mes:cipStatus>?</mes:cipStatus>
         <!--Optional:-->
         <mes:ofacStatus>?</mes:ofacStatus>
         <!--Optional:-->
         <mes:spaStatus>?</mes:spaStatus>
         <!--Optional:-->
         <mes:spaRejectReason>?</mes:spaRejectReason>
      </mes:AdminUpdateEnrollmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateEnrollmentRequest"/></con:call></con:operation><con:operation id="fcaaf094-c304-4e25-ac8b-7162c80c5b60" isOneWay="false" action="" name="AdminUpdateInternalUser" bindingOperationName="AdminUpdateInternalUser" type="Request-Response" outputName="AdminUpdateInternalUserResponse" inputName="AdminUpdateInternalUserRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b9ccda88-3946-4246-8e67-eda2c0a2c3d4" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminUpdateInternalUserRequest>
         <!--You may enter the following 15 items in any order-->
         <!--Optional:-->
         <mes:subscriberIdList>
            <!--Zero or more repetitions:-->
            <mes:subscriberId>?</mes:subscriberId>
         </mes:subscriberIdList>
         <mes:userId>?</mes:userId>
         <mes:firstName>?</mes:firstName>
         <mes:userName>?</mes:userName>
         <!--Optional:-->
         <mes:middleInitial>?</mes:middleInitial>
         <!--Optional:-->
         <mes:lastName>?</mes:lastName>
         <mes:email>?</mes:email>
         <mes:phone>?</mes:phone>
         <!--Optional:-->
         <mes:password>?</mes:password>
         <!--Optional:-->
         <mes:existingPassword>?</mes:existingPassword>
         <mes:isActive>true</mes:isActive>
         <mes:isLocked>false</mes:isLocked>
         <mes:rolePermissions>
            <!--1 or more repetitions:-->
            <typ:rolePermission>?</typ:rolePermission>
         </mes:rolePermissions>
         <mes:isIpValidationRequired>true</mes:isIpValidationRequired>
         <!--Optional:-->
         <mes:ipAddresses>
            <!--1 or more repetitions:-->
            <typ:IpAddress>?</typ:IpAddress>
         </mes:ipAddresses>
      </mes:AdminUpdateInternalUserRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateInternalUserRequest"/></con:call></con:operation><con:operation id="4dcbe233-7591-40b4-b957-1384d793f6b9" isOneWay="false" action="" name="AdminUpdateSubscriber" bindingOperationName="AdminUpdateSubscriber" type="Request-Response" outputName="AdminUpdateSubscriberResponse" inputName="AdminUpdateSubscriberRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3421665d-07a0-4447-8ca2-e0b9e7104389" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminUpdateSubscriberRequest>
         <!--You may enter the following 19 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:subscriberName>?</mes:subscriberName>
         <mes:address1>?</mes:address1>
         <!--Optional:-->
         <mes:address2>?</mes:address2>
         <mes:city>?</mes:city>
         <mes:state>?</mes:state>
         <mes:zip>?</mes:zip>
         <mes:addressType>?</mes:addressType>
         <mes:commissionStructureName>?</mes:commissionStructureName>
         <mes:contactName>?</mes:contactName>
         <!--Optional:-->
         <mes:website>?</mes:website>
         <mes:phone>?</mes:phone>
         <!--Optional:-->
         <mes:mobilePhone>?</mes:mobilePhone>
         <!--Optional:-->
         <mes:subscriberAbbreviation>?</mes:subscriberAbbreviation>
         <mes:email>?</mes:email>
         <!--Optional:-->
         <mes:subscriberStatus>?</mes:subscriberStatus>
         <mes:vertical>?</mes:vertical>
         <!--Optional:-->
         <mes:internalUserList>
            <!--1 or more repetitions:-->
            <typ:internalUserId>?</typ:internalUserId>
         </mes:internalUserList>
         <!--Optional:-->
         <mes:checkNumberStart>?</mes:checkNumberStart>
      </mes:AdminUpdateSubscriberRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateSubscriberRequest"/></con:call></con:operation><con:operation id="1ecd2b4d-6f60-4b93-b87a-652271930dd0" isOneWay="false" action="" name="AdminUpdateSubscriberBankAccount" bindingOperationName="AdminUpdateSubscriberBankAccount" type="Request-Response" outputName="AdminUpdateSubscriberBankAccountResponse" inputName="AdminUpdateSubscriberBankAccountRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bab675c1-4d1d-49b2-a44b-fd64818265c1" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminUpdateSubscriberBankAccountRequest>
         <!--You may enter the following 9 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:subscriberBankAccountId>?</mes:subscriberBankAccountId>
         <mes:routingNumber>?</mes:routingNumber>
         <mes:accountType>?</mes:accountType>
         <mes:thresholdAmount>?</mes:thresholdAmount>
         <mes:accountNumber>?</mes:accountNumber>
         <mes:holdersName>?</mes:holdersName>
         <mes:subscriberAccountType>?</mes:subscriberAccountType>
         <mes:subscriberAccountOverwrite>false</mes:subscriberAccountOverwrite>
      </mes:AdminUpdateSubscriberBankAccountRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateSubscriberBankAccountRequest"/></con:call></con:operation><con:operation id="eb72918c-cc0a-4181-a06c-88d1e4c5e54f" isOneWay="false" action="" name="AdminUpdateSubscriberFee" bindingOperationName="AdminUpdateSubscriberFee" type="Request-Response" outputName="AdminUpdateSubscriberFeeResponse" inputName="AdminUpdateSubscriberFeeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="52213b06-633a-403c-8cba-3911a63a1672" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminUpdateSubscriberFeeRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:subscriberFeeId>?</mes:subscriberFeeId>
         <!--Optional:-->
         <mes:externalFeeId>?</mes:externalFeeId>
         <mes:amount>?</mes:amount>
         <!--Optional:-->
         <mes:status>?</mes:status>
      </mes:AdminUpdateSubscriberFeeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateSubscriberFeeRequest"/></con:call></con:operation><con:operation id="b1889829-778b-470b-a252-0276d889e986" isOneWay="false" action="" name="AdminViewEnrollment" bindingOperationName="AdminViewEnrollment" type="Request-Response" outputName="AdminViewEnrollmentResponse" inputName="AdminViewEnrollmentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="106087e5-bd79-4862-a2d2-88f8c7fdc373" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AdminViewEnrollmentRequest>
         <!--You may enter the following 3 items in any order-->
         <!--Optional:-->
         <mes:enrollmentId>?</mes:enrollmentId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
      </mes:AdminViewEnrollmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminViewEnrollmentRequest"/></con:call></con:operation><con:operation id="31ba6a5f-3c80-4bdc-9a62-98a61376e05e" isOneWay="false" action="" name="Auth" bindingOperationName="Auth" type="Request-Response" outputName="AuthResponse" inputName="AuthRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="304ce996-5295-4d68-9e7e-f1bde3a36bf4" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AuthRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:username>?</mes:username>
         <mes:password>?</mes:password>
         <!--Optional:-->
         <mes:ipAddress>?</mes:ipAddress>
      </mes:AuthRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AuthRequest"/></con:call></con:operation><con:operation id="5dfbc4b8-5344-4aee-8494-78ba0987baee" isOneWay="false" action="" name="AuthorizeAndAcceptPayment" bindingOperationName="AuthorizeAndAcceptPayment" type="Request-Response" outputName="AuthorizeAndAcceptPaymentResponse" inputName="AuthorizeAndAcceptPaymentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5a0834cc-9868-41cd-b906-e37c697159ea" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AuthorizeAndAcceptPaymentRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:postedTransactionId>?</mes:postedTransactionId>
         <mes:scheduleId>?</mes:scheduleId>
         <!--Optional:-->
         <mes:reason>?</mes:reason>
      </mes:AuthorizeAndAcceptPaymentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AuthorizeAndAcceptPaymentRequest"/></con:call></con:operation><con:operation id="f74411dd-2cc7-4e68-ad8d-420e200d03bc" isOneWay="false" action="" name="AuthorizeAndAdjustPayment" bindingOperationName="AuthorizeAndAdjustPayment" type="Request-Response" outputName="AuthorizeAndAdjustPaymentResponse" inputName="AuthorizeAndAdjustPaymentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="15bb86a5-c488-46a0-9b98-b4db239c0311" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AuthorizeAndAdjustPaymentRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:postedTransactionId>?</mes:postedTransactionId>
         <mes:scheduleId>?</mes:scheduleId>
         <!--Optional:-->
         <mes:reason>?</mes:reason>
      </mes:AuthorizeAndAdjustPaymentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AuthorizeAndAdjustPaymentRequest"/></con:call></con:operation><con:operation id="b4402138-baca-4f44-b836-7669ad2e96fd" isOneWay="false" action="" name="AuthorizeAndAdvancePayment" bindingOperationName="AuthorizeAndAdvancePayment" type="Request-Response" outputName="AuthorizeAndAdvancePaymentResponse" inputName="AuthorizeAndAdvancePaymentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ac6f2134-116a-47e7-8c30-4595f56104bb" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AuthorizeAndAdvancePaymentRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:postedTransactionId>?</mes:postedTransactionId>
         <mes:scheduleId>?</mes:scheduleId>
         <!--Optional:-->
         <mes:reason>?</mes:reason>
      </mes:AuthorizeAndAdvancePaymentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AuthorizeAndAdvancePaymentRequest"/></con:call></con:operation><con:operation id="b226198c-4e16-4dee-98ee-61ee5ad44193" isOneWay="false" action="" name="AuthorizeAndLoadPayment" bindingOperationName="AuthorizeAndLoadPayment" type="Request-Response" outputName="AuthorizeAndLoadPaymentResponse" inputName="AuthorizeAndLoadPaymentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="21ba1e76-1dac-48cc-b941-9f5b7e93d9cf" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AuthorizeAndLoadPaymentRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:postedTransactionId>?</mes:postedTransactionId>
         <mes:scheduleId>?</mes:scheduleId>
         <!--Optional:-->
         <mes:reason>?</mes:reason>
      </mes:AuthorizeAndLoadPaymentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AuthorizeAndLoadPaymentRequest"/></con:call></con:operation><con:operation id="a4171997-33f3-492b-a759-c90828bb3993" isOneWay="false" action="" name="AuthorizePayment" bindingOperationName="AuthorizePayment" type="Request-Response" outputName="AuthorizePaymentResponse" inputName="AuthorizePaymentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c4833664-ba42-41c3-a6f7-4a83f3166d94" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:AuthorizePaymentRequest>
         <!--You may enter the following 7 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:postedTransactionId>?</mes:postedTransactionId>
         <mes:scheduleId>?</mes:scheduleId>
         <mes:load>false</mes:load>
         <mes:adjust>false</mes:adjust>
         <mes:advance>false</mes:advance>
         <!--Optional:-->
         <mes:reason>?</mes:reason>
      </mes:AuthorizePaymentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AuthorizePaymentRequest"/></con:call></con:operation><con:operation id="c83598d5-754a-499a-bd37-d0888ed8d856" isOneWay="false" action="" name="CancelEnrollment" bindingOperationName="CancelEnrollment" type="Request-Response" outputName="CancelEnrollmentResponse" inputName="CancelEnrollmentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3d5c879a-1ef5-456b-b404-ea0ec03c6e6c" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CancelEnrollmentRequest>
         <!--You may enter the following 9 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:enrollmentId>?</mes:enrollmentId>
         <mes:cancelReasonCode>?</mes:cancelReasonCode>
         <mes:cancelFeeAmt>?</mes:cancelFeeAmt>
         <!--Optional:-->
         <mes:comments>?</mes:comments>
         <mes:printCancelLetter>?</mes:printCancelLetter>
         <mes:waiveCancelFee>?</mes:waiveCancelFee>
         <mes:waivePendingFee>?</mes:waivePendingFee>
         <mes:cancelledBy>USER</mes:cancelledBy>
      </mes:CancelEnrollmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CancelEnrollmentRequest"/></con:call></con:operation><con:operation id="28a23521-c649-4b2f-a96a-f6e3632fb0cf" isOneWay="false" action="" name="CaptureDraft" bindingOperationName="CaptureDraft" type="Request-Response" outputName="CaptureDraftResponse" inputName="CaptureDraftRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3547fef7-e5f3-4284-bff9-7d09ce40bd77" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CaptureDraftRequest>
         <!--You may enter the following 12 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:recurringType>?</mes:recurringType>
         <!--Optional:-->
         <mes:recurringStartDate>
            <typ:date format="?" value="?"/>
         </mes:recurringStartDate>
         <!--Optional:-->
         <mes:recurringAmount1>?</mes:recurringAmount1>
         <!--Optional:-->
         <mes:recurringDay1>?</mes:recurringDay1>
         <!--Optional:-->
         <mes:recurringAmount2>?</mes:recurringAmount2>
         <!--Optional:-->
         <mes:recurringDay2>?</mes:recurringDay2>
         <!--Optional:-->
         <mes:lumpSumDate>
            <typ:date format="?" value="?"/>
         </mes:lumpSumDate>
         <!--Optional:-->
         <mes:lumpSumAmount>?</mes:lumpSumAmount>
         <mes:lumpSumOnly>false</mes:lumpSumOnly>
      </mes:CaptureDraftRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureDraftRequest"/></con:call></con:operation><con:operation id="6c3e4a7e-ae22-4564-a97a-31991ae88a6e" isOneWay="false" action="" name="CaptureEnrollmentAddress" bindingOperationName="CaptureEnrollmentAddress" type="Request-Response" outputName="CaptureEnrollmentAddressResponse" inputName="CaptureEnrollmentAddressRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e4a1803c-0c8f-4fba-8567-ed3026f7a23e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CaptureEnrollmentAddressRequest>
         <!--You may enter the following 8 items in any order-->
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:address1>?</mes:address1>
         <!--Optional:-->
         <mes:address2>?</mes:address2>
         <mes:city>?</mes:city>
         <mes:state>?</mes:state>
         <mes:zip>?</mes:zip>
      </mes:CaptureEnrollmentAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureEnrollmentAddressRequest"/></con:call></con:operation><con:operation id="be638c53-0ee1-4b9a-a105-353bd193d4eb" isOneWay="false" action="" name="ChangePasswordForToken" bindingOperationName="ChangePasswordForToken" type="Request-Response" outputName="ChangePasswordForTokenResponse" inputName="ChangePasswordForTokenRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8d9d6d03-d8a2-4f6b-91b7-7ae950611a01" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:ChangePasswordForTokenRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:token>?</mes:token>
         <!--Optional:-->
         <mes:newPassword>?</mes:newPassword>
      </mes:ChangePasswordForTokenRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/ChangePasswordForTokenRequest"/></con:call></con:operation><con:operation id="462cb82e-ed6b-4c22-97d8-486c1f4e6d92" isOneWay="false" action="" name="CheckSdnMatch" bindingOperationName="CheckSdnMatch" type="Request-Response" outputName="CheckSdnMatchResponse" inputName="CheckSdnMatchRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="759a6190-139d-4d38-87f4-d38691cc7cf4" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CheckSdnMatchRequest>
         <mes:individual>
            <!--Optional:-->
            <typ:firstName>?</typ:firstName>
            <!--Optional:-->
            <typ:lastName>?</typ:lastName>
         </mes:individual>
      </mes:CheckSdnMatchRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CheckSdnMatchRequest"/></con:call></con:operation><con:operation id="b20c83fa-8af6-4e39-89c5-6b105fd4220c" isOneWay="false" action="" name="ClientVerification" bindingOperationName="ClientVerification" type="Request-Response" outputName="ClientVerificationResponse" inputName="ClientVerificationRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="340e64d4-c087-48e7-a5fd-fb333e4187a7" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:ClientVerificationRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
      </mes:ClientVerificationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/ClientVerificationRequest"/></con:call></con:operation><con:operation id="cd832687-8206-4823-b0ee-85aba4865bb4" isOneWay="false" action="" name="CompleteEnrollment" bindingOperationName="CompleteEnrollment" type="Request-Response" outputName="CompleteEnrollmentResponse" inputName="CompleteEnrollmentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fc6b2d7b-3195-405d-a1cd-d5d722c8a951" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CompleteEnrollmentRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:comments>?</mes:comments>
         <mes:completedBy>USER</mes:completedBy>
      </mes:CompleteEnrollmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CompleteEnrollmentRequest"/></con:call></con:operation><con:operation id="7fdb76b3-25a6-4a04-b2f9-02459cb720aa" isOneWay="false" action="" name="CreateAdhocTransfer" bindingOperationName="CreateAdhocTransfer" type="Request-Response" outputName="CreateAdhocTransferResponse" inputName="CreateAdhocTransferRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a640869f-a6e0-4cdc-b401-44ae6d24582b" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateAdhocTransferRequest>
         <!--You may enter the following 8 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:scheduleDate>
            <typ:date format="?" value="?"/>
         </mes:scheduleDate>
         <mes:amount>?</mes:amount>
         <mes:fromAccount>
            <typ:accountType>?</typ:accountType>
            <!--Optional:-->
            <typ:accountId>?</typ:accountId>
         </mes:fromAccount>
         <mes:toAccount>
            <typ:accountType>?</typ:accountType>
            <!--Optional:-->
            <typ:accountId>?</typ:accountId>
         </mes:toAccount>
         <mes:comment>?</mes:comment>
      </mes:CreateAdhocTransferRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateAdhocTransferRequest"/></con:call></con:operation><con:operation id="191d9a8e-10ac-4d47-aba5-8eb819b6ff02" isOneWay="false" action="" name="CreateAffiliate" bindingOperationName="CreateAffiliate" type="Request-Response" outputName="CreateAffiliateResponse" inputName="CreateAffiliateRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f2cab1c3-d6f8-485e-a9a7-12385f20aaae" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateAffiliateRequest>
         <mes:affiliate>
            <!--You may enter the following 43 items in any order-->
            <typ:subscriberId>?</typ:subscriberId>
            <!--Optional:-->
            <typ:affiliateId>?</typ:affiliateId>
            <!--Optional:-->
            <typ:externalAffiliateId>?</typ:externalAffiliateId>
            <!--Optional:-->
            <typ:parentAffiliateId>?</typ:parentAffiliateId>
            <!--Optional:-->
            <typ:parentExternalAffiliateId>?</typ:parentExternalAffiliateId>
            <!--Optional:-->
            <typ:externalId>?</typ:externalId>
            <typ:affiliateType>?</typ:affiliateType>
            <typ:name>?</typ:name>
            <typ:address1>?</typ:address1>
            <!--Optional:-->
            <typ:address2>?</typ:address2>
            <typ:city>?</typ:city>
            <typ:state>?</typ:state>
            <typ:zipcode>?</typ:zipcode>
            <typ:email>?</typ:email>
            <typ:phone>?</typ:phone>
            <!--Optional:-->
            <typ:fax>?</typ:fax>
            <typ:businessType>?</typ:businessType>
            <!--Optional:-->
            <typ:taxId>?</typ:taxId>
            <!--Optional:-->
            <typ:payoutMethod>ACH</typ:payoutMethod>
            <!--Optional:-->
            <typ:payoutFrequency>MONTHLY</typ:payoutFrequency>
            <!--Optional:-->
            <typ:payoutFrequencyValue>15</typ:payoutFrequencyValue>
            <!--Optional:-->
            <typ:bankName>?</typ:bankName>
            <!--Optional:-->
            <typ:routingNunber>?</typ:routingNunber>
            <!--Optional:-->
            <typ:accountType>?</typ:accountType>
            <!--Optional:-->
            <typ:accountNumber>?</typ:accountNumber>
            <!--Optional:-->
            <typ:holdersName>?</typ:holdersName>
            <!--Optional:-->
            <typ:bankAddress1>?</typ:bankAddress1>
            <!--Optional:-->
            <typ:bankAddress2>?</typ:bankAddress2>
            <!--Optional:-->
            <typ:bankCity>?</typ:bankCity>
            <!--Optional:-->
            <typ:bankState>?</typ:bankState>
            <!--Optional:-->
            <typ:bankZipcode>?</typ:bankZipcode>
            <!--Optional:-->
            <typ:signatureDate>
               <typ:date format="?" value="?"/>
            </typ:signatureDate>
            <!--Optional:-->
            <typ:status>?</typ:status>
            <!--Optional:-->
            <typ:collectedBalance>?</typ:collectedBalance>
            <!--Optional:-->
            <typ:pendingBalance>?</typ:pendingBalance>
            <!--Optional:-->
            <typ:isPaidAsAdvance>?</typ:isPaidAsAdvance>
            <!--Optional:-->
            <typ:checkAddress>
               <!--You may enter the following 5 items in any order-->
               <!--Optional:-->
               <typ:address1>?</typ:address1>
               <!--Optional:-->
               <typ:address2>?</typ:address2>
               <!--Optional:-->
               <typ:city>?</typ:city>
               <!--Optional:-->
               <typ:state>?</typ:state>
               <!--Optional:-->
               <typ:zip>?</typ:zip>
            </typ:checkAddress>
            <!--Optional:-->
            <typ:isReferral>?</typ:isReferral>
            <!--Optional:-->
            <typ:referralStartDate>
               <typ:date format="?" value="?"/>
            </typ:referralStartDate>
            <!--Optional:-->
            <typ:referralEndDate>
               <typ:date format="?" value="?"/>
            </typ:referralEndDate>
            <!--Optional:-->
            <typ:fixed>
               <!--Zero or more repetitions:-->
               <typ:cycle>
                  <!--You may enter the following 3 items in any order-->
                  <typ:distType>?</typ:distType>
                  <typ:cycleId>?</typ:cycleId>
                  <typ:value>?</typ:value>
               </typ:cycle>
            </typ:fixed>
            <!--Optional:-->
            <typ:payoutRule>?</typ:payoutRule>
            <!--Optional:-->
            <typ:auditInformation>
               <!--You may enter the following 6 items in any order-->
               <typ:createdOn>
                  <typ:date format="?" value="?"/>
               </typ:createdOn>
               <typ:createdBy>?</typ:createdBy>
               <typ:createdUserType>?</typ:createdUserType>
               <typ:modifiedOn>
                  <typ:date format="?" value="?"/>
               </typ:modifiedOn>
               <typ:modifiedBy>?</typ:modifiedBy>
               <typ:modifiedUserType>?</typ:modifiedUserType>
            </typ:auditInformation>
         </mes:affiliate>
      </mes:CreateAffiliateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateAffiliateRequest"/></con:call></con:operation><con:operation id="3c2908a0-3e86-4385-a99e-95a9cb2b7797" isOneWay="false" action="" name="CreateAffiliateUser" bindingOperationName="CreateAffiliateUser" type="Request-Response" outputName="CreateAffiliateUserResponse" inputName="CreateAffiliateUserRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="afe03a26-e7af-4003-9679-57282ce77780" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateAffiliateUserRequest>
         <!--You may enter the following 21 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:affilaiteId>?</mes:affilaiteId>
         <mes:firstName>?</mes:firstName>
         <mes:userName>?</mes:userName>
         <!--Optional:-->
         <mes:middleInitial>?</mes:middleInitial>
         <mes:lastName>?</mes:lastName>
         <mes:email>?</mes:email>
         <mes:phone>?</mes:phone>
         <mes:password>?</mes:password>
         <!--Optional:-->
         <mes:addressLine1>?</mes:addressLine1>
         <!--Optional:-->
         <mes:addressLine2>?</mes:addressLine2>
         <!--Optional:-->
         <mes:city>?</mes:city>
         <!--Optional:-->
         <mes:state>?</mes:state>
         <!--Optional:-->
         <mes:zip>?</mes:zip>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <mes:isActive>true</mes:isActive>
         <mes:rolePermissions>
            <!--1 or more repetitions:-->
            <typ:rolePermission>?</typ:rolePermission>
         </mes:rolePermissions>
         <mes:isIpValidationRequired>true</mes:isIpValidationRequired>
         <!--Optional:-->
         <mes:ipAddresses>
            <!--1 or more repetitions:-->
            <typ:IpAddress>?</typ:IpAddress>
         </mes:ipAddresses>
         <mes:userType>?</mes:userType>
         <mes:isWelcomeMailRequired>true</mes:isWelcomeMailRequired>
      </mes:CreateAffiliateUserRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateAffiliateUserRequest"/></con:call></con:operation><con:operation id="bf6d4a16-4d3c-4006-b318-c6c1cba769d4" isOneWay="false" action="" name="CreateApprovalAttempt" bindingOperationName="CreateApprovalAttempt" type="Request-Response" outputName="CreateApprovalAttemptResponse" inputName="CreateApprovalAttemptRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="357a043b-6215-4df0-9f86-acdb2ea8cae7" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateApprovalAttemptRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:approvalId>?</mes:approvalId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:approvalAttemptNote>?</mes:approvalAttemptNote>
         <mes:approvalAttemptMode>?</mes:approvalAttemptMode>
         <!--Optional:-->
         <mes:approvalAttemptDisposition>?</mes:approvalAttemptDisposition>
      </mes:CreateApprovalAttemptRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateApprovalAttemptRequest"/></con:call></con:operation><con:operation id="dea5690e-a0bf-47d4-a5fe-c9703e7ac890" isOneWay="false" action="" name="CreateAutoEnrollment" bindingOperationName="CreateAutoEnrollment" type="Request-Response" outputName="CreateAutoEnrollmentResponse" inputName="CreateAutoEnrollmentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="80a64ecd-98e2-4775-b0b3-f84a056e6e1d" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateAutoEnrollmentRequest>
         <!--You may enter the following 16 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:agencyId>?</mes:agencyId>
         <!--Optional:-->
         <mes:agencyExternalId>?</mes:agencyExternalId>
         <!--Optional:-->
         <mes:dealerId>?</mes:dealerId>
         <!--Optional:-->
         <mes:dealerExternalId>?</mes:dealerExternalId>
         <!--Optional:-->
         <mes:fiMgrId>?</mes:fiMgrId>
         <!--Optional:-->
         <mes:fiMgrExternalId>?</mes:fiMgrExternalId>
         <!--Optional:-->
         <mes:externalId>?</mes:externalId>
         <mes:clientContactInfo>
            <!--You may enter the following 7 items in any order-->
            <typ:firstName>?</typ:firstName>
            <typ:lastName>?</typ:lastName>
            <typ:address>
               <!--You may enter the following 5 items in any order-->
               <!--Optional:-->
               <typ:address1>?</typ:address1>
               <!--Optional:-->
               <typ:address2>?</typ:address2>
               <!--Optional:-->
               <typ:city>?</typ:city>
               <!--Optional:-->
               <typ:state>?</typ:state>
               <!--Optional:-->
               <typ:zip>?</typ:zip>
            </typ:address>
            <!--Optional:-->
            <typ:ssn>?</typ:ssn>
            <!--Optional:-->
            <typ:birthDate>
               <typ:date format="?" value="?"/>
            </typ:birthDate>
            <!--Optional:-->
            <typ:phone>?</typ:phone>
            <!--Optional:-->
            <typ:email>?</typ:email>
         </mes:clientContactInfo>
         <mes:clientPaymentInfo>
            <!--You may enter the following 8 items in any order-->
            <!--Optional:-->
            <typ:loanNumber>?</typ:loanNumber>
            <typ:draftAmount>?</typ:draftAmount>
            <!--Optional:-->
            <typ:term>?</typ:term>
            <!--Optional:-->
            <typ:vin>?</typ:vin>
            <!--Optional:-->
            <typ:year>?</typ:year>
            <!--Optional:-->
            <typ:make>?</typ:make>
            <!--Optional:-->
            <typ:model>?</typ:model>
            <!--Optional:-->
            <typ:brand>?</typ:brand>
         </mes:clientPaymentInfo>
         <mes:lenderInfo>
            <!--You may enter the following 6 items in any order-->
            <!--Optional:-->
            <typ:payeeId>?</typ:payeeId>
            <!--Optional:-->
            <typ:addressId>?</typ:addressId>
            <!--Optional:-->
            <typ:name>?</typ:name>
            <!--Optional:-->
            <typ:phone>?</typ:phone>
            <!--Optional:-->
            <typ:address>
               <!--You may enter the following 5 items in any order-->
               <!--Optional:-->
               <typ:address1>?</typ:address1>
               <!--Optional:-->
               <typ:address2>?</typ:address2>
               <!--Optional:-->
               <typ:city>?</typ:city>
               <!--Optional:-->
               <typ:state>?</typ:state>
               <!--Optional:-->
               <typ:zip>?</typ:zip>
            </typ:address>
            <!--Optional:-->
            <typ:routingNumber>?</typ:routingNumber>
         </mes:lenderInfo>
         <mes:debitAuthorization>
            <!--You may enter the following 10 items in any order-->
            <!--Optional:-->
            <typ:phone>?</typ:phone>
            <!--Optional:-->
            <typ:accountName>?</typ:accountName>
            <!--Optional:-->
            <typ:accountType>?</typ:accountType>
            <!--Optional:-->
            <typ:accountNumber>?</typ:accountNumber>
            <!--Optional:-->
            <typ:routingNumber>?</typ:routingNumber>
            <!--Optional:-->
            <typ:firstDebitDate>
               <typ:date format="?" value="?"/>
            </typ:firstDebitDate>
            <!--Optional:-->
            <typ:firstDebitAmount>?</typ:firstDebitAmount>
            <!--Optional:-->
            <typ:firstBiweeklyDebitDate>
               <typ:date format="?" value="?"/>
            </typ:firstBiweeklyDebitDate>
            <!--Optional:-->
            <typ:firstBiweeklyDebitAmount>?</typ:firstBiweeklyDebitAmount>
            <!--Optional:-->
            <typ:firstLoanDueDate>
               <typ:date format="?" value="?"/>
            </typ:firstLoanDueDate>
         </mes:debitAuthorization>
         <mes:acknowledgment>
            <!--You may enter the following 2 items in any order-->
            <!--Optional:-->
            <typ:signaturePresent>?</typ:signaturePresent>
            <!--Optional:-->
            <typ:signatureDate>
               <typ:date format="?" value="?"/>
            </typ:signatureDate>
         </mes:acknowledgment>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <!--Optional:-->
         <mes:loanType>?</mes:loanType>
         <!--Optional:-->
         <mes:isHalfDraft>false</mes:isHalfDraft>
      </mes:CreateAutoEnrollmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateAutoEnrollmentRequest"/></con:call></con:operation><con:operation id="7c95acdb-2eee-4434-8d0a-53ee21368a19" isOneWay="false" action="" name="CreateAutoNPNFee" bindingOperationName="CreateAutoNPNFee" type="Request-Response" outputName="CreateAutoNPNFeeResponse" inputName="CreateAutoNPNFeeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3b0e2fc2-edff-41fe-affe-c1bc94f70a2c" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateAutoNPNFeeRequest>
         <!--You may enter the following 6 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:agencyId>?</mes:agencyId>
         <mes:cycle1Fee>?</mes:cycle1Fee>
         <mes:cycle2Fee>?</mes:cycle2Fee>
         <mes:cycle3Fee>?</mes:cycle3Fee>
         <mes:cycle4Fee>?</mes:cycle4Fee>
      </mes:CreateAutoNPNFeeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateAutoNPNFeeRequest"/></con:call></con:operation><con:operation id="8918c48f-1c09-42ad-bad7-416ed3cdc441" isOneWay="false" action="" name="CreateChannelAttribute" bindingOperationName="CreateChannelAttribute" type="Request-Response" outputName="CreateChannelAttributeResponse" inputName="CreateChannelAttributeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bfcc5a19-7e83-4f3d-ad7c-1478c6d3f127" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateChannelAttributeRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:channel>?</mes:channel>
         <mes:code>?</mes:code>
         <mes:name>?</mes:name>
         <mes:isRequired>?</mes:isRequired>
      </mes:CreateChannelAttributeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateChannelAttributeRequest"/></con:call></con:operation><con:operation id="5487c355-6932-4ce4-a338-5cbd7fc868d4" isOneWay="false" action="" name="CreateClient" bindingOperationName="CreateClient" type="Request-Response" outputName="CreateClientResponse" inputName="CreateClientRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ebb7ff69-94ec-47aa-8e8e-a176b7019022" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateClientRequest>
         <!--You may enter the following 24 items in any order-->
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:referralId type="RULESET" internal="YES">
            <typ:id>?</typ:id>
         </mes:referralId>
         <!--Optional:-->
         <mes:channelId>?</mes:channelId>
         <!--Optional:-->
         <mes:productId>?</mes:productId>
         <mes:firstname>?</mes:firstname>
         <!--Optional:-->
         <mes:middleInitial>?</mes:middleInitial>
         <mes:lastname>?</mes:lastname>
         <!--Optional:-->
         <mes:ssn>?</mes:ssn>
         <!--Optional:-->
         <mes:dob>
            <typ:date format="?" value="?"/>
         </mes:dob>
         <!--Optional:-->
         <mes:address1>?</mes:address1>
         <!--Optional:-->
         <mes:address2>?</mes:address2>
         <!--Optional:-->
         <mes:city>?</mes:city>
         <!--Optional:-->
         <mes:state>?</mes:state>
         <!--Optional:-->
         <mes:zip>?</mes:zip>
         <!--Optional:-->
         <mes:phone>?</mes:phone>
         <!--Optional:-->
         <mes:WorkNumber>?</mes:WorkNumber>
         <!--Optional:-->
         <mes:mobile>?</mes:mobile>
         <!--Optional:-->
         <mes:email>?</mes:email>
         <!--Optional:-->
         <mes:userName>?</mes:userName>
         <mes:draftAmount>?</mes:draftAmount>
         <!--Optional:-->
         <mes:coClients>
            <!--Zero or more repetitions:-->
            <typ:coClient>
               <!--You may enter the following 9 items in any order-->
               <typ:firstname>?</typ:firstname>
               <!--Optional:-->
               <typ:middleInitial>?</typ:middleInitial>
               <typ:lastname>?</typ:lastname>
               <!--Optional:-->
               <typ:ssn>?</typ:ssn>
               <typ:dob>
                  <typ:date format="?" value="?"/>
               </typ:dob>
               <!--Optional:-->
               <typ:phone>?</typ:phone>
               <!--Optional:-->
               <typ:WorkNumber>?</typ:WorkNumber>
               <!--Optional:-->
               <typ:mobile>?</typ:mobile>
               <!--Optional:-->
               <typ:email>?</typ:email>
            </typ:coClient>
         </mes:coClients>
         <!--Optional:-->
         <mes:svaDocument>
            <!--You may enter the following 5 items in any order-->
            <typ:note>?</typ:note>
            <!--Optional:-->
            <typ:documentType>?</typ:documentType>
            <typ:base64EncodedContent>?</typ:base64EncodedContent>
            <typ:contentType>?</typ:contentType>
            <typ:documentName>?</typ:documentName>
         </mes:svaDocument>
      </mes:CreateClientRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="93e68416-201b-4dc4-be3f-f419af6ad850" name="CreateClient_Test" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<s11:Envelope xmlns:s11="http://schemas.xmlsoap.org/soap/envelope/">
  <s11:Body>
    <sch0:CreateClientRequest xmlns:sch0="http://nationalpayment.net/ws/schemas/messages">
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
      <sch0:clientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      <sch0:subscriberId>200001</sch0:subscriberId>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
      <sch0:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
      <sch0:referralId type="" internal="">
        <sch1:id xmlns:sch1="http://nationalpayment.net/ws/schemas/types"/>
      </sch0:referralId>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
      <sch0:channelId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
      <sch0:productId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      <sch0:firstname>JOHN</sch0:firstname>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
      <sch0:middleInitial xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      <sch0:lastname>SMITH</sch0:lastname>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
      <sch0:ssn>232-36-3333</sch0:ssn>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
      <sch0:dob>
        <sch1:date format="MM-dd-yyyy" sch1:value="?XXX?" value="09-09-1980" xmlns:sch1="http://nationalpayment.net/ws/schemas/types"/>
      </sch0:dob>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
      <sch0:address1>Finxera Headquarters</sch0:address1>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
      <sch0:address2>1900 South Norfolk Street</sch0:address2>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
      <sch0:city>San Mateo</sch0:city>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
      <sch0:state>CA</sch0:state>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
      <sch0:zip>94403</sch0:zip>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
      <sch0:phone>9874563210</sch0:phone>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
      <sch0:WorkNumber xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
      <sch0:mobile>8996655000</sch0:mobile>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
      <sch0:email xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
      <sch0:userName>devika@bancbox.com</sch0:userName>
      <sch0:draftAmount/>
<!-- optional -->
      <sch0:coClients>
<!-- from 0 to unbounded -->
        <sch1:coClient xmlns:sch1="http://nationalpayment.net/ws/schemas/types">
          <sch1:firstname/>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
          <sch1:middleInitial xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
          <sch1:lastname/>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
          <sch1:ssn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
          <sch1:dob>
            <sch1:date format="" sch1:value="?XXX?"/>
          </sch1:dob>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
          <sch1:phone xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
          <sch1:WorkNumber xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
          <sch1:mobile xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
          <sch1:email xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </sch1:coClient>
      </sch0:coClients>
<!-- optional -->
      <sch0:svaDocument>
        <sch1:note xmlns:sch1="http://nationalpayment.net/ws/schemas/types"/>
<!-- optional -->
<!-- This element may be left empty if xsi:nil='true' is set. -->
        <sch1:documentType xmlns:sch1="http://nationalpayment.net/ws/schemas/types"/>
        <sch1:base64EncodedContent xmlns:sch1="http://nationalpayment.net/ws/schemas/types"/>
        <sch1:contentType xmlns:sch1="http://nationalpayment.net/ws/schemas/types"/>
        <sch1:documentName xmlns:sch1="http://nationalpayment.net/ws/schemas/types"/>
      </sch0:svaDocument>
    </sch0:CreateClientRequest>
  </s11:Body>
</s11:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="bae80c98-60e2-40d6-b3fe-612b0c1f853c" isOneWay="false" action="" name="CreateClientBankAccount" bindingOperationName="CreateClientBankAccount" type="Request-Response" outputName="CreateClientBankAccountResponse" inputName="CreateClientBankAccountRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6208cf8d-0001-45de-a9c0-b2105ff678bb" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateClientBankAccountRequest>
         <!--You may enter the following 10 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:routingNumber>?</mes:routingNumber>
         <mes:accountType>?</mes:accountType>
         <mes:accountNumber>?</mes:accountNumber>
         <mes:holdersName>?</mes:holdersName>
         <!--Optional:-->
         <mes:externalBankId>?</mes:externalBankId>
         <!--Optional:-->
         <mes:accountNature>?</mes:accountNature>
         <!--Optional:-->
         <mes:authorizationFormat>?</mes:authorizationFormat>
      </mes:CreateClientBankAccountRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientBankAccountRequest"/></con:call></con:operation><con:operation id="d7607eb7-16c3-4a29-b61c-3793dfe5efe9" isOneWay="false" action="" name="CreateCoClient" bindingOperationName="CreateCoClient" type="Request-Response" outputName="CreateCoClientResponse" inputName="CreateCoClientRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7815bf85-6589-46bf-b5fa-d3fc8aecf6ab" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateCoClientRequest>
         <!--You may enter the following 13 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:coClientFirstname>?</mes:coClientFirstname>
         <mes:coClientLastname>?</mes:coClientLastname>
         <!--Optional:-->
         <mes:coClientMiddleInitial>?</mes:coClientMiddleInitial>
         <!--Optional:-->
         <mes:coClientSsn>?</mes:coClientSsn>
         <!--Optional:-->
         <mes:coClientDob>
            <typ:date format="?" value="?"/>
         </mes:coClientDob>
         <!--Optional:-->
         <mes:coClientPhone>?</mes:coClientPhone>
         <!--Optional:-->
         <mes:coClientWorkNumber>?</mes:coClientWorkNumber>
         <!--Optional:-->
         <mes:coClientMobile>?</mes:coClientMobile>
         <!--Optional:-->
         <mes:coClientEmail>?</mes:coClientEmail>
         <!--Optional:-->
         <mes:coSignatory>?</mes:coSignatory>
      </mes:CreateCoClientRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateCoClientRequest"/></con:call></con:operation><con:operation id="294af963-165c-4579-9e7d-7e4e71195cf9" isOneWay="false" action="" name="CreateDepositItems" bindingOperationName="CreateDepositItems" type="Request-Response" outputName="CreateDepositItemsResponse" inputName="CreateDepositItemsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f0205ed9-e667-412c-bb01-0a9737545873" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateDepositItemsRequest>
         <!--You may enter the following 7 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:method>?</mes:method>
         <mes:scheduleFrequencyType>?</mes:scheduleFrequencyType>
         <mes:depositList>
            <!--1 or more repetitions:-->
            <typ:deposit>
               <!--You may enter the following 6 items in any order-->
               <typ:scheduleDate>
                  <typ:date format="?" value="?"/>
               </typ:scheduleDate>
               <typ:amount>?</typ:amount>
               <!--Optional:-->
               <typ:externalReferenceId>?</typ:externalReferenceId>
               <!--Optional:-->
               <typ:comment>?</typ:comment>
               <!--Optional:-->
               <typ:remark>?</typ:remark>
               <!--Optional:-->
               <typ:allowDuplicates>false</typ:allowDuplicates>
            </typ:deposit>
         </mes:depositList>
         <!--Optional:-->
         <mes:subLoanActType>?</mes:subLoanActType>
      </mes:CreateDepositItemsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateDepositItemsRequest"/></con:call></con:operation><con:operation id="a1458517-b125-4a88-89d0-907a55073812" isOneWay="false" action="" name="CreateDraftItems" bindingOperationName="CreateDraftItems" type="Request-Response" outputName="CreateDraftItemsResponse" inputName="CreateDraftItemsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="30c91023-90bd-4533-b96c-ea81eb233ace" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateDraftItemsRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:scheduleFrequencyType>?</mes:scheduleFrequencyType>
         <mes:scheduleList>
            <!--1 or more repetitions:-->
            <typ:schedule>
               <!--You may enter the following 9 items in any order-->
               <typ:scheduleDate>
                  <typ:date format="?" value="?"/>
               </typ:scheduleDate>
               <typ:amount>?</typ:amount>
               <!--Optional:-->
               <typ:externalReferenceId>?</typ:externalReferenceId>
               <!--Optional:-->
               <typ:clientBankAccountId>?</typ:clientBankAccountId>
               <!--Optional:-->
               <typ:comment>?</typ:comment>
               <!--Optional:-->
               <typ:remark>?</typ:remark>
               <!--Optional:-->
               <typ:allowDuplicates>false</typ:allowDuplicates>
               <!--Optional:-->
               <typ:accountNature>?</typ:accountNature>
               <!--Optional:-->
               <typ:authorizationFormat>?</typ:authorizationFormat>
            </typ:schedule>
         </mes:scheduleList>
      </mes:CreateDraftItemsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateDraftItemsRequest"/></con:call></con:operation><con:operation id="77123622-68ee-408f-9127-f8446cbda2cf" isOneWay="false" action="" name="CreateDraftSchedule" bindingOperationName="CreateDraftSchedule" type="Request-Response" outputName="CreateDraftScheduleResponse" inputName="CreateDraftScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="36c74216-c3ed-4597-89d7-6b5046abb2fb" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateDraftScheduleRequest>
         <!--You may enter the following 14 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <!--Optional:-->
         <mes:clientBankAccountId>?</mes:clientBankAccountId>
         <mes:amount>?</mes:amount>
         <mes:occurs>?</mes:occurs>
         <mes:startDate>
            <typ:date format="?" value="?"/>
         </mes:startDate>
         <mes:type>?</mes:type>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <!--Optional:-->
         <mes:remark>?</mes:remark>
         <!--Optional:-->
         <mes:allowDuplicates>false</mes:allowDuplicates>
         <!--Optional:-->
         <mes:accountNature>?</mes:accountNature>
         <!--Optional:-->
         <mes:authorizationFormat>?</mes:authorizationFormat>
      </mes:CreateDraftScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateDraftScheduleRequest"/></con:call></con:operation><con:operation id="d3a591b5-cd33-45fb-b4d5-369641fc4ac6" isOneWay="false" action="" name="CreateEnrollmentComment" bindingOperationName="CreateEnrollmentComment" type="Request-Response" outputName="CreateEnrollmentCommentResponse" inputName="CreateEnrollmentCommentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6377fb26-123c-484b-b79f-3d5f95375cc6" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateEnrollmentCommentRequest>
         <!--You may enter the following 9 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:externalNoteId>?</mes:externalNoteId>
         <mes:note>?</mes:note>
         <!--Optional:-->
         <mes:documentType>?</mes:documentType>
         <!--Optional:-->
         <mes:base64EncodedContent>?</mes:base64EncodedContent>
         <!--Optional:-->
         <mes:contentType>?</mes:contentType>
         <!--Optional:-->
         <mes:documentName>?</mes:documentName>
      </mes:CreateEnrollmentCommentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateEnrollmentCommentRequest"/></con:call></con:operation><con:operation id="872b5559-0312-44b8-a70a-f4526e1595ba" isOneWay="false" action="" name="CreateEnrollmentDocument" bindingOperationName="CreateEnrollmentDocument" type="Request-Response" outputName="CreateEnrollmentDocumentResponse" inputName="CreateEnrollmentDocumentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b2b15726-a762-49f7-b90f-79c774f9e699" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateEnrollmentDocumentRequest>
         <!--You may enter the following 8 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:note>?</mes:note>
         <!--Optional:-->
         <mes:documentType>?</mes:documentType>
         <mes:base64EncodedContent>?</mes:base64EncodedContent>
         <mes:contentType>?</mes:contentType>
         <mes:documentName>?</mes:documentName>
      </mes:CreateEnrollmentDocumentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateEnrollmentDocumentRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="aa9485ef-9e6b-4668-a34f-fb4380f81571" isOneWay="false" action="" name="CreateEnrollmentError" bindingOperationName="CreateEnrollmentError" type="Request-Response" outputName="CreateEnrollmentErrorResponse" inputName="CreateEnrollmentErrorRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d76ac2dd-0db9-41b0-9edd-9cdc06a8acfe" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateEnrollmentErrorRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:errorCode>?</mes:errorCode>
         <mes:reason>?</mes:reason>
      </mes:CreateEnrollmentErrorRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateEnrollmentErrorRequest"/></con:call></con:operation><con:operation id="72acff3f-94cf-422b-999d-c36d250216d3" isOneWay="false" action="" name="CreateEnrollmentTicket" bindingOperationName="CreateEnrollmentTicket" type="Request-Response" outputName="CreateEnrollmentTicketResponse" inputName="CreateEnrollmentTicketRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4470cad9-d18c-408d-825a-046eb731dfc5" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateEnrollmentTicketRequest>
         <!--You may enter the following 15 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:transactionId>?</mes:transactionId>
         <!--Optional:-->
         <mes:scheduleId>?</mes:scheduleId>
         <mes:ticketType>?</mes:ticketType>
         <!--Optional:-->
         <mes:ticketStatus>?</mes:ticketStatus>
         <mes:subject>?</mes:subject>
         <!--Optional:-->
         <mes:assigneeId>?</mes:assigneeId>
         <!--Optional:-->
         <mes:reviewDate>
            <typ:date format="?" value="?"/>
         </mes:reviewDate>
         <!--Optional:-->
         <mes:assosiatedAmount>?</mes:assosiatedAmount>
         <!--Optional:-->
         <mes:reason>?</mes:reason>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <!--Optional:-->
         <mes:message>?</mes:message>
         <!--Optional:-->
         <mes:referenceTicket>?</mes:referenceTicket>
      </mes:CreateEnrollmentTicketRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateEnrollmentTicketRequest"/></con:call></con:operation><con:operation id="349a5643-44bc-481d-9787-d641a9ff6bce" isOneWay="false" action="" name="CreateExternalCftPayment" bindingOperationName="CreateExternalCftPayment" type="Request-Response" outputName="CreateExternalCftPaymentResponse" inputName="CreateExternalCftPaymentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="437604ce-114a-4404-99d2-a878ab02e52d" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateExternalCftPaymentRequest>
         <!--You may enter the following 10 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:settlementId>?</mes:settlementId>
         <mes:subscriberPayeeId>?</mes:subscriberPayeeId>
         <mes:paymentDate>
            <typ:date format="?" value="?"/>
         </mes:paymentDate>
         <mes:paymentAmount>?</mes:paymentAmount>
         <mes:paymentMode>?</mes:paymentMode>
         <mes:documentList>
            <!--1 or more repetitions:-->
            <mes:document>
               <!--You may enter the following 5 items in any order-->
               <typ:note>?</typ:note>
               <typ:documentType>?</typ:documentType>
               <typ:base64EncodedContent>?</typ:base64EncodedContent>
               <typ:contentType>?</typ:contentType>
               <typ:documentName>?</typ:documentName>
            </mes:document>
         </mes:documentList>
         <mes:remarks>?</mes:remarks>
      </mes:CreateExternalCftPaymentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateExternalCftPaymentRequest"/></con:call></con:operation><con:operation id="ba91f248-9721-4c94-8724-401cca7db076" isOneWay="false" action="" name="CreateFeeBasis" bindingOperationName="CreateFeeBasis" type="Request-Response" outputName="CreateFeeBasisResponse" inputName="CreateFeeBasisRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e8d1ad3a-045d-407f-aace-c42b9a86073b" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateFeeBasisRequest>
         <!--You may enter the following 6 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:debtFeeInformation>
            <typ:originalDebt>?</typ:originalDebt>
            <typ:dscFeeBasis>
               <!--You have a CHOICE of the next 2 items at this level-->
               <typ:Percentage>?</typ:Percentage>
               <typ:Fixed>?</typ:Fixed>
            </typ:dscFeeBasis>
         </mes:debtFeeInformation>
         <!--Optional:-->
         <mes:numberOfTradeLines>?</mes:numberOfTradeLines>
         <!--Optional:-->
         <mes:tradeLines>
            <!--1 or more repetitions:-->
            <typ:tradeLine>
               <typ:tradeLineName>?</typ:tradeLineName>
               <typ:currentBalance>?</typ:currentBalance>
            </typ:tradeLine>
         </mes:tradeLines>
      </mes:CreateFeeBasisRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateFeeBasisRequest"/></con:call></con:operation><con:operation id="d1a807c2-c779-40f8-b89c-6f30e6345b14" isOneWay="false" action="" name="CreateFeeItems" bindingOperationName="CreateFeeItems" type="Request-Response" outputName="CreateFeeItemsResponse" inputName="CreateFeeItemsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="282a7d68-7166-43c9-a52f-a87c5d8ac913" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateFeeItemsRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:scheduleList>
            <!--1 or more repetitions:-->
            <typ:schedule>
               <!--You may enter the following 7 items in any order-->
               <typ:scheduleDate>
                  <typ:date format="?" value="?"/>
               </typ:scheduleDate>
               <!--Optional:-->
               <typ:externalReferenceId>?</typ:externalReferenceId>
               <!--Optional:-->
               <typ:comment>?</typ:comment>
               <!--Optional:-->
               <typ:feeId>?</typ:feeId>
               <!--Optional:-->
               <typ:externalFeeId>?</typ:externalFeeId>
               <typ:amount>?</typ:amount>
               <!--Optional:-->
               <typ:remark>?</typ:remark>
            </typ:schedule>
         </mes:scheduleList>
      </mes:CreateFeeItemsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateFeeItemsRequest"/></con:call></con:operation><con:operation id="e984bbdc-78d6-4667-9ddb-c80093806b59" isOneWay="false" action="" name="CreateFeeSchedule" bindingOperationName="CreateFeeSchedule" type="Request-Response" outputName="CreateFeeScheduleResponse" inputName="CreateFeeScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d1d47a3b-ed57-47ef-a97e-34233ade4a52" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateFeeScheduleRequest>
         <!--You may enter the following 12 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <mes:subscriberFeeId>?</mes:subscriberFeeId>
         <mes:amount>?</mes:amount>
         <mes:occurs>?</mes:occurs>
         <mes:startDate>
            <typ:date format="?" value="?"/>
         </mes:startDate>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <!--Optional:-->
         <mes:frequency>?</mes:frequency>
         <!--Optional:-->
         <mes:remark>?</mes:remark>
         <!--Optional:-->
         <mes:settlementId>?</mes:settlementId>
      </mes:CreateFeeScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateFeeScheduleRequest"/></con:call></con:operation><con:operation id="f991ada4-3ee8-4130-a4eb-d02c9c76ab86" isOneWay="false" action="" name="CreateGroupEnrollmentAffiliate" bindingOperationName="CreateGroupEnrollmentAffiliate" type="Request-Response" outputName="CreateGroupEnrollmentAffiliateResponse" inputName="CreateGroupEnrollmentAffiliateRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d9da7dfe-9d71-425c-b3f6-3b14ce2f02ef" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateGroupEnrollmentAffiliateRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:enrollmentId>?</mes:enrollmentId>
         <mes:subscriberId>?</mes:subscriberId>
         <mes:subscriberAffiliateGroupId>?</mes:subscriberAffiliateGroupId>
      </mes:CreateGroupEnrollmentAffiliateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateGroupEnrollmentAffiliateRequest"/></con:call></con:operation><con:operation id="45fcf5d6-5d53-445d-a0f5-bd78d42e76c1" isOneWay="false" action="" name="CreateHierarchyAffiliateCommissionDist" bindingOperationName="CreateHierarchyAffiliateCommissionDist" type="Request-Response" outputName="CreateHierarchyAffiliateCommissionDistResponse" inputName="CreateHierarchyAffiliateCommissionDistRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="51ef4d15-c93d-474b-8b19-1ad1bde3beb5" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateHierarchyAffiliateCommissionDistRequest>
         <!--You may enter the following 7 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:affiliateId>?</mes:affiliateId>
         <mes:affiliateType>?</mes:affiliateType>
         <!--Optional:-->
         <mes:referalId>?</mes:referalId>
         <!--Optional:-->
         <mes:fixed>
            <typ:cycle>
               <!--You may enter the following 3 items in any order-->
               <typ:distType>?</typ:distType>
               <typ:cycleId>?</typ:cycleId>
               <typ:value>?</typ:value>
            </typ:cycle>
            <typ:cycle>
               <!--You may enter the following 3 items in any order-->
               <typ:distType>?</typ:distType>
               <typ:cycleId>?</typ:cycleId>
               <typ:value>?</typ:value>
            </typ:cycle>
         </mes:fixed>
         <!--Optional:-->
         <mes:dealerId>?</mes:dealerId>
         <!--Optional:-->
         <mes:payoutRule>?</mes:payoutRule>
      </mes:CreateHierarchyAffiliateCommissionDistRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateHierarchyAffiliateCommissionDistRequest"/></con:call></con:operation><con:operation id="ef066c34-e313-4853-a450-240e7b45299a" isOneWay="false" action="" name="CreateHierarchyEnrollmentAffiliate" bindingOperationName="CreateHierarchyEnrollmentAffiliate" type="Request-Response" outputName="CreateHierarchyEnrollmentAffiliateResponse" inputName="CreateHierarchyEnrollmentAffiliateRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9797b398-7719-4d8b-9277-d190d45ec3b0" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateHierarchyEnrollmentAffiliateRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:enrollmentId>?</mes:enrollmentId>
         <mes:subscriberId>?</mes:subscriberId>
         <mes:parentId>?</mes:parentId>
      </mes:CreateHierarchyEnrollmentAffiliateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateHierarchyEnrollmentAffiliateRequest"/></con:call></con:operation><con:operation id="85c95cfa-1ec7-47c9-b114-fd75e5d486d3" isOneWay="false" action="" name="CreateInterClientTransfer" bindingOperationName="CreateInterClientTransfer" type="Request-Response" outputName="CreateInterClientTransferResponse" inputName="CreateInterClientTransferRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ffd2a378-7337-4f4d-85f0-54ebd4d7d08f" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateInterClientTransferRequest>
         <!--You may enter the following 12 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:fromClientExternalId>?</mes:fromClientExternalId>
         <!--Optional:-->
         <mes:fromClientId>?</mes:fromClientId>
         <!--Optional:-->
         <mes:toClientExternalId>?</mes:toClientExternalId>
         <!--Optional:-->
         <mes:toClientId>?</mes:toClientId>
         <mes:amount>?</mes:amount>
         <mes:occurs>?</mes:occurs>
         <mes:startDate>
            <typ:date format="?" value="?"/>
         </mes:startDate>
         <mes:type>?</mes:type>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <!--Optional:-->
         <mes:remark>?</mes:remark>
         <!--Optional:-->
         <mes:allowDuplicates>false</mes:allowDuplicates>
      </mes:CreateInterClientTransferRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateInterClientTransferRequest"/></con:call></con:operation><con:operation id="3c20cefd-c6ae-4127-980e-2841fbde0e27" isOneWay="false" action="" name="CreatePartialEnrollment" bindingOperationName="CreatePartialEnrollment" type="Request-Response" outputName="CreatePartialEnrollmentResponse" inputName="CreatePartialEnrollmentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="78f01b53-1468-45e0-90bb-5256810bc9e5" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreatePartialEnrollmentRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:partialEnrollmentInfo>
            <!--Optional:-->
            <typ:partialEnrollmentId>?</typ:partialEnrollmentId>
            <!--Optional:-->
            <typ:affiliatesInfo>
               <!--Zero or more repetitions:-->
               <typ:partialEnrollmentAffiliateInfo>
                  <typ:affiliateId>?</typ:affiliateId>
                  <typ:affiliateType>?</typ:affiliateType>
               </typ:partialEnrollmentAffiliateInfo>
            </typ:affiliatesInfo>
            <!--Optional:-->
            <typ:partnerId>?</typ:partnerId>
            <!--Optional:-->
            <typ:partner>
               <!--Optional:-->
               <typ:partnerId>?</typ:partnerId>
               <!--Optional:-->
               <typ:partnerName>?</typ:partnerName>
               <!--Optional:-->
               <typ:partnerAddress1>?</typ:partnerAddress1>
               <!--Optional:-->
               <typ:partnerAddress2>?</typ:partnerAddress2>
               <!--Optional:-->
               <typ:partnerCity>?</typ:partnerCity>
               <!--Optional:-->
               <typ:partnerState>?</typ:partnerState>
               <!--Optional:-->
               <typ:partnerZipcode>?</typ:partnerZipcode>
               <!--Optional:-->
               <typ:partnerPhone>?</typ:partnerPhone>
               <!--Optional:-->
               <typ:partnerEmail>?</typ:partnerEmail>
               <!--Optional:-->
               <typ:userName>?</typ:userName>
               <!--Optional:-->
               <typ:status>?</typ:status>
               <!--Optional:-->
               <typ:auditInformation>
                  <!--You may enter the following 6 items in any order-->
                  <typ:createdOn>
                     <typ:date format="?" value="?"/>
                  </typ:createdOn>
                  <typ:createdBy>?</typ:createdBy>
                  <typ:createdUserType>?</typ:createdUserType>
                  <typ:modifiedOn>
                     <typ:date format="?" value="?"/>
                  </typ:modifiedOn>
                  <typ:modifiedBy>?</typ:modifiedBy>
                  <typ:modifiedUserType>?</typ:modifiedUserType>
               </typ:auditInformation>
            </typ:partner>
            <!--Optional:-->
            <typ:affiliates>
               <!--Zero or more repetitions:-->
               <typ:partialEnrollmentAffiliates>
                  <!--You may enter the following 43 items in any order-->
                  <typ:subscriberId>?</typ:subscriberId>
                  <!--Optional:-->
                  <typ:affiliateId>?</typ:affiliateId>
                  <!--Optional:-->
                  <typ:externalAffiliateId>?</typ:externalAffiliateId>
                  <!--Optional:-->
                  <typ:parentAffiliateId>?</typ:parentAffiliateId>
                  <!--Optional:-->
                  <typ:parentExternalAffiliateId>?</typ:parentExternalAffiliateId>
                  <!--Optional:-->
                  <typ:externalId>?</typ:externalId>
                  <typ:affiliateType>?</typ:affiliateType>
                  <typ:name>?</typ:name>
                  <typ:address1>?</typ:address1>
                  <!--Optional:-->
                  <typ:address2>?</typ:address2>
                  <typ:city>?</typ:city>
                  <typ:state>?</typ:state>
                  <typ:zipcode>?</typ:zipcode>
                  <typ:email>?</typ:email>
                  <typ:phone>?</typ:phone>
                  <!--Optional:-->
                  <typ:fax>?</typ:fax>
                  <typ:businessType>?</typ:businessType>
                  <!--Optional:-->
                  <typ:taxId>?</typ:taxId>
                  <!--Optional:-->
                  <typ:payoutMethod>ACH</typ:payoutMethod>
                  <!--Optional:-->
                  <typ:payoutFrequency>MONTHLY</typ:payoutFrequency>
                  <!--Optional:-->
                  <typ:payoutFrequencyValue>15</typ:payoutFrequencyValue>
                  <!--Optional:-->
                  <typ:bankName>?</typ:bankName>
                  <!--Optional:-->
                  <typ:routingNunber>?</typ:routingNunber>
                  <!--Optional:-->
                  <typ:accountType>?</typ:accountType>
                  <!--Optional:-->
                  <typ:accountNumber>?</typ:accountNumber>
                  <!--Optional:-->
                  <typ:holdersName>?</typ:holdersName>
                  <!--Optional:-->
                  <typ:bankAddress1>?</typ:bankAddress1>
                  <!--Optional:-->
                  <typ:bankAddress2>?</typ:bankAddress2>
                  <!--Optional:-->
                  <typ:bankCity>?</typ:bankCity>
                  <!--Optional:-->
                  <typ:bankState>?</typ:bankState>
                  <!--Optional:-->
                  <typ:bankZipcode>?</typ:bankZipcode>
                  <!--Optional:-->
                  <typ:signatureDate>
                     <typ:date format="?" value="?"/>
                  </typ:signatureDate>
                  <!--Optional:-->
                  <typ:status>?</typ:status>
                  <!--Optional:-->
                  <typ:collectedBalance>?</typ:collectedBalance>
                  <!--Optional:-->
                  <typ:pendingBalance>?</typ:pendingBalance>
                  <!--Optional:-->
                  <typ:isPaidAsAdvance>?</typ:isPaidAsAdvance>
                  <!--Optional:-->
                  <typ:checkAddress>
                     <!--You may enter the following 5 items in any order-->
                     <!--Optional:-->
                     <typ:address1>?</typ:address1>
                     <!--Optional:-->
                     <typ:address2>?</typ:address2>
                     <!--Optional:-->
                     <typ:city>?</typ:city>
                     <!--Optional:-->
                     <typ:state>?</typ:state>
                     <!--Optional:-->
                     <typ:zip>?</typ:zip>
                  </typ:checkAddress>
                  <!--Optional:-->
                  <typ:isReferral>?</typ:isReferral>
                  <!--Optional:-->
                  <typ:referralStartDate>
                     <typ:date format="?" value="?"/>
                  </typ:referralStartDate>
                  <!--Optional:-->
                  <typ:referralEndDate>
                     <typ:date format="?" value="?"/>
                  </typ:referralEndDate>
                  <!--Optional:-->
                  <typ:fixed>
                     <!--Zero or more repetitions:-->
                     <typ:cycle>
                        <!--You may enter the following 3 items in any order-->
                        <typ:distType>?</typ:distType>
                        <typ:cycleId>?</typ:cycleId>
                        <typ:value>?</typ:value>
                     </typ:cycle>
                  </typ:fixed>
                  <!--Optional:-->
                  <typ:payoutRule>?</typ:payoutRule>
                  <!--Optional:-->
                  <typ:auditInformation>
                     <!--You may enter the following 6 items in any order-->
                     <typ:createdOn>
                        <typ:date format="?" value="?"/>
                     </typ:createdOn>
                     <typ:createdBy>?</typ:createdBy>
                     <typ:createdUserType>?</typ:createdUserType>
                     <typ:modifiedOn>
                        <typ:date format="?" value="?"/>
                     </typ:modifiedOn>
                     <typ:modifiedBy>?</typ:modifiedBy>
                     <typ:modifiedUserType>?</typ:modifiedUserType>
                  </typ:auditInformation>
               </typ:partialEnrollmentAffiliates>
            </typ:affiliates>
            <!--Optional:-->
            <typ:status>?</typ:status>
            <!--Optional:-->
            <typ:firstName>?</typ:firstName>
            <!--Optional:-->
            <typ:lastName>?</typ:lastName>
            <!--Optional:-->
            <typ:address1>?</typ:address1>
            <!--Optional:-->
            <typ:address2>?</typ:address2>
            <!--Optional:-->
            <typ:city>?</typ:city>
            <!--Optional:-->
            <typ:state>?</typ:state>
            <!--Optional:-->
            <typ:zipcode>?</typ:zipcode>
            <!--Optional:-->
            <typ:emailAddress>?</typ:emailAddress>
            <!--Optional:-->
            <typ:phoneNumber1>?</typ:phoneNumber1>
            <!--Optional:-->
            <typ:phoneNumber2>?</typ:phoneNumber2>
            <!--Optional:-->
            <typ:flex_1>?</typ:flex_1>
            <!--Optional:-->
            <typ:flex_2>?</typ:flex_2>
            <!--Optional:-->
            <typ:flex_3>?</typ:flex_3>
            <!--Optional:-->
            <typ:flex_4>?</typ:flex_4>
            <!--Optional:-->
            <typ:flex_5>?</typ:flex_5>
            <!--Optional:-->
            <typ:flex_6>?</typ:flex_6>
            <!--Optional:-->
            <typ:flex_7>?</typ:flex_7>
            <!--Optional:-->
            <typ:flex_8>?</typ:flex_8>
            <!--Optional:-->
            <typ:flex_9>?</typ:flex_9>
            <!--Optional:-->
            <typ:flex_10>?</typ:flex_10>
            <!--Optional:-->
            <typ:flex_11>?</typ:flex_11>
            <!--Optional:-->
            <typ:flex_12>?</typ:flex_12>
            <!--Optional:-->
            <typ:flex_13>?</typ:flex_13>
            <!--Optional:-->
            <typ:flex_14>?</typ:flex_14>
            <!--Optional:-->
            <typ:flex_15>?</typ:flex_15>
            <!--Optional:-->
            <typ:flex_16>?</typ:flex_16>
            <!--Optional:-->
            <typ:flex_17>?</typ:flex_17>
            <!--Optional:-->
            <typ:flex_18>?</typ:flex_18>
            <!--Optional:-->
            <typ:flex_19>?</typ:flex_19>
            <!--Optional:-->
            <typ:flex_20>?</typ:flex_20>
            <!--Optional:-->
            <typ:flex_21>?</typ:flex_21>
            <!--Optional:-->
            <typ:flex_22>?</typ:flex_22>
            <!--Optional:-->
            <typ:flex_23>?</typ:flex_23>
            <!--Optional:-->
            <typ:flex_24>?</typ:flex_24>
            <!--Optional:-->
            <typ:flex_25>?</typ:flex_25>
            <!--Optional:-->
            <typ:flex_26>?</typ:flex_26>
            <!--Optional:-->
            <typ:flex_27>?</typ:flex_27>
            <!--Optional:-->
            <typ:flex_28>?</typ:flex_28>
            <!--Optional:-->
            <typ:flex_29>?</typ:flex_29>
            <!--Optional:-->
            <typ:flex_30>?</typ:flex_30>
            <!--Optional:-->
            <typ:auditInformation>
               <!--You may enter the following 6 items in any order-->
               <typ:createdOn>
                  <typ:date format="?" value="?"/>
               </typ:createdOn>
               <typ:createdBy>?</typ:createdBy>
               <typ:createdUserType>?</typ:createdUserType>
               <typ:modifiedOn>
                  <typ:date format="?" value="?"/>
               </typ:modifiedOn>
               <typ:modifiedBy>?</typ:modifiedBy>
               <typ:modifiedUserType>?</typ:modifiedUserType>
            </typ:auditInformation>
         </mes:partialEnrollmentInfo>
      </mes:CreatePartialEnrollmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreatePartialEnrollmentRequest"/></con:call></con:operation><con:operation id="78bc94db-8e3e-4840-a8de-7d32e8c6c529" isOneWay="false" action="" name="CreatePerformanceSettlement" bindingOperationName="CreatePerformanceSettlement" type="Request-Response" outputName="CreatePerformanceSettlementResponse" inputName="CreatePerformanceSettlementRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="14402057-dbf1-4038-97cb-4d623869d8e6" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreatePerformanceSettlementRequest>
         <!--You may enter the following 20 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <mes:payeeId>?</mes:payeeId>
         <!--Optional:-->
         <mes:payeeAddressId>?</mes:payeeAddressId>
         <!--Optional:-->
         <mes:PayeeExternalAddressId>?</mes:PayeeExternalAddressId>
         <!--Optional:-->
         <mes:payeeContactId>?</mes:payeeContactId>
         <!--Optional:-->
         <mes:payeeExternalContactId>?</mes:payeeExternalContactId>
         <!--Optional:-->
         <mes:payeeBankAccountId>?</mes:payeeBankAccountId>
         <!--Optional:-->
         <mes:PayeeBankExternalAccountId>?</mes:PayeeBankExternalAccountId>
         <mes:currentBalance>?</mes:currentBalance>
         <mes:settlementAmount>?</mes:settlementAmount>
         <!--Optional:-->
         <mes:settlementReference>?</mes:settlementReference>
         <!--Optional:-->
         <mes:numPayments>?</mes:numPayments>
         <mes:accountNumber>?</mes:accountNumber>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <!--Optional:-->
         <mes:negotiator>?</mes:negotiator>
         <mes:isApprovalRequired>true</mes:isApprovalRequired>
         <!--Optional:-->
         <mes:settlementPaymentList>
            <!--1 or more repetitions:-->
            <typ:settlementPayment scheduleId="?" operation="?">
               <!--You may enter the following 7 items in any order-->
               <typ:effectiveDate>
                  <typ:date format="?" value="?"/>
               </typ:effectiveDate>
               <typ:paymentAmount>?</typ:paymentAmount>
               <typ:payeeId>?</typ:payeeId>
               <!--Optional:-->
               <typ:externalReferenceId>?</typ:externalReferenceId>
               <!--Optional:-->
               <typ:externalCheckNumber>?</typ:externalCheckNumber>
               <typ:transactionMethod>?</typ:transactionMethod>
               <!--Optional:-->
               <typ:associatedFeeList>
                  <!--1 or more repetitions:-->
                  <typ:associatedFee scheduleId="?" operation="?">
                     <!--You may enter the following 4 items in any order-->
                     <typ:amount>?</typ:amount>
                     <!--Optional:-->
                     <typ:feeId>?</typ:feeId>
                     <!--Optional:-->
                     <typ:externalFeeId>?</typ:externalFeeId>
                     <!--Optional:-->
                     <typ:effectiveDate>
                        <typ:date format="?" value="?"/>
                     </typ:effectiveDate>
                  </typ:associatedFee>
               </typ:associatedFeeList>
            </typ:settlementPayment>
         </mes:settlementPaymentList>
      </mes:CreatePerformanceSettlementRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreatePerformanceSettlementRequest"/></con:call></con:operation><con:operation id="0bfbda4f-8bf8-4ec5-8442-0a82d9bf2bbf" isOneWay="false" action="" name="CreatePerformanceSettlementBasis" bindingOperationName="CreatePerformanceSettlementBasis" type="Request-Response" outputName="CreatePerformanceSettlementBasisResponse" inputName="CreatePerformanceSettlementBasisRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dec24aad-1b67-466e-8f52-d474bf2a2b8e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreatePerformanceSettlementBasisRequest>
         <!--You may enter the following 20 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <mes:payeeId>?</mes:payeeId>
         <!--Optional:-->
         <mes:payeeAddressId>?</mes:payeeAddressId>
         <!--Optional:-->
         <mes:PayeeExternalAddressId>?</mes:PayeeExternalAddressId>
         <!--Optional:-->
         <mes:payeeContactId>?</mes:payeeContactId>
         <!--Optional:-->
         <mes:payeeExternalContactId>?</mes:payeeExternalContactId>
         <!--Optional:-->
         <mes:payeeBankAccountId>?</mes:payeeBankAccountId>
         <!--Optional:-->
         <mes:PayeeBankExternalAccountId>?</mes:PayeeBankExternalAccountId>
         <mes:originalDebt>?</mes:originalDebt>
         <mes:settlementAmount>?</mes:settlementAmount>
         <!--Optional:-->
         <mes:settlementReference>?</mes:settlementReference>
         <!--Optional:-->
         <mes:numPayments>?</mes:numPayments>
         <mes:accountNumber>?</mes:accountNumber>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <!--Optional:-->
         <mes:negotiator>?</mes:negotiator>
         <mes:isApprovalRequired>true</mes:isApprovalRequired>
         <!--Optional:-->
         <mes:settlementPaymentList>
            <!--1 or more repetitions:-->
            <typ:settlementPayment scheduleId="?" operation="?">
               <!--You may enter the following 7 items in any order-->
               <typ:effectiveDate>
                  <typ:date format="?" value="?"/>
               </typ:effectiveDate>
               <typ:paymentAmount>?</typ:paymentAmount>
               <typ:payeeId>?</typ:payeeId>
               <!--Optional:-->
               <typ:externalReferenceId>?</typ:externalReferenceId>
               <!--Optional:-->
               <typ:externalCheckNumber>?</typ:externalCheckNumber>
               <typ:transactionMethod>?</typ:transactionMethod>
               <!--Optional:-->
               <typ:associatedFeeList>
                  <!--1 or more repetitions:-->
                  <typ:associatedFee scheduleId="?" operation="?">
                     <!--You may enter the following 4 items in any order-->
                     <typ:amount>?</typ:amount>
                     <!--Optional:-->
                     <typ:feeId>?</typ:feeId>
                     <!--Optional:-->
                     <typ:externalFeeId>?</typ:externalFeeId>
                     <!--Optional:-->
                     <typ:effectiveDate>
                        <typ:date format="?" value="?"/>
                     </typ:effectiveDate>
                  </typ:associatedFee>
               </typ:associatedFeeList>
            </typ:settlementPayment>
         </mes:settlementPaymentList>
      </mes:CreatePerformanceSettlementBasisRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreatePerformanceSettlementBasisRequest"/></con:call></con:operation><con:operation id="6aa2d4d6-ffa7-487b-b2a6-700dc9b0e2ad" isOneWay="false" action="" name="CreatePositivePayList" bindingOperationName="CreatePositivePayList" type="Request-Response" outputName="CreatePositivePayListResponse" inputName="CreatePositivePayListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="93e63715-fe88-4d70-84ed-c80733a6f06f" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreatePositivePayListRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:expandUpTo>
            <typ:date format="?" value="?"/>
         </mes:expandUpTo>
         <mes:paymentIdList>
            <!--1 or more repetitions:-->
            <typ:paymentId>?</typ:paymentId>
         </mes:paymentIdList>
      </mes:CreatePositivePayListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreatePositivePayListRequest"/></con:call></con:operation><con:operation id="7ab3b6ca-8e9d-484f-8e46-fff362452e2e" isOneWay="false" action="" name="CreatePrenoteSchedule" bindingOperationName="CreatePrenoteSchedule" type="Request-Response" outputName="CreatePrenoteScheduleResponse" inputName="CreatePrenoteScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2d463805-41b2-4287-bd76-8d66348f9457" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreatePrenoteScheduleRequest>
         <!--You may enter the following 9 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <!--Optional:-->
         <mes:clientBankAccountId>?</mes:clientBankAccountId>
         <mes:prenoteDate>
            <typ:date format="?" value="?"/>
         </mes:prenoteDate>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <!--Optional:-->
         <mes:accountNature>?</mes:accountNature>
         <!--Optional:-->
         <mes:authorizationFormat>?</mes:authorizationFormat>
      </mes:CreatePrenoteScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreatePrenoteScheduleRequest"/></con:call></con:operation><con:operation id="eb789d53-a701-4b25-ae8a-b5c512d5a308" isOneWay="false" action="" name="CreateReturnSchedule" bindingOperationName="CreateReturnSchedule" type="Request-Response" outputName="CreateReturnScheduleResponse" inputName="CreateReturnScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7a057f29-a14f-454d-b9e2-975267e79b70" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateReturnScheduleRequest>
         <!--You may enter the following 12 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <mes:scheduleDate>
            <typ:date format="?" value="?"/>
         </mes:scheduleDate>
         <!--Optional:-->
         <mes:recoupFeeDate>
            <typ:date format="?" value="?"/>
         </mes:recoupFeeDate>
         <!--Optional:-->
         <mes:feeScheduleId>?</mes:feeScheduleId>
         <!--Optional:-->
         <mes:clientBankAccountId>?</mes:clientBankAccountId>
         <mes:amount>?</mes:amount>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <mes:transactionClass>?</mes:transactionClass>
         <mes:transactionMethod>?</mes:transactionMethod>
      </mes:CreateReturnScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateReturnScheduleRequest"/></con:call></con:operation><con:operation id="6b4c7b61-8a62-4073-a165-b71b360419ea" isOneWay="false" action="" name="CreateRTPSettlementSchedule" bindingOperationName="CreateRTPSettlementSchedule" type="Request-Response" outputName="CreateRTPSettlementScheduleResponse" inputName="CreateRTPSettlementScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5a874893-a7a7-433f-95ad-ca4659268714" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateRTPSettlementScheduleRequest>
         <!--You may enter the following 21 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <mes:payeeId>?</mes:payeeId>
         <mes:payeeName>?</mes:payeeName>
         <!--Optional:-->
         <mes:payeeAddressId>?</mes:payeeAddressId>
         <!--Optional:-->
         <mes:PayeeExternalAddressId>?</mes:PayeeExternalAddressId>
         <!--Optional:-->
         <mes:payeeContactId>?</mes:payeeContactId>
         <!--Optional:-->
         <mes:payeeExternalContactId>?</mes:payeeExternalContactId>
         <!--Optional:-->
         <mes:payeeBankAccountId>?</mes:payeeBankAccountId>
         <!--Optional:-->
         <mes:PayeeBankExternalAccountId>?</mes:PayeeBankExternalAccountId>
         <mes:currentBalance>?</mes:currentBalance>
         <mes:settlementAmount>?</mes:settlementAmount>
         <!--Optional:-->
         <mes:settlementReference>?</mes:settlementReference>
         <!--Optional:-->
         <mes:numPayments>?</mes:numPayments>
         <mes:accountNumber>?</mes:accountNumber>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <!--Optional:-->
         <mes:negotiator>?</mes:negotiator>
         <mes:isApprovalRequired>true</mes:isApprovalRequired>
         <!--Optional:-->
         <mes:settlementScheduleList>
            <!--1 or more repetitions:-->
            <typ:SettlementScheduleInfo scheduleId="?" operation="?">
               <!--You may enter the following 6 items in any order-->
               <typ:effectiveDate>
                  <typ:date format="?" value="?"/>
               </typ:effectiveDate>
               <typ:paymentAmount>?</typ:paymentAmount>
               <typ:payeeId>?</typ:payeeId>
               <!--Optional:-->
               <typ:externalReferenceId>?</typ:externalReferenceId>
               <!--Optional:-->
               <typ:externalCheckNumber>?</typ:externalCheckNumber>
               <typ:transactionMethod>?</typ:transactionMethod>
            </typ:SettlementScheduleInfo>
         </mes:settlementScheduleList>
      </mes:CreateRTPSettlementScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateRTPSettlementScheduleRequest"/></con:call></con:operation><con:operation id="8da0e77a-8ce7-4ce0-966c-b032f63e1333" isOneWay="false" action="" name="CreateRuleSet" bindingOperationName="CreateRuleSet" type="Request-Response" outputName="CreateRuleSetResponse" inputName="CreateRuleSetRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dd165499-4478-4f4e-9eea-f804c0248ed8" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateRuleSetRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:name>?</mes:name>
         <!--Optional:-->
         <mes:externalRuleSetId>?</mes:externalRuleSetId>
      </mes:CreateRuleSetRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateRuleSetRequest"/></con:call></con:operation><con:operation id="bb8061c1-f5ef-4223-9746-ba25dec60fa9" isOneWay="false" action="" name="CreateSettlementSchedule" bindingOperationName="CreateSettlementSchedule" type="Request-Response" outputName="CreateSettlementScheduleResponse" inputName="CreateSettlementScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c193d718-b33e-47f9-9894-845d0d05c109" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateSettlementScheduleRequest>
         <!--You may enter the following 20 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <mes:payeeId>?</mes:payeeId>
         <!--Optional:-->
         <mes:payeeAddressId>?</mes:payeeAddressId>
         <!--Optional:-->
         <mes:PayeeExternalAddressId>?</mes:PayeeExternalAddressId>
         <!--Optional:-->
         <mes:payeeContactId>?</mes:payeeContactId>
         <!--Optional:-->
         <mes:payeeExternalContactId>?</mes:payeeExternalContactId>
         <!--Optional:-->
         <mes:payeeBankAccountId>?</mes:payeeBankAccountId>
         <!--Optional:-->
         <mes:PayeeBankExternalAccountId>?</mes:PayeeBankExternalAccountId>
         <mes:currentBalance>?</mes:currentBalance>
         <mes:settlementAmount>?</mes:settlementAmount>
         <!--Optional:-->
         <mes:settlementReference>?</mes:settlementReference>
         <!--Optional:-->
         <mes:numPayments>?</mes:numPayments>
         <mes:accountNumber>?</mes:accountNumber>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <!--Optional:-->
         <mes:negotiator>?</mes:negotiator>
         <mes:isApprovalRequired>true</mes:isApprovalRequired>
         <!--Optional:-->
         <mes:settlementScheduleList>
            <!--1 or more repetitions:-->
            <typ:SettlementScheduleInfo scheduleId="?" operation="?">
               <!--You may enter the following 6 items in any order-->
               <typ:effectiveDate>
                  <typ:date format="?" value="?"/>
               </typ:effectiveDate>
               <typ:paymentAmount>?</typ:paymentAmount>
               <typ:payeeId>?</typ:payeeId>
               <!--Optional:-->
               <typ:externalReferenceId>?</typ:externalReferenceId>
               <!--Optional:-->
               <typ:externalCheckNumber>?</typ:externalCheckNumber>
               <typ:transactionMethod>?</typ:transactionMethod>
            </typ:SettlementScheduleInfo>
         </mes:settlementScheduleList>
      </mes:CreateSettlementScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateSettlementScheduleRequest"/></con:call></con:operation><con:operation id="49cc0d0a-d784-4cd8-a21e-315ee585a2be" isOneWay="false" action="" name="CreateSubscriberAffiliateConfigs" bindingOperationName="CreateSubscriberAffiliateConfigs" type="Request-Response" outputName="CreateSubscriberAffiliateConfigsResponse" inputName="CreateSubscriberAffiliateConfigsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="92119c69-d464-4ec0-9e90-a8aaab493294" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateSubscriberAffiliateConfigsRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:affiliateId>?</mes:affiliateId>
         <mes:partnerId>?</mes:partnerId>
         <mes:affiliateConfigs>
            <!--1 or more repetitions:-->
            <mes:config>
               <mes:name>?</mes:name>
               <mes:value>?</mes:value>
            </mes:config>
         </mes:affiliateConfigs>
      </mes:CreateSubscriberAffiliateConfigsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateSubscriberAffiliateConfigsRequest"/></con:call></con:operation><con:operation id="eb2a8581-cd18-45b4-9467-64028a1e7257" isOneWay="false" action="" name="CreateSubscriberFee" bindingOperationName="CreateSubscriberFee" type="Request-Response" outputName="CreateSubscriberFeeResponse" inputName="CreateSubscriberFeeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bafe9ce4-51e2-46d1-a84d-0d07f9da16c6" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateSubscriberFeeRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:fee>
            <!--You may enter the following 9 items in any order-->
            <!--Optional:-->
            <typ:id>?</typ:id>
            <typ:feeId>?</typ:feeId>
            <!--Optional:-->
            <typ:externalFeeId>?</typ:externalFeeId>
            <typ:type>?</typ:type>
            <typ:name>?</typ:name>
            <typ:description>?</typ:description>
            <typ:required>?</typ:required>
            <typ:priority>?</typ:priority>
            <typ:amount>?</typ:amount>
         </mes:fee>
      </mes:CreateSubscriberFeeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateSubscriberFeeRequest"/></con:call></con:operation><con:operation id="0cb80303-dc70-4d0c-b94a-9d71a1348077" isOneWay="false" action="" name="CreateSubscriberPartner" bindingOperationName="CreateSubscriberPartner" type="Request-Response" outputName="CreateSubscriberPartnerResponse" inputName="CreateSubscriberPartnerRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1e4c7db5-dfb1-4d11-9794-29d36bb382fb" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateSubscriberPartnerRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:partner>
            <!--Optional:-->
            <typ:partnerId>?</typ:partnerId>
            <!--Optional:-->
            <typ:partnerName>?</typ:partnerName>
            <!--Optional:-->
            <typ:partnerAddress1>?</typ:partnerAddress1>
            <!--Optional:-->
            <typ:partnerAddress2>?</typ:partnerAddress2>
            <!--Optional:-->
            <typ:partnerCity>?</typ:partnerCity>
            <!--Optional:-->
            <typ:partnerState>?</typ:partnerState>
            <!--Optional:-->
            <typ:partnerZipcode>?</typ:partnerZipcode>
            <!--Optional:-->
            <typ:partnerPhone>?</typ:partnerPhone>
            <!--Optional:-->
            <typ:partnerEmail>?</typ:partnerEmail>
            <!--Optional:-->
            <typ:userName>?</typ:userName>
            <!--Optional:-->
            <typ:status>?</typ:status>
            <!--Optional:-->
            <typ:auditInformation>
               <!--You may enter the following 6 items in any order-->
               <typ:createdOn>
                  <typ:date format="?" value="?"/>
               </typ:createdOn>
               <typ:createdBy>?</typ:createdBy>
               <typ:createdUserType>?</typ:createdUserType>
               <typ:modifiedOn>
                  <typ:date format="?" value="?"/>
               </typ:modifiedOn>
               <typ:modifiedBy>?</typ:modifiedBy>
               <typ:modifiedUserType>?</typ:modifiedUserType>
            </typ:auditInformation>
         </mes:partner>
         <!--Optional:-->
         <mes:partnerConfigs>
            <!--1 or more repetitions:-->
            <mes:config>
               <mes:name>?</mes:name>
               <mes:value>?</mes:value>
            </mes:config>
         </mes:partnerConfigs>
      </mes:CreateSubscriberPartnerRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateSubscriberPartnerRequest"/></con:call></con:operation><con:operation id="a236012e-7d9a-4ad7-b9b9-bbeddbbf6dab" isOneWay="false" action="" name="CreateSubscriberPayee" bindingOperationName="CreateSubscriberPayee" type="Request-Response" outputName="CreateSubscriberPayeeResponse" inputName="CreateSubscriberPayeeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1587d487-9403-4350-9d19-6c1d61b2a002" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateSubscriberPayeeRequest>
         <!--You may enter the following 13 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:subscriberPayeeId>?</mes:subscriberPayeeId>
         <mes:payeeName>?</mes:payeeName>
         <!--Optional:-->
         <mes:payeeStatus>true</mes:payeeStatus>
         <!--Optional:-->
         <mes:payeeDescription>?</mes:payeeDescription>
         <!--Optional:-->
         <mes:payeeWebsite>?</mes:payeeWebsite>
         <!--Optional:-->
         <mes:externalPayeeId>?</mes:externalPayeeId>
         <!--Optional:-->
         <mes:faxNo>?</mes:faxNo>
         <!--Optional:-->
         <mes:phoneNo>?</mes:phoneNo>
         <!--Optional:-->
         <mes:payeeAdresses>
            <!--Zero or more repetitions:-->
            <mes:address operation="?">
               <!--You may enter the following 7 items in any order-->
               <!--Optional:-->
               <typ:id>?</typ:id>
               <!--Optional:-->
               <typ:externalId>?</typ:externalId>
               <!--Optional:-->
               <typ:address1>?</typ:address1>
               <!--Optional:-->
               <typ:address2>?</typ:address2>
               <!--Optional:-->
               <typ:city>?</typ:city>
               <!--Optional:-->
               <typ:state>?</typ:state>
               <!--Optional:-->
               <typ:zip>?</typ:zip>
            </mes:address>
         </mes:payeeAdresses>
         <!--Optional:-->
         <mes:payeeContacts>
            <!--Zero or more repetitions:-->
            <mes:contact operation="?">
               <!--You may enter the following 10 items in any order-->
               <!--Optional:-->
               <typ:id>?</typ:id>
               <!--Optional:-->
               <typ:externalId>?</typ:externalId>
               <!--Optional:-->
               <typ:department>?</typ:department>
               <typ:name>?</typ:name>
               <!--Optional:-->
               <typ:title>?</typ:title>
               <!--Optional:-->
               <typ:homePhone ext="?">?</typ:homePhone>
               <!--Optional:-->
               <typ:businessPhone ext="?">?</typ:businessPhone>
               <!--Optional:-->
               <typ:mobilePhone>?</typ:mobilePhone>
               <!--Optional:-->
               <typ:fax>?</typ:fax>
               <!--Optional:-->
               <typ:email>?</typ:email>
            </mes:contact>
         </mes:payeeContacts>
         <!--Optional:-->
         <mes:payeeBankAccounts>
            <!--Zero or more repetitions:-->
            <mes:account operation="?">
               <!--You may enter the following 9 items in any order-->
               <!--Optional:-->
               <typ:id>?</typ:id>
               <!--Optional:-->
               <typ:externalId>?</typ:externalId>
               <!--Optional:-->
               <typ:bankName>?</typ:bankName>
               <typ:routingNumber>?</typ:routingNumber>
               <!--Optional:-->
               <typ:accountHolderName>?</typ:accountHolderName>
               <!--Optional:-->
               <typ:accountNumber>?</typ:accountNumber>
               <!--Optional:-->
               <typ:accountType>?</typ:accountType>
               <!--Optional:-->
               <typ:status>?</typ:status>
               <!--Optional:-->
               <typ:accountLabel>?</typ:accountLabel>
            </mes:account>
         </mes:payeeBankAccounts>
         <!--Optional:-->
         <mes:isCollectionAgency>?</mes:isCollectionAgency>
      </mes:CreateSubscriberPayeeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateSubscriberPayeeRequest"/></con:call></con:operation><con:operation id="ac44f0c5-03b5-4caa-a2fa-a1ed00cc77d6" isOneWay="false" action="" name="CreateSubscriberPayeeRelationship" bindingOperationName="CreateSubscriberPayeeRelationship" type="Request-Response" outputName="CreateSubscriberPayeeRelationshipResponse" inputName="CreateSubscriberPayeeRelationshipRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dcf4a62a-cd00-4eeb-88cf-e70048c3b6af" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateSubscriberPayeeRelationshipRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:parentPayeeId>?</mes:parentPayeeId>
         <!--Optional:-->
         <mes:parentPayeeName>?</mes:parentPayeeName>
         <mes:childPayees>
            <!--1 or more repetitions:-->
            <typ:childPayee>
               <!--You may enter the following 2 items in any order-->
               <typ:childPayeeId>?</typ:childPayeeId>
               <!--Optional:-->
               <typ:childPayeeName>?</typ:childPayeeName>
            </typ:childPayee>
         </mes:childPayees>
      </mes:CreateSubscriberPayeeRelationshipRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateSubscriberPayeeRelationshipRequest"/></con:call></con:operation><con:operation id="321fc4e0-762b-476f-8ea9-66519cee0920" isOneWay="false" action="" name="CreateSubscriberUser" bindingOperationName="CreateSubscriberUser" type="Request-Response" outputName="CreateSubscriberUserResponse" inputName="CreateSubscriberUserRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="63082b62-7e91-4a8b-bc30-f9a1e16c5617" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateSubscriberUserRequest>
         <!--You may enter the following 18 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:firstName>?</mes:firstName>
         <mes:userName>?</mes:userName>
         <!--Optional:-->
         <mes:middleInitial>?</mes:middleInitial>
         <mes:lastName>?</mes:lastName>
         <mes:email>?</mes:email>
         <mes:phone>?</mes:phone>
         <mes:password>?</mes:password>
         <!--Optional:-->
         <mes:addressLine1>?</mes:addressLine1>
         <!--Optional:-->
         <mes:addressLine2>?</mes:addressLine2>
         <!--Optional:-->
         <mes:city>?</mes:city>
         <!--Optional:-->
         <mes:state>?</mes:state>
         <!--Optional:-->
         <mes:zip>?</mes:zip>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <mes:isActive>true</mes:isActive>
         <mes:rolePermissions>
            <!--1 or more repetitions:-->
            <typ:rolePermission>?</typ:rolePermission>
         </mes:rolePermissions>
         <mes:isIpValidationRequired>true</mes:isIpValidationRequired>
         <!--Optional:-->
         <mes:ipAddresses>
            <!--1 or more repetitions:-->
            <typ:IpAddress>?</typ:IpAddress>
         </mes:ipAddresses>
      </mes:CreateSubscriberUserRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateSubscriberUserRequest"/></con:call></con:operation><con:operation id="fa956f38-467b-4647-bbdf-d0ece4396c1f" isOneWay="false" action="" name="CreateSuscriberTemplateAsset" bindingOperationName="CreateSuscriberTemplateAsset" type="Request-Response" outputName="CreateSuscriberTemplateAssetResponse" inputName="CreateSuscriberTemplateAssetRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8d43ccec-4303-4b7d-a03b-4af34889f842" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:CreateSuscriberTemplateAssetRequest>
         <!--You may enter the following 6 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:note>?</mes:note>
         <!--Optional:-->
         <mes:documentType>?</mes:documentType>
         <mes:base64EncodedContent>?</mes:base64EncodedContent>
         <mes:contentType>?</mes:contentType>
         <mes:documentName>?</mes:documentName>
      </mes:CreateSuscriberTemplateAssetRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateSuscriberTemplateAssetRequest"/></con:call></con:operation><con:operation id="321c0a65-86a4-4195-addc-a044b97a8d70" isOneWay="false" action="" name="DelayDraft" bindingOperationName="DelayDraft" type="Request-Response" outputName="DelayDraftResponse" inputName="DelayDraftRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a2225673-9384-4c34-a6ca-b10929a08bdc" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:DelayDraftRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:scheduleId>?</mes:scheduleId>
         <mes:currentDraftDate>
            <typ:date format="?" value="?"/>
         </mes:currentDraftDate>
         <mes:newDraftDate>
            <typ:date format="?" value="?"/>
         </mes:newDraftDate>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
      </mes:DelayDraftRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/DelayDraftRequest"/></con:call></con:operation><con:operation id="79acc21f-9052-45a9-9e70-7f25a24b2b47" isOneWay="false" action="" name="DeleteClientBankAccount" bindingOperationName="DeleteClientBankAccount" type="Request-Response" outputName="DeleteClientBankAccountResponse" inputName="DeleteClientBankAccountRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dccd6e20-ce99-4a4d-9b9b-2d6f1bcc6182" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:DeleteClientBankAccountRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:bankId>?</mes:bankId>
         <mes:accountNo>?</mes:accountNo>
      </mes:DeleteClientBankAccountRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/DeleteClientBankAccountRequest"/></con:call></con:operation><con:operation id="4e7adee4-e3b8-40be-9e63-035c2a710ecc" isOneWay="false" action="" name="FailPayment" bindingOperationName="FailPayment" type="Request-Response" outputName="FailPaymentResponse" inputName="FailPaymentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ceaeb61c-70f1-4077-918b-6892f8305a6d" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:FailPaymentRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:scheduleId>?</mes:scheduleId>
         <!--Optional:-->
         <mes:description>?</mes:description>
      </mes:FailPaymentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/FailPaymentRequest"/></con:call></con:operation><con:operation id="467a47db-f479-4a66-bd32-141efc9239cd" isOneWay="false" action="" name="GenerateClientBankStatement" bindingOperationName="GenerateClientBankStatement" type="Request-Response" outputName="GenerateClientBankStatementResponse" inputName="GenerateClientBankStatementRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="647210c8-8719-44f6-a424-9476e1d3ea56" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GenerateClientBankStatementRequest>
         <!--You may enter the following 5 items in any order-->
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:fromDate>
            <typ:date format="?" value="?"/>
         </mes:fromDate>
         <!--Optional:-->
         <mes:toDate>
            <typ:date format="?" value="?"/>
         </mes:toDate>
      </mes:GenerateClientBankStatementRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GenerateClientBankStatementRequest"/></con:call></con:operation><con:operation id="fb5aa306-57e9-4d9a-9791-c5c5f269fa11" isOneWay="false" action="" name="GetAffiliate" bindingOperationName="GetAffiliate" type="Request-Response" outputName="GetAffiliateResponse" inputName="GetAffiliateRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e52445b5-8479-4980-a8da-f7870900c61f" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetAffiliateRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:affiliateId>?</mes:affiliateId>
         <!--Optional:-->
         <mes:externalAffiliateId>?</mes:externalAffiliateId>
      </mes:GetAffiliateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetAffiliateRequest"/></con:call></con:operation><con:operation id="c3ec1ec5-4de4-42e5-a148-5856f1a07f66" isOneWay="false" action="" name="GetAffiliateClients" bindingOperationName="GetAffiliateClients" type="Request-Response" outputName="GetAffiliateClientsResponse" inputName="GetAffiliateClientsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="75085b64-359f-4260-a4c3-e5abb17c16e4" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetAffiliateClientsRequest>
         <!--You may enter the following 31 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:affiliateId>?</mes:affiliateId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:firstname>?</mes:firstname>
         <!--Optional:-->
         <mes:middleInitial>?</mes:middleInitial>
         <!--Optional:-->
         <mes:lastname>?</mes:lastname>
         <!--Optional:-->
         <mes:ssn>?</mes:ssn>
         <!--Optional:-->
         <mes:email>?</mes:email>
         <!--Optional:-->
         <mes:keyWord>?</mes:keyWord>
         <!--Optional:-->
         <mes:statuses>
            <!--Zero or more repetitions:-->
            <mes:status>?</mes:status>
         </mes:statuses>
         <!--Optional:-->
         <mes:spaStatuses>
            <!--Zero or more repetitions:-->
            <mes:status>?</mes:status>
         </mes:spaStatuses>
         <!--Optional:-->
         <mes:fromDate>
            <typ:date format="?" value="?"/>
         </mes:fromDate>
         <!--Optional:-->
         <mes:toDate>
            <typ:date format="?" value="?"/>
         </mes:toDate>
         <!--Optional:-->
         <mes:enrollmentFromDate>
            <typ:date format="?" value="?"/>
         </mes:enrollmentFromDate>
         <!--Optional:-->
         <mes:enrollmentToDate>
            <typ:date format="?" value="?"/>
         </mes:enrollmentToDate>
         <!--Optional:-->
         <mes:phoneNumber>?</mes:phoneNumber>
         <!--Optional:-->
         <mes:addressLine1>?</mes:addressLine1>
         <!--Optional:-->
         <mes:addressLine2>?</mes:addressLine2>
         <!--Optional:-->
         <mes:city>?</mes:city>
         <!--Optional:-->
         <mes:state>?</mes:state>
         <!--Optional:-->
         <mes:zip>?</mes:zip>
         <!--Optional:-->
         <mes:loanNumber>?</mes:loanNumber>
         <!--Optional:-->
         <mes:lenderName>?</mes:lenderName>
         <!--Optional:-->
         <mes:VIN>?</mes:VIN>
         <!--Optional:-->
         <mes:routingNumber>?</mes:routingNumber>
         <!--Optional:-->
         <mes:accountNumber>?</mes:accountNumber>
         <!--Optional:-->
         <mes:order>
            <!--Zero or more repetitions:-->
            <mes:orderBy>?</mes:orderBy>
         </mes:order>
         <mes:ascending>true</mes:ascending>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:GetAffiliateClientsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetAffiliateClientsRequest"/></con:call></con:operation><con:operation id="352c2fdd-0053-43bf-8214-8e8b0b0959e8" isOneWay="false" action="" name="GetAffiliateDocumentList" bindingOperationName="GetAffiliateDocumentList" type="Request-Response" outputName="GetAffiliateDocumentListResponse" inputName="GetAffiliateDocumentListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="68199660-d614-4fe2-80aa-5913edc0b48f" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetAffiliateDocumentListRequest>
         <!--You may enter the following 6 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:affiliateId>?</mes:affiliateId>
         <!--Optional:-->
         <mes:externalAffiliateId>?</mes:externalAffiliateId>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>
               <typ:order value="?" isAscending="true"/>
            </typ:orderBy>
         </mes:orderBy>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:GetAffiliateDocumentListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetAffiliateDocumentListRequest"/></con:call></con:operation><con:operation id="6a0704bc-9249-42ba-99fb-da44b07400ad" isOneWay="false" action="" name="GetAffiliateHierarchy" bindingOperationName="GetAffiliateHierarchy" type="Request-Response" outputName="GetAffiliateHierarchyResponse" inputName="GetAffiliateHierarchyRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b0b91497-f5dd-477c-a3ef-7b23459b6bc5" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetAffiliateHierarchyRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:affiliateId>?</mes:affiliateId>
      </mes:GetAffiliateHierarchyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetAffiliateHierarchyRequest"/></con:call></con:operation><con:operation id="0e706fbb-33ab-47aa-9c9b-64987510b41e" isOneWay="false" action="" name="GetAffiliateList" bindingOperationName="GetAffiliateList" type="Request-Response" outputName="GetAffiliateListResponse" inputName="GetAffiliateListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="db8a2b83-7d5d-4641-9081-a6c0c882892e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetAffiliateListRequest>
         <!--You may enter the following 8 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:name>?</mes:name>
         <!--Optional:-->
         <mes:externalAffiliateId>?</mes:externalAffiliateId>
         <!--Optional:-->
         <mes:affiliateType>?</mes:affiliateType>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>
               <typ:order value="?" isAscending="true"/>
            </typ:orderBy>
         </mes:orderBy>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:GetAffiliateListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetAffiliateListRequest"/></con:call></con:operation><con:operation id="2b860956-f677-46ce-ae7a-2281979d7108" isOneWay="false" action="" name="GetAffiliateScheduleList" bindingOperationName="GetAffiliateScheduleList" type="Request-Response" outputName="GetAffiliateScheduleListResponse" inputName="GetAffiliateScheduleListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="92ae7480-7ff6-4517-a73b-42a6adfcb41e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetAffiliateScheduleListRequest>
         <!--You may enter the following 12 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:affiliateId>?</mes:affiliateId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:startDate>
            <typ:date format="?" value="?"/>
         </mes:startDate>
         <mes:endDate>
            <typ:date format="?" value="?"/>
         </mes:endDate>
         <!--Optional:-->
         <mes:order>?</mes:order>
         <mes:ascending>true</mes:ascending>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:pageNumber>?</mes:pageNumber>
         <!--Optional:-->
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
         <mes:transactionClass>?</mes:transactionClass>
      </mes:GetAffiliateScheduleListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetAffiliateScheduleListRequest"/></con:call></con:operation><con:operation id="c1da0e23-8117-45b4-800f-59e474da9dfc" isOneWay="false" action="" name="GetAffiliateTransactionList" bindingOperationName="GetAffiliateTransactionList" type="Request-Response" outputName="GetAffiliateTransactionListResponse" inputName="GetAffiliateTransactionListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ecae2655-3031-451c-b92c-3366a672edd1" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetAffiliateTransactionListRequest>
         <!--You may enter the following 12 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:affiliateId>?</mes:affiliateId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:type>?</mes:type>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:modifiedFromDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedFromDate>
         <!--Optional:-->
         <mes:modifiedToDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedToDate>
         <!--Optional:-->
         <mes:fromDate>
            <typ:date format="?" value="?"/>
         </mes:fromDate>
         <!--Optional:-->
         <mes:toDate>
            <typ:date format="?" value="?"/>
         </mes:toDate>
         <!--Optional:-->
         <mes:pageNo>?</mes:pageNo>
         <!--Optional:-->
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:GetAffiliateTransactionListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetAffiliateTransactionListRequest"/></con:call></con:operation><con:operation id="88e22821-86ad-4db2-b997-817984dfdcce" isOneWay="false" action="" name="GetAffiliateUserList" bindingOperationName="GetAffiliateUserList" type="Request-Response" outputName="GetAffiliateUserListResponse" inputName="GetAffiliateUserListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3d8e533e-52e5-4665-a8a9-59f72d02db16" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetAffiliateUserListRequest>
         <!--You may enter the following 6 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:affiliateId>?</mes:affiliateId>
         <mes:affiliateType>?</mes:affiliateType>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>
               <typ:order value="?" isAscending="true"/>
            </typ:orderBy>
         </mes:orderBy>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:GetAffiliateUserListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetAffiliateUserListRequest"/></con:call></con:operation><con:operation id="77de534c-70d4-4f88-b89a-4bb238838c8b" isOneWay="false" action="" name="GetAllOverriddenSubscriberFee" bindingOperationName="GetAllOverriddenSubscriberFee" type="Request-Response" outputName="GetAllOverriddenSubscriberFeeResponse" inputName="GetAllOverriddenSubscriberFeeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f0cc7839-a6f8-4c4b-bbbd-f46ddc43dcef" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetAllOverriddenSubscriberFeeRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:affiliateId>?</mes:affiliateId>
      </mes:GetAllOverriddenSubscriberFeeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetAllOverriddenSubscriberFeeRequest"/></con:call></con:operation><con:operation id="e081ad26-84f6-43cc-9161-6d1891ba819c" isOneWay="false" action="" name="GetApprovalsById" bindingOperationName="GetApprovalsById" type="Request-Response" outputName="GetApprovalsByIdResponse" inputName="GetApprovalsByIdRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1f5f81e9-2c0a-4f8a-adac-f74a92d3dd4f" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetApprovalsByIdRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:approvalId>?</mes:approvalId>
         <mes:subscriberId>?</mes:subscriberId>
      </mes:GetApprovalsByIdRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetApprovalsByIdRequest"/></con:call></con:operation><con:operation id="5bf7da21-d149-4e1a-824c-d3e4d040c6a7" isOneWay="false" action="" name="GetAutoEnrollmentDetailFromStoneEagle" bindingOperationName="GetAutoEnrollmentDetailFromStoneEagle" type="Request-Response" outputName="GetAutoEnrollmentDetailFromStoneEagleResponse" inputName="GetAutoEnrollmentDetailFromStoneEagleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="99cd4fb4-2495-48d7-a5df-4192fb9dbcf1" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetAutoEnrollmentDetailFromStoneEagleRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:affiliateId>?</mes:affiliateId>
         <mes:dealNumber>?</mes:dealNumber>
      </mes:GetAutoEnrollmentDetailFromStoneEagleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetAutoEnrollmentDetailFromStoneEagleRequest"/></con:call></con:operation><con:operation id="aac658bc-20d5-4ec0-9077-5711f7f45e80" isOneWay="false" action="" name="GetBankList" bindingOperationName="GetBankList" type="Request-Response" outputName="GetBankListResponse" inputName="GetBankListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4f5c2ebe-ccb9-4ba7-835b-4fd3f5b864e9" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetBankListRequest>
         <!--You may enter the following 6 items in any order-->
         <!--Optional:-->
         <mes:bankName>?</mes:bankName>
         <!--Optional:-->
         <mes:routing_number>?</mes:routing_number>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
         <!--Optional:-->
         <mes:order>
            <mes:orderBy>?</mes:orderBy>
         </mes:order>
         <mes:ascending>true</mes:ascending>
      </mes:GetBankListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetBankListRequest"/></con:call></con:operation><con:operation id="e4ab7a2b-2986-4906-be19-d10de62a9943" isOneWay="false" action="" name="GetCancelReasonCodes" bindingOperationName="GetCancelReasonCodes" type="Request-Response" outputName="GetCancelReasonCodesResponse" inputName="GetCancelReasonCodesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6ee1e44a-2524-4f31-b312-f191af8184a7" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetCancelReasonCodesRequest>
         <mes:subscriberId>?</mes:subscriberId>
      </mes:GetCancelReasonCodesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetCancelReasonCodesRequest"/></con:call></con:operation><con:operation id="977236f4-e243-4d1f-9dd1-08dbc9ee3ed2" isOneWay="false" action="" name="GetCaptureDraft" bindingOperationName="GetCaptureDraft" type="Request-Response" outputName="GetCaptureDraftResponse" inputName="GetCaptureDraftRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dd5905ca-e260-46b3-9975-fc3cfccce797" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetCaptureDraftRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
      </mes:GetCaptureDraftRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetCaptureDraftRequest"/></con:call></con:operation><con:operation id="e86f197c-b9ca-4770-97b5-90b7e203f64a" isOneWay="false" action="" name="GetCheckImage" bindingOperationName="GetCheckImage" type="Request-Response" outputName="GetCheckImageResponse" inputName="GetCheckImageRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="67e369dd-9055-4cf7-9dd9-0042935bd3ae" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetCheckImageRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:scheduleId>?</mes:scheduleId>
         <!--Optional:-->
         <mes:transactionId>?</mes:transactionId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
      </mes:GetCheckImageRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetCheckImageRequest"/></con:call></con:operation><con:operation id="3951bf25-877e-4eee-ada8-cf7c94054e6c" isOneWay="false" action="" name="GetCheckNumber" bindingOperationName="GetCheckNumber" type="Request-Response" outputName="GetCheckNumberResponse" inputName="GetCheckNumberRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="03ec805a-e80e-4af1-add7-6346de1f1b05" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetCheckNumberRequest>
         <mes:subscriberId>?</mes:subscriberId>
      </mes:GetCheckNumberRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetCheckNumberRequest"/></con:call></con:operation><con:operation id="d5e4e6d4-22f6-4fbe-8f79-67e2d22b3310" isOneWay="false" action="" name="GetChildAffiliateList" bindingOperationName="GetChildAffiliateList" type="Request-Response" outputName="GetChildAffiliateListResponse" inputName="GetChildAffiliateListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5451ba39-cfe3-44f9-841c-ddc749e233db" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetChildAffiliateListRequest>
         <!--You may enter the following 9 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:name>?</mes:name>
         <!--Optional:-->
         <mes:parentId>?</mes:parentId>
         <!--Optional:-->
         <mes:parentExternalAffiliateId>?</mes:parentExternalAffiliateId>
         <!--Optional:-->
         <mes:affiliateType>?</mes:affiliateType>
         <!--Optional:-->
         <mes:status>
            <!--Zero or more repetitions:-->
            <typ:status>?</typ:status>
         </mes:status>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>
               <typ:order value="?" isAscending="true"/>
            </typ:orderBy>
         </mes:orderBy>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:GetChildAffiliateListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetChildAffiliateListRequest"/></con:call></con:operation><con:operation id="bb3ac135-3e9e-414d-a30a-788a174f4330" isOneWay="false" action="" name="GetClient" bindingOperationName="GetClient" type="Request-Response" outputName="GetClientResponse" inputName="GetClientRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c6abe1f9-9cfd-4619-9374-41069e10f9c5" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetClientRequest>
         <!--You may enter the following 5 items in any order-->
         <!--Optional:-->
         <mes:status>?</mes:status>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:returnSPAAImage>false</mes:returnSPAAImage>
      </mes:GetClientRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientRequest"/></con:call></con:operation><con:operation id="d213396d-8b9b-48dd-92bb-3d7851a77f69" isOneWay="false" action="" name="GetClientBalances" bindingOperationName="GetClientBalances" type="Request-Response" outputName="GetClientBalancesResponse" inputName="GetClientBalancesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="88b35aaf-ab86-4c02-bbc0-b4f00c5b0f1e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetClientBalancesRequest>
         <mes:subscriberId>?</mes:subscriberId>
      </mes:GetClientBalancesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientBalancesRequest"/></con:call></con:operation><con:operation id="ae0ff87b-c6ac-4229-951e-c09380268033" isOneWay="false" action="" name="GetClientBankAccount" bindingOperationName="GetClientBankAccount" type="Request-Response" outputName="GetClientBankAccountResponse" inputName="GetClientBankAccountRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8d9b2c9e-11bb-4e82-804a-aab6566d0e7f" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetClientBankAccountRequest>
         <!--You may enter the following 4 items in any order-->
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:clientBankAccountId>?</mes:clientBankAccountId>
         <mes:subscriberId>?</mes:subscriberId>
      </mes:GetClientBankAccountRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientBankAccountRequest"/></con:call></con:operation><con:operation id="b7e38a38-3dd1-44e5-871d-86cdb54bbbaa" isOneWay="false" action="" name="GetClientBankAccountList" bindingOperationName="GetClientBankAccountList" type="Request-Response" outputName="GetClientBankAccountListResponse" inputName="GetClientBankAccountListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a1a6138a-a10b-4fe0-a944-0ce9bbebe352" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetClientBankAccountListRequest>
         <!--You may enter the following 9 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:createdFrom>
            <typ:date format="?" value="?"/>
         </mes:createdFrom>
         <!--Optional:-->
         <mes:createdTo>
            <typ:date format="?" value="?"/>
         </mes:createdTo>
         <!--Optional:-->
         <mes:modifiedFrom>
            <typ:date format="?" value="?"/>
         </mes:modifiedFrom>
         <!--Optional:-->
         <mes:modifiedTo>
            <typ:date format="?" value="?"/>
         </mes:modifiedTo>
         <!--Optional:-->
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
         <!--Optional:-->
         <mes:pageNumber>?</mes:pageNumber>
      </mes:GetClientBankAccountListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientBankAccountListRequest"/></con:call></con:operation><con:operation id="3796a0c7-4d2e-407b-be62-215e2f5d7074" isOneWay="false" action="" name="GetClientIds" bindingOperationName="GetClientIds" type="Request-Response" outputName="GetClientIdsResponse" inputName="GetClientIdsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1a064b5c-4d08-4de4-bade-112264f68e30" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetClientIdsRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:noOfIds>?</mes:noOfIds>
      </mes:GetClientIdsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientIdsRequest"/></con:call></con:operation><con:operation id="7b4ca1ff-ac40-404d-a14d-47e1efe06626" isOneWay="false" action="" name="GetClientRTPSettlement" bindingOperationName="GetClientRTPSettlement" type="Request-Response" outputName="GetClientRTPSettlementResponse" inputName="GetClientRTPSettlementRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="df6e7b54-51ea-4199-ab66-b55818d1dca8" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetClientRTPSettlementRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:settlementId>?</mes:settlementId>
      </mes:GetClientRTPSettlementRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientRTPSettlementRequest"/></con:call></con:operation><con:operation id="42460710-46f9-455b-9c54-c734cb4c518c" isOneWay="false" action="" name="GetClients" bindingOperationName="GetClients" type="Request-Response" outputName="GetClientsResponse" inputName="GetClientsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3efc6232-21a3-45d7-9ef3-85d3b838335e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetClientsRequest>
         <!--You may enter the following 31 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:firstname>?</mes:firstname>
         <!--Optional:-->
         <mes:middleInitial>?</mes:middleInitial>
         <!--Optional:-->
         <mes:lastname>?</mes:lastname>
         <!--Optional:-->
         <mes:ssn>?</mes:ssn>
         <!--Optional:-->
         <mes:email>?</mes:email>
         <!--Optional:-->
         <mes:keyWord>?</mes:keyWord>
         <!--Optional:-->
         <mes:statuses>
            <!--Zero or more repetitions:-->
            <mes:status>?</mes:status>
         </mes:statuses>
         <!--Optional:-->
         <mes:spaStatuses>
            <!--Zero or more repetitions:-->
            <mes:status>?</mes:status>
         </mes:spaStatuses>
         <!--Optional:-->
         <mes:fromDate>
            <typ:date format="?" value="?"/>
         </mes:fromDate>
         <!--Optional:-->
         <mes:toDate>
            <typ:date format="?" value="?"/>
         </mes:toDate>
         <!--Optional:-->
         <mes:enrollmentFromDate>
            <typ:date format="?" value="?"/>
         </mes:enrollmentFromDate>
         <!--Optional:-->
         <mes:enrollmentToDate>
            <typ:date format="?" value="?"/>
         </mes:enrollmentToDate>
         <!--Optional:-->
         <mes:phoneNumber>?</mes:phoneNumber>
         <!--Optional:-->
         <mes:addressLine1>?</mes:addressLine1>
         <!--Optional:-->
         <mes:addressLine2>?</mes:addressLine2>
         <!--Optional:-->
         <mes:city>?</mes:city>
         <!--Optional:-->
         <mes:state>?</mes:state>
         <!--Optional:-->
         <mes:zip>?</mes:zip>
         <!--Optional:-->
         <mes:loanNumber>?</mes:loanNumber>
         <!--Optional:-->
         <mes:lenderName>?</mes:lenderName>
         <!--Optional:-->
         <mes:VIN>?</mes:VIN>
         <!--Optional:-->
         <mes:routingNumber>?</mes:routingNumber>
         <!--Optional:-->
         <mes:accountNumber>?</mes:accountNumber>
         <!--Optional:-->
         <mes:order>
            <!--Zero or more repetitions:-->
            <mes:orderBy>?</mes:orderBy>
         </mes:order>
         <mes:ascending>true</mes:ascending>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
         <!--Optional:-->
         <mes:skipDeleted>true</mes:skipDeleted>
      </mes:GetClientsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsRequest"/></con:call></con:operation><con:operation id="f7bc5529-5af4-45b1-bef6-04a44148c53f" isOneWay="false" action="" name="GetClientsEnhanced" bindingOperationName="GetClientsEnhanced" type="Request-Response" outputName="GetClientsEnhancedResponse" inputName="GetClientsEnhancedRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e0615657-0081-4391-85e5-b4d4751e3751" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetClientsEnhancedRequest>
         <!--You may enter the following 35 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:firstname>?</mes:firstname>
         <!--Optional:-->
         <mes:middleInitial>?</mes:middleInitial>
         <!--Optional:-->
         <mes:lastname>?</mes:lastname>
         <!--Optional:-->
         <mes:ssn>?</mes:ssn>
         <!--Optional:-->
         <mes:email>?</mes:email>
         <!--Optional:-->
         <mes:keyWord>?</mes:keyWord>
         <!--Optional:-->
         <mes:statuses>
            <!--Zero or more repetitions:-->
            <mes:status>?</mes:status>
         </mes:statuses>
         <!--Optional:-->
         <mes:spaStatuses>
            <!--Zero or more repetitions:-->
            <mes:status>?</mes:status>
         </mes:spaStatuses>
         <!--Optional:-->
         <mes:cipStatuses>
            <!--Zero or more repetitions:-->
            <mes:status>?</mes:status>
         </mes:cipStatuses>
         <!--Optional:-->
         <mes:ofacStatuses>
            <!--Zero or more repetitions:-->
            <mes:status>?</mes:status>
         </mes:ofacStatuses>
         <!--Optional:-->
         <mes:fromDate>
            <typ:date format="?" value="?"/>
         </mes:fromDate>
         <!--Optional:-->
         <mes:toDate>
            <typ:date format="?" value="?"/>
         </mes:toDate>
         <!--Optional:-->
         <mes:enrollmentFromDate>
            <typ:date format="?" value="?"/>
         </mes:enrollmentFromDate>
         <!--Optional:-->
         <mes:enrollmentToDate>
            <typ:date format="?" value="?"/>
         </mes:enrollmentToDate>
         <!--Optional:-->
         <mes:phoneNumber>?</mes:phoneNumber>
         <!--Optional:-->
         <mes:addressLine1>?</mes:addressLine1>
         <!--Optional:-->
         <mes:addressLine2>?</mes:addressLine2>
         <!--Optional:-->
         <mes:city>?</mes:city>
         <!--Optional:-->
         <mes:state>?</mes:state>
         <!--Optional:-->
         <mes:zip>?</mes:zip>
         <!--Optional:-->
         <mes:loanNumber>?</mes:loanNumber>
         <!--Optional:-->
         <mes:lenderName>?</mes:lenderName>
         <!--Optional:-->
         <mes:VIN>?</mes:VIN>
         <!--Optional:-->
         <mes:routingNumber>?</mes:routingNumber>
         <!--Optional:-->
         <mes:accountNumber>?</mes:accountNumber>
         <!--Optional:-->
         <mes:order>
            <!--Zero or more repetitions:-->
            <mes:orderBy>?</mes:orderBy>
         </mes:order>
         <mes:ascending>true</mes:ascending>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
         <!--Optional:-->
         <mes:skipDeleted>true</mes:skipDeleted>
         <!--Optional:-->
         <mes:searchBy>?</mes:searchBy>
         <!--Optional:-->
         <mes:bankPartnerName>?</mes:bankPartnerName>
      </mes:GetClientsEnhancedRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/></con:call></con:operation><con:operation id="aaf72dcc-6192-4d2a-8adf-7724879af2f2" isOneWay="false" action="" name="GetClientSettlement" bindingOperationName="GetClientSettlement" type="Request-Response" outputName="GetClientSettlementResponse" inputName="GetClientSettlementRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="964af761-0598-440c-836b-b808cf6d3a07" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetClientSettlementRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:settlementId>?</mes:settlementId>
      </mes:GetClientSettlementRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientSettlementRequest"/></con:call></con:operation><con:operation id="9c3d0958-818d-4a01-a3f5-69f33b192f30" isOneWay="false" action="" name="GetClientSettlementList" bindingOperationName="GetClientSettlementList" type="Request-Response" outputName="GetClientSettlementListResponse" inputName="GetClientSettlementListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7319f45d-abab-4803-817b-8c435e581580" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetClientSettlementListRequest>
         <!--You may enter the following 10 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:approvalStatus>?</mes:approvalStatus>
         <mes:fromDate>
            <typ:date format="?" value="?"/>
         </mes:fromDate>
         <mes:toDate>
            <typ:date format="?" value="?"/>
         </mes:toDate>
         <mes:pageNumber>?</mes:pageNumber>
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>
               <typ:order value="?" isAscending="true"/>
            </typ:orderBy>
         </mes:orderBy>
      </mes:GetClientSettlementListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientSettlementListRequest"/></con:call></con:operation><con:operation id="f501b9c6-6922-435c-ba7f-1ff26e4eb702" isOneWay="false" action="" name="GetClientStatus" bindingOperationName="GetClientStatus" type="Request-Response" outputName="GetClientStatusResponse" inputName="GetClientStatusRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ed043623-9b43-410b-8ae1-e1faaa90ea82" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetClientStatusRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
      </mes:GetClientStatusRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientStatusRequest"/></con:call></con:operation><con:operation id="58a467f2-571b-41df-a8ca-30c6ca3658f5" isOneWay="false" action="" name="GetCoClients" bindingOperationName="GetCoClients" type="Request-Response" outputName="GetCoClientsResponse" inputName="GetCoClientsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1735fb12-bacd-42c3-bb71-4c7c7bd1506e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetCoClientsRequest>
         <!--You may enter the following 14 items in any order-->
         <!--Optional:-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:id>?</mes:id>
         <!--Optional:-->
         <mes:firstname>?</mes:firstname>
         <!--Optional:-->
         <mes:middleInitial>?</mes:middleInitial>
         <!--Optional:-->
         <mes:lastname>?</mes:lastname>
         <!--Optional:-->
         <mes:ssn>?</mes:ssn>
         <!--Optional:-->
         <mes:email>?</mes:email>
         <!--Optional:-->
         <mes:coSignatory>?</mes:coSignatory>
         <!--Optional:-->
         <mes:phoneNumber>?</mes:phoneNumber>
         <mes:ascending>true</mes:ascending>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:GetCoClientsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetCoClientsRequest"/></con:call></con:operation><con:operation id="9ff030fd-3442-438b-b95f-2a2e99f2aa7f" isOneWay="false" action="" name="GetDelayDraftChangedDates" bindingOperationName="GetDelayDraftChangedDates" type="Request-Response" outputName="GetDelayDraftChangedDatesResponse" inputName="GetDelayDraftChangedDatesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3c5ec921-4564-48c3-bcf5-f8e168f7c412" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetDelayDraftChangedDatesRequest>
         <mes:subscriberId>?</mes:subscriberId>
         <mes:scheduleId>?</mes:scheduleId>
         <mes:currentDraftDate>
            <typ:date format="?" value="?"/>
         </mes:currentDraftDate>
      </mes:GetDelayDraftChangedDatesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDelayDraftChangedDatesRequest"/></con:call></con:operation><con:operation id="8d51cd00-4529-415e-8ffa-1ca4e358fa6d" isOneWay="false" action="" name="GetDocumentById" bindingOperationName="GetDocumentById" type="Request-Response" outputName="GetDocumentByIdResponse" inputName="GetDocumentByIdRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2334434b-1973-424e-ba16-4ffc0b839835" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetDocumentByIdRequest>
         <mes:documentId>?</mes:documentId>
      </mes:GetDocumentByIdRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDocumentByIdRequest"/></con:call></con:operation><con:operation id="6795437f-05d1-46ca-a825-6a9e93c5659d" isOneWay="false" action="" name="GetDraftErrorList" bindingOperationName="GetDraftErrorList" type="Request-Response" outputName="GetDraftErrorListResponse" inputName="GetDraftErrorListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6d7cf738-42b3-43a0-9ccf-d06a39d894d0" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetDraftErrorListRequest>
         <!--You may enter the following 6 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:transactionType>?</mes:transactionType>
         <mes:fromDate>
            <typ:date format="?" value="?"/>
         </mes:fromDate>
         <mes:toDate>
            <typ:date format="?" value="?"/>
         </mes:toDate>
         <!--Optional:-->
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
         <!--Optional:-->
         <mes:pageNumber>?</mes:pageNumber>
      </mes:GetDraftErrorListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftErrorListRequest"/></con:call></con:operation><con:operation id="5ce64bb6-10df-47c3-8816-555b7ada4367" isOneWay="false" action="" name="GetDraftSchedule" bindingOperationName="GetDraftSchedule" type="Request-Response" outputName="GetDraftScheduleResponse" inputName="GetDraftScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="483ced54-90e5-4b87-a1dc-f6047a79e093" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetDraftScheduleRequest>
         <!--You may enter the following 5 items in any order-->
         <!--Optional:-->
         <mes:scheduleId>?</mes:scheduleId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
      </mes:GetDraftScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/></con:call></con:operation><con:operation id="93443ba7-7ea3-4737-be15-a719e7b877b9" isOneWay="false" action="" name="GetDraftScheduleList" bindingOperationName="GetDraftScheduleList" type="Request-Response" outputName="GetDraftScheduleListResponse" inputName="GetDraftScheduleListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="de8e4362-4a6d-4271-922d-8383dfa2694a" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetDraftScheduleListRequest>
         <!--You may enter the following 14 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:scheduleIds>
            <!--Zero or more repetitions:-->
            <mes:scheduleId>?</mes:scheduleId>
         </mes:scheduleIds>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:startDate>
            <typ:date format="?" value="?"/>
         </mes:startDate>
         <!--Optional:-->
         <mes:endDate>
            <typ:date format="?" value="?"/>
         </mes:endDate>
         <!--Optional:-->
         <mes:modifiedFromDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedFromDate>
         <!--Optional:-->
         <mes:modifiedToDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedToDate>
         <!--Optional:-->
         <mes:order>?</mes:order>
         <mes:ascending>true</mes:ascending>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:pageNumber>?</mes:pageNumber>
         <!--Optional:-->
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
      </mes:GetDraftScheduleListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleListRequest"/></con:call></con:operation><con:operation id="22acbccf-ebf9-4050-bad7-ff96c46978f7" isOneWay="false" action="" name="GetDraftScheduleListWithNextDate" bindingOperationName="GetDraftScheduleListWithNextDate" type="Request-Response" outputName="GetDraftScheduleListWithNextDateResponse" inputName="GetDraftScheduleListWithNextDateRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ae37109d-f7d6-459a-b817-2dab3e9ca64d" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetDraftScheduleListWithNextDateRequest>
         <!--You may enter the following 14 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:scheduleIds>
            <!--Zero or more repetitions:-->
            <mes:scheduleId>?</mes:scheduleId>
         </mes:scheduleIds>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:startDate>
            <typ:date format="?" value="?"/>
         </mes:startDate>
         <!--Optional:-->
         <mes:endDate>
            <typ:date format="?" value="?"/>
         </mes:endDate>
         <!--Optional:-->
         <mes:modifiedFromDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedFromDate>
         <!--Optional:-->
         <mes:modifiedToDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedToDate>
         <!--Optional:-->
         <mes:order>?</mes:order>
         <mes:ascending>true</mes:ascending>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:pageNumber>?</mes:pageNumber>
         <!--Optional:-->
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
      </mes:GetDraftScheduleListWithNextDateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleListWithNextDateRequest"/></con:call></con:operation><con:operation id="7b05b3c2-8325-4275-805d-8c673f74dea0" isOneWay="false" action="" name="GetDraftScheduleModifiableDates" bindingOperationName="GetDraftScheduleModifiableDates" type="Request-Response" outputName="GetDraftScheduleModifiableDatesResponse" inputName="GetDraftScheduleModifiableDatesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="868a7b3a-99d8-4465-8ad3-364f859e2e2d" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetDraftScheduleModifiableDatesRequest>
         <mes:subscriberId>?</mes:subscriberId>
         <mes:scheduleId>?</mes:scheduleId>
      </mes:GetDraftScheduleModifiableDatesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleModifiableDatesRequest"/></con:call></con:operation><con:operation id="6610eed5-7dae-4011-9bbe-5aab4ca60c71" isOneWay="false" action="" name="GetEnrollmentAffiliateList" bindingOperationName="GetEnrollmentAffiliateList" type="Request-Response" outputName="GetEnrollmentAffiliateListResponse" inputName="GetEnrollmentAffiliateListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9dc4e419-ed3c-4a55-899d-635683ae0a35" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetEnrollmentAffiliateListRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:enrollmentId>?</mes:enrollmentId>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>
               <typ:order value="?" isAscending="true"/>
            </typ:orderBy>
         </mes:orderBy>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:GetEnrollmentAffiliateListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetEnrollmentAffiliateListRequest"/></con:call></con:operation><con:operation id="cf80e661-610b-4cd8-bb78-93ae2b5b02f1" isOneWay="false" action="" name="GetEnrollmentCaptureAddress" bindingOperationName="GetEnrollmentCaptureAddress" type="Request-Response" outputName="GetEnrollmentCaptureAddressResponse" inputName="GetEnrollmentCaptureAddressRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="56ead817-9e0a-4808-9305-1e6156e3f787" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetEnrollmentCaptureAddressRequest>
         <!--You may enter the following 3 items in any order-->
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
      </mes:GetEnrollmentCaptureAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetEnrollmentCaptureAddressRequest"/></con:call></con:operation><con:operation id="b0a000a6-5eb5-4875-ad52-9a7cb0333ed6" isOneWay="false" action="" name="GetEnrollmentChannelAttributeValuesList" bindingOperationName="GetEnrollmentChannelAttributeValuesList" type="Request-Response" outputName="GetEnrollmentChannelAttributeValuesListResponse" inputName="GetEnrollmentChannelAttributeValuesListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3f039d3d-99a7-44e8-9532-fd47945b57be" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetEnrollmentChannelAttributeValuesListRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:enrollmentId>?</mes:enrollmentId>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>
               <typ:order value="?" isAscending="true"/>
            </typ:orderBy>
         </mes:orderBy>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:GetEnrollmentChannelAttributeValuesListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetEnrollmentChannelAttributeValuesListRequest"/></con:call></con:operation><con:operation id="80d16387-82aa-4a57-8e3a-30cdd97f383b" isOneWay="false" action="" name="GetEnrollmentCommentList" bindingOperationName="GetEnrollmentCommentList" type="Request-Response" outputName="GetEnrollmentCommentListResponse" inputName="GetEnrollmentCommentListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e1b0c447-58e1-4538-b8ee-d2695ca53c9c" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetEnrollmentCommentListRequest>
         <!--You may enter the following 11 items in any order-->
         <!--Optional:-->
         <mes:commentId>?</mes:commentId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:enrollmentId>?</mes:enrollmentId>
         <!--Optional:-->
         <mes:scheduleId>?</mes:scheduleId>
         <!--Optional:-->
         <mes:modifiedFromDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedFromDate>
         <!--Optional:-->
         <mes:modifiedToDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedToDate>
         <!--Optional:-->
         <mes:keyword>?</mes:keyword>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
         <!--Optional:-->
         <mes:order>
            <mes:orderBy>?</mes:orderBy>
         </mes:order>
         <mes:ascending>true</mes:ascending>
      </mes:GetEnrollmentCommentListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetEnrollmentCommentListRequest"/></con:call></con:operation><con:operation id="2b1116bf-c504-499f-aa02-f172bbb09973" isOneWay="false" action="" name="GetEnrollmentCount" bindingOperationName="GetEnrollmentCount" type="Request-Response" outputName="GetEnrollmentCountResponse" inputName="GetEnrollmentCountRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b4f60a8a-d74f-41ca-b4ca-23f776442991" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetEnrollmentCountRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:startDate>
            <typ:date format="?" value="?"/>
         </mes:startDate>
         <mes:endDate>
            <typ:date format="?" value="?"/>
         </mes:endDate>
         <!--Optional:-->
         <mes:statuses>
            <!--Zero or more repetitions:-->
            <mes:status>?</mes:status>
         </mes:statuses>
      </mes:GetEnrollmentCountRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetEnrollmentCountRequest"/></con:call></con:operation><con:operation id="0f2c20e3-9111-4216-8799-63a44163b4ba" isOneWay="false" action="" name="GetEnrollmentDocument" bindingOperationName="GetEnrollmentDocument" type="Request-Response" outputName="GetEnrollmentDocumentResponse" inputName="GetEnrollmentDocumentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c9cb2a65-1694-4c9c-a441-b7b3c36d2e73" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetEnrollmentDocumentRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:documentId>?</mes:documentId>
      </mes:GetEnrollmentDocumentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetEnrollmentDocumentRequest"/></con:call></con:operation><con:operation id="0c1eff2c-2b86-447b-a54e-a277fb972917" isOneWay="false" action="" name="GetEnrollmentDocumentList" bindingOperationName="GetEnrollmentDocumentList" type="Request-Response" outputName="GetEnrollmentDocumentListResponse" inputName="GetEnrollmentDocumentListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d105caf3-a7a4-499f-a9d0-d5e48663c138" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetEnrollmentDocumentListRequest>
         <!--You may enter the following 7 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:pageNo>?</mes:pageNo>
         <!--Optional:-->
         <mes:resultsPerPage>?</mes:resultsPerPage>
         <!--Optional:-->
         <mes:order>
            <mes:orderBy>?</mes:orderBy>
         </mes:order>
         <mes:ascending>true</mes:ascending>
      </mes:GetEnrollmentDocumentListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetEnrollmentDocumentListRequest"/></con:call></con:operation><con:operation id="7eae91ff-4d0c-4787-bba1-98c03e34d4ee" isOneWay="false" action="" name="GetEnrollmentErrorList" bindingOperationName="GetEnrollmentErrorList" type="Request-Response" outputName="GetEnrollmentErrorListResponse" inputName="GetEnrollmentErrorListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f2e4dddc-1f7d-4d36-877f-d6c36e6e3751" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetEnrollmentErrorListRequest>
         <!--You may enter the following 12 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:reason>?</mes:reason>
         <mes:fromDate>
            <typ:date format="?" value="?"/>
         </mes:fromDate>
         <mes:toDate>
            <typ:date format="?" value="?"/>
         </mes:toDate>
         <!--Optional:-->
         <mes:enrollmentStatus>INACTIVE</mes:enrollmentStatus>
         <!--Optional:-->
         <mes:order>
            <mes:orderBy>?</mes:orderBy>
         </mes:order>
         <mes:ascending>true</mes:ascending>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:GetEnrollmentErrorListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetEnrollmentErrorListRequest"/></con:call></con:operation><con:operation id="740ae4f9-a6ba-4202-a366-9bdb3ab3278f" isOneWay="false" action="" name="GetEnrollmentExceptionsList" bindingOperationName="GetEnrollmentExceptionsList" type="Request-Response" outputName="GetEnrollmentExceptionsListResponse" inputName="GetEnrollmentExceptionsListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0080cc2e-2554-4d28-b209-89abef328909" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetEnrollmentExceptionsListRequest>
         <!--You may enter the following 13 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:firstname>?</mes:firstname>
         <!--Optional:-->
         <mes:lastname>?</mes:lastname>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:transactionClass>?</mes:transactionClass>
         <!--Optional:-->
         <mes:code>?</mes:code>
         <!--Optional:-->
         <mes:fromDate>
            <typ:date format="?" value="?"/>
         </mes:fromDate>
         <!--Optional:-->
         <mes:toDate>
            <typ:date format="?" value="?"/>
         </mes:toDate>
         <!--Optional:-->
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
         <!--Optional:-->
         <mes:pageNumber>?</mes:pageNumber>
         <!--Optional:-->
         <mes:orderBy>?</mes:orderBy>
         <mes:ascending>true</mes:ascending>
      </mes:GetEnrollmentExceptionsListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetEnrollmentExceptionsListRequest"/></con:call></con:operation><con:operation id="5fd6403f-df9a-4727-97ae-2290540f3e52" isOneWay="false" action="" name="GetEnrollmentPayee" bindingOperationName="GetEnrollmentPayee" type="Request-Response" outputName="GetEnrollmentPayeeResponse" inputName="GetEnrollmentPayeeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5bd85618-f743-4d12-80e1-070814ffb11d" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetEnrollmentPayeeRequest>
         <mes:subscriberId>?</mes:subscriberId>
         <mes:enrollmentId>?</mes:enrollmentId>
      </mes:GetEnrollmentPayeeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetEnrollmentPayeeRequest"/></con:call></con:operation><con:operation id="22e1d05c-1cd2-436f-baab-c82b0863595f" isOneWay="false" action="" name="GetEnrollmentTicket" bindingOperationName="GetEnrollmentTicket" type="Request-Response" outputName="GetEnrollmentTicketResponse" inputName="GetEnrollmentTicketRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="553c10f6-6566-454f-9985-dde6a794d9a1" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetEnrollmentTicketRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:enrollmentTicketId>?</mes:enrollmentTicketId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:subscriberId>?</mes:subscriberId>
      </mes:GetEnrollmentTicketRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetEnrollmentTicketRequest"/></con:call></con:operation><con:operation id="60649d3f-386f-4765-8dfd-505d6503feb2" isOneWay="false" action="" name="GetEnrollmentTicketList" bindingOperationName="GetEnrollmentTicketList" type="Request-Response" outputName="GetEnrollmentTicketListResponse" inputName="GetEnrollmentTicketListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bcf7828b-4b92-47cd-80f3-6da9ca7a07be" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetEnrollmentTicketListRequest>
         <!--You may enter the following 9 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:asigneeId>?</mes:asigneeId>
         <!--Optional:-->
         <mes:ticketStatus>?</mes:ticketStatus>
         <!--Optional:-->
         <mes:pageNo>?</mes:pageNo>
         <!--Optional:-->
         <mes:resultsPerPage>?</mes:resultsPerPage>
         <!--Optional:-->
         <mes:order>
            <mes:orderBy>?</mes:orderBy>
         </mes:order>
         <mes:ascending>true</mes:ascending>
      </mes:GetEnrollmentTicketListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetEnrollmentTicketListRequest"/></con:call></con:operation><con:operation id="305ab61f-de9b-44ef-95ad-74cd799d5a0b" isOneWay="false" action="" name="GetEnvironment" bindingOperationName="GetEnvironment" type="Request-Response" outputName="GetEnvironmentResponse" inputName="GetEnvironmentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="863022fb-96eb-4333-9cfd-bd9e78a972ed" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetEnvironmentRequest>
         <mes:instanceName>?</mes:instanceName>
      </mes:GetEnvironmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetEnvironmentRequest"/></con:call></con:operation><con:operation id="eea73d88-7fb6-47f3-ba30-1654d303a91e" isOneWay="false" action="" name="GetExternalPayeeListByName" bindingOperationName="GetExternalPayeeListByName" type="Request-Response" outputName="GetExternalPayeeListByNameResponse" inputName="GetExternalPayeeListByNameRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b90fa00a-889b-43d2-b1e2-b42f0de09bee" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetExternalPayeeListByNameRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:searchName>?</mes:searchName>
         <!--Optional:-->
         <mes:searchCity>?</mes:searchCity>
         <!--Optional:-->
         <mes:searchState>?</mes:searchState>
         <!--Optional:-->
         <mes:searchAddress2>?</mes:searchAddress2>
      </mes:GetExternalPayeeListByNameRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetExternalPayeeListByNameRequest"/></con:call></con:operation><con:operation id="62e5b508-4e0c-4c9d-95bb-0c1239db1879" isOneWay="false" action="" name="GetFeeBasis" bindingOperationName="GetFeeBasis" type="Request-Response" outputName="GetFeeBasisResponse" inputName="GetFeeBasisRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="44339a1d-bde5-46f8-a09e-4333e792d6ab" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetFeeBasisRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
      </mes:GetFeeBasisRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetFeeBasisRequest"/></con:call></con:operation><con:operation id="26fcd173-8040-4a89-b50a-266954058e05" isOneWay="false" action="" name="GetFeeSchedule" bindingOperationName="GetFeeSchedule" type="Request-Response" outputName="GetFeeScheduleResponse" inputName="GetFeeScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9edbe6d6-42ac-4852-9a90-3b0dc655d206" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetFeeScheduleRequest>
         <!--You may enter the following 5 items in any order-->
         <!--Optional:-->
         <mes:scheduleId>?</mes:scheduleId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
      </mes:GetFeeScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetFeeScheduleRequest"/></con:call></con:operation><con:operation id="4d5aefdb-8a18-4a5c-a98c-2adc184198b7" isOneWay="false" action="" name="GetFeeScheduleBasis" bindingOperationName="GetFeeScheduleBasis" type="Request-Response" outputName="GetFeeScheduleBasisResponse" inputName="GetFeeScheduleBasisRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3018e034-5967-42be-9821-a48e8cf79b2e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetFeeScheduleBasisRequest>
         <!--You may enter the following 5 items in any order-->
         <!--Optional:-->
         <mes:scheduleId>?</mes:scheduleId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
      </mes:GetFeeScheduleBasisRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetFeeScheduleBasisRequest"/></con:call></con:operation><con:operation id="38844243-25ba-4cff-86e9-4544ea776054" isOneWay="false" action="" name="GetFeeScheduleList" bindingOperationName="GetFeeScheduleList" type="Request-Response" outputName="GetFeeScheduleListResponse" inputName="GetFeeScheduleListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ddb47668-7158-43cc-a90f-e41b6935af0f" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetFeeScheduleListRequest>
         <!--You may enter the following 18 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <!--Optional:-->
         <mes:owner>?</mes:owner>
         <!--Optional:-->
         <mes:scheduleIds>
            <!--Zero or more repetitions:-->
            <mes:scheduleId>?</mes:scheduleId>
         </mes:scheduleIds>
         <!--Optional:-->
         <mes:startDate>
            <typ:date format="?" value="?"/>
         </mes:startDate>
         <!--Optional:-->
         <mes:endDate>
            <typ:date format="?" value="?"/>
         </mes:endDate>
         <!--Optional:-->
         <mes:subscriberFeeId>?</mes:subscriberFeeId>
         <!--Optional:-->
         <mes:filterReversedFees>false</mes:filterReversedFees>
         <!--Optional:-->
         <mes:modifiedFromDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedFromDate>
         <!--Optional:-->
         <mes:modifiedToDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedToDate>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:order>?</mes:order>
         <mes:ascending>true</mes:ascending>
         <!--Optional:-->
         <mes:showRfee>false</mes:showRfee>
         <mes:pageNumber>?</mes:pageNumber>
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
      </mes:GetFeeScheduleListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetFeeScheduleListRequest"/></con:call></con:operation><con:operation id="5fec8517-8f34-4650-87ea-378143eca372" isOneWay="false" action="" name="GetFeeScheduleListBasis" bindingOperationName="GetFeeScheduleListBasis" type="Request-Response" outputName="GetFeeScheduleListBasisResponse" inputName="GetFeeScheduleListBasisRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="194d18d5-de46-4f56-8161-f54136049d42" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetFeeScheduleListBasisRequest>
         <!--You may enter the following 18 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <!--Optional:-->
         <mes:owner>?</mes:owner>
         <!--Optional:-->
         <mes:scheduleIds>
            <!--Zero or more repetitions:-->
            <mes:scheduleId>?</mes:scheduleId>
         </mes:scheduleIds>
         <!--Optional:-->
         <mes:startDate>
            <typ:date format="?" value="?"/>
         </mes:startDate>
         <!--Optional:-->
         <mes:endDate>
            <typ:date format="?" value="?"/>
         </mes:endDate>
         <!--Optional:-->
         <mes:subscriberFeeId>?</mes:subscriberFeeId>
         <!--Optional:-->
         <mes:filterReversedFees>false</mes:filterReversedFees>
         <!--Optional:-->
         <mes:modifiedFromDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedFromDate>
         <!--Optional:-->
         <mes:modifiedToDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedToDate>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:order>?</mes:order>
         <mes:ascending>true</mes:ascending>
         <!--Optional:-->
         <mes:showRfee>false</mes:showRfee>
         <mes:pageNumber>?</mes:pageNumber>
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
      </mes:GetFeeScheduleListBasisRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetFeeScheduleListBasisRequest"/></con:call></con:operation><con:operation id="7966b444-827e-48c1-ab9f-0efabd23a13f" isOneWay="false" action="" name="GetHierarchyAffiliateCommissionDist" bindingOperationName="GetHierarchyAffiliateCommissionDist" type="Request-Response" outputName="GetHierarchyAffiliateCommissionDistResponse" inputName="GetHierarchyAffiliateCommissionDistRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="95f49497-66a4-4071-86d9-37f9ed66663b" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetHierarchyAffiliateCommissionDistRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:affiliateId>?</mes:affiliateId>
         <mes:affiliateType>?</mes:affiliateType>
      </mes:GetHierarchyAffiliateCommissionDistRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetHierarchyAffiliateCommissionDistRequest"/></con:call></con:operation><con:operation id="7d4bd043-9561-489d-8a10-b574eb438265" isOneWay="false" action="" name="GetNewPositivePayList" bindingOperationName="GetNewPositivePayList" type="Request-Response" outputName="GetNewPositivePayListResponse" inputName="GetNewPositivePayListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7684136b-6366-4c4e-a940-2038eff35c1f" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetNewPositivePayListRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:expandUpTo>
            <typ:date format="?" value="?"/>
         </mes:expandUpTo>
         <!--Optional:-->
         <mes:maximumRecords>?</mes:maximumRecords>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>
               <typ:order value="?" isAscending="true"/>
            </typ:orderBy>
         </mes:orderBy>
      </mes:GetNewPositivePayListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetNewPositivePayListRequest"/></con:call></con:operation><con:operation id="1bacdeb1-e6a0-4a70-b351-7c19ad02c765" isOneWay="false" action="" name="GetNextSchedule" bindingOperationName="GetNextSchedule" type="Request-Response" outputName="GetNextScheduleResponse" inputName="GetNextScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4fba436b-84cc-4e51-b421-4e9ae7fd0c10" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetNextScheduleRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:transactionClass>?</mes:transactionClass>
         <mes:clientId>?</mes:clientId>
         <mes:status>?</mes:status>
      </mes:GetNextScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetNextScheduleRequest"/></con:call></con:operation><con:operation id="685b8f01-1b92-4836-ae5c-9778f229a774" isOneWay="false" action="" name="GetOverriddenSubscriberFee" bindingOperationName="GetOverriddenSubscriberFee" type="Request-Response" outputName="GetOverriddenSubscriberFeeResponse" inputName="GetOverriddenSubscriberFeeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3e266a3c-d089-4aaa-9420-755fc2a116df" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetOverriddenSubscriberFeeRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:affiliateId>?</mes:affiliateId>
         <mes:feeId>?</mes:feeId>
      </mes:GetOverriddenSubscriberFeeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetOverriddenSubscriberFeeRequest"/></con:call></con:operation><con:operation id="39aabda7-c7f5-4078-a1fc-ef5d950629c3" isOneWay="false" action="" name="GetPartialEnrollment" bindingOperationName="GetPartialEnrollment" type="Request-Response" outputName="GetPartialEnrollmentResponse" inputName="GetPartialEnrollmentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="027046a1-343d-483e-81e1-fe71de7a0200" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetPartialEnrollmentRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:partialEnrollmentId>?</mes:partialEnrollmentId>
      </mes:GetPartialEnrollmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetPartialEnrollmentRequest"/></con:call></con:operation><con:operation id="eb91fdab-bdeb-4207-b0e8-200170a3bc9b" isOneWay="false" action="" name="GetPartialEnrollmentList" bindingOperationName="GetPartialEnrollmentList" type="Request-Response" outputName="GetPartialEnrollmentListResponse" inputName="GetPartialEnrollmentListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a77e4787-a5f6-454a-92b0-923eefe004a1" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetPartialEnrollmentListRequest>
         <!--You may enter the following 10 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:affiliateId>?</mes:affiliateId>
         <!--Optional:-->
         <mes:searchFirstName>?</mes:searchFirstName>
         <!--Optional:-->
         <mes:searchLastName>?</mes:searchLastName>
         <!--Optional:-->
         <mes:searchCity>?</mes:searchCity>
         <!--Optional:-->
         <mes:searchState>?</mes:searchState>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>
               <typ:order value="?" isAscending="true"/>
            </typ:orderBy>
         </mes:orderBy>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:GetPartialEnrollmentListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetPartialEnrollmentListRequest"/></con:call></con:operation><con:operation id="79cdd4c0-0371-4322-9eda-5b25779e1a05" isOneWay="false" action="" name="GetPartnerList" bindingOperationName="GetPartnerList" type="Request-Response" outputName="GetPartnerListResponse" inputName="GetPartnerListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8b4623e2-d3d6-4a01-bad5-ac2bd96120e0" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetPartnerListRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:partnerId>?</mes:partnerId>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>
               <typ:order value="?" isAscending="true"/>
            </typ:orderBy>
         </mes:orderBy>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:GetPartnerListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetPartnerListRequest"/></con:call></con:operation><con:operation id="52f5d3c4-d1a1-490b-b979-8a9976418ecb" isOneWay="false" action="" name="GetPaymentDetails" bindingOperationName="GetPaymentDetails" type="Request-Response" outputName="GetPaymentDetailsResponse" inputName="GetPaymentDetailsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cf950b7e-b1b0-4d0d-89de-0fbb144a6ebc" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetPaymentDetailsRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:scheduleId>?</mes:scheduleId>
      </mes:GetPaymentDetailsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetPaymentDetailsRequest"/></con:call></con:operation><con:operation id="318a75af-6707-4c12-9c86-281f95944a58" isOneWay="false" action="" name="GetPaymentList" bindingOperationName="GetPaymentList" type="Request-Response" outputName="GetPaymentListResponse" inputName="GetPaymentListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f8ac74cf-411b-4c63-99bb-c224d0397bac" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetPaymentListRequest>
         <!--You may enter the following 19 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientIds>
            <!--Zero or more repetitions:-->
            <typ:clientId>?</typ:clientId>
         </mes:clientIds>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:scheduleIds>
            <!--Zero or more repetitions:-->
            <mes:scheduleId>?</mes:scheduleId>
         </mes:scheduleIds>
         <!--Optional:-->
         <mes:transactionMethod>?</mes:transactionMethod>
         <!--Optional:-->
         <mes:scheduleStatuses>
            <!--Zero or more repetitions:-->
            <typ:status>?</typ:status>
         </mes:scheduleStatuses>
         <!--Optional:-->
         <mes:fromDate>
            <typ:date format="?" value="?"/>
         </mes:fromDate>
         <!--Optional:-->
         <mes:toDate>
            <typ:date format="?" value="?"/>
         </mes:toDate>
         <!--Optional:-->
         <mes:modifiedFromDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedFromDate>
         <!--Optional:-->
         <mes:modifiedToDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedToDate>
         <!--Optional:-->
         <mes:fromAmount>?</mes:fromAmount>
         <!--Optional:-->
         <mes:toAmount>?</mes:toAmount>
         <!--Optional:-->
         <mes:payeeName>?</mes:payeeName>
         <!--Optional:-->
         <mes:clientName>?</mes:clientName>
         <!--Optional:-->
         <mes:checkNumber>?</mes:checkNumber>
         <!--Optional:-->
         <mes:accountInfo>?</mes:accountInfo>
         <!--Optional:-->
         <mes:pageNumber>?</mes:pageNumber>
         <!--Optional:-->
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>
               <typ:order value="?" isAscending="true"/>
            </typ:orderBy>
         </mes:orderBy>
      </mes:GetPaymentListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetPaymentListRequest"/></con:call></con:operation><con:operation id="3287cbe3-a2a7-49e7-82b9-841f9f66a77e" isOneWay="false" action="" name="GetPaymentListOnPositivePay" bindingOperationName="GetPaymentListOnPositivePay" type="Request-Response" outputName="GetPaymentListOnPositivePayResponse" inputName="GetPaymentListOnPositivePayRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7b8b0fe8-0566-4722-9eb9-756e16a1d199" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetPaymentListOnPositivePayRequest>
         <!--You may enter the following 9 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:transactionMethod>?</mes:transactionMethod>
         <!--Optional:-->
         <mes:scheduleStatus>?</mes:scheduleStatus>
         <mes:fromDate>
            <typ:date format="?" value="?"/>
         </mes:fromDate>
         <mes:toDate>
            <typ:date format="?" value="?"/>
         </mes:toDate>
         <mes:pageNumber>?</mes:pageNumber>
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>
               <typ:order value="?" isAscending="true"/>
            </typ:orderBy>
         </mes:orderBy>
      </mes:GetPaymentListOnPositivePayRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetPaymentListOnPositivePayRequest"/></con:call></con:operation><con:operation id="23370b15-1117-42eb-ab89-b37891be80ed" isOneWay="false" action="" name="GetPaymentMonitorList" bindingOperationName="GetPaymentMonitorList" type="Request-Response" outputName="GetPaymentMonitorListResponse" inputName="GetPaymentMonitorListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="aacaff0d-aefd-4cd1-84aa-15ec84a67997" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetPaymentMonitorListRequest>
         <!--You may enter the following 6 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:numberOfDays>?</mes:numberOfDays>
         <!--Optional:-->
         <mes:searchText>?</mes:searchText>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>
               <typ:order value="?" isAscending="true"/>
            </typ:orderBy>
         </mes:orderBy>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:GetPaymentMonitorListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetPaymentMonitorListRequest"/></con:call></con:operation><con:operation id="8a0f58fe-2ffc-43df-9826-8eb380304e0f" isOneWay="false" action="" name="GetPositivePayDetails" bindingOperationName="GetPositivePayDetails" type="Request-Response" outputName="GetPositivePayDetailsResponse" inputName="GetPositivePayDetailsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="eb779eb9-ab6e-4018-803a-8312fedaee56" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetPositivePayDetailsRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:clientId>?</mes:clientId>
         <mes:positivePayId>?</mes:positivePayId>
      </mes:GetPositivePayDetailsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetPositivePayDetailsRequest"/></con:call></con:operation><con:operation id="9fd95fe9-f6c9-45bd-b219-7e577c97249f" isOneWay="false" action="" name="GetPositivePayInquiries" bindingOperationName="GetPositivePayInquiries" type="Request-Response" outputName="GetPositivePayInquiriesResponse" inputName="GetPositivePayInquiriesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f01fda4c-1e4b-45e2-974e-977284d33824" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetPositivePayInquiriesRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
         <mes:pageNumber>?</mes:pageNumber>
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>?</typ:orderBy>
         </mes:orderBy>
      </mes:GetPositivePayInquiriesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetPositivePayInquiriesRequest"/></con:call></con:operation><con:operation id="d17111cd-6d2e-4ae9-9644-72a1568d34b7" isOneWay="false" action="" name="GetPositivePayList" bindingOperationName="GetPositivePayList" type="Request-Response" outputName="GetPositivePayListResponse" inputName="GetPositivePayListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="22a95555-e7a4-4c1f-b9ab-4dd497567b6a" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetPositivePayListRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:pageNumber>?</mes:pageNumber>
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>
               <typ:order value="?" isAscending="true"/>
            </typ:orderBy>
         </mes:orderBy>
      </mes:GetPositivePayListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetPositivePayListRequest"/></con:call></con:operation><con:operation id="691b9c1f-86fe-49fb-94c9-2e750c92c05a" isOneWay="false" action="" name="GetPostedTransaction" bindingOperationName="GetPostedTransaction" type="Request-Response" outputName="GetPostedTransactionResponse" inputName="GetPostedTransactionRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="47800b91-931a-4b9a-a8b9-bb8a7b517466" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetPostedTransactionRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:postedTransactionId>?</mes:postedTransactionId>
      </mes:GetPostedTransactionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetPostedTransactionRequest"/></con:call></con:operation><con:operation id="2b017086-ad78-4e4c-9a10-e4ee3ea6fe54" isOneWay="false" action="" name="GetReferralAffiliateList" bindingOperationName="GetReferralAffiliateList" type="Request-Response" outputName="GetReferralAffiliateListResponse" inputName="GetReferralAffiliateListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="19e767d2-77b7-4d1a-91d6-ec940786b136" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetReferralAffiliateListRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:affiliateId>?</mes:affiliateId>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>
               <typ:order value="?" isAscending="true"/>
            </typ:orderBy>
         </mes:orderBy>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:GetReferralAffiliateListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetReferralAffiliateListRequest"/></con:call></con:operation><con:operation id="2da320a1-c27e-4e36-83ca-dbf53adf4c11" isOneWay="false" action="" name="GetResetPasswordToken" bindingOperationName="GetResetPasswordToken" type="Request-Response" outputName="GetResetPasswordTokenResponse" inputName="GetResetPasswordTokenRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e0ac04d0-a6fb-40e6-b86d-8103fe329aab" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetResetPasswordTokenRequest>
         <mes:username>?</mes:username>
      </mes:GetResetPasswordTokenRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetResetPasswordTokenRequest"/></con:call></con:operation><con:operation id="80945068-eed7-4adb-b824-516b90107dd3" isOneWay="false" action="" name="GetReturnList" bindingOperationName="GetReturnList" type="Request-Response" outputName="GetReturnListResponse" inputName="GetReturnListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="18f2f610-4af6-4436-b933-685f526deb3e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetReturnListRequest>
         <!--You may enter the following 13 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientName>?</mes:clientName>
         <!--Optional:-->
         <mes:accountNumber>?</mes:accountNumber>
         <!--Optional:-->
         <mes:modifiedby>?</mes:modifiedby>
         <!--Optional:-->
         <mes:startDate>
            <typ:date format="?" value="?"/>
         </mes:startDate>
         <!--Optional:-->
         <mes:endDate>
            <typ:date format="?" value="?"/>
         </mes:endDate>
         <!--Optional:-->
         <mes:order>?</mes:order>
         <mes:ascending>true</mes:ascending>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:pageNumber>?</mes:pageNumber>
         <!--Optional:-->
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
         <!--Optional:-->
         <mes:transactionClass>?</mes:transactionClass>
         <!--Optional:-->
         <mes:transactionMethod>?</mes:transactionMethod>
      </mes:GetReturnListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetReturnListRequest"/></con:call></con:operation><con:operation id="432410c8-055c-4a39-bf84-c3210c8553df" isOneWay="false" action="" name="GetReturnSchedule" bindingOperationName="GetReturnSchedule" type="Request-Response" outputName="GetReturnScheduleResponse" inputName="GetReturnScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="15deb55b-dbd0-4610-bb56-a5ed99d9e421" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetReturnScheduleRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:scheduleId>?</mes:scheduleId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
      </mes:GetReturnScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetReturnScheduleRequest"/></con:call></con:operation><con:operation id="5c19e3bc-4adb-4129-a55c-64df10299725" isOneWay="false" action="" name="GetRuleSet" bindingOperationName="GetRuleSet" type="Request-Response" outputName="GetRuleSetResponse" inputName="GetRuleSetRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="87db4af3-2f45-4b9c-8fb4-8703d7ad185a" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetRuleSetRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:ruleSetId>?</mes:ruleSetId>
         <!--Optional:-->
         <mes:externalRuleSetId>?</mes:externalRuleSetId>
      </mes:GetRuleSetRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetRuleSetRequest"/></con:call></con:operation><con:operation id="d3301ce5-b3ae-42f8-b680-28d6ef0adad9" isOneWay="false" action="" name="GetRuleSetDefinition" bindingOperationName="GetRuleSetDefinition" type="Request-Response" outputName="GetRuleSetDefinitionResponse" inputName="GetRuleSetDefinitionRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5877e18c-b72f-459c-aa58-ba16c56d724b" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetRuleSetDefinitionRequest>
         <!--You may enter the following 9 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:ruleSetId>?</mes:ruleSetId>
         <!--Optional:-->
         <mes:externalRuleSetId>?</mes:externalRuleSetId>
         <!--Optional:-->
         <mes:affiliateId>?</mes:affiliateId>
         <!--Optional:-->
         <mes:externalAffiliateId>?</mes:externalAffiliateId>
         <!--Optional:-->
         <mes:order>?</mes:order>
         <mes:ascending>true</mes:ascending>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:GetRuleSetDefinitionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetRuleSetDefinitionRequest"/></con:call></con:operation><con:operation id="e6a6c698-d10d-40ad-9b11-f554375deb74" isOneWay="false" action="" name="GetRuleSetList" bindingOperationName="GetRuleSetList" type="Request-Response" outputName="GetRuleSetListResponse" inputName="GetRuleSetListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d928a4f5-16c8-456e-b5c5-800d5f9cdc4d" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetRuleSetListRequest>
         <!--You may enter the following 15 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:ruleSetId>?</mes:ruleSetId>
         <!--Optional:-->
         <mes:externalRuleSetId>?</mes:externalRuleSetId>
         <!--Optional:-->
         <mes:name>?</mes:name>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:createdOnStart>
            <typ:date format="?" value="?"/>
         </mes:createdOnStart>
         <!--Optional:-->
         <mes:createdOnEnd>
            <typ:date format="?" value="?"/>
         </mes:createdOnEnd>
         <!--Optional:-->
         <mes:createdBy>?</mes:createdBy>
         <!--Optional:-->
         <mes:modifiedOnStart>
            <typ:date format="?" value="?"/>
         </mes:modifiedOnStart>
         <!--Optional:-->
         <mes:modifiedOnEnd>
            <typ:date format="?" value="?"/>
         </mes:modifiedOnEnd>
         <!--Optional:-->
         <mes:modifiedBy>?</mes:modifiedBy>
         <!--Optional:-->
         <mes:order>
            <mes:orderBy>?</mes:orderBy>
         </mes:order>
         <mes:ascending>true</mes:ascending>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:GetRuleSetListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetRuleSetListRequest"/></con:call></con:operation><con:operation id="a836e7a6-fe65-45fe-95c6-b1fae91146dd" isOneWay="false" action="" name="GetSchedule" bindingOperationName="GetSchedule" type="Request-Response" outputName="GetScheduleResponse" inputName="GetScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b1c44667-9803-4fa8-a2bb-b20e079d92c6" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetScheduleRequest>
         <!--You may enter the following 6 items in any order-->
         <mes:scheduleId>?</mes:scheduleId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:transactionClass>?</mes:transactionClass>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
      </mes:GetScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetScheduleRequest"/></con:call></con:operation><con:operation id="94cf4bef-60f4-4634-924e-51c4b4f3b1a6" isOneWay="false" action="" name="GetScheduleList" bindingOperationName="GetScheduleList" type="Request-Response" outputName="GetScheduleListResponse" inputName="GetScheduleListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7a6eeafd-b081-4869-8fc6-1df07528262f" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetScheduleListRequest>
         <!--You may enter the following 13 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:startDate>
            <typ:date format="?" value="?"/>
         </mes:startDate>
         <mes:endDate>
            <typ:date format="?" value="?"/>
         </mes:endDate>
         <!--Optional:-->
         <mes:order>?</mes:order>
         <mes:ascending>true</mes:ascending>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:pageNumber>?</mes:pageNumber>
         <!--Optional:-->
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
         <mes:transactionClasses>
            <!--1 or more repetitions:-->
            <typ:transactionClass>?</typ:transactionClass>
         </mes:transactionClasses>
         <!--Optional:-->
         <mes:showRfee>false</mes:showRfee>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
      </mes:GetScheduleListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetScheduleListRequest"/></con:call></con:operation><con:operation id="7ddaaf02-8402-4d09-8616-55919eed297d" isOneWay="false" action="" name="GetSettlementApprovalList" bindingOperationName="GetSettlementApprovalList" type="Request-Response" outputName="GetSettlementApprovalListResponse" inputName="GetSettlementApprovalListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dc608f51-1905-450b-a822-a20d5e230549" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetSettlementApprovalListRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:approvalStatus>?</mes:approvalStatus>
         <mes:pageNumber>?</mes:pageNumber>
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
      </mes:GetSettlementApprovalListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetSettlementApprovalListRequest"/></con:call></con:operation><con:operation id="cb583078-946e-4837-8b47-6ac2f7bb3e59" isOneWay="false" action="" name="GetSettlementCount" bindingOperationName="GetSettlementCount" type="Request-Response" outputName="GetSettlementCountResponse" inputName="GetSettlementCountRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="92fc82a4-5cd5-4c7b-9a42-f7e4c5ff8a29" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetSettlementCountRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:startDate>
            <typ:date format="?" value="?"/>
         </mes:startDate>
         <mes:endDate>
            <typ:date format="?" value="?"/>
         </mes:endDate>
         <!--Optional:-->
         <mes:statuses>
            <!--Zero or more repetitions:-->
            <mes:status>?</mes:status>
         </mes:statuses>
         <mes:moneySaved>false</mes:moneySaved>
      </mes:GetSettlementCountRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetSettlementCountRequest"/></con:call></con:operation><con:operation id="bd135fde-36b3-48f7-ba47-7c3cf1cace4d" isOneWay="false" action="" name="GetSPAForecastList" bindingOperationName="GetSPAForecastList" type="Request-Response" outputName="GetSPAForecastListResponse" inputName="GetSPAForecastListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4a3b6c9b-e3e1-47fa-99ee-f18d6f86488d" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetSPAForecastListRequest>
         <!--You may enter the following 8 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:subscriberFeeId>?</mes:subscriberFeeId>
         <!--Optional:-->
         <mes:clientBankAccountId>?</mes:clientBankAccountId>
         <!--Optional:-->
         <mes:payeeId>?</mes:payeeId>
         <!--Optional:-->
         <mes:forecasts>
            <!--Zero or more repetitions:-->
            <typ:forecast>
               <!--You may enter the following 6 items in any order-->
               <typ:scheduleDate>
                  <typ:date format="?" value="?"/>
               </typ:scheduleDate>
               <typ:type>?</typ:type>
               <typ:amount>?</typ:amount>
               <!--Optional:-->
               <typ:scheduleId>?</typ:scheduleId>
               <!--Optional:-->
               <typ:transactionMethod>?</typ:transactionMethod>
               <!--Optional:-->
               <typ:draftType>?</typ:draftType>
            </typ:forecast>
         </mes:forecasts>
         <mes:endDate>
            <typ:date format="?" value="?"/>
         </mes:endDate>
      </mes:GetSPAForecastListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetSPAForecastListRequest"/></con:call></con:operation><con:operation id="d04ebb86-884f-4d0c-980e-75657faaecb8" isOneWay="false" action="" name="GetSPAMonthlyBalanceList" bindingOperationName="GetSPAMonthlyBalanceList" type="Request-Response" outputName="GetSPAMonthlyBalanceListResponse" inputName="GetSPAMonthlyBalanceListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6c7ec9e0-e6c4-4e9f-bd48-738c50a39c20" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetSPAMonthlyBalanceListRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:endDate>
            <typ:date format="?" value="?"/>
         </mes:endDate>
      </mes:GetSPAMonthlyBalanceListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetSPAMonthlyBalanceListRequest"/></con:call></con:operation><con:operation id="bb153b06-8ba4-401b-a186-a2f8c4d8e97a" isOneWay="false" action="" name="GetStatusEnumList" bindingOperationName="GetStatusEnumList" type="Request-Response" outputName="GetStatusEnumListResponse" inputName="GetStatusEnumListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bcc0f1b2-53c1-4e39-a0d5-a76d4ab495fa" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetStatusEnumListRequest>
         <mes:enumName>?</mes:enumName>
      </mes:GetStatusEnumListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetStatusEnumListRequest"/></con:call></con:operation><con:operation id="8463ada0-1e36-41b6-aace-e5adf804161c" isOneWay="false" action="" name="GetSubscriberAffiliateConfigs" bindingOperationName="GetSubscriberAffiliateConfigs" type="Request-Response" outputName="GetSubscriberAffiliateConfigsResponse" inputName="GetSubscriberAffiliateConfigsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="18790050-5b36-4a2c-9c36-a84c5960d0f4" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetSubscriberAffiliateConfigsRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:affiliateId>?</mes:affiliateId>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>
               <typ:order value="?" isAscending="true"/>
            </typ:orderBy>
         </mes:orderBy>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:GetSubscriberAffiliateConfigsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetSubscriberAffiliateConfigsRequest"/></con:call></con:operation><con:operation id="9076fc2a-a18e-4be2-a152-c511239279c4" isOneWay="false" action="" name="GetSubscriberPayee" bindingOperationName="GetSubscriberPayee" type="Request-Response" outputName="GetSubscriberPayeeResponse" inputName="GetSubscriberPayeeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2aa830a6-32e9-4167-a212-9e6372339b4c" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetSubscriberPayeeRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:payeeId>?</mes:payeeId>
         <!--Optional:-->
         <mes:subscriberPayeeId>?</mes:subscriberPayeeId>
      </mes:GetSubscriberPayeeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetSubscriberPayeeRequest"/></con:call></con:operation><con:operation id="e59a8417-6dea-451a-bc74-52f1604d0f1d" isOneWay="false" action="" name="GetSubscriberPayeeList" bindingOperationName="GetSubscriberPayeeList" type="Request-Response" outputName="GetSubscriberPayeeListResponse" inputName="GetSubscriberPayeeListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="60d83335-dd06-458b-9385-44d4d016a90e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetSubscriberPayeeListRequest>
         <!--You may enter the following 11 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
         <mes:pageNumber>?</mes:pageNumber>
         <!--Optional:-->
         <mes:fromDate>
            <typ:date format="?" value="?"/>
         </mes:fromDate>
         <!--Optional:-->
         <mes:toDate>
            <typ:date format="?" value="?"/>
         </mes:toDate>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>?</typ:orderBy>
         </mes:orderBy>
         <mes:ascending>true</mes:ascending>
         <!--Optional:-->
         <mes:payeeName>?</mes:payeeName>
         <!--Optional:-->
         <mes:subscriberPayeeId>?</mes:subscriberPayeeId>
         <!--Optional:-->
         <mes:payeeId>?</mes:payeeId>
         <!--Optional:-->
         <mes:status>?</mes:status>
      </mes:GetSubscriberPayeeListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetSubscriberPayeeListRequest"/></con:call></con:operation><con:operation id="3ff7ae58-a56d-41ce-87d4-7a7d75df2923" isOneWay="false" action="" name="GetSubscriberPayeeListByName" bindingOperationName="GetSubscriberPayeeListByName" type="Request-Response" outputName="GetSubscriberPayeeListByNameResponse" inputName="GetSubscriberPayeeListByNameRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fd2b6f0b-62f2-473d-b9b7-1a31b96c3d55" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetSubscriberPayeeListByNameRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:searchName>?</mes:searchName>
      </mes:GetSubscriberPayeeListByNameRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetSubscriberPayeeListByNameRequest"/></con:call></con:operation><con:operation id="a502bdd4-3eda-4247-8b15-6c182ff09b94" isOneWay="false" action="" name="GetSubscriberStatewiseFeeCapList" bindingOperationName="GetSubscriberStatewiseFeeCapList" type="Request-Response" outputName="GetSubscriberStatewiseFeeCapListResponse" inputName="GetSubscriberStatewiseFeeCapListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4dc1fcee-1bdb-46d5-8152-6cce89a5ef5b" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetSubscriberStatewiseFeeCapListRequest>
         <mes:subscriberId>?</mes:subscriberId>
      </mes:GetSubscriberStatewiseFeeCapListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetSubscriberStatewiseFeeCapListRequest"/></con:call></con:operation><con:operation id="6d337422-19fc-42ab-a559-726a212f9c55" isOneWay="false" action="" name="GetSubscriberTemplateAssetById" bindingOperationName="GetSubscriberTemplateAssetById" type="Request-Response" outputName="GetSubscriberTemplateAssetByIdResponse" inputName="GetSubscriberTemplateAssetByIdRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="465302cc-a103-416c-8ad7-1cf8c51d969e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetSubscriberTemplateAssetByIdRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:documentId>?</mes:documentId>
      </mes:GetSubscriberTemplateAssetByIdRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetSubscriberTemplateAssetByIdRequest"/></con:call></con:operation><con:operation id="372d040a-6ea6-4b5c-8afa-df84d4cef361" isOneWay="false" action="" name="GetSubscriberTransactionReceipts" bindingOperationName="GetSubscriberTransactionReceipts" type="Request-Response" outputName="GetSubscriberTransactionReceiptsResponse" inputName="GetSubscriberTransactionReceiptsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="321b732c-f30b-4cbf-bfa1-245432e995e6" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetSubscriberTransactionReceiptsRequest>
         <mes:subscribersId>?</mes:subscribersId>
      </mes:GetSubscriberTransactionReceiptsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetSubscriberTransactionReceiptsRequest"/></con:call></con:operation><con:operation id="62ffbe0e-6200-4bc9-ad12-17e4b3f2cf63" isOneWay="false" action="" name="GetSubscriberUserList" bindingOperationName="GetSubscriberUserList" type="Request-Response" outputName="GetSubscriberUserListResponse" inputName="GetSubscriberUserListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9e9afd1e-6c67-4758-a8d3-c4bb82d4d1fd" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetSubscriberUserListRequest>
         <!--You may enter the following 6 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:pageNumber>?</mes:pageNumber>
         <mes:numberOfRecordsPerPage>?</mes:numberOfRecordsPerPage>
         <!--Optional:-->
         <mes:orderBy>
            <!--Zero or more repetitions:-->
            <typ:orderBy>?</typ:orderBy>
         </mes:orderBy>
         <mes:ascending>true</mes:ascending>
         <!--Optional:-->
         <mes:isActive>true</mes:isActive>
      </mes:GetSubscriberUserListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetSubscriberUserListRequest"/></con:call></con:operation><con:operation id="3776a4c4-7db3-456f-b8ef-00db283d2430" isOneWay="false" action="" name="GetSummaryScheduleList" bindingOperationName="GetSummaryScheduleList" type="Request-Response" outputName="GetSummaryScheduleListResponse" inputName="GetSummaryScheduleListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9f586f65-1477-4be1-94ba-a55c349cf80f" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetSummaryScheduleListRequest>
         <!--You may enter the following 6 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:scheduleIds>
            <!--Zero or more repetitions:-->
            <mes:scheduleId>?</mes:scheduleId>
         </mes:scheduleIds>
         <!--Optional:-->
         <mes:externalReferenceIds>
            <!--Zero or more repetitions:-->
            <mes:externalReferenceId>?</mes:externalReferenceId>
         </mes:externalReferenceIds>
         <!--Optional:-->
         <mes:modifiedFrom>
            <typ:date format="?" value="?"/>
         </mes:modifiedFrom>
         <!--Optional:-->
         <mes:modifiedTo>
            <typ:date format="?" value="?"/>
         </mes:modifiedTo>
         <mes:transactionClass>?</mes:transactionClass>
      </mes:GetSummaryScheduleListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetSummaryScheduleListRequest"/></con:call></con:operation><con:operation id="67c086f4-f61b-48bd-b9b7-0e4c03f1b07a" isOneWay="false" action="" name="GetTransactionDetails" bindingOperationName="GetTransactionDetails" type="Request-Response" outputName="GetTransactionDetailsResponse" inputName="GetTransactionDetailsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="32f95620-6da0-4a1c-aee5-c26c476fcf8a" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetTransactionDetailsRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:transactionId>?</mes:transactionId>
         <!--Optional:-->
         <mes:scheduleId>?</mes:scheduleId>
         <mes:includeCheckImage>false</mes:includeCheckImage>
      </mes:GetTransactionDetailsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetTransactionDetailsRequest"/></con:call></con:operation><con:operation id="1bfcf787-f5e9-4829-b477-eca053f7a5c4" isOneWay="false" action="" name="GetTransactionList" bindingOperationName="GetTransactionList" type="Request-Response" outputName="GetTransactionListResponse" inputName="GetTransactionListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="442461d6-8d3a-4d0f-8bc8-584a8514b5d6" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetTransactionListRequest>
         <!--You may enter the following 15 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:type>?</mes:type>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:modifiedFromDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedFromDate>
         <!--Optional:-->
         <mes:modifiedToDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedToDate>
         <!--Optional:-->
         <mes:fromDate>
            <typ:date format="?" value="?"/>
         </mes:fromDate>
         <!--Optional:-->
         <mes:toDate>
            <typ:date format="?" value="?"/>
         </mes:toDate>
         <!--Optional:-->
         <mes:skipDeleted>false</mes:skipDeleted>
         <!--Optional:-->
         <mes:order>
            <!--Zero or more repetitions:-->
            <mes:orderBy>?</mes:orderBy>
         </mes:order>
         <!--Optional:-->
         <mes:ascending>true</mes:ascending>
         <!--Optional:-->
         <mes:pageNo>?</mes:pageNo>
         <!--Optional:-->
         <mes:resultsPerPage>?</mes:resultsPerPage>
         <!--Optional:-->
         <mes:lastTransactionId>?</mes:lastTransactionId>
      </mes:GetTransactionListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetTransactionListRequest"/></con:call></con:operation><con:operation id="297d3802-18b9-4751-bdd2-604bdae7ae2b" isOneWay="false" action="" name="GetTransactionListByIds" bindingOperationName="GetTransactionListByIds" type="Request-Response" outputName="GetTransactionListByIdsResponse" inputName="GetTransactionListByIdsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ebb53b2f-918d-4478-949e-1eeab67bbea4" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetTransactionListByIdsRequest>
         <!--You may enter the following 11 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientIds>
            <!--Zero or more repetitions:-->
            <typ:clientId>?</typ:clientId>
         </mes:clientIds>
         <!--Optional:-->
         <mes:transactionIds>
            <!--Zero or more repetitions:-->
            <mes:transactionId>?</mes:transactionId>
         </mes:transactionIds>
         <!--Optional:-->
         <mes:transactionClass>?</mes:transactionClass>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:fromDate>
            <typ:date format="?" value="?"/>
         </mes:fromDate>
         <!--Optional:-->
         <mes:toDate>
            <typ:date format="?" value="?"/>
         </mes:toDate>
         <!--Optional:-->
         <mes:modifiedFromDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedFromDate>
         <!--Optional:-->
         <mes:modifiedToDate>
            <typ:date format="?" value="?"/>
         </mes:modifiedToDate>
         <!--Optional:-->
         <mes:pageNo>?</mes:pageNo>
         <!--Optional:-->
         <mes:resultsPerPage>?</mes:resultsPerPage>
      </mes:GetTransactionListByIdsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetTransactionListByIdsRequest"/></con:call></con:operation><con:operation id="dc08a474-c029-458f-a3a5-537f00d8dd5a" isOneWay="false" action="" name="GetTransactionMethods" bindingOperationName="GetTransactionMethods" type="Request-Response" outputName="GetTransactionMethodsResponse" inputName="GetTransactionMethodsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9612d26d-7ff8-4be1-88da-ad0e7b79e20e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetTransactionMethodsRequest>
         <mes:transactionClass>?</mes:transactionClass>
      </mes:GetTransactionMethodsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetTransactionMethodsRequest"/></con:call></con:operation><con:operation id="ed1a3d9c-f5b7-408a-991f-27818a02764b" isOneWay="false" action="" name="GetTransactionProcessors" bindingOperationName="GetTransactionProcessors" type="Request-Response" outputName="GetTransactionProcessorsResponse" inputName="GetTransactionProcessorsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bee01437-318b-4059-b44d-49904373c7e5" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetTransactionProcessorsRequest>
         <!--You may enter the following 2 items in any order-->
         <!--Optional:-->
         <mes:transactionProcessorType>?</mes:transactionProcessorType>
         <!--Optional:-->
         <mes:direction>?</mes:direction>
      </mes:GetTransactionProcessorsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetTransactionProcessorsRequest"/></con:call></con:operation><con:operation id="f65b64c6-0fd5-4f94-b36a-d2cc43f7272e" isOneWay="false" action="" name="GetUnprocessedPostedTransactionList" bindingOperationName="GetUnprocessedPostedTransactionList" type="Request-Response" outputName="GetUnprocessedPostedTransactionListResponse" inputName="GetUnprocessedPostedTransactionListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d0b0249f-c34a-4947-baf5-b635e5dfc400" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetUnprocessedPostedTransactionListRequest>
         <!--You may enter the following 6 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:postedTransactionStatus>?</mes:postedTransactionStatus>
         <mes:pageNo>?</mes:pageNo>
         <mes:resultsPerPage>?</mes:resultsPerPage>
         <!--Optional:-->
         <mes:order>
            <mes:orderBy>?</mes:orderBy>
         </mes:order>
         <mes:ascending>true</mes:ascending>
      </mes:GetUnprocessedPostedTransactionListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetUnprocessedPostedTransactionListRequest"/></con:call></con:operation><con:operation id="1caae654-8208-4115-9bd2-f82e14f6e07c" isOneWay="false" action="" name="GetUserById" bindingOperationName="GetUserById" type="Request-Response" outputName="GetUserByIdResponse" inputName="GetUserByIdRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b91ce9e8-621a-4752-b8ca-5c14f45c562f" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetUserByIdRequest>
         <mes:userId>?</mes:userId>
      </mes:GetUserByIdRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetUserByIdRequest"/></con:call></con:operation><con:operation id="69650cea-accf-4b3a-bee5-a1b6e9ac95d8" isOneWay="false" action="" name="GetUserRolesList" bindingOperationName="GetUserRolesList" type="Request-Response" outputName="GetUserRolesListResponse" inputName="GetUserRolesListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fd8f62b8-8339-4d82-8ad0-05b16b7e60c6" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:GetUserRolesListRequest>
         <mes:subscriberId>?</mes:subscriberId>
      </mes:GetUserRolesListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetUserRolesListRequest"/></con:call></con:operation><con:operation id="8ce635d6-7357-496e-85c7-9729ea277703" isOneWay="false" action="" name="InstantRemittance" bindingOperationName="InstantRemittance" type="Request-Response" outputName="InstantRemittanceResponse" inputName="InstantRemittanceRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="037eca22-ef99-436b-bf0b-2db40129d5e7" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:InstantRemittanceRequest>
         <!--You may enter the following 11 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <mes:transactionMethod>?</mes:transactionMethod>
         <!--Optional:-->
         <mes:settlementId>?</mes:settlementId>
         <!--Optional:-->
         <mes:srcAccountNumber>?</mes:srcAccountNumber>
         <!--Optional:-->
         <mes:paymentAccountNumber>?</mes:paymentAccountNumber>
         <mes:payeePaypalId>?</mes:payeePaypalId>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <mes:amount>?</mes:amount>
      </mes:InstantRemittanceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/InstantRemittanceRequest"/></con:call></con:operation><con:operation id="3748feff-88f6-437c-8b0a-29b39ec67378" isOneWay="false" action="" name="ListEnrollmentFee" bindingOperationName="ListEnrollmentFee" type="Request-Response" outputName="ListEnrollmentFeeResponse" inputName="ListEnrollmentFeeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e50fc59c-9ee7-4d9e-bec6-489c0ddba878" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:ListEnrollmentFeeRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:feeType>?</mes:feeType>
         <!--Optional:-->
         <mes:ownerType>?</mes:ownerType>
      </mes:ListEnrollmentFeeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/ListEnrollmentFeeRequest"/></con:call></con:operation><con:operation id="9ba9604c-4ebf-484b-bb00-486bf35308b5" isOneWay="false" action="" name="ListSubscriberFee" bindingOperationName="ListSubscriberFee" type="Request-Response" outputName="ListSubscriberFeeResponse" inputName="ListSubscriberFeeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="72d462c8-8857-4219-ba0d-cd1baa2b0a20" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:ListSubscriberFeeRequest>
         <!--You may enter the following 6 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:type>?</mes:type>
         <!--Optional:-->
         <mes:ascending>true</mes:ascending>
         <!--Optional:-->
         <mes:order>
            <!--Optional:-->
            <mes:orderBy>?</mes:orderBy>
         </mes:order>
         <!--Optional:-->
         <mes:pageNo>1</mes:pageNo>
         <!--Optional:-->
         <mes:resultsPerPage>10</mes:resultsPerPage>
      </mes:ListSubscriberFeeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/ListSubscriberFeeRequest"/></con:call></con:operation><con:operation id="af4963dc-53d1-4ec9-95f6-1365a9d84487" isOneWay="false" action="" name="ListTopLevelFee" bindingOperationName="ListTopLevelFee" type="Request-Response" outputName="ListTopLevelFeeResponse" inputName="ListTopLevelFeeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1b949b17-0bdb-4c69-8a53-6a853d57e897" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:ListTopLevelFeeRequest>
         <!--Optional:-->
         <mes:type>?</mes:type>
      </mes:ListTopLevelFeeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/ListTopLevelFeeRequest"/></con:call></con:operation><con:operation id="e7f14519-688c-4f7b-b842-69163bc27ea4" isOneWay="false" action="" name="MakePhonePayment" bindingOperationName="MakePhonePayment" type="Request-Response" outputName="MakePhonePaymentResponse" inputName="MakePhonePaymentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7f7e9e20-3eb9-4ad9-9999-91cf64ae190d" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:MakePhonePaymentRequest>
         <!--You may enter the following 7 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:scheduleId>?</mes:scheduleId>
         <mes:checkNumber>?</mes:checkNumber>
         <!--Optional:-->
         <mes:creditorProcessingFee>?</mes:creditorProcessingFee>
         <!--Optional:-->
         <mes:creditorProcessingFeeCheckNumber>?</mes:creditorProcessingFeeCheckNumber>
         <!--Optional:-->
         <mes:creditorProcessingFeeCombined>true</mes:creditorProcessingFeeCombined>
         <mes:comment>?</mes:comment>
      </mes:MakePhonePaymentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/MakePhonePaymentRequest"/></con:call></con:operation><con:operation id="f8b62962-87e5-4938-9ddd-7ea6c3e3abfb" isOneWay="false" action="" name="ModifyDraftSchedule" bindingOperationName="ModifyDraftSchedule" type="Request-Response" outputName="ModifyDraftScheduleResponse" inputName="ModifyDraftScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6522ed8a-0e07-4caa-bb9c-6385eaa50571" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:ModifyDraftScheduleRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:scheduleId>?</mes:scheduleId>
         <mes:currentDraftDate>
            <typ:date format="?" value="?"/>
         </mes:currentDraftDate>
         <mes:newDraftDate>
            <typ:date format="?" value="?"/>
         </mes:newDraftDate>
      </mes:ModifyDraftScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/ModifyDraftScheduleRequest"/></con:call></con:operation><con:operation id="e77ebda0-4f75-4525-91ec-347db92a5988" isOneWay="false" action="" name="ModifyHierarchyAffiliateCommissionDist" bindingOperationName="ModifyHierarchyAffiliateCommissionDist" type="Request-Response" outputName="ModifyHierarchyAffiliateCommissionDistResponse" inputName="ModifyHierarchyAffiliateCommissionDistRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0995938a-2f11-44c6-8e64-281e005dfb24" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:ModifyHierarchyAffiliateCommissionDistRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:current>
            <!--You may enter the following 3 items in any order-->
            <mes:affiliateId>?</mes:affiliateId>
            <mes:affiliateType>?</mes:affiliateType>
            <!--Optional:-->
            <mes:referalId>?</mes:referalId>
         </mes:current>
         <mes:new>
            <!--You may enter the following 5 items in any order-->
            <mes:affiliateId>?</mes:affiliateId>
            <mes:affiliateType>?</mes:affiliateType>
            <!--Optional:-->
            <mes:referalId>?</mes:referalId>
            <!--Optional:-->
            <mes:fixed>
               <typ:cycle>
                  <!--You may enter the following 3 items in any order-->
                  <typ:distType>?</typ:distType>
                  <typ:cycleId>?</typ:cycleId>
                  <typ:value>?</typ:value>
               </typ:cycle>
               <typ:cycle>
                  <!--You may enter the following 3 items in any order-->
                  <typ:distType>?</typ:distType>
                  <typ:cycleId>?</typ:cycleId>
                  <typ:value>?</typ:value>
               </typ:cycle>
            </mes:fixed>
            <!--Optional:-->
            <mes:payoutRule>?</mes:payoutRule>
         </mes:new>
      </mes:ModifyHierarchyAffiliateCommissionDistRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/ModifyHierarchyAffiliateCommissionDistRequest"/></con:call></con:operation><con:operation id="bc02d1a5-c5d1-4484-a5ac-8ef399f4abab" isOneWay="false" action="" name="ModifyLoanAmount" bindingOperationName="ModifyLoanAmount" type="Request-Response" outputName="ModifyLoanAmountResponse" inputName="ModifyLoanAmountRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9a0d10c7-eaea-48db-b2c1-0c926ee34cb5" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:ModifyLoanAmountRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:enrollmentId>?</mes:enrollmentId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <mes:newLoanAmount>?</mes:newLoanAmount>
      </mes:ModifyLoanAmountRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/ModifyLoanAmountRequest"/></con:call></con:operation><con:operation id="0137a8d2-b3be-4524-9126-61150d8ff5b3" isOneWay="false" action="" name="ModifyLoanDueDate" bindingOperationName="ModifyLoanDueDate" type="Request-Response" outputName="ModifyLoanDueDateResponse" inputName="ModifyLoanDueDateRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b170e14d-6381-4e48-8922-b150504dca2b" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:ModifyLoanDueDateRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:scheduleId>?</mes:scheduleId>
         <mes:currentLoanDueDate>
            <typ:date format="?" value="?"/>
         </mes:currentLoanDueDate>
         <mes:newLoanDueDate>
            <typ:date format="?" value="?"/>
         </mes:newLoanDueDate>
      </mes:ModifyLoanDueDateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/ModifyLoanDueDateRequest"/></con:call></con:operation><con:operation id="e01ab2c1-ac80-41e4-9921-b2077e5d6d2c" isOneWay="false" action="" name="ModifyPostedTransaction" bindingOperationName="ModifyPostedTransaction" type="Request-Response" outputName="ModifyPostedTransactionResponse" inputName="ModifyPostedTransactionRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="58f90ac7-0fa4-4f74-af33-00d0f9655f05" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:ModifyPostedTransactionRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:scheduleId>?</mes:scheduleId>
         <mes:positivePayInquiryId>?</mes:positivePayInquiryId>
         <mes:reason>?</mes:reason>
      </mes:ModifyPostedTransactionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/ModifyPostedTransactionRequest"/></con:call></con:operation><con:operation id="ca31c86e-eb27-4d15-b553-31a838723135" isOneWay="false" action="" name="MoveAffiliateHierarchy" bindingOperationName="MoveAffiliateHierarchy" type="Request-Response" outputName="MoveAffiliateHierarchyResponse" inputName="MoveAffiliateHierarchyRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="628050f2-9fd8-48dc-804c-173f6b798060" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:MoveAffiliateHierarchyRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:affiliateId>?</mes:affiliateId>
         <mes:affiliateType>?</mes:affiliateType>
         <mes:currentParentAffiliateId>?</mes:currentParentAffiliateId>
         <mes:newParentAffilaiteId>?</mes:newParentAffilaiteId>
      </mes:MoveAffiliateHierarchyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/MoveAffiliateHierarchyRequest"/></con:call></con:operation><con:operation id="b1ca6a95-a17d-43ea-b5fa-36a41eb73571" isOneWay="false" action="" name="OverrideSubscriberFee" bindingOperationName="OverrideSubscriberFee" type="Request-Response" outputName="OverrideSubscriberFeeResponse" inputName="OverrideSubscriberFeeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="69205806-f5a0-4d50-b9c7-959b98acb8a7" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:OverrideSubscriberFeeRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:affiliateId>?</mes:affiliateId>
         <mes:affiliateType>?</mes:affiliateType>
         <mes:feeId>?</mes:feeId>
         <mes:feeAmount>?</mes:feeAmount>
      </mes:OverrideSubscriberFeeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/OverrideSubscriberFeeRequest"/></con:call></con:operation><con:operation id="7900e38f-ca8f-4d60-9289-5b9a78f76995" isOneWay="false" action="" name="PopulateBiweeklyEnrollmentSchedule" bindingOperationName="PopulateBiweeklyEnrollmentSchedule" type="Request-Response" outputName="PopulateBiweeklyEnrollmentScheduleResponse" inputName="PopulateBiweeklyEnrollmentScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ba55d9b4-182a-484c-9cd6-3978118963f5" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:PopulateBiweeklyEnrollmentScheduleRequest>
         <!--You may enter the following 6 items in any order-->
         <mes:enrollmentId>?</mes:enrollmentId>
         <mes:subscriberId>?</mes:subscriberId>
         <mes:firstLoanDueDate>
            <typ:date format="?" value="?"/>
         </mes:firstLoanDueDate>
         <mes:monthlyLoanAmount>?</mes:monthlyLoanAmount>
         <mes:firstDebitDate>
            <typ:date format="?" value="?"/>
         </mes:firstDebitDate>
         <mes:deferredServiceFee>?</mes:deferredServiceFee>
      </mes:PopulateBiweeklyEnrollmentScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/PopulateBiweeklyEnrollmentScheduleRequest"/></con:call></con:operation><con:operation id="ec508c73-fad6-4836-b78f-b589fabdec7b" isOneWay="false" action="" name="ProcessMultipleReturns" bindingOperationName="ProcessMultipleReturns" type="Request-Response" outputName="ProcessMultipleReturnsResponse" inputName="ProcessMultipleReturnsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="745564d2-fd2a-4d4c-8e7b-4267d597017b" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:ProcessMultipleReturnsRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:transactionClass>?</mes:transactionClass>
         <mes:returnList>
            <!--1 or more repetitions:-->
            <typ:return>
               <!--You may enter the following 14 items in any order-->
               <!--Optional:-->
               <typ:transactionMethod>?</typ:transactionMethod>
               <!--Optional:-->
               <typ:scheduleId>?</typ:scheduleId>
               <!--Optional:-->
               <typ:feeScheduleId>?</typ:feeScheduleId>
               <!--Optional:-->
               <typ:scheduleDate>
                  <typ:date format="?" value="?"/>
               </typ:scheduleDate>
               <!--Optional:-->
               <typ:recoupFeeDate>
                  <typ:date format="?" value="?"/>
               </typ:recoupFeeDate>
               <!--Optional:-->
               <typ:clientBankAccountId>?</typ:clientBankAccountId>
               <!--Optional:-->
               <typ:amount>?</typ:amount>
               <!--Optional:-->
               <typ:remark>?</typ:remark>
               <!--Optional:-->
               <typ:comment>?</typ:comment>
               <!--Optional:-->
               <typ:clientId>?</typ:clientId>
               <!--Optional:-->
               <typ:externalClientId>?</typ:externalClientId>
               <!--Optional:-->
               <typ:externalReferenceId>?</typ:externalReferenceId>
               <!--Optional:-->
               <typ:scheduleFrequencyType>?</typ:scheduleFrequencyType>
               <!--Optional:-->
               <typ:lenderName>?</typ:lenderName>
            </typ:return>
         </mes:returnList>
      </mes:ProcessMultipleReturnsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/ProcessMultipleReturnsRequest"/></con:call></con:operation><con:operation id="567a5fdc-ff72-491d-906b-07858e8dde7e" isOneWay="false" action="" name="ReactivateDraftSchedule" bindingOperationName="ReactivateDraftSchedule" type="Request-Response" outputName="ReactivateDraftScheduleResponse" inputName="ReactivateDraftScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="68fd8327-f63d-4d4c-98fe-f69dfd7783d5" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:ReactivateDraftScheduleRequest>
         <!--You may enter the following 5 items in any order-->
         <!--Optional:-->
         <mes:scheduleId>?</mes:scheduleId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
      </mes:ReactivateDraftScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/ReactivateDraftScheduleRequest"/></con:call></con:operation><con:operation id="164df94c-b1d9-488d-86b9-b3283e19ba43" isOneWay="false" action="" name="ReactivateFeeSchedule" bindingOperationName="ReactivateFeeSchedule" type="Request-Response" outputName="ReactivateFeeScheduleResponse" inputName="ReactivateFeeScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1b62e032-8008-4b5f-bfa4-743ed03bce5a" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:ReactivateFeeScheduleRequest>
         <!--You may enter the following 5 items in any order-->
         <!--Optional:-->
         <mes:scheduleId>?</mes:scheduleId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
      </mes:ReactivateFeeScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/ReactivateFeeScheduleRequest"/></con:call></con:operation><con:operation id="2d7f1286-6c6b-4575-8279-296fef6d3af4" isOneWay="false" action="" name="RejectPayment" bindingOperationName="RejectPayment" type="Request-Response" outputName="RejectPaymentResponse" inputName="RejectPaymentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="16eac8de-d0e2-4923-8fcc-0f3ac33e585d" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:RejectPaymentRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:scheduleId>?</mes:scheduleId>
         <mes:positivePayInquiryId>?</mes:positivePayInquiryId>
         <!--Optional:-->
         <mes:reason>?</mes:reason>
      </mes:RejectPaymentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/RejectPaymentRequest"/></con:call></con:operation><con:operation id="95c73614-9818-4268-894b-1d551966c70c" isOneWay="false" action="" name="RemoveAffiliateDocument" bindingOperationName="RemoveAffiliateDocument" type="Request-Response" outputName="RemoveAffiliateDocumentResponse" inputName="RemoveAffiliateDocumentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1ec8316a-115f-4049-8cb1-90ce67aabbcf" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:RemoveAffiliateDocumentRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:affiliateId>?</mes:affiliateId>
         <!--Optional:-->
         <mes:externalAffiliateId>?</mes:externalAffiliateId>
         <mes:documentId>?</mes:documentId>
      </mes:RemoveAffiliateDocumentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/RemoveAffiliateDocumentRequest"/></con:call></con:operation><con:operation id="419e077b-fb12-41ee-be2b-d33934141419" isOneWay="false" action="" name="ResetPassword" bindingOperationName="ResetPassword" type="Request-Response" outputName="ResetPasswordResponse" inputName="ResetPasswordRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="afbeb633-96ca-4d24-b753-44def7d0bd1e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:ResetPasswordRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:Username>?</mes:Username>
         <mes:newpassword>?</mes:newpassword>
      </mes:ResetPasswordRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/ResetPasswordRequest"/></con:call></con:operation><con:operation id="ef1ac6d5-7188-4eca-bb77-03210bcb04eb" isOneWay="false" action="" name="RevalidateAutoEnrollment" bindingOperationName="RevalidateAutoEnrollment" type="Request-Response" outputName="RevalidateAutoEnrollmentResponse" inputName="RevalidateAutoEnrollmentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4ba48374-f97d-434f-8228-b043497788a7" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:RevalidateAutoEnrollmentRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:enrollmentId>?</mes:enrollmentId>
      </mes:RevalidateAutoEnrollmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/RevalidateAutoEnrollmentRequest"/></con:call></con:operation><con:operation id="996b2fcd-b4f6-4e33-a243-74df9bdf2962" isOneWay="false" action="" name="SaveAutoEnrollmentAffiliates" bindingOperationName="SaveAutoEnrollmentAffiliates" type="Request-Response" outputName="SaveAutoEnrollmentAffiliatesResponse" inputName="SaveAutoEnrollmentAffiliatesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1b841c33-2fd9-42ce-b05f-59b5d53bda21" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:SaveAutoEnrollmentAffiliatesRequest>
         <!--You may enter the following 6 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:enrollmentId>?</mes:enrollmentId>
         <mes:agencyId>?</mes:agencyId>
         <mes:dealerId>?</mes:dealerId>
         <!--Optional:-->
         <mes:fiMgrId>?</mes:fiMgrId>
         <!--Optional:-->
         <mes:unmatchedFiMgrId>?</mes:unmatchedFiMgrId>
      </mes:SaveAutoEnrollmentAffiliatesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/SaveAutoEnrollmentAffiliatesRequest"/></con:call></con:operation><con:operation id="44c39053-d908-45ed-a746-2ea63bf7731e" isOneWay="false" action="" name="SaveChannelAttributeValue" bindingOperationName="SaveChannelAttributeValue" type="Request-Response" outputName="SaveChannelAttributeValueResponse" inputName="SaveChannelAttributeValueRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="872d8913-32d8-457a-80a7-965e224864e9" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:SaveChannelAttributeValueRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:enrollmentId>?</mes:enrollmentId>
         <mes:attributes>
            <!--1 or more repetitions:-->
            <mes:attribute name="?" value="?"/>
         </mes:attributes>
      </mes:SaveChannelAttributeValueRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/SaveChannelAttributeValueRequest"/></con:call></con:operation><con:operation id="c60141fa-2500-4c95-878b-73097b8168a4" isOneWay="false" action="" name="SaveStatewiseFeeCap" bindingOperationName="SaveStatewiseFeeCap" type="Request-Response" outputName="SaveStatewiseFeeCapResponse" inputName="SaveStatewiseFeeCapRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b074af38-70e2-486d-b586-5d5a025f7ac3" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:SaveStatewiseFeeCapRequest>
         <!--You may enter the following 6 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:stateCode>?</mes:stateCode>
         <mes:licenseRequired>?</mes:licenseRequired>
         <!--Optional:-->
         <mes:licenseExpiry>
            <typ:date format="?" value="?"/>
         </mes:licenseExpiry>
         <!--Optional:-->
         <mes:stateFeeType>?</mes:stateFeeType>
         <!--Optional:-->
         <mes:stateFeeValue>?</mes:stateFeeValue>
      </mes:SaveStatewiseFeeCapRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/SaveStatewiseFeeCapRequest"/></con:call></con:operation><con:operation id="b4981a06-cba9-4e15-babe-2b03601ceefe" isOneWay="false" action="" name="SearchCFTPayees" bindingOperationName="SearchCFTPayees" type="Request-Response" outputName="SearchCFTPayeesResponse" inputName="SearchCFTPayeesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="90d04b50-020e-42b2-8d97-f784758c0de7" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:SearchCFTPayeesRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:payeeName>?</mes:payeeName>
         <mes:loanAccountNumber>?</mes:loanAccountNumber>
      </mes:SearchCFTPayeesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/SearchCFTPayeesRequest"/></con:call></con:operation><con:operation id="63bc2285-8589-4143-aacb-797d9ed47062" isOneWay="false" action="" name="SendEmail" bindingOperationName="SendEmail" type="Request-Response" outputName="SendEmailResponse" inputName="SendEmailRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="440ae0bf-06dc-4a8a-a857-5550042fecd0" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:SendEmailRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:toEmailAddress>?</mes:toEmailAddress>
         <!--Optional:-->
         <mes:ccEmailAddress>?</mes:ccEmailAddress>
         <!--Optional:-->
         <mes:bccEmailAddress>?</mes:bccEmailAddress>
         <mes:subject>?</mes:subject>
         <mes:message>?</mes:message>
      </mes:SendEmailRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/SendEmailRequest"/></con:call></con:operation><con:operation id="34b97965-fd83-4cbd-9903-c08d7b28dabc" isOneWay="false" action="" name="SendReactivationCode" bindingOperationName="SendReactivationCode" type="Request-Response" outputName="SendReactivationCodeResponse" inputName="SendReactivationCodeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bc2aa516-300e-4929-8245-0e148a2f23b6" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:SendReactivationCodeRequest>
         <!--You may enter the following 3 items in any order-->
         <!--Optional:-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:username>?</mes:username>
         <mes:notifMethod>?</mes:notifMethod>
      </mes:SendReactivationCodeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/SendReactivationCodeRequest"/></con:call></con:operation><con:operation id="bf4512b5-a066-4dea-8e90-a3ea23a55697" isOneWay="false" action="" name="SkipDraft" bindingOperationName="SkipDraft" type="Request-Response" outputName="SkipDraftResponse" inputName="SkipDraftRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fe4d0d45-4b30-4b5c-b389-33073f0d3102" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:SkipDraftRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:scheduleId>?</mes:scheduleId>
      </mes:SkipDraftRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/SkipDraftRequest"/></con:call></con:operation><con:operation id="cb169944-2e90-4c7d-b53b-1328152c25c2" isOneWay="false" action="" name="SkipPayment" bindingOperationName="SkipPayment" type="Request-Response" outputName="SkipPaymentResponse" inputName="SkipPaymentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a3b7f03a-37a4-455c-8589-ec49ae095f3c" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:SkipPaymentRequest>
         <!--You may enter the following 6 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:enrollmentId>?</mes:enrollmentId>
         <mes:skipPaymentDate>
            <typ:date format="?" value="?"/>
         </mes:skipPaymentDate>
         <mes:nextDraftDate>
            <typ:date format="?" value="?"/>
         </mes:nextDraftDate>
         <mes:restartLoanPaymentDate>
            <typ:date format="?" value="?"/>
         </mes:restartLoanPaymentDate>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
      </mes:SkipPaymentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/SkipPaymentRequest"/></con:call></con:operation><con:operation id="72dacc3f-110c-4013-b6ad-57bd6680f480" isOneWay="false" action="" name="SuspendDraftSchedule" bindingOperationName="SuspendDraftSchedule" type="Request-Response" outputName="SuspendDraftScheduleResponse" inputName="SuspendDraftScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="018b2c49-6380-46fb-8db8-a897d43a821c" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:SuspendDraftScheduleRequest>
         <!--You may enter the following 6 items in any order-->
         <!--Optional:-->
         <mes:scheduleId>?</mes:scheduleId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:status>?</mes:status>
      </mes:SuspendDraftScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/SuspendDraftScheduleRequest"/></con:call></con:operation><con:operation id="41b82530-27e9-498a-a8ae-26fd42c846d3" isOneWay="false" action="" name="SuspendFeeSchedule" bindingOperationName="SuspendFeeSchedule" type="Request-Response" outputName="SuspendFeeScheduleResponse" inputName="SuspendFeeScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="06eae368-7710-4c99-b52d-84a0bbbb2e53" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:SuspendFeeScheduleRequest>
         <!--You may enter the following 9 items in any order-->
         <!--Optional:-->
         <mes:scheduleId>?</mes:scheduleId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <!--Optional:-->
         <mes:feeIdList>
            <!--1 or more repetitions:-->
            <typ:feeId>?</typ:feeId>
         </mes:feeIdList>
         <!--Optional:-->
         <mes:feeTypeIdList>
            <!--1 or more repetitions:-->
            <typ:feeTypeId>?</typ:feeTypeId>
         </mes:feeTypeIdList>
         <!--Optional:-->
         <mes:externalFeeIdList>
            <!--1 or more repetitions:-->
            <typ:externalFeeId>?</typ:externalFeeId>
         </mes:externalFeeIdList>
      </mes:SuspendFeeScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/SuspendFeeScheduleRequest"/></con:call></con:operation><con:operation id="2a0ddce2-a161-4140-9c5a-f4d0784092ab" isOneWay="false" action="" name="SuspendSettlement" bindingOperationName="SuspendSettlement" type="Request-Response" outputName="SuspendSettlementResponse" inputName="SuspendSettlementRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9770dfc9-8d95-4a35-bb2f-f912bfac26d4" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:SuspendSettlementRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:settlementId>?</mes:settlementId>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
      </mes:SuspendSettlementRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/SuspendSettlementRequest"/></con:call></con:operation><con:operation id="e2ae7d2b-2f3c-4588-af05-2ddfd7d22fdf" isOneWay="false" action="" name="UnlockAccount" bindingOperationName="UnlockAccount" type="Request-Response" outputName="UnlockAccountResponse" inputName="UnlockAccountRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d931a7b9-2fd4-4471-ae1f-2be0232a6de4" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UnlockAccountRequest>
         <!--You may enter the following 3 items in any order-->
         <!--Optional:-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:username>?</mes:username>
         <mes:token>?</mes:token>
      </mes:UnlockAccountRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UnlockAccountRequest"/></con:call></con:operation><con:operation id="dd64ebd4-c515-49a2-a335-e8ad34517a15" isOneWay="false" action="" name="UpdateAdhocTransfer" bindingOperationName="UpdateAdhocTransfer" type="Request-Response" outputName="UpdateAdhocTransferResponse" inputName="UpdateAdhocTransferRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e4d82fce-6710-428b-b5a9-f75af5f24578" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateAdhocTransferRequest>
         <!--You may enter the following 10 items in any order-->
         <mes:scheduleId>?</mes:scheduleId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:scheduleDate>
            <typ:date format="?" value="?"/>
         </mes:scheduleDate>
         <mes:amount>?</mes:amount>
         <mes:fromAccount>
            <typ:accountType>?</typ:accountType>
            <!--Optional:-->
            <typ:accountId>?</typ:accountId>
         </mes:fromAccount>
         <mes:toAccount>
            <typ:accountType>?</typ:accountType>
            <!--Optional:-->
            <typ:accountId>?</typ:accountId>
         </mes:toAccount>
         <mes:status>?</mes:status>
         <mes:comment>?</mes:comment>
      </mes:UpdateAdhocTransferRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateAdhocTransferRequest"/></con:call></con:operation><con:operation id="8a0d5648-7576-4b38-b0f6-95eb0559b4be" isOneWay="false" action="" name="UpdateAffiliate" bindingOperationName="UpdateAffiliate" type="Request-Response" outputName="UpdateAffiliateResponse" inputName="UpdateAffiliateRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9013f754-ccad-4564-8ea3-6b610944ed58" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateAffiliateRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:affiliateId>?</mes:affiliateId>
         <mes:affiliate>
            <!--You may enter the following 23 items in any order-->
            <!--Optional:-->
            <typ:externalAffiliateId>?</typ:externalAffiliateId>
            <!--Optional:-->
            <typ:parentAffiliateId>?</typ:parentAffiliateId>
            <!--Optional:-->
            <typ:affiliateType>?</typ:affiliateType>
            <!--Optional:-->
            <typ:name>?</typ:name>
            <!--Optional:-->
            <typ:address1>?</typ:address1>
            <!--Optional:-->
            <typ:address2>?</typ:address2>
            <!--Optional:-->
            <typ:city>?</typ:city>
            <!--Optional:-->
            <typ:state>?</typ:state>
            <!--Optional:-->
            <typ:zipcode>?</typ:zipcode>
            <!--Optional:-->
            <typ:email>?</typ:email>
            <!--Optional:-->
            <typ:phone>?</typ:phone>
            <!--Optional:-->
            <typ:fax>?</typ:fax>
            <!--Optional:-->
            <typ:businessType>?</typ:businessType>
            <!--Optional:-->
            <typ:taxId>?</typ:taxId>
            <!--Optional:-->
            <typ:payoutMethod>?</typ:payoutMethod>
            <!--Optional:-->
            <typ:payoutFrequency>?</typ:payoutFrequency>
            <!--Optional:-->
            <typ:payoutFrequencyValue>?</typ:payoutFrequencyValue>
            <!--Optional:-->
            <typ:routingNunber>?</typ:routingNunber>
            <!--Optional:-->
            <typ:accountType>?</typ:accountType>
            <!--Optional:-->
            <typ:accountNumber>?</typ:accountNumber>
            <!--Optional:-->
            <typ:holdersName>?</typ:holdersName>
            <!--Optional:-->
            <typ:checkAddress>
               <!--You may enter the following 5 items in any order-->
               <!--Optional:-->
               <typ:address1>?</typ:address1>
               <!--Optional:-->
               <typ:address2>?</typ:address2>
               <!--Optional:-->
               <typ:city>?</typ:city>
               <!--Optional:-->
               <typ:state>?</typ:state>
               <!--Optional:-->
               <typ:zip>?</typ:zip>
            </typ:checkAddress>
            <!--Optional:-->
            <typ:auditInformation>
               <!--You may enter the following 6 items in any order-->
               <typ:createdOn>
                  <typ:date format="?" value="?"/>
               </typ:createdOn>
               <typ:createdBy>?</typ:createdBy>
               <typ:createdUserType>?</typ:createdUserType>
               <typ:modifiedOn>
                  <typ:date format="?" value="?"/>
               </typ:modifiedOn>
               <typ:modifiedBy>?</typ:modifiedBy>
               <typ:modifiedUserType>?</typ:modifiedUserType>
            </typ:auditInformation>
         </mes:affiliate>
      </mes:UpdateAffiliateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateAffiliateRequest"/></con:call></con:operation><con:operation id="222ac48f-c086-4a65-87c9-f9261bd07d32" isOneWay="false" action="" name="UpdateAffiliateDocument" bindingOperationName="UpdateAffiliateDocument" type="Request-Response" outputName="UpdateAffiliateDocumentResponse" inputName="UpdateAffiliateDocumentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="96beafb5-40c3-40d0-8950-e6b10ca49b13" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateAffiliateDocumentRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:affiliateId>?</mes:affiliateId>
         <!--Optional:-->
         <mes:externalAffiliateId>?</mes:externalAffiliateId>
         <mes:document>
            <!--You may enter the following 6 items in any order-->
            <!--Optional:-->
            <typ:documentId>?</typ:documentId>
            <typ:note>?</typ:note>
            <typ:name>?</typ:name>
            <typ:contentType>?</typ:contentType>
            <typ:base64EncodedContent>?</typ:base64EncodedContent>
            <!--Optional:-->
            <typ:auditInformation>
               <!--You may enter the following 6 items in any order-->
               <typ:createdOn>
                  <typ:date format="?" value="?"/>
               </typ:createdOn>
               <typ:createdBy>?</typ:createdBy>
               <typ:createdUserType>?</typ:createdUserType>
               <typ:modifiedOn>
                  <typ:date format="?" value="?"/>
               </typ:modifiedOn>
               <typ:modifiedBy>?</typ:modifiedBy>
               <typ:modifiedUserType>?</typ:modifiedUserType>
            </typ:auditInformation>
         </mes:document>
      </mes:UpdateAffiliateDocumentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateAffiliateDocumentRequest"/></con:call></con:operation><con:operation id="47895668-53ac-452a-bf57-7b1f9666de7c" isOneWay="false" action="" name="UpdateApproval" bindingOperationName="UpdateApproval" type="Request-Response" outputName="UpdateApprovalResponse" inputName="UpdateApprovalRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e31060a2-0456-4a85-86bc-5d1163817d3e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateApprovalRequest>
         <!--You may enter the following 13 items in any order-->
         <mes:approvalId>?</mes:approvalId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <mes:approvalStatus>?</mes:approvalStatus>
         <mes:approvalAttemptMode>?</mes:approvalAttemptMode>
         <!--Optional:-->
         <mes:approvalAttemptDisposition>?</mes:approvalAttemptDisposition>
         <mes:approvalType>?</mes:approvalType>
         <!--Optional:-->
         <mes:note>?</mes:note>
         <!--Optional:-->
         <mes:documentName>?</mes:documentName>
         <!--Optional:-->
         <mes:documentType>?</mes:documentType>
         <!--Optional:-->
         <mes:base64EncodedContent>?</mes:base64EncodedContent>
         <!--Optional:-->
         <mes:contentType>?</mes:contentType>
         <mes:overwriteDocument>true</mes:overwriteDocument>
      </mes:UpdateApprovalRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateApprovalRequest"/></con:call></con:operation><con:operation id="0273792f-f73b-41c0-a081-b7c8b1a203d7" isOneWay="false" action="" name="UpdateAutoEnrollmentAffiliates" bindingOperationName="UpdateAutoEnrollmentAffiliates" type="Request-Response" outputName="UpdateAutoEnrollmentAffiliatesResponse" inputName="UpdateAutoEnrollmentAffiliatesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c4b5ba32-d4d4-459b-a12c-79c95dd117e8" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateAutoEnrollmentAffiliatesRequest>
         <!--You may enter the following 7 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:enrollmentId>?</mes:enrollmentId>
         <mes:agencyId>?</mes:agencyId>
         <!--Optional:-->
         <mes:subAgencyId>?</mes:subAgencyId>
         <mes:dealerId>?</mes:dealerId>
         <!--Optional:-->
         <mes:fiMgrId>?</mes:fiMgrId>
         <!--Optional:-->
         <mes:unmatchedFiMgrId>?</mes:unmatchedFiMgrId>
      </mes:UpdateAutoEnrollmentAffiliatesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateAutoEnrollmentAffiliatesRequest"/></con:call></con:operation><con:operation id="2614bc9d-4248-43a2-b3df-994e62a3c302" isOneWay="false" action="" name="UpdateAutoPayeeInfo" bindingOperationName="UpdateAutoPayeeInfo" type="Request-Response" outputName="UpdateAutoPayeeInfoResponse" inputName="UpdateAutoPayeeInfoRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bbb26dcf-4f2e-43e7-8480-ee8dfbb83a48" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateAutoPayeeInfoRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:enrollmentId>?</mes:enrollmentId>
         <mes:payeeId>?</mes:payeeId>
         <mes:newLenderInfo>
            <!--You may enter the following 5 items in any order-->
            <!--Optional:-->
            <mes:loanNumber>?</mes:loanNumber>
            <!--Optional:-->
            <mes:payeeId>?</mes:payeeId>
            <!--Optional:-->
            <mes:name>?</mes:name>
            <!--Optional:-->
            <mes:phone>?</mes:phone>
            <!--Optional:-->
            <mes:address>
               <!--You may enter the following 5 items in any order-->
               <!--Optional:-->
               <typ:address1>?</typ:address1>
               <!--Optional:-->
               <typ:address2>?</typ:address2>
               <!--Optional:-->
               <typ:city>?</typ:city>
               <!--Optional:-->
               <typ:state>?</typ:state>
               <!--Optional:-->
               <typ:zip>?</typ:zip>
            </mes:address>
         </mes:newLenderInfo>
      </mes:UpdateAutoPayeeInfoRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateAutoPayeeInfoRequest"/></con:call></con:operation><con:operation id="57cdc574-8017-49c5-a370-34897aa5a219" isOneWay="false" action="" name="UpdateCaptureDraft" bindingOperationName="UpdateCaptureDraft" type="Request-Response" outputName="UpdateCaptureDraftResponse" inputName="UpdateCaptureDraftRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b4623b60-514f-4d0e-8330-fac18e93095c" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateCaptureDraftRequest>
         <!--You may enter the following 13 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:spaDraftId>?</mes:spaDraftId>
         <!--Optional:-->
         <mes:recurringType>?</mes:recurringType>
         <!--Optional:-->
         <mes:recurringStartDate>
            <typ:date format="?" value="?"/>
         </mes:recurringStartDate>
         <!--Optional:-->
         <mes:recurringAmount1>?</mes:recurringAmount1>
         <!--Optional:-->
         <mes:recurringDay1>?</mes:recurringDay1>
         <!--Optional:-->
         <mes:recurringAmount2>?</mes:recurringAmount2>
         <!--Optional:-->
         <mes:recurringDay2>?</mes:recurringDay2>
         <!--Optional:-->
         <mes:lumpSumDate>
            <typ:date format="?" value="?"/>
         </mes:lumpSumDate>
         <!--Optional:-->
         <mes:lumpSumAmount>?</mes:lumpSumAmount>
         <mes:lumpSumOnly>false</mes:lumpSumOnly>
      </mes:UpdateCaptureDraftRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateCaptureDraftRequest"/></con:call></con:operation><con:operation id="b27102f5-fffc-4c59-a6d1-fbd43b2aabca" isOneWay="false" action="" name="UpdateChannelAttributeValue" bindingOperationName="UpdateChannelAttributeValue" type="Request-Response" outputName="UpdateChannelAttributeValueResponse" inputName="UpdateChannelAttributeValueRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="243c7505-9446-44f6-80e0-93e4b28da7ed" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateChannelAttributeValueRequest>
         <!--You may enter the following 7 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:enrollmentId>?</mes:enrollmentId>
         <mes:firstLoanDueDate>
            <typ:date format="?" value="?"/>
         </mes:firstLoanDueDate>
         <mes:monthlyLoanAmount>?</mes:monthlyLoanAmount>
         <!--Optional:-->
         <mes:firstDebitAmount>?</mes:firstDebitAmount>
         <mes:firstDebitDate>
            <typ:date format="?" value="?"/>
         </mes:firstDebitDate>
         <!--Optional:-->
         <mes:isHalfDraft>false</mes:isHalfDraft>
      </mes:UpdateChannelAttributeValueRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateChannelAttributeValueRequest"/></con:call></con:operation><con:operation id="90b4f593-73dc-4b6c-a0ab-313b3935cc20" isOneWay="false" action="" name="UpdateClient" bindingOperationName="UpdateClient" type="Request-Response" outputName="UpdateClientResponse" inputName="UpdateClientRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="46480859-182a-44a9-9a1e-5e252192d98c" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateClientRequest>
         <!--You may enter the following 22 items in any order-->
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:referralId type="RULESET" internal="YES">
            <typ:id>?</typ:id>
         </mes:referralId>
         <!--Optional:-->
         <mes:firstname>?</mes:firstname>
         <!--Optional:-->
         <mes:middleInitial>?</mes:middleInitial>
         <!--Optional:-->
         <mes:lastname>?</mes:lastname>
         <!--Optional:-->
         <mes:ssn>?</mes:ssn>
         <!--Optional:-->
         <mes:dob>
            <typ:date format="?" value="?"/>
         </mes:dob>
         <!--Optional:-->
         <mes:address1>?</mes:address1>
         <!--Optional:-->
         <mes:address2>?</mes:address2>
         <!--Optional:-->
         <mes:city>?</mes:city>
         <!--Optional:-->
         <mes:state>?</mes:state>
         <!--Optional:-->
         <mes:zip>?</mes:zip>
         <!--Optional:-->
         <mes:phone>?</mes:phone>
         <!--Optional:-->
         <mes:WorkNumber>?</mes:WorkNumber>
         <!--Optional:-->
         <mes:mobile>?</mes:mobile>
         <!--Optional:-->
         <mes:email>?</mes:email>
         <!--Optional:-->
         <mes:oldPassword>?</mes:oldPassword>
         <!--Optional:-->
         <mes:password>?</mes:password>
         <!--Optional:-->
         <mes:svaDocument>
            <!--You may enter the following 5 items in any order-->
            <typ:note>?</typ:note>
            <!--Optional:-->
            <typ:documentType>?</typ:documentType>
            <typ:base64EncodedContent>?</typ:base64EncodedContent>
            <typ:contentType>?</typ:contentType>
            <typ:documentName>?</typ:documentName>
         </mes:svaDocument>
         <!--Optional:-->
         <mes:enrollmentStatus>?</mes:enrollmentStatus>
      </mes:UpdateClientRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateClientRequest"/></con:call></con:operation><con:operation id="49dbcd60-9f0e-4cfd-99c9-374aeb667744" isOneWay="false" action="" name="UpdateClientBankAccount" bindingOperationName="UpdateClientBankAccount" type="Request-Response" outputName="UpdateClientBankAccountResponse" inputName="UpdateClientBankAccountRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="919b28eb-ba75-429c-8dba-ae48c7b25812" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateClientBankAccountRequest>
         <!--You may enter the following 11 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:clientBankAccountId>?</mes:clientBankAccountId>
         <mes:routingNumber>?</mes:routingNumber>
         <mes:accountType>?</mes:accountType>
         <mes:accountNumber>?</mes:accountNumber>
         <mes:holdersName>?</mes:holdersName>
         <!--Optional:-->
         <mes:externalBankId>?</mes:externalBankId>
         <!--Optional:-->
         <mes:accountNature>?</mes:accountNature>
         <!--Optional:-->
         <mes:authorizationFormat>?</mes:authorizationFormat>
      </mes:UpdateClientBankAccountRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateClientBankAccountRequest"/></con:call></con:operation><con:operation id="b3e39628-8a50-4e08-b8dc-434da752acdd" isOneWay="false" action="" name="UpdateCoClient" bindingOperationName="UpdateCoClient" type="Request-Response" outputName="UpdateCoClientResponse" inputName="UpdateCoClientRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7fedc6d9-1c40-426c-b7e7-0b553415e9ad" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateCoClientRequest operation="EDIT">
         <!--You may enter the following 12 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:clientId>?</mes:clientId>
         <mes:coClientFirstname>?</mes:coClientFirstname>
         <mes:coClientLastname>?</mes:coClientLastname>
         <!--Optional:-->
         <mes:coClientMiddleInitial>?</mes:coClientMiddleInitial>
         <!--Optional:-->
         <mes:coClientSsn>?</mes:coClientSsn>
         <!--Optional:-->
         <mes:coClientDob>
            <typ:date format="?" value="?"/>
         </mes:coClientDob>
         <!--Optional:-->
         <mes:coClientPhone>?</mes:coClientPhone>
         <!--Optional:-->
         <mes:coClientWorkNumber>?</mes:coClientWorkNumber>
         <!--Optional:-->
         <mes:coClientMobile>?</mes:coClientMobile>
         <!--Optional:-->
         <mes:coClientEmail>?</mes:coClientEmail>
         <!--Optional:-->
         <mes:coSignatory>?</mes:coSignatory>
      </mes:UpdateCoClientRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateCoClientRequest"/></con:call></con:operation><con:operation id="2a6aac45-a2a5-4e87-b0e4-4b99f489fba8" isOneWay="false" action="" name="UpdateDraftItems" bindingOperationName="UpdateDraftItems" type="Request-Response" outputName="UpdateDraftItemsResponse" inputName="UpdateDraftItemsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2b48c49e-200a-4bee-90f4-60e45db9d0e5" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateDraftItemsRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:scheduleList>
            <!--1 or more repetitions:-->
            <typ:draftItemSchedule>
               <!--You may enter the following 14 items in any order-->
               <!--Optional:-->
               <typ:scheduleId>?</typ:scheduleId>
               <!--Optional:-->
               <typ:clientId>?</typ:clientId>
               <!--Optional:-->
               <typ:externalClientId>?</typ:externalClientId>
               <!--Optional:-->
               <typ:externalReferenceId>?</typ:externalReferenceId>
               <!--Optional:-->
               <typ:clientBankAccountId>?</typ:clientBankAccountId>
               <typ:status>?</typ:status>
               <typ:amount>?</typ:amount>
               <!--Optional:-->
               <typ:scheduleDate>
                  <typ:date format="?" value="?"/>
               </typ:scheduleDate>
               <!--Optional:-->
               <typ:updateRemainingSchedules>false</typ:updateRemainingSchedules>
               <!--Optional:-->
               <typ:allowDuplicates>false</typ:allowDuplicates>
               <!--Optional:-->
               <typ:comment>?</typ:comment>
               <!--Optional:-->
               <typ:remark>?</typ:remark>
               <!--Optional:-->
               <typ:accountNature>?</typ:accountNature>
               <!--Optional:-->
               <typ:authorizationFormat>?</typ:authorizationFormat>
            </typ:draftItemSchedule>
         </mes:scheduleList>
      </mes:UpdateDraftItemsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateDraftItemsRequest"/></con:call></con:operation><con:operation id="ccbde827-0af5-44e0-b531-30bac4fe10fd" isOneWay="false" action="" name="UpdateDraftSchedule" bindingOperationName="UpdateDraftSchedule" type="Request-Response" outputName="UpdateDraftScheduleResponse" inputName="UpdateDraftScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="47902d8d-a7b4-4ab7-a727-cb92d54fc8ae" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateDraftScheduleRequest>
         <!--You may enter the following 15 items in any order-->
         <!--Optional:-->
         <mes:scheduleId>?</mes:scheduleId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <!--Optional:-->
         <mes:clientBankAccountId>?</mes:clientBankAccountId>
         <mes:status>?</mes:status>
         <mes:amount>?</mes:amount>
         <!--Optional:-->
         <mes:scheduleDate>
            <typ:date format="?" value="?"/>
         </mes:scheduleDate>
         <!--Optional:-->
         <mes:updateRemainingSchedules>false</mes:updateRemainingSchedules>
         <!--Optional:-->
         <mes:allowDuplicates>false</mes:allowDuplicates>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <!--Optional:-->
         <mes:remark>?</mes:remark>
         <!--Optional:-->
         <mes:accountNature>?</mes:accountNature>
         <!--Optional:-->
         <mes:authorizationFormat>?</mes:authorizationFormat>
      </mes:UpdateDraftScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateDraftScheduleRequest"/></con:call></con:operation><con:operation id="d6f6072f-f598-42bf-a25a-0d5cd9a693fe" isOneWay="false" action="" name="UpdateEnrollmentError" bindingOperationName="UpdateEnrollmentError" type="Request-Response" outputName="UpdateEnrollmentErrorResponse" inputName="UpdateEnrollmentErrorRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="10ae8aeb-a542-43b8-9919-7197a6273f26" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateEnrollmentErrorRequest>
         <!--You may enter the following 6 items in any order-->
         <mes:enrollmentErrorId>?</mes:enrollmentErrorId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:reason>?</mes:reason>
         <!--Optional:-->
         <mes:status>?</mes:status>
      </mes:UpdateEnrollmentErrorRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateEnrollmentErrorRequest"/></con:call></con:operation><con:operation id="e7a9cddb-ccb7-4576-a938-2e62300bb02b" isOneWay="false" action="" name="UpdateEnrollmentTicket" bindingOperationName="UpdateEnrollmentTicket" type="Request-Response" outputName="UpdateEnrollmentTicketResponse" inputName="UpdateEnrollmentTicketRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="30d09d82-9d5a-456b-ac5b-17655ba3c966" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateEnrollmentTicketRequest>
         <!--You may enter the following 15 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:enrollmentTicketId>?</mes:enrollmentTicketId>
         <!--Optional:-->
         <mes:transactionId>?</mes:transactionId>
         <!--Optional:-->
         <mes:scheduleId>?</mes:scheduleId>
         <mes:ticketType>?</mes:ticketType>
         <mes:ticketStatus>?</mes:ticketStatus>
         <mes:subject>?</mes:subject>
         <mes:assigneeId>?</mes:assigneeId>
         <!--Optional:-->
         <mes:reviewDate>
            <typ:date format="?" value="?"/>
         </mes:reviewDate>
         <mes:assosiatedAmount>?</mes:assosiatedAmount>
         <mes:reason>?</mes:reason>
         <mes:comment>?</mes:comment>
         <mes:message>?</mes:message>
      </mes:UpdateEnrollmentTicketRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateEnrollmentTicketRequest"/></con:call></con:operation><con:operation id="cadc0d73-a83c-4753-bd69-021cf414bb80" isOneWay="false" action="" name="UpdateFeeBasis" bindingOperationName="UpdateFeeBasis" type="Request-Response" outputName="UpdateFeeBasisResponse" inputName="UpdateFeeBasisRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e9a18359-ed11-437d-90f5-1b975747c074" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateFeeBasisRequest>
         <!--You may enter the following 6 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:debtFeeInformation>
            <typ:originalDebt>?</typ:originalDebt>
            <typ:dscFeeBasis>
               <!--You have a CHOICE of the next 2 items at this level-->
               <typ:Percentage>?</typ:Percentage>
               <typ:Fixed>?</typ:Fixed>
            </typ:dscFeeBasis>
         </mes:debtFeeInformation>
         <!--Optional:-->
         <mes:numberOfTradeLines>?</mes:numberOfTradeLines>
         <!--Optional:-->
         <mes:tradeLines>
            <!--1 or more repetitions:-->
            <typ:tradeLine>
               <typ:tradeLineName>?</typ:tradeLineName>
               <typ:currentBalance>?</typ:currentBalance>
            </typ:tradeLine>
         </mes:tradeLines>
      </mes:UpdateFeeBasisRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateFeeBasisRequest"/></con:call></con:operation><con:operation id="ea27e617-f44a-454f-9d5f-2ead6ddd9e08" isOneWay="false" action="" name="UpdateFeeSchedule" bindingOperationName="UpdateFeeSchedule" type="Request-Response" outputName="UpdateFeeScheduleResponse" inputName="UpdateFeeScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3d41e876-633b-4bdb-a575-7a6c05cfde4e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateFeeScheduleRequest>
         <!--You may enter the following 11 items in any order-->
         <!--Optional:-->
         <mes:scheduleId>?</mes:scheduleId>
         <!--Optional:-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <mes:amount>?</mes:amount>
         <mes:scheduleDate>
            <typ:date format="?" value="?"/>
         </mes:scheduleDate>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <!--Optional:-->
         <mes:status>?</mes:status>
         <mes:updateRemainingSchedules>?</mes:updateRemainingSchedules>
         <!--Optional:-->
         <mes:remark>?</mes:remark>
      </mes:UpdateFeeScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateFeeScheduleRequest"/></con:call></con:operation><con:operation id="a3f26147-e215-4a7c-80a5-72e802775976" isOneWay="false" action="" name="UpdatePartialEnrollment" bindingOperationName="UpdatePartialEnrollment" type="Request-Response" outputName="UpdatePartialEnrollmentResponse" inputName="UpdatePartialEnrollmentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="90f831b2-d601-43bc-8c6b-873e809d068a" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdatePartialEnrollmentRequest>
         <!--You may enter the following 2 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:partialEnrollmentInfo>
            <!--Optional:-->
            <typ:partialEnrollmentId>?</typ:partialEnrollmentId>
            <!--Optional:-->
            <typ:affiliatesInfo>
               <!--Zero or more repetitions:-->
               <typ:partialEnrollmentAffiliateInfo>
                  <typ:affiliateId>?</typ:affiliateId>
                  <typ:affiliateType>?</typ:affiliateType>
               </typ:partialEnrollmentAffiliateInfo>
            </typ:affiliatesInfo>
            <!--Optional:-->
            <typ:partnerId>?</typ:partnerId>
            <!--Optional:-->
            <typ:partner>
               <!--Optional:-->
               <typ:partnerId>?</typ:partnerId>
               <!--Optional:-->
               <typ:partnerName>?</typ:partnerName>
               <!--Optional:-->
               <typ:partnerAddress1>?</typ:partnerAddress1>
               <!--Optional:-->
               <typ:partnerAddress2>?</typ:partnerAddress2>
               <!--Optional:-->
               <typ:partnerCity>?</typ:partnerCity>
               <!--Optional:-->
               <typ:partnerState>?</typ:partnerState>
               <!--Optional:-->
               <typ:partnerZipcode>?</typ:partnerZipcode>
               <!--Optional:-->
               <typ:partnerPhone>?</typ:partnerPhone>
               <!--Optional:-->
               <typ:partnerEmail>?</typ:partnerEmail>
               <!--Optional:-->
               <typ:userName>?</typ:userName>
               <!--Optional:-->
               <typ:status>?</typ:status>
               <!--Optional:-->
               <typ:auditInformation>
                  <!--You may enter the following 6 items in any order-->
                  <typ:createdOn>
                     <typ:date format="?" value="?"/>
                  </typ:createdOn>
                  <typ:createdBy>?</typ:createdBy>
                  <typ:createdUserType>?</typ:createdUserType>
                  <typ:modifiedOn>
                     <typ:date format="?" value="?"/>
                  </typ:modifiedOn>
                  <typ:modifiedBy>?</typ:modifiedBy>
                  <typ:modifiedUserType>?</typ:modifiedUserType>
               </typ:auditInformation>
            </typ:partner>
            <!--Optional:-->
            <typ:affiliates>
               <!--Zero or more repetitions:-->
               <typ:partialEnrollmentAffiliates>
                  <!--You may enter the following 43 items in any order-->
                  <typ:subscriberId>?</typ:subscriberId>
                  <!--Optional:-->
                  <typ:affiliateId>?</typ:affiliateId>
                  <!--Optional:-->
                  <typ:externalAffiliateId>?</typ:externalAffiliateId>
                  <!--Optional:-->
                  <typ:parentAffiliateId>?</typ:parentAffiliateId>
                  <!--Optional:-->
                  <typ:parentExternalAffiliateId>?</typ:parentExternalAffiliateId>
                  <!--Optional:-->
                  <typ:externalId>?</typ:externalId>
                  <typ:affiliateType>?</typ:affiliateType>
                  <typ:name>?</typ:name>
                  <typ:address1>?</typ:address1>
                  <!--Optional:-->
                  <typ:address2>?</typ:address2>
                  <typ:city>?</typ:city>
                  <typ:state>?</typ:state>
                  <typ:zipcode>?</typ:zipcode>
                  <typ:email>?</typ:email>
                  <typ:phone>?</typ:phone>
                  <!--Optional:-->
                  <typ:fax>?</typ:fax>
                  <typ:businessType>?</typ:businessType>
                  <!--Optional:-->
                  <typ:taxId>?</typ:taxId>
                  <!--Optional:-->
                  <typ:payoutMethod>ACH</typ:payoutMethod>
                  <!--Optional:-->
                  <typ:payoutFrequency>MONTHLY</typ:payoutFrequency>
                  <!--Optional:-->
                  <typ:payoutFrequencyValue>15</typ:payoutFrequencyValue>
                  <!--Optional:-->
                  <typ:bankName>?</typ:bankName>
                  <!--Optional:-->
                  <typ:routingNunber>?</typ:routingNunber>
                  <!--Optional:-->
                  <typ:accountType>?</typ:accountType>
                  <!--Optional:-->
                  <typ:accountNumber>?</typ:accountNumber>
                  <!--Optional:-->
                  <typ:holdersName>?</typ:holdersName>
                  <!--Optional:-->
                  <typ:bankAddress1>?</typ:bankAddress1>
                  <!--Optional:-->
                  <typ:bankAddress2>?</typ:bankAddress2>
                  <!--Optional:-->
                  <typ:bankCity>?</typ:bankCity>
                  <!--Optional:-->
                  <typ:bankState>?</typ:bankState>
                  <!--Optional:-->
                  <typ:bankZipcode>?</typ:bankZipcode>
                  <!--Optional:-->
                  <typ:signatureDate>
                     <typ:date format="?" value="?"/>
                  </typ:signatureDate>
                  <!--Optional:-->
                  <typ:status>?</typ:status>
                  <!--Optional:-->
                  <typ:collectedBalance>?</typ:collectedBalance>
                  <!--Optional:-->
                  <typ:pendingBalance>?</typ:pendingBalance>
                  <!--Optional:-->
                  <typ:isPaidAsAdvance>?</typ:isPaidAsAdvance>
                  <!--Optional:-->
                  <typ:checkAddress>
                     <!--You may enter the following 5 items in any order-->
                     <!--Optional:-->
                     <typ:address1>?</typ:address1>
                     <!--Optional:-->
                     <typ:address2>?</typ:address2>
                     <!--Optional:-->
                     <typ:city>?</typ:city>
                     <!--Optional:-->
                     <typ:state>?</typ:state>
                     <!--Optional:-->
                     <typ:zip>?</typ:zip>
                  </typ:checkAddress>
                  <!--Optional:-->
                  <typ:isReferral>?</typ:isReferral>
                  <!--Optional:-->
                  <typ:referralStartDate>
                     <typ:date format="?" value="?"/>
                  </typ:referralStartDate>
                  <!--Optional:-->
                  <typ:referralEndDate>
                     <typ:date format="?" value="?"/>
                  </typ:referralEndDate>
                  <!--Optional:-->
                  <typ:fixed>
                     <!--Zero or more repetitions:-->
                     <typ:cycle>
                        <!--You may enter the following 3 items in any order-->
                        <typ:distType>?</typ:distType>
                        <typ:cycleId>?</typ:cycleId>
                        <typ:value>?</typ:value>
                     </typ:cycle>
                  </typ:fixed>
                  <!--Optional:-->
                  <typ:payoutRule>?</typ:payoutRule>
                  <!--Optional:-->
                  <typ:auditInformation>
                     <!--You may enter the following 6 items in any order-->
                     <typ:createdOn>
                        <typ:date format="?" value="?"/>
                     </typ:createdOn>
                     <typ:createdBy>?</typ:createdBy>
                     <typ:createdUserType>?</typ:createdUserType>
                     <typ:modifiedOn>
                        <typ:date format="?" value="?"/>
                     </typ:modifiedOn>
                     <typ:modifiedBy>?</typ:modifiedBy>
                     <typ:modifiedUserType>?</typ:modifiedUserType>
                  </typ:auditInformation>
               </typ:partialEnrollmentAffiliates>
            </typ:affiliates>
            <!--Optional:-->
            <typ:status>?</typ:status>
            <!--Optional:-->
            <typ:firstName>?</typ:firstName>
            <!--Optional:-->
            <typ:lastName>?</typ:lastName>
            <!--Optional:-->
            <typ:address1>?</typ:address1>
            <!--Optional:-->
            <typ:address2>?</typ:address2>
            <!--Optional:-->
            <typ:city>?</typ:city>
            <!--Optional:-->
            <typ:state>?</typ:state>
            <!--Optional:-->
            <typ:zipcode>?</typ:zipcode>
            <!--Optional:-->
            <typ:emailAddress>?</typ:emailAddress>
            <!--Optional:-->
            <typ:phoneNumber1>?</typ:phoneNumber1>
            <!--Optional:-->
            <typ:phoneNumber2>?</typ:phoneNumber2>
            <!--Optional:-->
            <typ:flex_1>?</typ:flex_1>
            <!--Optional:-->
            <typ:flex_2>?</typ:flex_2>
            <!--Optional:-->
            <typ:flex_3>?</typ:flex_3>
            <!--Optional:-->
            <typ:flex_4>?</typ:flex_4>
            <!--Optional:-->
            <typ:flex_5>?</typ:flex_5>
            <!--Optional:-->
            <typ:flex_6>?</typ:flex_6>
            <!--Optional:-->
            <typ:flex_7>?</typ:flex_7>
            <!--Optional:-->
            <typ:flex_8>?</typ:flex_8>
            <!--Optional:-->
            <typ:flex_9>?</typ:flex_9>
            <!--Optional:-->
            <typ:flex_10>?</typ:flex_10>
            <!--Optional:-->
            <typ:flex_11>?</typ:flex_11>
            <!--Optional:-->
            <typ:flex_12>?</typ:flex_12>
            <!--Optional:-->
            <typ:flex_13>?</typ:flex_13>
            <!--Optional:-->
            <typ:flex_14>?</typ:flex_14>
            <!--Optional:-->
            <typ:flex_15>?</typ:flex_15>
            <!--Optional:-->
            <typ:flex_16>?</typ:flex_16>
            <!--Optional:-->
            <typ:flex_17>?</typ:flex_17>
            <!--Optional:-->
            <typ:flex_18>?</typ:flex_18>
            <!--Optional:-->
            <typ:flex_19>?</typ:flex_19>
            <!--Optional:-->
            <typ:flex_20>?</typ:flex_20>
            <!--Optional:-->
            <typ:flex_21>?</typ:flex_21>
            <!--Optional:-->
            <typ:flex_22>?</typ:flex_22>
            <!--Optional:-->
            <typ:flex_23>?</typ:flex_23>
            <!--Optional:-->
            <typ:flex_24>?</typ:flex_24>
            <!--Optional:-->
            <typ:flex_25>?</typ:flex_25>
            <!--Optional:-->
            <typ:flex_26>?</typ:flex_26>
            <!--Optional:-->
            <typ:flex_27>?</typ:flex_27>
            <!--Optional:-->
            <typ:flex_28>?</typ:flex_28>
            <!--Optional:-->
            <typ:flex_29>?</typ:flex_29>
            <!--Optional:-->
            <typ:flex_30>?</typ:flex_30>
            <!--Optional:-->
            <typ:auditInformation>
               <!--You may enter the following 6 items in any order-->
               <typ:createdOn>
                  <typ:date format="?" value="?"/>
               </typ:createdOn>
               <typ:createdBy>?</typ:createdBy>
               <typ:createdUserType>?</typ:createdUserType>
               <typ:modifiedOn>
                  <typ:date format="?" value="?"/>
               </typ:modifiedOn>
               <typ:modifiedBy>?</typ:modifiedBy>
               <typ:modifiedUserType>?</typ:modifiedUserType>
            </typ:auditInformation>
         </mes:partialEnrollmentInfo>
      </mes:UpdatePartialEnrollmentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdatePartialEnrollmentRequest"/></con:call></con:operation><con:operation id="816cca00-6e2d-4a87-8105-ad115f9cd01d" isOneWay="false" action="" name="UpdatePartialEnrollmentStatus" bindingOperationName="UpdatePartialEnrollmentStatus" type="Request-Response" outputName="UpdatePartialEnrollmentStatusResponse" inputName="UpdatePartialEnrollmentStatusRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="152635a0-4cdd-4727-a7ea-3e825e7d395c" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdatePartialEnrollmentStatusRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:partialEnrollmentId>?</mes:partialEnrollmentId>
         <mes:status>?</mes:status>
      </mes:UpdatePartialEnrollmentStatusRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdatePartialEnrollmentStatusRequest"/></con:call></con:operation><con:operation id="ff0e3508-e996-4fa8-825d-bcb9d0fbcde9" isOneWay="false" action="" name="UpdatePayment" bindingOperationName="UpdatePayment" type="Request-Response" outputName="UpdatePaymentResponse" inputName="UpdatePaymentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3cc8f070-cc7a-41f9-b876-38a75a5152f6" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdatePaymentRequest>
         <!--You may enter the following 2 items in any order-->
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <mes:updatePaymentList>
            <!--1 or more repetitions:-->
            <typ:updatePayment>
               <!--You may enter the following 11 items in any order-->
               <typ:subscriberId>?</typ:subscriberId>
               <typ:clientId>?</typ:clientId>
               <typ:paymentId>?</typ:paymentId>
               <typ:payeeId>?</typ:payeeId>
               <typ:accountNumber>?</typ:accountNumber>
               <typ:transactionMethod>?</typ:transactionMethod>
               <typ:amount>?</typ:amount>
               <typ:dueDate>
                  <typ:date format="?" value="?"/>
               </typ:dueDate>
               <typ:comment>?</typ:comment>
               <!--Optional:-->
               <typ:accountNature>?</typ:accountNature>
               <!--Optional:-->
               <typ:authorizationFormat>?</typ:authorizationFormat>
            </typ:updatePayment>
         </mes:updatePaymentList>
      </mes:UpdatePaymentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdatePaymentRequest"/></con:call></con:operation><con:operation id="3517ee9b-13ff-4263-a758-6f94838268cc" isOneWay="false" action="" name="UpdatePaymentStatus" bindingOperationName="UpdatePaymentStatus" type="Request-Response" outputName="UpdatePaymentStatusResponse" inputName="UpdatePaymentStatusRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fbaf6eca-625e-45a1-9255-f971908d7f15" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdatePaymentStatusRequest>
         <!--You may enter the following 4 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:clientId>?</mes:clientId>
         <mes:paymentId>?</mes:paymentId>
         <mes:status>?</mes:status>
      </mes:UpdatePaymentStatusRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdatePaymentStatusRequest"/></con:call></con:operation><con:operation id="886c6ba3-5f90-429c-a952-b39344effec7" isOneWay="false" action="" name="UpdatePhonePaymentInquiry" bindingOperationName="UpdatePhonePaymentInquiry" type="Request-Response" outputName="UpdatePhonePaymentInquiryResponse" inputName="UpdatePhonePaymentInquiryRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dffa20dc-9945-4cd4-b1cd-3f377d411622" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdatePhonePaymentInquiryRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:postedTransactionId>?</mes:postedTransactionId>
         <mes:payeeId>?</mes:payeeId>
      </mes:UpdatePhonePaymentInquiryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdatePhonePaymentInquiryRequest"/></con:call></con:operation><con:operation id="5d10e45e-e58a-41ac-8481-81b4b090cbab" isOneWay="false" action="" name="UpdateReturnSchedule" bindingOperationName="UpdateReturnSchedule" type="Request-Response" outputName="UpdateReturnScheduleResponse" inputName="UpdateReturnScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="64d926dd-3940-41d8-bea3-5381f60a0f1a" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateReturnScheduleRequest>
         <!--You may enter the following 7 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:scheduleId>?</mes:scheduleId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <!--Optional:-->
         <mes:effectiveDate>
            <typ:date format="?" value="?"/>
         </mes:effectiveDate>
         <!--Optional:-->
         <mes:amount>?</mes:amount>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <!--Optional:-->
         <mes:status>?</mes:status>
      </mes:UpdateReturnScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateReturnScheduleRequest"/></con:call></con:operation><con:operation id="d49978bc-5ec6-4411-a6e7-8cf2541d2b05" isOneWay="false" action="" name="UpdateRuleSet" bindingOperationName="UpdateRuleSet" type="Request-Response" outputName="UpdateRuleSetResponse" inputName="UpdateRuleSetRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="35459786-00ea-4195-a4fb-afd132db3a29" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateRuleSetRequest>
         <!--You may enter the following 5 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:ruleSetId>?</mes:ruleSetId>
         <!--Optional:-->
         <mes:externalRuleSetId>?</mes:externalRuleSetId>
         <!--Optional:-->
         <mes:name>?</mes:name>
         <!--Optional:-->
         <mes:status>?</mes:status>
      </mes:UpdateRuleSetRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateRuleSetRequest"/></con:call></con:operation><con:operation id="4b14d001-c088-4809-92cb-eff614faae27" isOneWay="false" action="" name="UpdateRuleSetDefinition" bindingOperationName="UpdateRuleSetDefinition" type="Request-Response" outputName="UpdateRuleSetDefinitionResponse" inputName="UpdateRuleSetDefinitionRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="14afcdf0-2261-4c36-82f5-19b11e713f22" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateRuleSetDefinitionRequest>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:ruleSetId>?</mes:ruleSetId>
         <!--Optional:-->
         <mes:externalRuleSetId>?</mes:externalRuleSetId>
         <!--Zero or more repetitions:-->
         <mes:commissionSet affiliateId="?" externalAffiliateId="?" feeId="?" externalFeeId="?">
            <typ:number>?</typ:number>
            <typ:amount>?</typ:amount>
            <typ:basis>?</typ:basis>
            <!--Optional:-->
            <typ:distributionRule>?</typ:distributionRule>
            <!--Optional:-->
            <typ:occuranceType>?</typ:occuranceType>
            <!--Optional:-->
            <typ:occuranceRange>
               <!--You may enter the following 2 items in any order-->
               <typ:startValue>?</typ:startValue>
               <typ:endValue>?</typ:endValue>
            </typ:occuranceRange>
         </mes:commissionSet>
         <mes:makeDefault>true</mes:makeDefault>
      </mes:UpdateRuleSetDefinitionRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateRuleSetDefinitionRequest"/></con:call></con:operation><con:operation id="86c33e6d-e2aa-4cd1-843d-ebfd96eedcda" isOneWay="false" action="" name="UpdateSettlementSchedule" bindingOperationName="UpdateSettlementSchedule" type="Request-Response" outputName="UpdateSettlementScheduleResponse" inputName="UpdateSettlementScheduleRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2998eeaa-2648-4981-8f1b-78c31850fd16" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateSettlementScheduleRequest>
         <!--You may enter the following 21 items in any order-->
         <mes:settlementId>?</mes:settlementId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:externalReferenceId>?</mes:externalReferenceId>
         <mes:payeeId>?</mes:payeeId>
         <!--Optional:-->
         <mes:payeeAddressId>?</mes:payeeAddressId>
         <!--Optional:-->
         <mes:PayeeExternalAddressId>?</mes:PayeeExternalAddressId>
         <!--Optional:-->
         <mes:payeeContactId>?</mes:payeeContactId>
         <!--Optional:-->
         <mes:payeeExternalContactId>?</mes:payeeExternalContactId>
         <!--Optional:-->
         <mes:payeeBankAccountId>?</mes:payeeBankAccountId>
         <!--Optional:-->
         <mes:PayeeBankExternalAccountId>?</mes:PayeeBankExternalAccountId>
         <mes:currentBalance>?</mes:currentBalance>
         <mes:settlementAmount>?</mes:settlementAmount>
         <!--Optional:-->
         <mes:settlementReference>?</mes:settlementReference>
         <!--Optional:-->
         <mes:numPayments>?</mes:numPayments>
         <mes:accountNumber>?</mes:accountNumber>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <!--Optional:-->
         <mes:negotiator>?</mes:negotiator>
         <mes:isApprovalRequired>true</mes:isApprovalRequired>
         <!--Optional:-->
         <mes:settlementScheduleList>
            <!--Zero or more repetitions:-->
            <mes:SettlementScheduleInfo scheduleId="?" operation="?">
               <!--You may enter the following 6 items in any order-->
               <typ:effectiveDate>
                  <typ:date format="?" value="?"/>
               </typ:effectiveDate>
               <typ:paymentAmount>?</typ:paymentAmount>
               <typ:payeeId>?</typ:payeeId>
               <!--Optional:-->
               <typ:externalReferenceId>?</typ:externalReferenceId>
               <!--Optional:-->
               <typ:externalCheckNumber>?</typ:externalCheckNumber>
               <typ:transactionMethod>?</typ:transactionMethod>
            </mes:SettlementScheduleInfo>
         </mes:settlementScheduleList>
      </mes:UpdateSettlementScheduleRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateSettlementScheduleRequest"/></con:call></con:operation><con:operation id="828b001f-3998-4b42-9325-dbda877bbe05" isOneWay="false" action="" name="UpdateSignatureDate" bindingOperationName="UpdateSignatureDate" type="Request-Response" outputName="UpdateSignatureDateResponse" inputName="UpdateSignatureDateRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f735d114-c094-4d07-9379-cdc72895693d" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateSignatureDateRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:enrollmentId>?</mes:enrollmentId>
         <mes:signatureDate>
            <typ:date format="?" value="?"/>
         </mes:signatureDate>
      </mes:UpdateSignatureDateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateSignatureDateRequest"/></con:call></con:operation><con:operation id="842e7200-be79-479f-9c27-fbe93060edc9" isOneWay="false" action="" name="UpdateSubscriberPartner" bindingOperationName="UpdateSubscriberPartner" type="Request-Response" outputName="UpdateSubscriberPartnerResponse" inputName="UpdateSubscriberPartnerRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e5073c65-ec21-4a3f-82d4-d4951842aa4d" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateSubscriberPartnerRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscriberId>?</mes:subscriberId>
         <mes:partner>
            <!--Optional:-->
            <typ:partnerId>?</typ:partnerId>
            <!--Optional:-->
            <typ:partnerName>?</typ:partnerName>
            <!--Optional:-->
            <typ:partnerAddress1>?</typ:partnerAddress1>
            <!--Optional:-->
            <typ:partnerAddress2>?</typ:partnerAddress2>
            <!--Optional:-->
            <typ:partnerCity>?</typ:partnerCity>
            <!--Optional:-->
            <typ:partnerState>?</typ:partnerState>
            <!--Optional:-->
            <typ:partnerZipcode>?</typ:partnerZipcode>
            <!--Optional:-->
            <typ:partnerPhone>?</typ:partnerPhone>
            <!--Optional:-->
            <typ:partnerEmail>?</typ:partnerEmail>
            <!--Optional:-->
            <typ:userName>?</typ:userName>
            <!--Optional:-->
            <typ:status>?</typ:status>
            <!--Optional:-->
            <typ:auditInformation>
               <!--You may enter the following 6 items in any order-->
               <typ:createdOn>
                  <typ:date format="?" value="?"/>
               </typ:createdOn>
               <typ:createdBy>?</typ:createdBy>
               <typ:createdUserType>?</typ:createdUserType>
               <typ:modifiedOn>
                  <typ:date format="?" value="?"/>
               </typ:modifiedOn>
               <typ:modifiedBy>?</typ:modifiedBy>
               <typ:modifiedUserType>?</typ:modifiedUserType>
            </typ:auditInformation>
         </mes:partner>
         <!--Optional:-->
         <mes:partnerConfigs>
            <!--1 or more repetitions:-->
            <mes:config>
               <mes:name>?</mes:name>
               <mes:value>?</mes:value>
            </mes:config>
         </mes:partnerConfigs>
      </mes:UpdateSubscriberPartnerRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateSubscriberPartnerRequest"/></con:call></con:operation><con:operation id="a6ce1034-3bcb-411a-8ff1-1025c6df6b59" isOneWay="false" action="" name="UpdateSubscriberPayee" bindingOperationName="UpdateSubscriberPayee" type="Request-Response" outputName="UpdateSubscriberPayeeResponse" inputName="UpdateSubscriberPayeeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0c1aa31a-c94e-4d01-a106-3257e785d14d" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateSubscriberPayeeRequest>
         <!--You may enter the following 13 items in any order-->
         <!--Optional:-->
         <mes:payeeId>?</mes:payeeId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:subscriberPayeeId>?</mes:subscriberPayeeId>
         <mes:payeeName>?</mes:payeeName>
         <!--Optional:-->
         <mes:payeeStatus>true</mes:payeeStatus>
         <!--Optional:-->
         <mes:payeeDescription>?</mes:payeeDescription>
         <!--Optional:-->
         <mes:payeeWebsite>?</mes:payeeWebsite>
         <!--Optional:-->
         <mes:externalPayeeId>?</mes:externalPayeeId>
         <!--Optional:-->
         <mes:faxNo>?</mes:faxNo>
         <!--Optional:-->
         <mes:phoneNo>?</mes:phoneNo>
         <!--Optional:-->
         <mes:payeeAdresses>
            <!--Zero or more repetitions:-->
            <mes:address operation="?">
               <!--You may enter the following 7 items in any order-->
               <!--Optional:-->
               <typ:id>?</typ:id>
               <!--Optional:-->
               <typ:externalId>?</typ:externalId>
               <!--Optional:-->
               <typ:address1>?</typ:address1>
               <!--Optional:-->
               <typ:address2>?</typ:address2>
               <!--Optional:-->
               <typ:city>?</typ:city>
               <!--Optional:-->
               <typ:state>?</typ:state>
               <!--Optional:-->
               <typ:zip>?</typ:zip>
            </mes:address>
         </mes:payeeAdresses>
         <!--Optional:-->
         <mes:payeeContacts>
            <!--Zero or more repetitions:-->
            <mes:contact operation="?">
               <!--You may enter the following 10 items in any order-->
               <!--Optional:-->
               <typ:id>?</typ:id>
               <!--Optional:-->
               <typ:externalId>?</typ:externalId>
               <!--Optional:-->
               <typ:department>?</typ:department>
               <typ:name>?</typ:name>
               <!--Optional:-->
               <typ:title>?</typ:title>
               <!--Optional:-->
               <typ:homePhone ext="?">?</typ:homePhone>
               <!--Optional:-->
               <typ:businessPhone ext="?">?</typ:businessPhone>
               <!--Optional:-->
               <typ:mobilePhone>?</typ:mobilePhone>
               <!--Optional:-->
               <typ:fax>?</typ:fax>
               <!--Optional:-->
               <typ:email>?</typ:email>
            </mes:contact>
         </mes:payeeContacts>
         <!--Optional:-->
         <mes:payeeBankAccounts>
            <!--Zero or more repetitions:-->
            <mes:account operation="?">
               <!--You may enter the following 9 items in any order-->
               <!--Optional:-->
               <typ:id>?</typ:id>
               <!--Optional:-->
               <typ:externalId>?</typ:externalId>
               <!--Optional:-->
               <typ:bankName>?</typ:bankName>
               <typ:routingNumber>?</typ:routingNumber>
               <!--Optional:-->
               <typ:accountHolderName>?</typ:accountHolderName>
               <!--Optional:-->
               <typ:accountNumber>?</typ:accountNumber>
               <!--Optional:-->
               <typ:accountType>?</typ:accountType>
               <!--Optional:-->
               <typ:status>?</typ:status>
               <!--Optional:-->
               <typ:accountLabel>?</typ:accountLabel>
            </mes:account>
         </mes:payeeBankAccounts>
      </mes:UpdateSubscriberPayeeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateSubscriberPayeeRequest"/></con:call></con:operation><con:operation id="d8ce0bae-37b0-4978-9077-f4d02e9c21c8" isOneWay="false" action="" name="UpdateSubscriberTransactionReceipt" bindingOperationName="UpdateSubscriberTransactionReceipt" type="Request-Response" outputName="UpdateSubscriberTransactionReceiptResponse" inputName="UpdateSubscriberTransactionReceiptRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a32cab22-fa66-427a-8c74-75f8e282b726" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateSubscriberTransactionReceiptRequest>
         <!--You may enter the following 3 items in any order-->
         <mes:subscribersId>?</mes:subscribersId>
         <mes:transactionClassId>?</mes:transactionClassId>
         <mes:status>?</mes:status>
      </mes:UpdateSubscriberTransactionReceiptRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateSubscriberTransactionReceiptRequest"/></con:call></con:operation><con:operation id="dfdb31d1-c1c9-45d0-b2b2-d0d2067ff351" isOneWay="false" action="" name="UpdateSubscriberUser" bindingOperationName="UpdateSubscriberUser" type="Request-Response" outputName="UpdateSubscriberUserResponse" inputName="UpdateSubscriberUserRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3d0e255b-ca6a-4a6c-84dd-b5be392ca54f" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UpdateSubscriberUserRequest>
         <!--You may enter the following 21 items in any order-->
         <mes:userId>?</mes:userId>
         <mes:subscriberId>?</mes:subscriberId>
         <mes:firstName>?</mes:firstName>
         <mes:userName>?</mes:userName>
         <!--Optional:-->
         <mes:middleInitial>?</mes:middleInitial>
         <!--Optional:-->
         <mes:lastName>?</mes:lastName>
         <mes:email>?</mes:email>
         <mes:phone>?</mes:phone>
         <!--Optional:-->
         <mes:password>?</mes:password>
         <!--Optional:-->
         <mes:addressLine1>?</mes:addressLine1>
         <!--Optional:-->
         <mes:addressLine2>?</mes:addressLine2>
         <!--Optional:-->
         <mes:city>?</mes:city>
         <!--Optional:-->
         <mes:state>?</mes:state>
         <!--Optional:-->
         <mes:zip>?</mes:zip>
         <!--Optional:-->
         <mes:comment>?</mes:comment>
         <!--Optional:-->
         <mes:existingPassword>?</mes:existingPassword>
         <mes:isActive>true</mes:isActive>
         <mes:isLocked>false</mes:isLocked>
         <mes:rolePermissions>
            <!--1 or more repetitions:-->
            <typ:rolePermission>?</typ:rolePermission>
         </mes:rolePermissions>
         <mes:isIpValidationRequired>true</mes:isIpValidationRequired>
         <!--Optional:-->
         <mes:ipAddresses>
            <!--1 or more repetitions:-->
            <typ:IpAddress>?</typ:IpAddress>
         </mes:ipAddresses>
      </mes:UpdateSubscriberUserRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UpdateSubscriberUserRequest"/></con:call></con:operation><con:operation id="5cb4d9ed-452f-44fc-bd98-e4d14e9a38bc" isOneWay="false" action="" name="UploadDocument" bindingOperationName="UploadDocument" type="Request-Response" outputName="UploadDocumentResponse" inputName="UploadDocumentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d4fffb73-b4a1-43e0-a95f-25af7df0eb09" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:UploadDocumentRequest>
         <!--You may enter the following 8 items in any order-->
         <!--Optional:-->
         <mes:settlementId>?</mes:settlementId>
         <mes:subscriberId>?</mes:subscriberId>
         <!--Optional:-->
         <mes:scheduleId>?</mes:scheduleId>
         <!--Optional:-->
         <mes:affiliateId>?</mes:affiliateId>
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <!--Optional:-->
         <mes:stateCode>?</mes:stateCode>
         <mes:document>
            <!--You may enter the following 5 items in any order-->
            <typ:note>?</typ:note>
            <typ:documentType>?</typ:documentType>
            <typ:base64EncodedContent>?</typ:base64EncodedContent>
            <typ:contentType>?</typ:contentType>
            <typ:documentName>?</typ:documentName>
         </mes:document>
      </mes:UploadDocumentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/UploadDocumentRequest"/></con:call></con:operation><con:operation id="ec63139e-83f3-418a-9870-d8fb3ea99fb1" isOneWay="false" action="" name="VerifyClientManually" bindingOperationName="VerifyClientManually" type="Request-Response" outputName="VerifyClientManuallyResponse" inputName="VerifyClientManuallyRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="849a9e30-fd4e-4263-a883-327facccf765" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:VerifyClientManuallyRequest>
         <!--You may enter the following 3 items in any order-->
         <!--Optional:-->
         <mes:clientId>?</mes:clientId>
         <!--Optional:-->
         <mes:externalClientId>?</mes:externalClientId>
         <mes:subscriberId>?</mes:subscriberId>
      </mes:VerifyClientManuallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/VerifyClientManuallyRequest"/></con:call></con:operation><con:operation id="a25eeb76-0908-48b6-8854-4209162c2c61" isOneWay="false" action="" name="VerifyIp" bindingOperationName="VerifyIp" type="Request-Response" outputName="VerifyIpResponse" inputName="VerifyIpRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8d3b4cd3-fc2e-4fff-a8a6-91f0b0ba970e" name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:VerifyIpRequest>
         <mes:token>?</mes:token>
      </mes:VerifyIpRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/VerifyIpRequest"/></con:call></con:operation></con:interface><con:testSuite id="b638cbdb-107f-426c-82ea-00c5f5c7ca29" name="TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DraftSuccessScenario" searchProperties="true" id="dc1f333b-9989-4013-97f4-074ef4f8917c" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">false</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="HttpSettings@socket_timeout">60000</con:setting></con:settings><con:testStep type="groovy" name="UIServerStatus" id="3df4b831-5342-4d56-83ef-0105951af05e"><con:settings/><con:config><script>
	log.info ("  >>  Inside Job Server Check Module");
		try
		{
			String targetUrl = context.expand('${#Project#UI}');

			HttpURLConnection httpUrlConnection = (HttpURLConnection) new URL(
					targetUrl).openConnection();
			httpUrlConnection.setRequestMethod("HEAD");

			int responseCode = httpUrlConnection.getResponseCode();
			
			if(responseCode==200 || responseCode==401){
			return "Pass- "+targetUrl+" : | "+responseCode;
			}
			else{
			return "Fail- "+targetUrl+" : | "+responseCode;
			}
		} catch (Exception exp)
		{
			log.info("Exp - "+exp.getMessage());
			return exp.toString();
		}
	</script></con:config></con:testStep><con:testStep type="groovy" name="APIServerStatus" id="d05ea1cd-454c-46c7-8c1e-da7e63644910"><con:settings/><con:config><script>
	log.info ("  >>  Inside API Server Check Module");
		try
		{
			String targetUrl = context.expand('${#Project#Endpoint}');
			HttpURLConnection httpUrlConnection = (HttpURLConnection) new URL(
					targetUrl).openConnection();
			httpUrlConnection.setRequestMethod("HEAD");

			int responseCode = httpUrlConnection.getResponseCode();
			
			if(responseCode==200 || responseCode==405){
			return "Pass- "+targetUrl+" : | "+responseCode;
			}
			else{
			return "Fail- "+targetUrl+" : | "+responseCode;
			}
			//return ""+responseCode;
			//  return responseCode == HttpURLConnection.HTTP_OK;
		} catch (Exception exp)
		{
			log.info("Exp - "+exp.getMessage());
			return exp.toString();
		}
	</script></con:config></con:testStep><con:testStep type="groovy" name="JobServerStatus" id="08ffdd7c-8d84-420a-828b-ab9c6c071f9c"><con:settings/><con:config><script>
	log.info ("  >>  Inside Job Server Check Module");
		try
		{
			String JSUrl = context.expand('${#Project#JS}');

// - http://cftadmin:CFTis%231@10.10.110.188:8870/
// - http://10.10.200.151:8710/scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0
		String[] targetUrl0 = JSUrl.split("@");
		String targetUrl = (targetUrl0[0].split(":"))[0]+"://"+targetUrl0[1]+"/scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
		log.info ("  >>  targetUrl : "+targetUrl)
			
			HttpURLConnection httpUrlConnection = (HttpURLConnection) new URL(
					targetUrl).openConnection();
			httpUrlConnection.setRequestMethod("HEAD");

			int responseCode = httpUrlConnection.getResponseCode();
			
			if(responseCode==200 || responseCode==401){
			return "Pass- "+targetUrl+" : | "+responseCode;
			}
			else{
			return "Fail- "+targetUrl+" : | "+responseCode;
			}
		} catch (Exception exp)
		{
			log.info("Exp - "+exp.getMessage());
			return exp.toString();
		}
	</script></con:config></con:testStep><con:testStep type="groovy" name="DBServerStatus" id="fb181ed7-cde0-4209-a0fc-26a882b4b941"><con:settings/><con:config><script>import groovy.sql.Sql
//import java.sql.SQLException;

/**
 * This scripts test the DB connection is up with ip and port only.
 * Note : As this script is not using valid username and password. The only check performed
 * 		here is to check the db on given ip and port is active.
 * 		Any issues with schema not available/working etc is not verified here.
 * 		
 *		This can be updated to include valid user and password and run a sample query.
 *		This will ensure DB is available for qa/dev teams. 		
 * 		
 * 		Nov 30 2015 - Raghav
 */

log.info ("  >>  Inside DB Server Check Module");
String dbHostPort = context.expand('${#Project#DB}');

try{
def sql;

com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "com.mysql.jdbc.Driver" )

//sql = Sql.newInstance("jdbc:mysql://10.10.200.151:3416/CFT_QA","user", null, "com.mysql.jdbc.Driver");
sql = Sql.newInstance("jdbc:mysql://"+dbHostPort+"", "com.mysql.jdbc.Driver");

log.info ("  >>  sql : "+sql);
//row = sql.firstRow("SELECT count(1) count FROM users");
//log.info("  >>  Count: ${row.count}")
//assert (row.count > 0):ERROR_MSG
sql.close();
}
catch(Exception exp){
	log.info ("  >>  Exp is : "+exp.getMessage());
	if(exp.toString().contains("Access denied for user")){
		return "Pass | "+dbHostPort;
	}else{
	return exp.getMessage()+" | "+dbHostPort;
	}
}
/*finally
{
log.info ("Closing DB Connection");
}*/
</script></con:config></con:testStep><con:testStep type="groovy" name="Gen name" id="f5258687-2bf4-4cbf-8f71-7fd7a1f54d88"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}

generator( (('A'..'Z')).join(), 9 )
</script></con:config></con:testStep><con:testStep type="groovy" name="GetCurrentDate" id="4c8f3188-2d56-43ad-b43b-de967fca3aaa"><con:settings/><con:config><script>
def currentTime = new Date().format("dd/MM/yyyy");
	log.info "    >>>>    TIME NOW IS : "+currentTime;
		return currentTime;
	

   
</script></con:config></con:testStep><con:testStep type="request" name="CreateClient_TPB" id="735f1cf8-d028-4667-9e71-2227e9752cdd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClient</con:operation><con:request name="CreateClient_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="18d5e90d-6870-4130-97c8-f95dead90278" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            	<wsse:Username>${#Project#global_username}</wsse:Username>
            	<wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientRequest>
            <mes:clientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:channelId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:productId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:firstname>CFT_FDR_TPB</mes:firstname>
            <mes:lastname>Automation</mes:lastname>
            <mes:ssn>232-36-3333</mes:ssn>
            <mes:dob>
                <typ:date format="MM-dd-yyyy" value="09-09-1980"/>
            </mes:dob>
            <mes:address1>Finxera Headquarters</mes:address1>
            <mes:address2>1900 South Norfolk Street</mes:address2>
            <mes:city>San Mateo</mes:city>
            <mes:state>CA</mes:state>
            <mes:zip>94403</mes:zip>
            <mes:phone>9874563210</mes:phone>
            <mes:mobile>8996655000</mes:mobile>
            <mes:email xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:draftAmount>100</mes:draftAmount>
        </mes:CreateClientRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5b1cba04-966f-4b54-ab63-4bf2bb398213"/><con:assertion type="GroovyScriptAssertion" id="c0ea2155-427e-4545-9eea-7c8f0dc10ca9" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def enrollmentId = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert enrollmentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClient_WFB" id="f45b32de-b23e-4c6b-ae90-efce09f0d35d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClient</con:operation><con:request name="CreateClient_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="18d5e90d-6870-4130-97c8-f95dead90278" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            	<wsse:Username>${#Project#global_username}</wsse:Username>
            	<wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientRequest>
            <mes:clientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:channelId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:productId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:firstname>CFT_FDR_WFB</mes:firstname>
            <mes:lastname>Automation</mes:lastname>
            <mes:ssn>232-36-4545</mes:ssn>
            <mes:dob>
                <typ:date format="MM-dd-yyyy" value="09-09-1980"/>
            </mes:dob>
            <mes:address1>Finxera Headquarters</mes:address1>
            <mes:address2>1900 South Norfolk Street</mes:address2>
            <mes:city>Jupiter</mes:city>
            <mes:state>FL</mes:state>
            <mes:zip>94403</mes:zip>
            <mes:phone>9874563210</mes:phone>
            <mes:mobile>8996655000</mes:mobile>
            <mes:email xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:draftAmount>100</mes:draftAmount>
        </mes:CreateClientRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5b1cba04-966f-4b54-ab63-4bf2bb398213"/><con:assertion type="SOAP Response" name="SOAP Response1" id="45796fc5-1ad7-4bc5-aaf1-32f6688af019"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="8dec95da-4bd2-48dc-9c70-9d840ae05f12"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def node1 = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def node2 = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def node3 = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

log.info (" >> >> "+node1.getData())
assert node1.getData() == '1'
assert node2 != null
assert node3 != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" name="SOAP Response1" id="f2455ddc-2bc7-4b4a-9855-f35a97dd446a"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion1" id="ecfff8e1-87b3-43d7-a71f-89b69a3b9091"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def enrollmentId = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert enrollmentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClient_BOI" id="1d021472-3c53-4b27-9115-e1a8fc5a8352"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClient</con:operation><con:request name="CreateClient_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="18d5e90d-6870-4130-97c8-f95dead90278" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
            	<wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
       	 </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientRequest>
            <mes:clientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:channelId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:productId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:firstname>CFT_FDR_BOI</mes:firstname>
            <mes:lastname>Automation</mes:lastname>
            <mes:ssn>232-36-4544</mes:ssn>
            <mes:dob>
                <typ:date format="MM-dd-yyyy" value="09-09-1980"/>
            </mes:dob>
            <mes:address1>Finxera Headquarters</mes:address1>
            <mes:address2>1900 South Norfolk Street</mes:address2>
            <mes:city>Clio</mes:city>
            <mes:state>AL</mes:state>
            <mes:zip>94403</mes:zip>
            <mes:phone>9874563210</mes:phone>
            <mes:mobile>8996655000</mes:mobile>
            <mes:email xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:draftAmount>100</mes:draftAmount>
        </mes:CreateClientRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5b1cba04-966f-4b54-ab63-4bf2bb398213"/><con:assertion type="SOAP Response" name="SOAP Response1" id="2f17e1d0-40db-45aa-acd9-b1a17d407496"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="a4119d0a-7888-4b44-ba9b-dddc1d538eca"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def node1 = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def node2 = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def node3 = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

log.info (" >> >> "+node1.getData())
assert node1.getData() == '1'
assert node2 != null
assert node3 != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" name="SOAP Response1" id="52a90438-d0b7-4cf0-a18b-bdac383e5cb7"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion1" id="a27ee8f6-b04b-49e2-9985-d560a0663645"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def enrollmentId = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert enrollmentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClientBankAccount_TPB" id="f2d6368b-9365-4974-a75f-838f1ee72e62"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClientBankAccount</con:operation><con:request name="CreateClientBankAccount_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="253b5085-e099-40e3-ad27-918bd588eae1" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create client Bank account +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientBankAccountRequest>
            <!--You may enter the following 10 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:routingNumber>051000017</mes:routingNumber>
            <mes:accountType>CHECKING</mes:accountType>
            <mes:accountNumber>54364434</mes:accountNumber>
            <mes:holdersName>AutoAccount</mes:holdersName>
            <!--Optional:-->
        </mes:CreateClientBankAccountRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="GroovyScriptAssertion" id="dc66fa8c-a323-48dd-afcc-ba87cf4ebc82" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientId[1]/text()" )
def clientBankAccountId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientBankAccountId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert clientBankAccountId != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" id="b05b5e9a-c6c7-4088-bf18-1068907a473d" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientBankAccountRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClientBankAccount_WFB" id="d5da2c04-14d4-45bb-8d1b-48a3b97ce2f5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClientBankAccount</con:operation><con:request name="CreateClientBankAccount_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="253b5085-e099-40e3-ad27-918bd588eae1" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create client Bank account +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientBankAccountRequest>
            <!--You may enter the following 10 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:routingNumber>051000017</mes:routingNumber>
            <mes:accountType>CHECKING</mes:accountType>
            <mes:accountNumber>54364434</mes:accountNumber>
            <mes:holdersName>AutoAccount</mes:holdersName>
            <!--Optional:-->
        </mes:CreateClientBankAccountRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f904f6d-c595-43e8-b788-151c067931fb"/><con:assertion type="Simple Contains" id="d6cc1093-8684-4c0b-9e1c-9872241599fe" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="84e771e7-604c-4596-ac34-7f9f96374efc"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientId[1]/text()" )
def clientBankAccountId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientBankAccountId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert clientBankAccountId != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" name="SOAP Response1" id="0c027a37-6367-4f0b-bddf-ec486e33ecc2"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientBankAccountRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClientBankAccount_BOI" id="f5934230-0eb8-4f7b-9a95-ef0601b95a4e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClientBankAccount</con:operation><con:request name="CreateClientBankAccount_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="253b5085-e099-40e3-ad27-918bd588eae1" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create client Bank account +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientBankAccountRequest>
            <!--You may enter the following 10 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:routingNumber>051000017</mes:routingNumber>
            <mes:accountType>CHECKING</mes:accountType>
            <mes:accountNumber>54364434</mes:accountNumber>
            <mes:holdersName>AutoAccount</mes:holdersName>
            <!--Optional:-->
        </mes:CreateClientBankAccountRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f904f6d-c595-43e8-b788-151c067931fb"/><con:assertion type="Simple Contains" id="d6cc1093-8684-4c0b-9e1c-9872241599fe" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="3bf4b402-0b5d-4e59-b05d-668537629ceb"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientId[1]/text()" )
def clientBankAccountId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientBankAccountId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert clientBankAccountId != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" name="SOAP Response1" id="e02f32d4-884d-4025-a4db-3a33399ff84b"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientBankAccountRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateDraftSchedule_TPB" id="16241add-ddd0-4622-af38-e013b30cde43"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateDraftSchedule</con:operation><con:request name="CreateDraftSchedule_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="b45939bc-67df-4797-9e67-eb91f5cf6946" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create draft schedule +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateDraftScheduleRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:clientBankAccountId>${CreateClientBankAccount_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientBankAccountResponse[1]/ns4:clientBankAccountId[1]}</mes:clientBankAccountId>
            <mes:amount>100</mes:amount>
            <mes:occurs>21</mes:occurs>
            <mes:startDate>
                <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
            </mes:startDate>
            <mes:type>MONTHLY</mes:type>
        </mes:CreateDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="177becab-36f5-46db-b0f2-aefbd008283f"/><con:assertion type="XPath Match" name="Check for existance of [ns3:scheduleId]" id="eb3e50d7-8cad-46ab-9d81-c6b4fd671ba8"><con:configuration><path>declare namespace ns3='http://nationalpayment.net/ws/schemas/messages';
exists( //ns3:CreateDraftScheduleResponse/ns3:scheduleList/ns3:schedule/ns3:scheduleId)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e34bba25-c3df-4532-b338-e803ce54084a" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="40362eb6-899e-4dd6-9cac-8b5da954560f" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:commandStatus[1]/text()")

def schedule1 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[1]/*:scheduleId[1]/text()" )
def schedule2 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[2]/*:scheduleId[1]/text()" )
def schedule3 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[3]/*:scheduleId[1]/text()" )
def schedule4 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[4]/*:scheduleId[1]/text()" )
def schedule5 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[5]/*:scheduleId[1]/text()" )
def schedule6 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[6]/*:scheduleId[1]/text()" )
def schedule7 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[7]/*:scheduleId[1]/text()" )
def schedule8 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[8]/*:scheduleId[1]/text()" )
def schedule9 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[9]/*:scheduleId[1]/text()" )
def schedule10 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[10]/*:scheduleId[1]/text()" )
def schedule11 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[11]/*:scheduleId[1]/text()" )
def schedule12 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[12]/*:scheduleId[1]/text()" )
def schedule13 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[13]/*:scheduleId[1]/text()" )
def schedule14 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[14]/*:scheduleId[1]/text()" )
def schedule15 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[15]/*:scheduleId[1]/text()" )
def schedule16 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[16]/*:scheduleId[1]/text()" )
def schedule17 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[17]/*:scheduleId[1]/text()" )
def schedule18 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[18]/*:scheduleId[1]/text()" )
def schedule19 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[19]/*:scheduleId[1]/text()" )
def schedule20 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[20]/*:scheduleId[1]/text()" )
def schedule21 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[21]/*:scheduleId[1]/text()" )

assert commandStatus.getData() == '1'
assert schedule1 != null
assert schedule2 != null
assert schedule3 != null
assert schedule4 != null
assert schedule5 != null
assert schedule6 != null
assert schedule7 != null
assert schedule8 != null
assert schedule9 != null
assert schedule10 != null
assert schedule11 != null
assert schedule12 != null
assert schedule13 != null
assert schedule14 != null
assert schedule15 != null
assert schedule16 != null
assert schedule17 != null
assert schedule18 != null
assert schedule19 != null
assert schedule20!= null
assert schedule21 != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateDraftSchedule_WFB" id="cc85c6d9-b9ad-4f6b-a686-b7bb8af2998f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateDraftSchedule</con:operation><con:request name="CreateDraftSchedule_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="b45939bc-67df-4797-9e67-eb91f5cf6946" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create draft schedule +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateDraftScheduleRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:clientBankAccountId>${CreateClientBankAccount_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientBankAccountResponse[1]/ns4:clientBankAccountId[1]}</mes:clientBankAccountId>
            <mes:amount>100</mes:amount>
            <mes:occurs>21</mes:occurs>
            <mes:startDate>
                <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
            </mes:startDate>
            <mes:type>MONTHLY</mes:type>
        </mes:CreateDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="177becab-36f5-46db-b0f2-aefbd008283f"/><con:assertion type="XPath Match" name="Check for existance of [ns3:scheduleId]" id="eb3e50d7-8cad-46ab-9d81-c6b4fd671ba8"><con:configuration><path>declare namespace ns3='http://nationalpayment.net/ws/schemas/messages';
exists( //ns3:CreateDraftScheduleResponse/ns3:scheduleList/ns3:schedule/ns3:scheduleId)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e34bba25-c3df-4532-b338-e803ce54084a" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="d40550f4-f5b3-4dc4-acc8-9297022a35ef"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:commandStatus[1]/text()")

def schedule1 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[1]/*:scheduleId[1]/text()" )
def schedule2 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[2]/*:scheduleId[1]/text()" )
def schedule3 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[3]/*:scheduleId[1]/text()" )
def schedule4 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[4]/*:scheduleId[1]/text()" )
def schedule5 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[5]/*:scheduleId[1]/text()" )
def schedule6 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[6]/*:scheduleId[1]/text()" )
def schedule7 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[7]/*:scheduleId[1]/text()" )
def schedule8 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[8]/*:scheduleId[1]/text()" )
def schedule9 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[9]/*:scheduleId[1]/text()" )
def schedule10 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[10]/*:scheduleId[1]/text()" )
def schedule11 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[11]/*:scheduleId[1]/text()" )
def schedule12 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[12]/*:scheduleId[1]/text()" )
def schedule13 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[13]/*:scheduleId[1]/text()" )
def schedule14 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[14]/*:scheduleId[1]/text()" )
def schedule15 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[15]/*:scheduleId[1]/text()" )
def schedule16 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[16]/*:scheduleId[1]/text()" )
def schedule17 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[17]/*:scheduleId[1]/text()" )
def schedule18 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[18]/*:scheduleId[1]/text()" )
def schedule19 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[19]/*:scheduleId[1]/text()" )
def schedule20 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[20]/*:scheduleId[1]/text()" )
def schedule21 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[21]/*:scheduleId[1]/text()" )

assert commandStatus.getData() == '1'
assert schedule1 != null
assert schedule2 != null
assert schedule3 != null
assert schedule4 != null
assert schedule5 != null
assert schedule6 != null
assert schedule7 != null
assert schedule8 != null
assert schedule9 != null
assert schedule10 != null
assert schedule11 != null
assert schedule12 != null
assert schedule13 != null
assert schedule14 != null
assert schedule15 != null
assert schedule16 != null
assert schedule17 != null
assert schedule18 != null
assert schedule19 != null
assert schedule20!= null
assert schedule21 != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateDraftSchedule_BOI" id="0f649678-fa34-4a5d-95b5-5c3affa5784e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateDraftSchedule</con:operation><con:request name="CreateDraftSchedule_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="b45939bc-67df-4797-9e67-eb91f5cf6946" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create draft schedule +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateDraftScheduleRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:clientBankAccountId>${CreateClientBankAccount_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientBankAccountResponse[1]/ns4:clientBankAccountId[1]}</mes:clientBankAccountId>
            <mes:amount>100</mes:amount>
            <mes:occurs>21</mes:occurs>
            <mes:startDate>
                <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
            </mes:startDate>
            <mes:type>MONTHLY</mes:type>
        </mes:CreateDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="177becab-36f5-46db-b0f2-aefbd008283f"/><con:assertion type="XPath Match" name="Check for existance of [ns3:scheduleId]" id="eb3e50d7-8cad-46ab-9d81-c6b4fd671ba8"><con:configuration><path>declare namespace ns3='http://nationalpayment.net/ws/schemas/messages';
exists( //ns3:CreateDraftScheduleResponse/ns3:scheduleList/ns3:schedule/ns3:scheduleId)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e34bba25-c3df-4532-b338-e803ce54084a" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="6a7bcdd3-5662-4b99-9196-03adabec8dce"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:commandStatus[1]/text()")

def schedule1 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[1]/*:scheduleId[1]/text()" )
def schedule2 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[2]/*:scheduleId[1]/text()" )
def schedule3 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[3]/*:scheduleId[1]/text()" )
def schedule4 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[4]/*:scheduleId[1]/text()" )
def schedule5 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[5]/*:scheduleId[1]/text()" )
def schedule6 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[6]/*:scheduleId[1]/text()" )
def schedule7 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[7]/*:scheduleId[1]/text()" )
def schedule8 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[8]/*:scheduleId[1]/text()" )
def schedule9 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[9]/*:scheduleId[1]/text()" )
def schedule10 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[10]/*:scheduleId[1]/text()" )
def schedule11 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[11]/*:scheduleId[1]/text()" )
def schedule12 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[12]/*:scheduleId[1]/text()" )
def schedule13 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[13]/*:scheduleId[1]/text()" )
def schedule14 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[14]/*:scheduleId[1]/text()" )
def schedule15 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[15]/*:scheduleId[1]/text()" )
def schedule16 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[16]/*:scheduleId[1]/text()" )
def schedule17 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[17]/*:scheduleId[1]/text()" )
def schedule18 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[18]/*:scheduleId[1]/text()" )
def schedule19 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[19]/*:scheduleId[1]/text()" )
def schedule20 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[20]/*:scheduleId[1]/text()" )
def schedule21 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[21]/*:scheduleId[1]/text()" )

assert commandStatus.getData() == '1'
assert schedule1 != null
assert schedule2 != null
assert schedule3 != null
assert schedule4 != null
assert schedule5 != null
assert schedule6 != null
assert schedule7 != null
assert schedule8 != null
assert schedule9 != null
assert schedule10 != null
assert schedule11 != null
assert schedule12 != null
assert schedule13 != null
assert schedule14 != null
assert schedule15 != null
assert schedule16 != null
assert schedule17 != null
assert schedule18 != null
assert schedule19 != null
assert schedule20!= null
assert schedule21 != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="b936ff2e-68f6-47ea-8eba-227f2227f207" name="GetDraftScheduleList_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftScheduleList</con:operation><con:request name="GetDraftScheduleList_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="311078f8-03f6-4621-95f9-30e4e34a935b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleListRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:order>scheduleDate</mes:order>
            <mes:ascending>false</mes:ascending>
            <mes:pageNumber>1</mes:pageNumber>
            <mes:numberOfRecordsPerPage>5</mes:numberOfRecordsPerPage>
        </mes:GetDraftScheduleListRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="4fa0357b-9cca-4f29-b0ba-e9a9db3e976a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e3329fbe-4933-47ad-a3e7-0b50c3a22fcb" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2fd84260-87e3-4517-a6d9-fb7396f582d6" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="dbcd0c8f-0aab-453e-9171-1dc0600d0daa" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def totalCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" )
def returnedCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:returnedCount[1]/text()" )
def pageNumber = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:pageNumber[1]/text()" )

log.info ("  >>  "+holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" ).getData());
assert totalCount.getData() == "21";
assert returnedCount.getData() == "5";
assert pageNumber.getData() == "1";
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleListRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="762cc6fc-1bab-4bc1-9300-06b323e6b6af" name="GetDraftScheduleList_WFB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftScheduleList</con:operation><con:request name="GetDraftScheduleList_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="311078f8-03f6-4621-95f9-30e4e34a935b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleListRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:order>scheduleDate</mes:order>
            <mes:ascending>false</mes:ascending>
            <mes:pageNumber>1</mes:pageNumber>
            <mes:numberOfRecordsPerPage>5</mes:numberOfRecordsPerPage>
        </mes:GetDraftScheduleListRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="4fa0357b-9cca-4f29-b0ba-e9a9db3e976a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e3329fbe-4933-47ad-a3e7-0b50c3a22fcb" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2fd84260-87e3-4517-a6d9-fb7396f582d6" name="Not SOAP Fault"/><con:assertion type="SOAP Response" name="SOAP Response1" id="963db3c8-3783-4b77-9ca9-212d41238fc1"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="1baaf347-bd84-44fa-9f51-110f878089c4"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def totalCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" )
def returnedCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:returnedCount[1]/text()" )
def pageNumber = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:pageNumber[1]/text()" )

log.info ("  >>  "+holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" ).getData());
assert totalCount.getData() == "21";
assert returnedCount.getData() == "5";
assert pageNumber.getData() == "1";
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleListRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="2b130f51-54b9-422d-b302-1c19c89bc215" name="GetDraftScheduleList_BOI"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftScheduleList</con:operation><con:request name="GetDraftScheduleList_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="311078f8-03f6-4621-95f9-30e4e34a935b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleListRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:order>scheduleDate</mes:order>
            <mes:ascending>false</mes:ascending>
            <mes:pageNumber>1</mes:pageNumber>
            <mes:numberOfRecordsPerPage>5</mes:numberOfRecordsPerPage>
        </mes:GetDraftScheduleListRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="4fa0357b-9cca-4f29-b0ba-e9a9db3e976a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e3329fbe-4933-47ad-a3e7-0b50c3a22fcb" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2fd84260-87e3-4517-a6d9-fb7396f582d6" name="Not SOAP Fault"/><con:assertion type="SOAP Response" name="SOAP Response1" id="64a8b78c-fde8-4d29-a4f9-4edb82d6bfcb"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="2e7a32fd-fc09-4679-ae58-3c45ba678aee"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def totalCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" )
def returnedCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:returnedCount[1]/text()" )
def pageNumber = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:pageNumber[1]/text()" )

log.info ("  >>  "+holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" ).getData());
assert totalCount.getData() == "21";
assert returnedCount.getData() == "5";
assert pageNumber.getData() == "1";
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleListRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="a3f60561-7671-4b4f-a6d6-c181c64d7a01" name="CreateEnrollmentDocument_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateEnrollmentDocument</con:operation><con:request name="CreateEnrollmentDocument_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a2d6acb3-7045-4a9a-bcfb-42997ae5c540"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateEnrollmentDocumentRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:note>ref</mes:note>
            <mes:documentType>type</mes:documentType>
            <mes:base64EncodedContent>JVBERi0xLjQKMyAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQW5ub3RzIFs8PC9UeXBlIC9Bbm5vdCAvU3VidHlwZSAvTGluayAvUmVjdCBbNDE2LjkzIDM2My44NSA0NjAuNjEgMzU3Ljg1XSAvQm9yZGVyIFswIDAgMF0gL0EgPDwvUyAvVVJJIC9VUkkgKGh0dHA6Ly93d3cuY2Z0cGF5LmNvbSk+Pj4+PDwvVHlwZSAvQW5ub3QgL1N1YnR5cGUgL0xpbmsgL1JlY3QgWzE0My40OSAzMjEuMzMgMjE0LjE3IDMxNS4zM10gL0JvcmRlciBbMCAwIDBdIC9BIDw8L1MgL1VSSSAvVVJJIChodHRwOi8vd3d3LmZpbnhlcmEuY29tL2xpY2Vuc2luZyk+Pj4+XQovQ29udGVudHMgNCAwIFI+PgplbmRvYmoKNCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMjIzOT4+CnN0cmVhbQp4nI1Y23LayhJ93vmKfkjtSqrwWPdL3jDgCqdsICAnlaq8DGIAHQuJPZJM+JHzvadnRjeETDapGCFmVq9efZkWBvzng0ZsF04fHgK4f9TBIZoGwRYmgbijmy5xDfAMm5g2BBv4tDqyMKIxLAp+TDMGwzBMiySHWXFYM\/4FLNPQxEvH\/5Zj+7DKac4ODJcsGI\/SzRd4pjzcgz4AQ9NtuCs\/m9UNWNAdA\/0e7M8Q\/FcQ+Qe\/0AQv8Q8Z4ZXhmcRywHUdYlsQHuB+qsM4hW8fXI2YGriOSxwDTN8hHtrQiKsDZ\/AAwivXJLoJrm0TX5NOLTjNaJLvYfS9stkss1xiqWXPLInT6wWmRzxf4VD+CnIVyMvRsLX6\/tHoqGvaDnG0NpHxdDkZBTB8eoLhaDR\/mQUwnX17mS6nkxUE8y\/Qwqt2WxaxHbl7xNMs4yndZPAYJTSRgQpYuE\/SON1FLOvbbiIntX0xh4f0Nxi2bfp9Kw2X2GUS0ASjlrN0gC7e+ZalGT3rdZ9oav1inyYMZin8DzzPuzMt786yLbPaU4ZMl9tuhkxzxV1J4eX5ebj8CfNHVCqYfp8GP+FC7KtUNiyRyo5vioyRrJaT79P5ywpWwTCYPE9QbHgYPg1nownMZ6AZ94bXgqwAPIMYZbQmi\/lqGqzuR8vJGN\/bGhg68fT24o+GSOEePPTeUwH4MQ2+jpfDH8On1f3q5SFYCs\/ms0tcm2CNtDZ9NPphbZ\/YhpKqdq\/tnXlv6j2Em20fda+FrGLk2BYxrHdidJ3gKmqO6RPHk5jo0mylvGrCFnydrmAxWU7n4\/cjWNo3LYLJaSrzukV0V9hfQWMMBbJViozR7QpQx8wRuqn9uifbSQdA13zie22ENt3xZDVaThfiugI1vDaoY4tQdzANr4v5XtKYtiF6bAlmoWR6F8zERqFfgLUypsKxNJ34t0lZGqaI38apmk2ZIJ2gY+Yaxk3RdZ2YpkTCvGqaQaW6AritegOxZGHBeZTsYMzwjIly2PL0AKM9C1\/xbld9Bd7rqEhq3WljqyoE+eoqr4D6lccw6nob6BKiEv0GF8vELv9HLqXimiNa5w3Fbd8VnpWKm1pXcQVwU\/EWxHD0FQ+sszyl8xRCzjZRnnLAPr\/hFIbHY8x22O+70isr\/dJj0dta20i\/6AqiX3QXP15AyF7Xr\/wNKqXybRzZ2vqUt9Gm59YNrlPM+BHDa6MV3+ueQstJ8LKcTcYwxWYLj5PJqoPsaMTB1mPpxDUvkD8YOvpl1ivEOetc2cYpw3fBtmWbls1pHgyf4HG+7GugUn7\/NqSJxGzzGvLnZLi8C+Z37f5Z+mA54nTo8QHhUF5MbBvnM8dsob2vS+V2CXrNsfbi\/RVNQeiu6GnC7mweTL7A5Dc9RDh15Psog6weQkPK2baI4zNgbiPIMeU5Xp4h4pztipjyKMdJiXQcx5JxWmmhm6K51hQM\/IzMLJTAVxPP9HkxXwZDbKnNHIeheh62z4+avOU5Iv\/lxgQp4lydboFxnvIMsA7\/KViWR2mSAdB1WuRwTgveODUAFrMw52kShZBzmmRbxsU+eU1DtTVNrrbluO8oZ7MiA4q1v2eQyEEejtiAc7YRu67pup7ohoKu2IHdGYVFwh2pkcAJ1azA\/zidDqA9gQ7gYsocgBwzgaKFFEnhO3qDWiUDiLbyGs0nrz1sHV\/MlYLtpf+CIGchi445IPETurET90q4hKH7hxSDHCXblB+okLHUn7ZkTqRsfagEfjA4FFkOe0a5OsUkcgoxruZ9XHXR8pSy6D7y3tAzyrcVy09oRlhQzjJ4nC5XQdtyAqd9hM9S4kuZPUjm2gY2W1f1wb\/gL9AJBiGORZCkPAk9MFkbtHyyKxPi1yfUBQvl12fSA6kTo4E0CJ7cWcijNbugIj\/UwgkvsBihSLIC36SwA2mZ\/T7GNJIxDmNUThRrHW508Syv1yyO2BtGR0YPv6jNVCuaCF4zNg3i2jVj8WpFucdDnKqNZr3ZiCZ82qQxNg6gBymYrAQMVZHhs7KoIUmsBxP7n1\/OcQxOEeJFyZuodHHWqmiE6UFqkUth5JowxU4VqqalXD5iYh3z+ExguhVJktNXpvyWSYQJtS4y7IVZprIJj\/hNKqt1IJYrVHnmK6NV5K8Z4+BYPgtvy3CWPjf1h7GIylgMsFQFBfW1NLOnbyonCtXjxOUBG9AZNoUc+WSKRAcZVuFHJjVOlRAMZREEG5nawVKt2vQs0YSrVu3ZRLO6h4Xp1I+y2Ip+M04HME1CgvQyaVXkXhbtElVWWyXLez99DHecqQKUFf4o1s7pawYPFPX4GwIuWsAIHcCQDZpAoolC1BpeXilt2vXDM2fZEft3tI5ieTQJPh0bRbJhKhxXnAhA6aJ0jm7wUIwy7CaYl3\/+veDXp+Y3GDFKauVfXf7lOzle4XO7f8H4dDqRcJsf6Zlg2EqEZp1HLJz4THGg3smQYXS28K02oVDF5KK3UX99rmTqrq0k06qgYiNcsz2Ntz1adeJBYIEtBqOZpDkbCA15WRFrcQ9CrKCdOAJUZjJ+yOqEuE6Asigyxt+isPm95R3CliFyUxDGCn6LNhgSzHSEJjDM4Eh5c6oqGgNld1M+FlV1igXWcbJyIIwxUTcy5QSvNY0xysirasJcmaTYKk+Qlfl9m7RZ\/35yLOugptHOrfW5zrtq8ChDIho77uAbQQWZ5vtLad9L4xpPOnegifiZUALfJoxPuZoaSCsHu8TXhdRQFKJoPRns03ijoLdYWpkiuWVYZFRMjpE8sTZVHFIub+VRXshJC7kOEarKkgoCb3F2EOfa43g6qkDIH9hj0diK\/SMmV3ccwQ7LWA\/CdZXqWHCW38YTVbpVkooyvY8xY7HN1A\/YzRZb1C12V8e7UbCGGstbBvA4wlBv8FiRTFlSZqM4OqQyeIxhGmTy+MYGfzxX4V\/w6I2GZ1ikSEoc\/lmKgRNHqYzEvwi65lVBf6drk2b\/\/wGfn0ckCmVuZHN0cmVhbQplbmRvYmoKNSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgNiAwIFI+PgplbmRvYmoKNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk5Pj4Kc3RyZWFtCnicNY7dTsMwDIXv8xTnEiRIbWdp1t0N8SNNgDotL9BlodtE6Sit9vp4iFk6sj\/bso9gZcj6gLN5iCieGaUlQvzAUzTfIAVCC52xCzYI5uKt84g73GxOOR2aT9TTcOp\/MpYp9dPXiPep2+ZhgZkTugSrZqWvsBmbMXdZV+o8HPrdAm\/NkPbgOwixx\/0\/u2sDddNmSAF\/i3hUS1hfTGEFxlnzUfWiav+shqoMCnQtZW6d\/oUw2cqxIHWmiPUr47HXQ2vzC3XrPWwKZW5kc3RyZWFtCmVuZG9iago3IDAgb2JqCjw8L1R5cGUgL1BhZ2UKL1BhcmVudCAxIDAgUgovUmVzb3VyY2VzIDIgMCBSCi9Db250ZW50cyA4IDAgUj4+CmVuZG9iago4IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11HNJQ3pg2JqENFZEfKCEU0LpC14rfn0Fg6co+tmVfxlKRdh5X9RaQLQxyTYSwx0dQF5AAoYbMjPXaM6bstHUIO4w25xSP1Q\/KoTu3fwnzGNvht8dqaLapm2FimW5hRJPcFdj0VZ+aJCtl6o7tbobvqosHmBcwGYfXB9tnA2VVJ9gMboxwEktY30xhCYOr5JPoU1Tfrfoi9wL0LHmqrfwFG9KFNYzYqCyUX4z3Vg6t1T92TT1uCmVuZHN0cmVhbQplbmRvYmoKOSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgMTAgMCBSPj4KZW5kb2JqCjEwIDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11kqahvIHYkNCGipofKCEUEKWstOL3ZxBYurKPbdlXYyVIWoe7mHsk3wqZJILf48uLPxADoQbPlHHSaUy0lcbC7zAqrzEcqzOKobu2t4hZCO1w6bEemm3spkiNpkcoVprZHGVf9bGJvFLE7tjupvitunCA+oAmZfH5YvNuoKjqiDSBHcOf2BI2D1NYQeHO+cRasuqnVZdnjoHepZ5Iw3+hFcncKI3QiMQXPwaLlg9txD92rz1wCmVuZHN0cmVhbQplbmRvYmoKMTEgMCBvYmoKPDwvVHlwZSAvUGFnZQovUGFyZW50IDEgMCBSCi9SZXNvdXJjZXMgMiAwIFIKL0NvbnRlbnRzIDEyIDAgUj4+CmVuZG9iagoxMiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk4Pj4Kc3RyZWFtCnicNY7RbsIwDEXf8xX3EaQtdZKmobyB2JDQhoqaHyghFBClrLTi92cQWLqyj23ZV2MlSFqHu5h7JN8KmSSC3+PLiz8QA6EGz5Rx0mlMtJXGwu8wKq8xHKsziqG7treIWQjtcOmxHppt7KZIjaZHKFaa2RxlX\/WxibxSxO7Y7qb4rbpwgPqAJmXx+WLzbqCo6gibwI7hT2wJm4cprKBw53xiLVn106rLM8dA71JPpOG\/0IpkbpRGaETii58Ui5YPbcQ\/dxE9cgplbmRzdHJlYW0KZW5kb2JqCjEgMCBvYmoKPDwvVHlwZSAvUGFnZXMKL0tpZHMgWzMgMCBSIDUgMCBSIDcgMCBSIDkgMCBSIDExIDAgUiBdCi9Db3VudCA1Ci9NZWRpYUJveCBbMCAwIDU5NS4yOCA4NDEuODldCj4+CmVuZG9iagoxMyAwIG9iago8PC9UeXBlIC9Gb250Ci9CYXNlRm9udCAvSGVsdmV0aWNhCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTQgMCBvYmoKPDwvVHlwZSAvRm9udAovQmFzZUZvbnQgL0hlbHZldGljYS1Cb2xkCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTUgMCBvYmoKPDwvVHlwZSAvWE9iamVjdAovU3VidHlwZSAvSW1hZ2UKL1dpZHRoIDIwMAovSGVpZ2h0IDM3Ci9Db2xvclNwYWNlIFsvSW5kZXhlZCAvRGV2aWNlUkdCIDI1NCAxNiAwIFJdCi9CaXRzUGVyQ29tcG9uZW50IDgKL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0RlY29kZVBhcm1zIDw8L1ByZWRpY3RvciAxNSAvQ29sb3JzIDEgL0JpdHNQZXJDb21wb25lbnQgOCAvQ29sdW1ucyAyMDA+PgovTWFzayBbMCAwIF0KL0xlbmd0aCAxNjE2Pj4Kc3RyZWFtCliF7VcHeFRFEH4bOyiWWECsKPYuYldExYq994IdQknIu9frUiI19CYSCR3RxCASBDEixWCABEKNEA64AEmAnEAE7mNm37tLuZCEzxT9vvu\/u2\/fzsy+m392ZnaP4yKIIIII\/q\/I7XSw90q\/P7Ww68w1je3Lv8ENee+8Pvrtdu0e2z7mu0k5x6DC64R4Gtav40Rujr\/99o6v\/IbYseuOxOx7q7KSCSEGx5mEb2j\/agtf3tS9BU0X7sgH7Fi48MiGDP\/MKsxEYuJAidzA\/tUWm19MvKKge\/6X6xm6N83vuOeekv7hdhqxcPjvEjk4dfqeFq1SUo44SElJ33X1mNQzQnpbhJzSMLEIMZ1BlAixTMg04GQbKLEw57CCTKI5y1SU25CRAiE6hkAnvEUI5W0QmHbd8+jkH7140fr0VvsX9ezZZ1HPPi32p6fvWvxqaZKrl3TmaAUiFkdcSBxPXBE88MxdtkxDoQ58HDVkpUHKwax7IqvHPh3ti\/Z9eOYHb700LH\/TZ3828\/mi\/3ig5H5XT4nhhM90UouFGfwVOHRdcIxY\/VAichI6zzH\/mbXNTICVygn4IgiExjavznnE+d8cEjvk0qKipKS2yl2xbXO\/v\/vsHxVl\/ildY5hewqiHE6FsIqDbtqU7IbYIha\/IjAWXouUQQ94aSzoKlDACdU7ki6nXXNXjkY+Lug0qLj5x8EeDBv2aFPPP9Z+P3OiPY3o1dHZUIOJMIOfd1EMiHp1IBnG2j7qENCDHzM3yROR6INJ1+cWZLVs+fquiKLPmrHqqCEbl4cnLLsl832nBEDy5EhEpNIFsgS9UrsqSXiRWMPkN90EkusflVc9EsjP2ZGW1OmGzktumTVGX4sBsILL2vYLnshIvY3oIs86XJ6KzWLPmZGEhsCRzzhgoEHDTRl9BJSADmdWIiNGoZyIrx2Rt2PSNolwQKM4FDt0CM2JgaDbsrMQ8x8DpUyTUWAWWR6YjNdz2xJ5wHyD+Fssz0+1lWrCpwcJ6rZHUjIKTwPNTA4MVpcmhHjGxPwS6wDzmtMRS10JCXwT0khGxwUURkx5qQ4Oge4AZFZ2a1tAOigaT0aKsO3MqjCbuqRMI7F9YeHVPpPAWRYkvDiQpyhuTR2QeaqIUr8JCef6cvOqWuXlWCQJ62Ugo7Dw\/Nn5WYLOi9Fh2+4asEdcuVU6e001RPi05t7plVRKxnMpuHORduED5NgDl8XLm9K8Ar115ujJ7jm\/IPG8V160y0HAiEiFVblMD4bB33k0\/A4+Rv89tvQTQesvfS5XZMwZ29lf7Byt4ToQg6zahocQyq2QkE9c0TGNpld9Wflara+oa\/50LoE+9u3duv78Y+m25bm38zpsHrI53DODyF\/7D4bCp+yDVeJNCU9YLaUhUmYhdpuKMSiE7Fp75+pOdytKN53WY6KLDlotiB44dvi\/oF4TZQwyC3cnC5mtDf1VFg4gyXsPAb12CktEp07k+GJYFXc2CQ4eoMsXT0WMQg9eZwPFSpuwgUjkJdlc1wNoxhNs0lcGEjbAKWiOR4GwyPBIhWjVE4laW3PjsQyu27g7hQPMXHjx\/tasWWDzgSmsZEEYJnOYwg2DGwUFpolYULeqRqK1LoWAKqmpwPD7xhq3b8NHAUnIFQSIS9UAOUR63Hdq0Ywg\/aKEJG3kDVSC0IFu16mhwWCW3rZuQdqAMaUvum5IdFyTCLn\/U5jRIeyprEBkV9kDV4GILDpgePFYEDf1HHbvvEltTVSaCI535TW0qc+UFjAi74uNrOGYdMrQJPLIRd0RFITYSidbQ3XOihu\/tlzZ+3Ljk5ORxyeO3Tsjwpu4LKlXWiXSbE2FHsLsa8DJRg6T2wDaZlmpyoiXijnCOjrnpErF1D286\/pkmV17AiMgQH7gDWRWIQElYaMJGD3XC6DYPnoZ7X4HJgCntm09M6zV06NBeabt\/2uYdta9MiZd0GZIfgqPLkKbgDAiwOlWsajjHDQ3y2SBM5+aPaYEBZA7IKQogaSC2EAgUOC3JrRGgoxNIG5g7hhJWHpiwEWsKXizhalWoub0fHhWVsDxj2ooV06b9sm1KVOmjNdg3GES8ox3P4XR5zqQob9+EhIS+Xm\/vw9H15tjxAnYr+Ce0tljTf90ThaOySw8+6asfnyKIIIJGw1G2ZvkFCmVuZHN0cmVhbQplbmRvYmoKMTYgMCBvYmoKPDwvRmlsdGVyIC9GbGF0ZURlY29kZSAvTGVuZ3RoIDc3Nj4+CnN0cmVhbQp4nAH9AgL9\/\/\/\/AAAARE9x3OHs9PTy2uTo8vHwiI6P8fHxssXL9PX5pr\/O4+Xv4ePo7vP06\/DzaZKs+vn5ZW9\/9\/n6qK+9Y4mTPkxx9fX2ZoaYlrPEX2l9cIm1nam\/ZIiwYoGx\/\/34pKu56+zwn7jIaY2mfpC3cJaisrvZb5iwjZu5i5vChZay5uny3+Hm09K3+vfoxMOr4uvm7e\/1a3SCZIip7OzqZoWg\/\/7+dHuF\/v\/+\/Pv5YX+a1tjfYXWY0tXdy825qayhkKq9kqK1V2+O0tfm3+Lw5ujsbZGYiqS4navLf4id4OLn4+Pg5+rWmLbHqbC+\/f3yZZCp7+3TxMnHmJ6uuMvVvsTasMnWW26JXYGhUmiG29\/tvb+uzdrhgJuxUF98z9Tiy9biS1x63ufr8\/f34uTp9vX06+70sLGj2trB1ODl1tnqv8TOgoiN+fn4\/f39j5ep9vb1o7zMyM7j\/\/\/+6uzvkq\/C\/v7+qqqq7u7uVVVVd3d3zMzMu7u7\/\/\/\/mZmZZmZmERERMzMzREREiIiI3d3dIiIia5CGgImdk7DDSVZ5S1l8pL3LbpSdzdDYTVp39PLX8\/Py9fX1T2KA\/\/\/4ao6Co7zKR1Z7X3+pwcfaa3WNaYSdX3mVeYKJZ4uFb5Woao6GQU9xbI6e+vr5+\/v7a5CYaIuGZHCJhZa\/SVV3Tl19YX6PZouk6unmxcnT7Ozt7u7sS2B+\/Pz6nbfHX2uF6uroa5CM8vLw\/v784uLfYn6VZYycobrJtrmq6ens\/\/\/l6+jNWnGLscbT9vb2W3WRuc7ZlLDDYn6hfqK2bZOh6enxa4Sx\/P30Y4CrVWmK4+vubZWtY4OOY26K5OThcnuTrrTAm6K07\/Dz\/Pz78vP3pKq0pLzMc5mteYukxNPbk5qsbJGd+\/v8X4OXqsDPbJGSRVJ0UmOFdZOrrMPR9\/j5g6a7\/f3viqq+ao6SbXuR+Pj28PDudp60ZIKf2t3iVWF6WWaCfI+xmrXFaY2Ms7jEjJSm9Pb5qbTTyc3VnrjI5ubkjbkP+QplbmRzdHJlYW0KZW5kb2JqCjE3IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0Zvcm1UeXBlIDEKL0JCb3ggWzAuMDAgMC4wMCA2MTIuMDAgNzkyLjAwXQovUmVzb3VyY2VzIAo8PC9Qcm9jU2V0IFsvUERGIC9UZXh0IF0KL0NvbG9yU3BhY2UgPDwvQ3MxIDE4IDAgUgo+Pi9Gb250IDw8L1RjMiAxOSAwIFIKL1RjNCAyMCAwIFIKL1RjMyAyMSAwIFIKL1RjMSAyMiAwIFIKL1RUMyAyMyAwIFIKL1RUMSAyNCAwIFIKL1RUMiAyNSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNDU0ID4+CnN0cmVhbQp4nK1a3XbbNhK+x1PgUjrHyxAAf8DsRU\/WjU+zZ+OksXa7OW0vaAqy2KVIhaTs6oH2kfZ9dvBHUbZEQg7TU5MEwA+DwWDmm6G+4Z\/xN0wCj8RMX2gS45AzLwoDguPI3NQC\/4JL\/Oa6IThrsO8xnySRzw936NDWZIDpezTAvvxP3iTwN2R+jGMfJglinG3w3xY4DtUQc1ls8JtFRhDBixX+Fc9uPtzO8V98j+DZv+dYXd\/LK8WzL6oDbt7Zmyt7g+0NvI3029fmLQ\/6fseLv+P3C7XuYxmpn3gxI9GQjMjIiJWMszdv5njxxxk4Srw4DC9Aw+fBOv1FnHjMBQ309\/m5sj78y7R0WrOa+WoVbbSHZne2ZfFC1V2L3Y2P5mqfb3vv\/o7O6juKvTCIyNCacH9NqK8hBSNNjXOPE4ajGEw1igne4JDCbdJrKo6aCI9R0X8NGmDIGq8G1B5RL6JWxFBPri9G7fTlJsqX\/YT7AOjFlIQRj+CO0zgIiZRcnabru8M4dGLc3TXcJzzAT5jiRT0gYpB4gRURkPyERXiRYTi9crC5aGFZZyM3cle1IcjLQm47bNzbOQ7VWiI0+wWaIjz7CS5MW4EcKPvw7Efd+Elf3pu3dd\/NhzkOtDEweYKR7Hr\/RQ8xMKdQdJuZVWMsfup3fdVQZvg\/9eVLf+rP+sFOZsQyL9weLeQfeI66eUzXzacjzI9aFLtyPfQY7AftWJAxzRP7FMSwPTHhx\/s0sDunrf389lPwXsGQhQbGQm\/yMi2zPC1wVm22aZmLBmfrqmoEXldPuF2LPW7WKbj8fbWr8VbUTVXC6LxcVfUmbfOqxDdiKWpom6Nxj0XC3uk+Egz3BUOzIn3CD\/mjFKcqm90GJpbS4Dp\/WLe4rXCRb\/IWN9VG4Ptdi8uqxWlRKGHz8sHrpJJAadFUTuL5cLycxKvFt11eg3S7RgrTCpgaNKSU9iRA5qIQWWtUl5ZLvK2rVrYoNfa057nIFfIIvCM4r3HBPhcihc2rRboEfeWNVEyegUQgyGpXFHsp7q4E3TStlOtpnbZS4mXlnY84AUTDJOEHQdCYIG4BLIypDIdToYWxtHoHtAUYUrvfwvZVq9M23dtDqSW9j0uxFfAA3dISYUeXO+h32b+AOZp9VeNG1I9yx5Q5pY8CP+XtGuzMw1Lsg5DnNcIgwFGga3ZeB40MrriRSzbToaFlUu50fPCsr7+RJYMJ9zcmS0t4zordUrw9r\/kgimT0ZM4ioSELIz6XKyQ4JNTj0QDaAsgJkgv87wAaYV4c08gBjaJR6yc0cpQtCwzaXaUc\/p3IdnXe7nG529yLWu06aBYc6oBlEaBpJI7tbN93cju9BglsFx9AW1ha7KLXcbQT\/OysXkfRupW+y7JqV7b4Pi0gpmq339Zp2aSZMl0w5baq9+etlgUhZAmHOSey2oADlfSnstpxtEusdhSts9rrWiwh4BslKuVmuqnJKojEA8lXEno+hDA72UThRvoYNh1aSLzECe0dUI3VCdpWCrGUwV177mwHehowNRp6lFFu53UwNaBg\/2tOR0vJgHZ16bROBh7EaZ0QI\/Iai0dR75fpHkhek5eigZjw4VbF30boY3UviurpSsavAmxDk0TgQMAae2pyCNIBRE3ipIkeVYZopPWtpVVaP6+oqyPpXGSCMzxyPIxMQOT\/BL5ryHvTGcJfsWZ5AmauVYCVMmvyrPihJczn43sQEI+EPnOWxlg8Gl4bSwJ5fpzQxjXFIKVys2MXK2URuIzTKb5xcsy4zAtS\/OGUnYW0F2dkyh6wkZR99hWSiSGXHXhxAi8eQw8BDrlsCP2RH0WvEfRXPNsCq4D0GcSFDBmcNSTPcDpUWzFHur4Q41muag3lSqXVlR69gbQanvTgVvXoYYqVxvZV+xe9aHntX3TB+B91QaDSy9QL1D030ILswv5U3X1d6GXpofq1ddrr1kN\/6AZdItPY3+eaMnUfPb3R7V49gNtQT4VahV6L2Rb90M5RoGDOl1RDkoA5JtZ+hmoe4wTicGwCv+dFXonW0ZFp0CI6JVrCJ0SjLJgSLfYnRGP+lLvAgil3gcVT7kJATu4C+FIec\/+FM0XPnHTv38AcAfd8\/\/kcqhbs83F\/3a67402VYzIVWtY9rOfIuGVZ9Kz1wFK\/9dB3BDpsQgA8WQsNCfGoD6m6kXMgbXOIUge\/AEc6olOxcwZCDpaWTsk2xAfQKB+gcO6PTONMCR8dl\/ArXabWwUMXwMWjDjq6bW9DCfQs9eDUtsni971u2+lLo3pM8NJNorEhrsPZHr0j50G2rerjmFffDn55k2kVi4lVwGWsZdjWOn91jP1K6+j81QVoQyeWkfBSvK9DeS8DX89pkEy0WutPp0Gz\/nQStM6fToMWXmwlt5X7sX9Zqwy9hNDnJ37U4NGxwZ93JJyNZUYmYjW7bI1TlTtu6yqDZFt\/rugVsZqrATbAuZdwQuyME\/leGiWOFYOPaV628L+WOtXluN9mzW\/zK0i6m20lC3IDRRG5gIBEiZ1yomSShuF4YUElk9cj+Rz4G58HI4CoX0PBVS0\/9agiQCEeVDniUTRt\/pDq7Rxid5CgxyTqFjDVfgauVbhPNWzbtqrV9z5T7Lvf1SLdNf2PVeg5xY28mDFmJ3ItV4x83KA0ci5XjBc\/KHEru7kVP0gSj5crXnxG\/q5yBYEzzmm\/CuD0C4MT9ETmkcAu0nqOoO0\/olV9R5Tj4RzNwOdoBur\/bsGVilIKmWkch3ZxhjIPFikrXK1WosaDJ5dyCpyGPNfa9\/KOC9CceIc7nhvvmGa1lndMg2Z5xyRoHe+YBs3yDne0SXjHkbVPxzsgkPZ+2zLEO8yXYB2lzLdgxUIgjg\/8KoHKDDeJuZ1povhEQlX7nQoNgtDgTxymzxxhT3ux5dWZ4\/kUjRDfiwKQ6TATMuULnowHgT8q7fHzUl\/bo7meRXPCQkXFjhfllg2iF4IzYNgkCU+oiEcJ\/DsrfPc71E2qogpoiUOwUvfCVEBlC4Qt4qu4pasgOgABJ549mUwayX49eK1Gmf5KPfQ7hJ1pIFkGlxHSqFvQ95X4DxYk\/dpRcPfp+L6ucl047sr1si5knjJdLNIjTFdhKwhU9qthlb5ISpDo2P4CKVexXeg2U4rybLl96Ae98qcwnNu1mdg+TVnBFlWP9fZK19EVKSZBO5AFdzQ3suCM50gWJlltRxYmQevIwhRoB7IwCVp4sZVMQxb6x2c6spAkcnIQZ5wtuHzHGYFDFwZxHsgfkZ2GQ2ej+M\/4\/zgQtckKZW5kc3RyZWFtCmVuZG9iagoyNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9HMSAyNyAwIFIKL1RUMSAyNCAwIFIKL1RjNCAyMCAwIFIKL1RUMiAyNSAwIFIKL1RjMyAyMSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNTcxID4+CnN0cmVhbQp4nM1b247juBF911fUYzuY0YoUSUmLIINsI5OdYJPdwRgZBNk8qGW6raws9erSbud\/8kPJD6VIXXxpi6LGxiAYoNst0acuLNapKml+hY\/wKxDmksBvf9EoAB76ruCMQCC6D6WEz5DDN\/cVgaQCz6Xci0KP4aeAEi5C4XhuSAPGCVRJu+7+06V1MKz7dI+fo5DBDigsS9QDl+NK9U99iNS3fS+AgOB3ROAkW\/huife8yBewTAD1Uou7X8stfLNM0ApYruHvcPe+WMBbAnflAny4gwUIuOsuNQvn\/E681n+0P9MFcLjL9M\/2c1zrG7JaIH73Ffms\/5DlwsFbe\/3HqhUQ7\/t1\/4Dln+APS+3mU\/Oo77te6NHePNDmOco85k+b99CgLrTXL5daYHupasU6l8WGKEEE\/FSsSRia4Sz\/edmIYY9EFLgk7NG0ERf3yDkx4qcG94DB3VPRan5sxbfayScu1GJVfCFS6ZzrQhh3AybomS68\/Vb3q7WMdZal+boot3GdFjnED0VTw75oyiN7jQGMilwMXBr4LvG56BVxbFwMg8hjI19h+55QHidn2CYjj7Bfo0Wz0UxwhM+F+5s6UqN4PkNfs+hGxjJ6S9cF4Q3RGObeG6Jxby7aX4qjCDQEvYOB+Uqc4G5E6HkSmIx35zTex3NLSN3AfJ6dFrYu47yKE3WeK4jzFciXJ1mmMk9MYYYR5hLBo17Qdc4\/qC1C15+LNuV7M1MKzs+y8GWmdOyZ8tWdM6Z0ZjEljDOlcO4eToS2CB2\/tZc61MrIqz3Bdc6Yl33HXcuIy73jIuQywcEMgnPGrSCYrCLfH+ROninHnkMORHmCfRKhzihR2sXqgRyds+3xQpdzKqwNO2yPM2UYJcT1BQo3GHaWMY5ZfzxBBLgZLDTiOjNIt6dwezQw0244F3CCdoOOdm9i7kC7N0ELZttqRbs3QRto1xrtmHbHafUWyh0SGUWS9gJiAXdfylVa74qy3qS5rCoAcyBSj6iUIAYZt2JSgrzsfVUm5RGSt\/d\/x6TtpQ6yvbTFP9TqFvkXqZY448tbvj0oNdJdXciBnsu47\/eesWoVJsIlDGdDWqTVeQpapFV7QLu0ehtz+7R6G7Rgtq02afU2aH1atUezSqs3Ue6QMELfjW6HJqKjatOE9mEN+3FATMIuC2g4A7BoIC4lxJDLHSRNVRdbWb6BnYQkzuFBPqY5VJu4TPPHtm46HqL4HqzifQXrstjajI24qtFHyOhEL+eu3kjErqXSpJJ5DUhKFeRFnSbShc8bmSt1tO55AVmRP8oSlH6nNhR5neaNtFKOeYp2bHQrtEvka4fEFaxklZTpg1zhjVOlvy928lkpphRX3lXaYftqpRwVRwRlUq7BVrjGbngPdbqVgLpm6TatTTQeuB4zirCvOyjxZoIpF3YB5ppqcoZ4XJwCO1cfPGwhIo3m3OAYsyiwPHUfG1npscU7Ay7hWAexcAbsX1MDIRHMCaGaU9rjpQY01SSJgM1AM8QgCXQM+jPQTI4LvbloeGqKPMOyVx2e086aXJpWUWyqfT+cI2K327nrNH+RZewmxfZC+36J9MOAzAksYwnB56IV5ZCj2rTy04\/wXfEClHM\/OohyBjcpt9BIeUWoqQxstQ2Bf7iSHV3hqj7HK4dv6StOBhtYj7vlcN6QhIlV3\/8Js+2fkU2KN3D\/e4iY51FTsvHCdqZ0IuDqZMNE2BHMTZINZzesZ5gfWdYzv1ma6g+sBL0wmgGHNP++PRRv4EOeuPDz3X+6C\/\/9eQFP8X6r2P+pLBJsSVUVUsnyGfkUkFnj1TbN06qW2LnCw96GSBnlU7Oijkjvy6KqyiJeVUrDOE\/SODN2wxjgoQhNEs6obymTTV5kxWMqqzfwww\/3gJUExFmGRcRDjYbWdSa1+aXMMHpXve2VO24pxz6GRVE0w1KrAEGmnDhrQBzbcPMxG0zUWs6sFn\/06dxBJJ7l04luFHjTI93Pm7Y77xvsSKtEKObzhdOOeMVwaaXXFvZtNuFYf5CQnGl37Wn2FdXTrzpBwcLCFfR4goLJfnKC8n2hZ+O7YWQRaSdS7cTWu74eoLP+7vv+kX3oqMcEuOZF321Xlu2kpZ+64PonvabsZzNUb6Lo1yf6Z71wRL9ezVeonpuwU4hjAa1CLVyrRCsy02q131Iq9nfXCwj69eUwxhm+1mrUfuEY9J1+1QD6oLMNKj8grlBvWpzsydX0pXg7YreiL5+GLmc2IbosVPavZdIN7p9kWRU55uLjxkt3oE0eN\/WmKNN\/YaqME0UY+rFgU0ndDeJvG4rw1ZsxzCZxVjJpyrTew1bGVVPKChs+rJKwunvK9rBLa6xj5AqpLIMs3rmw3EhUYVic5knWrKx0olGEvYCNTkp4g4wIVbyWj01crpBbtKLolHWaydYnD02arZBO8SaqUpdpUity7byGXePZqxHjmoVYCVtpNmycko+CigaZbdhEA7PyyCVRMIiyKVxzZQLGArpb4mYUe4l27zYF5BLdgPd+yYtdu1s2NgaeCn2bucVxUA7hoQw22IdEHQpKz8QYD+xTmT7HiWEURIXAIOZsAL2OWigyylw4XbOtVKQbam3fx24giIIv1PM60qI8ODpVlk9bx9FUGyMmKNA5LzC+nAKdgV\/MFJj0jwVoy1D9zwMFOh0F3YQClVo3okAHKbCzw5r81LzXC9jZblz7GI36xOWXX0r5EjQy+sraGdpnNcPMMiP5vdFtg3yJMdEpoutmo9+OJzZG0RohTHq8OnKjYMTrHiao54HGFmFJutP0b0MLSXzMB1RYoNHphoNQYanb0HD8+ITui\/OBoNC1j+mzKh7aHegHIhffkXj9aASTms95L\/\/KuVbvaYJE6Jnq+87TYOXpaTRqoVvv6Um0wdJPGwOcjx2MmIOGdI5blK6wXU7XadKdjKd4327bQ5plldpMZKVnXKUHWuc1CG6loa\/2XCbIoNJ1ffVhK0XYVdWGrXSst3ISjb7uq8e3cgptODRLmWXKo6rCSnX5WMpEqmOzLXK5N83aotANIz\/ohd3qhHB69BL51SdkEm3WCZlCO87+cVYV0xTQ9j9FvcF7WO03yUY9ikr0Cx2m1D2o5IcY3DYx\/YD1XNygkHiNzUQa12p0hcdKy9adT5ynExUfcxnBcrcTeuWODyZQpoa2X7N8JF7kipOCb2SkdDr06EZKe10RdZOjpK\/ahK58DG8KqpekOR2Ej77v+McuwH\/r+cz\/3bj\/sEwS6n+DnMApW7xwejqmnpVgffahf2elnYHo\/6eghmOqxAt1WUeHtWjj22FZ+xP6ElfVg+ict2xYVqa6DMzbi4\/txXftrxlVIeVE\/c8WdmbmtUOMCGvNMPC4Bdz7bg5gojwM4DD056Bm8U5XJ7o2AfXMvEwfN\/Xw1Fc91NobCkGfBq7nhXyQOY\/VPsL\/AIqxj\/sKZW5kc3RyZWFtCmVuZG9iagoyOCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCi9UVDIgMjUgMCBSCi9UVDEgMjQgMCBSCi9UYzMgMjEgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggMjgyOCA+PgpzdHJlYW0KeJy1W92O27gVvtdT8HIGSLTin0TlptimXWD3YtNFpgiKohcambaVyJJDyfF636cv1KLv00NSv54xRe3MIsBIlsTvHB6efzJf0S\/oK8IsxAm1F5ImiAsaxpxhlMTdjZLoE6rQd+8bjPIGReZfk8PYKCTM\/tY3OBIh4RRGRkmYiiTID+jPD4jbAd3l4YC+e3jACKOHLbr79z16+Iz++mA4uULDNEwSEnugkQ4NOdBI7Mlbzjq0j\/tMFdUObWuFsu22KIuslc3\/kPwm1WWTXdDjqSkq2TToeFLHupHNfXCLPE1pyOkwF7RM\/a0LDOYCV38w5AJLV4IVFUjkkLVFXaHssT61DvRB7LEWgAd8cHepTwrlSm6K9lyrdm9EfHthCWOhIIS4KATX0ritJr0Kx0kS8siBtkqFl9HWqPAi2jDT7we1RVtVH5BW2B0yEp6uYlujQ6a+yFbfwVvNQ\/AsD4xEIaNCuHjw171R2jEOGXGgddIO\/KS9iAbSDrylvYSWs+Cpw6jqavQZzwr4hjmyJIziiPVkPfyUYxJppOcAyxRrWC+0jy1wjMrs3ADLF7QrvknNMco2DhukIqQpXkEFjBsULyuRKnb71gioLA5FixorwxB9lBI9yrI+G3EeaghCtxVpnCclYexerE6RQO2NHXQMnKqNVKjpJx86hEo4zFbggdhrLREGYyAJXgenR0epAIWJwoRgHosY7gRJGMcBxGgTtN9\/dH6HPr6H+1QwdEYEPSgHjxGfLHAURmmaAHM5gixBf91dLLfUcvtPdPdpf484usvuUYzu2nuUmilggu7298Hw4mg+sn+leVKZe3D+yTDgfI\/MsOuPzOvg7ke4RMPHJVwwBCx7OcBl+DHjwlKYMqnug3T41lLYmRfdiK2lU5s3aoqVXTOlHwXwKDcv7F877mT+2k9n\/MxnYfmyQ8r7QHO0mcJ\/tlzaD2YsW9BOCpdrMQZzWeynmFYiFtLKTU4YrybihwH\/Ch5+WlBunpKQswSjUXMgG3pGcYKZ4siy1wDNwZ80LdTTsoYBKh49p7IYAlWKCR0ov5KV8kSEIn4tm+cxC5kX2j9MVrSvi9wRssD9phiLFbAQm85FWaLseCwv2gub5LauJOr9Y5bn9alqQ0cGmXCgRnlP1sP5esmGg5YsoS1F8RGN8jCOBwV0hXFP76pVz+0tOSGTZdA6D9NZdJZ\/AbuixsMkxpyFsTei7wNhjDXun9fmuX0LNsKsNfpaCAfuCE+v2HyluPOsZIacikPilwy5upHMTcEEvWC+35qpb3sBJMa1Jf19ZsTQ9q5pEMm7QSTBokiSNMSCiCv+PJXlCZoga9Hy+nDMqgKsUskSUpENerwgeHgAa6zPlVTNvjgiyIfyumpVXYboYS\/hi6wa+Qhu6iNLGSQufjm7RQscebE\/2qNE26LKqryAhC+rNjo5Hh8Mcw5dVSo4A54k\/lSdPgZDzWjnAN6cuqoYXXcES1UeS23dsYxGPLQmJp68DVrz4TRtUEBll5enjXRlsFC80SjmExrBwhqOmnku2j1q9xL9oMPDh+xLg6rsIN+g5pTvUda46r1hbjENU4\/qMbgbifwA86rV8Q36scpDx9xEAm6NcBeNFf2AQdthkf1q7peGj5EkhCwczcJH7JFs\/zyNClkfS4zjDIbIUZq\/9t5+Y+OKjT3XjvNpLAmueE7TkBLGep5f5mJIRNaijepZ1e2y87ytogxCgOAs9aYd3HWe2CMJ0d2T5CZmsFYlb6NdqeQQJPw98c1owiIKVCO6MBnfaDJ44oi5C\/d5v+357tToiRfRxn6bh7daQhtU4edZ1+fs9MGchnGUONGvllH3RqT1v7OI\/zRa0jjkgk\/lsOTfu6DhwEzikCWQzXSYL6uAKJjZSrRDrdpdtpPIUQExhuGS8BWwvc6\/8YnJVJuyF2xRNScFdiVHq3JRIIJCsROLFRQ2hZJ52\/UVddtxQqgz7aOqt4WzPT9MDGo44dc3Uzsg8ptpHDeuOEyTUKQpdUH\/jjhMb3dj\/6g4TGddTR2HSbochn+CMPzW9puYicZvbaeFGJ9j2ypvYxN99Rtl3nyxP+T06xnAzl5W1DQE6zSIsX4aL6tpCI7XomXIbDRAvNkpKQ+yaiEMtWcpq1mT3NFeZnqLB3NxtRK\/0\/UwAFmJNoZIjyBPX6MrPCqfN9qYArX7TG807CRk6arfeBjnAF5hc8rbRqdCjVTfitzuUFzqk6sE4zrwk3Rg6ZVKMAoaxdlrlWDLaGtKsEW0WQn2uS6qiTs+ZqrVSedQj9k9TQjdamMc9FHJY1Zs7ANHUjNwo9Nir4Lbq6QmoGKCp8Ib172evcLq+mtxH\/m6bfeyPht8pvsrEwft0Wb7YAuevSl4bNmj+oZ2ajYSEuujidmToKbbNnxkB9vKqZrUT8i00oeunam9gmQ+tgOdll1DO8\/C+ZZdhEHWkES8l8DLcvFRnnGke9weaH9vJKq3phswKpr+DD97PgQcbiyYD35nVufzOQTH9atUWQhKPVGYXi5PjwPwkOBkSmQp9XWFOyZmaB5u+Cwfm6J1JNLgQiHVE3wF5juEPu2lacijE4jcyBs9lfeVeuijHVor\/NfzWt7BorxZmkCtHq1Z1OdYN6qBKVRFqUnvDmYhIz4+KWdPMJh7ORsFT+CbPdqaaQs+xdJMknSKNX1isaajRqyb8x6NhcW3Nj2CZzXjjd1XKesdRIbZMYyigRy+LCGrlzZCNG2tbGL0fGigApwuZtzFxIpjRUJAbkf80ZwBgYKa+6MFYw06nFD58W8+6RaBbOTGNtGV\/LPNRskGqqNHVZ8h8UHt5QirsakPGSyE7mHqyinP9YmutoBfZg1gnebL5IqpI1c40dtNPg1Oa27arnXmVjQ9LYcHgVgbp1E8pxK4lt3o19bVjWAhpYnoIX0KZ2X80KGuClBTWLU3qD7CTExhCIK8HWgYodr4Ym8pmaB480gSjTTrfAXaxtH\/g7KVGY\/vvYLOWiNagWaM4OspK4v24qX6kJETP9Vv+m5EF62HvL\/ebiX4GL3dO48qT+w5ghkQyMs6qh4a4o6DFLQ4YWwFnqvHqosShiGb9Yd70HIAFs05p6xsautv0X\/yuv4CyfN\/fXIlLIRnbO031HVyfmrB\/ex13r9R+oAVVF97WR5NgAcbavTRqOI3aQfUVVlUEslf4U0hYRG9PBBonacTf2+nq3uKunn+eNG+aKN5UqdKV4s7lR1MtbiRJXCrHKsAtYqg6UD9hU3CmK9F+1Yo60jrubC92vM4NicOPMj0ItP92FNVfD3JElSoaYpdZSUHxG0XTjdqYQEvuvWuZGb2JDIEqYAxQanPYXqtJuOe3khbcRfSTB+gANPXPO11J1Jz3Zf6DrljrPP0georHXbBFHtaphca1OZ+2fMHaz8fZX5S4Fnf6T3zZ3LQJzsdehuKUyZ6Un9I\/kwjrXOC+BBZ7lzQiK5F67JSm38U1ebUtOriiGhEVy8Ezyk4c4+3LjQaJjyaoi1Va00LZtV3TK6qCLNi+v8yYG7Ozh6sePHwBLL66ROb509Hrcn8ceR7bsYRBVNI5TBJ2Qq0KleXoz23LfN9VesMVe826QpRyVwW3+xuQNWcDvpMq6xggXWU2WQtxA7dqmq0LYBX8PA8EN\/AJ0KBt+x6Oo\/WnI7HWrUNwkQ4Gkb6PzFQTpwEAm9NgtAfplALrIF7LFokB2lCJSCPsjL1R5cNgU0ovY336NBgysIoZfFA12MBXQZBISkSZBVcV844HDoTLMQRlLsrUCf29Qv6P\/gi4N0KZW5kc3RyZWFtCmVuZG9iagoyOSAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggNTQ3ID4+CnN0cmVhbQp4nJVUTW+cMBS88yvecXNxbGxjyLGrHnprKtSqRwdM1ynYG9sk2r\/ZKv+nZr+kVcquERIYJGbee\/NmXuARXoAwRAQ9PPJKAC8pKjgjIIrjwSn4AQbu155A4wHvL9\/EfzHK2eF9OlTxzikWIHCFikKQrBngUw388MfxUQ9wXzcMCNQdrOAO6mf4XO9LmYErKo7yQiSgrWWvO+uMlldwCeOIlWIJrlNet8oEfwU1gmFW8AWoD\/DTjjDIHci+t29gRwd+I502v8B2oE1sZZBBWwNvOmzgLrs9qhKjshBwizxbGWtk1+ley6BaCBvtWthKF7TyIE0LvR50iCXNd5xXDFFc8hNpyhzn+osneLbahL1u2Y0miwKxhCZhNUj3W4WJbz9AGzbKQaeNNI2WPTR22Epz6niqYZLgPBb\/DupVuV0bFUqZPc8RTpr90+i1Ud7DdnRb6yP\/0y7ST0sw1RqrjMPxwY3NNBwfX\/bf5qWg0bMVE+caEqRQpukjdQt\/vgxb64I0YR6fVRQJSukC\/CRjU5GaE1+dfpXN7or\/KEacxMMC0GshQeliuPXG6iaKOS3SOuo2Dsr5v2BsmD6jM1n2QT4sEME4P5MlrHaSUXI6RVEC2nflBhvd9+0UdA+wu8im+f3PS4Lyskpny1a3gu4ym1IWCZeJCXQZdEm2+49T4LiOKbHAY0ympFV2sT8fBHk\/7hG6FgM4urMqyIlzmQUe4R+blwYzCmVuZHN0cmVhbQplbmRvYmoKMTggMCBvYmoKWy9JQ0NCYXNlZCAzMCAwIFIKXQoKZW5kb2JqCjE5IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUxIC9CYXNlRm9udCAvTExWQ1lEK0FkZWxsZVNhbnMtUmVndWxhciAvRm9udERlc2NyaXB0b3IgMzEgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyMTQgXQo+PgplbmRvYmoKMjAgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHlwZTEgL0Jhc2VGb250IC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZvbnREZXNjcmlwdG9yIDMyIDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMjEzIC9XaWR0aHMgWzI1MCAwIDAgMCAwIDAgMCAwIDI4NyAyODcgNTMzIDAgMjIzIDIyNCAyMjMgMCA1MzMgNTMzIDUzMyA1MzMgNTMzIDUzMyAwIDAgNTMzIDUzMyAyMjMgMjIzIDAgMCAwIDQ3MSAwIDczMSA2MjkgNjcwIDAgMCA1ODYgMCA3NjIgMzI0IDAgMCA1ODMgOTE5IDc2MCA3MzAgNTg3IDcyMCA2NTUgNTUzIDYzMCA3MjcgNzAxIDk1MSAwIDYzOSAwIDAgMCAwIDAgMCAwIDU0MSA1OTMgNTE4IDU5MCA1MzAgMzIxIDU4OSA1ODEgMjYxIDI0OCA1NDAgMjU4IDg3OCA1ODcgNTQ1IDU4OSA1ODkgMzY4IDQ2MiAzNDAgNTgwIDU0MCA4NTUgNTY4IDU0MCA0NTQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMzY3IDM2NyAwIDIzMyBdCj4+CmVuZG9iagoyMSAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0FHS1hKRStBZGVsbGVTYW5zLVNlbWlCb2xkIC9Gb250RGVzY3JpcHRvciAzMyAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMzIgL0xhc3RDaGFyIDEyMSAvV2lkdGhzIFsxOTggMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyNDQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDI0NCAwIDAgMCAwIDUyNCAwIDY5NiAwIDY5MyA3MjYgNTc4IDU1MCAwIDczMCAyOTEgNTExIDAgNTU4IDkwNCA3NDUgNzYwIDYxOCAwIDYzOSA1OTkgNTcxIDcxMSAwIDkxOSA2MzUgNTgyIDAgMCAwIDAgMCAwIDAgNTUwIDU4NiA1NDEgNTgzIDU0NyAzNDIgNTU1IDU4MyAyNTcgMjU1IDU0NCAyNTcgODYxIDU4MyA1ODIgNTg1IDAgMzc2IDQ5MyAzOTIgNTgwIDUxNyA3ODEgNTA4IDUwMiBdCj4+CmVuZG9iagoyMiAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0lQRUpKRytBZGVsbGVTYW5zLVRoaW4gL0ZvbnREZXNjcmlwdG9yIDM0IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgODkgL1dpZHRocyBbMjQyIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyMDAgMCAyMDkgMzM0IDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCA2MzcgMCA3MTYgMCA1NzAgNTQzIDAgMCAyNzIgMCAwIDAgODg1IDc0NSAwIDYxMiAwIDYzNyA1NzggNTMyIDAgNjE0IDAgNjA3IDUzOCBdCj4+CmVuZG9iagoyMyAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UcnVlVHlwZSAvQmFzZUZvbnQgL1FRVEFRQStUaW1lcy1Sb21hbiAvRm9udERlc2NyaXB0b3IgMzUgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyNTAgXQo+PgplbmRvYmoKMjQgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHJ1ZVR5cGUgL0Jhc2VGb250IC9TUUtVRVQrU3ltYm9sIC9Gb250RGVzY3JpcHRvciAzNiAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMTY1IC9MYXN0Q2hhciAxNjUgL1dpZHRocyBbNDYwIF0KPj4KZW5kb2JqCjI1IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1RydWVUeXBlIC9CYXNlRm9udCAvSkZSWFFEK0FyaWFsTVQgL0ZvbnREZXNjcmlwdG9yIDM3IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMzIgL1dpZHRocyBbMjc4IF0KPj4KZW5kb2JqCjI3IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUwIC9FbmNvZGluZyAvSWRlbnRpdHktSCAvRGVzY2VuZGFudEZvbnRzIFszOCAwIFIKXQovQmFzZUZvbnQgL0pPVk9WVStNUy1NaW5jaG8gL1RvVW5pY29kZSAzOSAwIFIKPj4KZW5kb2JqCjMwIDAgb2JqCjw8L0xlbmd0aCA0MCAwIFIKL04gMyAvQWx0ZXJuYXRlIC9EZXZpY2VSR0IgL0ZpbHRlciAvRmxhdGVEZWNvZGUgPj5zdHJlYW0KeAGdlndUU9kWh8+9N73QEiIgJfQaegkg0jtIFQRRiUmAUAKGhCZ2RAVGFBEpVmRUwAFHhyJjRRQLg4Ji1wnyEFDGwVFEReXdjGsJ7601896a\/cdZ39nnt9fZZ+9917oAUPyCBMJ0WAGANKFYFO7rwVwSE8vE9wIYEAEOWAHA4WZmBEf4RALU\/L09mZmoSMaz9u4ugGS72yy\/UCZz1v9\/kSI3QyQGAApF1TY8fiYX5QKUU7PFGTL\/BMr0lSkyhjEyFqEJoqwi48SvbPan5iu7yZiXJuShGlnOGbw0noy7UN6aJeGjjAShXJgl4GejfAdlvVRJmgDl9yjT0\/icTAAwFJlfzOcmoWyJMkUUGe6J8gIACJTEObxyDov5OWieAHimZ+SKBIlJYqYR15hp5ejIZvrxs1P5YjErlMNN4Yh4TM\/0tAyOMBeAr2+WRQElWW2ZaJHtrRzt7VnW5mj5v9nfHn5T\/T3IevtV8Sbsz55BjJ5Z32zsrC+9FgD2JFqbHbO+lVUAtG0GQOXhrE\/vIADyBQC03pzzHoZsXpLE4gwnC4vs7GxzAZ9rLivoN\/ufgm\/Kv4Y595nL7vtWO6YXP4EjSRUzZUXlpqemS0TMzAwOl89k\/fcQ\/+PAOWnNycMsnJ\/AF\/GF6FVR6JQJhIlou4U8gViQLmQKhH\/V4X8YNicHGX6daxRodV8AfYU5ULhJB8hvPQBDIwMkbj96An3rWxAxCsi+vGitka9zjzJ6\/uf6Hwtcim7hTEEiU+b2DI9kciWiLBmj34RswQISkAd0oAo0gS4wAixgDRyAM3AD3iAAhIBIEAOWAy5IAmlABLJBPtgACkEx2AF2g2pwANSBetAEToI2cAZcBFfADXALDIBHQAqGwUswAd6BaQiC8BAVokGqkBakD5lC1hAbWgh5Q0FQOBQDxUOJkBCSQPnQJqgYKoOqoUNQPfQjdBq6CF2D+qAH0CA0Bv0BfYQRmALTYQ3YALaA2bA7HAhHwsvgRHgVnAcXwNvhSrgWPg63whfhG\/AALIVfwpMIQMgIA9FGWAgb8URCkFgkAREha5EipAKpRZqQDqQbuY1IkXHkAwaHoWGYGBbGGeOHWYzhYlZh1mJKMNWYY5hWTBfmNmYQM4H5gqVi1bGmWCesP3YJNhGbjS3EVmCPYFuwl7ED2GHsOxwOx8AZ4hxwfrgYXDJuNa4Etw\/XjLuA68MN4SbxeLwq3hTvgg\/Bc\/BifCG+Cn8cfx7fjx\/GvyeQCVoEa4IPIZYgJGwkVBAaCOcI\/YQRwjRRgahPdCKGEHnEXGIpsY7YQbxJHCZOkxRJhiQXUiQpmbSBVElqIl0mPSa9IZPJOmRHchhZQF5PriSfIF8lD5I\/UJQoJhRPShxFQtlOOUq5QHlAeUOlUg2obtRYqpi6nVpPvUR9Sn0vR5Mzl\/OX48mtk6uRa5Xrl3slT5TXl3eXXy6fJ18hf0r+pvy4AlHBQMFTgaOwVqFG4bTCPYVJRZqilWKIYppiiWKD4jXFUSW8koGStxJPqUDpsNIlpSEaQtOledK4tE20Otpl2jAdRzek+9OT6cX0H+i99AllJWVb5SjlHOUa5bPKUgbCMGD4M1IZpYyTjLuMj\/M05rnP48\/bNq9pXv+8KZX5Km4qfJUilWaVAZWPqkxVb9UU1Z2qbapP1DBqJmphatlq+9Uuq43Pp893ns+dXzT\/5PyH6rC6iXq4+mr1w+o96pMamhq+GhkaVRqXNMY1GZpumsma5ZrnNMe0aFoLtQRa5VrntV4wlZnuzFRmJbOLOaGtru2nLdE+pN2rPa1jqLNYZ6NOs84TXZIuWzdBt1y3U3dCT0svWC9fr1HvoT5Rn62fpL9Hv1t\/ysDQINpgi0GbwaihiqG\/YZ5ho+FjI6qRq9Eqo1qjO8Y4Y7ZxivE+41smsImdSZJJjclNU9jU3lRgus+0zwxr5mgmNKs1u8eisNxZWaxG1qA5wzzIfKN5m\/krCz2LWIudFt0WXyztLFMt6ywfWSlZBVhttOqw+sPaxJprXWN9x4Zq42Ozzqbd5rWtqS3fdr\/tfTuaXbDdFrtOu8\/2DvYi+yb7MQc9h3iHvQ732HR2KLuEfdUR6+jhuM7xjOMHJ3snsdNJp9+dWc4pzg3OowsMF\/AX1C0YctFx4bgccpEuZC6MX3hwodRV25XjWuv6zE3Xjed2xG3E3dg92f24+ysPSw+RR4vHlKeT5xrPC16Il69XkVevt5L3Yu9q76c+Oj6JPo0+E752vqt9L\/hh\/QL9dvrd89fw5\/rX+08EOASsCegKpARGBFYHPgsyCRIFdQTDwQHBu4IfL9JfJFzUFgJC\/EN2hTwJNQxdFfpzGC4sNKwm7Hm4VXh+eHcELWJFREPEu0iPyNLIR4uNFksWd0bJR8VF1UdNRXtFl0VLl1gsWbPkRoxajCCmPRYfGxV7JHZyqffS3UuH4+ziCuPuLjNclrPs2nK15anLz66QX8FZcSoeGx8d3xD\/iRPCqeVMrvRfuXflBNeTu4f7kufGK+eN8V34ZfyRBJeEsoTRRJfEXYljSa5JFUnjAk9BteB1sl\/ygeSplJCUoykzqdGpzWmEtPi000IlYYqwK10zPSe9L8M0ozBDuspp1e5VE6JA0ZFMKHNZZruYjv5M9UiMJJslg1kLs2qy3mdHZZ\/KUcwR5vTkmuRuyx3J88n7fjVmNXd1Z752\/ob8wTXuaw6thdauXNu5Tnddwbrh9b7rj20gbUjZ8MtGy41lG99uit7UUaBRsL5gaLPv5sZCuUJR4b0tzlsObMVsFWzt3WazrWrblyJe0fViy+KK4k8l3JLr31l9V\/ndzPaE7b2l9qX7d+B2CHfc3em681iZYlle2dCu4F2t5czyovK3u1fsvlZhW3FgD2mPZI+0MqiyvUqvakfVp+qk6oEaj5rmvep7t+2d2sfb17\/fbX\/TAY0DxQc+HhQcvH\/I91BrrUFtxWHc4azDz+ui6rq\/Z39ff0TtSPGRz0eFR6XHwo911TvU1zeoN5Q2wo2SxrHjccdv\/eD1Q3sTq+lQM6O5+AQ4ITnx4sf4H++eDDzZeYp9qukn\/Z\/2ttBailqh1tzWibakNml7THvf6YDTnR3OHS0\/m\/989Iz2mZqzymdLz5HOFZybOZ93fvJCxoXxi4kXhzpXdD66tOTSna6wrt7LgZevXvG5cqnbvfv8VZerZ645XTt9nX297Yb9jdYeu56WX+x+aem172296XCz\/ZbjrY6+BX3n+l37L972un3ljv+dGwOLBvruLr57\/17cPel93v3RB6kPXj\/Mejj9aP1j7OOiJwpPKp6qP6391fjXZqm99Oyg12DPs4hnj4a4Qy\/\/lfmvT8MFz6nPK0a0RupHrUfPjPmM3Xqx9MXwy4yX0+OFvyn+tveV0auffnf7vWdiycTwa9HrmT9K3qi+OfrW9m3nZOjk03dp76anit6rvj\/2gf2h+2P0x5Hp7E\/4T5WfjT93fAn88ngmbWbm3\/eE8\/sKZW5kc3RyZWFtCmVuZG9iagozMSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0xMVkNZRCtBZGVsbGVTYW5zLVJlZ3VsYXIgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE4MiAtMzIzIDExOTggMTA5OCBdCi9JdGFsaWNBbmdsZSAwIC9Bc2NlbnQgODgwIC9EZXNjZW50IC0zNzAgL0NhcEhlaWdodCA3MzcgL1N0ZW1WIDk0IC9YSGVpZ2h0IDUyNiAvU3RlbUggNzYgL0F2Z1dpZHRoIDU3MCAvTWF4V2lkdGggMTM4MCAvRm9udEZpbGUzIDQxIDAgUgo+PgplbmRvYmoKMzIgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE3NCAtMzA4IDEwMzUgOTQ3IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA2NjggL0Rlc2NlbnQgLTMzMiAvQ2FwSGVpZ2h0IDY3NyAvU3RlbVYgNTYgL0xlYWRpbmcgMjAwIC9YSGVpZ2h0IDQ3OSAvU3RlbUggNDMgL0F2Z1dpZHRoIDUwMCAvTWF4V2lkdGggMTIwOSAvRm9udEZpbGUzIDQyIDAgUgo+PgplbmRvYmoKMzMgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9BR0tYSkUrQWRlbGxlU2Fucy1TZW1pQm9sZCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTg2IC0zMjMgMTIyNyAxMTEzIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgMTE1IC9YSGVpZ2h0IDUyOSAvU3RlbUggMTAyIC9BdmdXaWR0aCA1NzAgL01heFdpZHRoIDE0MTMgL0ZvbnRGaWxlMyA0MyAwIFIKPj4KZW5kb2JqCjM0IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvSVBFSkpHK0FkZWxsZVNhbnMtVGhpbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTc1IC0zMjIgMTE0NyAxMDk0IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgNDkgL1hIZWlnaHQgNTIwIC9TdGVtSCA0NCAvQXZnV2lkdGggNTcwIC9NYXhXaWR0aCAxMzIyIC9Gb250RmlsZTMgNDQgMCBSCj4+CmVuZG9iagozNSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL1FRVEFRQStUaW1lcy1Sb21hbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMjAzIC00MjggMTcwMCAxMjcyIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA3NTAgL0Rlc2NlbnQgLTI1MCAvQ2FwSGVpZ2h0IDY3NiAvU3RlbVYgMTAyIC9YSGVpZ2h0IDQ2MSAvU3RlbUggNDQgL01heFdpZHRoIDE3MjEgL0ZvbnRGaWxlMiA0NSAwIFIKPj4KZW5kb2JqCjM2IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvU1FLVUVUK1N5bWJvbCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTY3IC0yOTkgMTA5NCA4MjcgXQovSXRhbGljQW5nbGUgMCAvQXNjZW50IDcwMSAvRGVzY2VudCAtMjk5IC9DYXBIZWlnaHQgNjIzIC9TdGVtViAxMDMgL1hIZWlnaHQgNDY3IC9TdGVtSCAzOCAvQXZnV2lkdGggNTcyIC9NYXhXaWR0aCAxMDQyIC9Gb250RmlsZTIgNDYgMCBSCj4+CmVuZG9iagozNyAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0pGUlhRRCtBcmlhbE1UIC9GbGFncyAzMiAvR</mes:base64EncodedContent><mes:contentType>contentType</mes:contentType><mes:documentName>names</mes:documentName>
        </mes:CreateEnrollmentDocumentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6fc9718f-f69d-46f7-9a41-dffda9a7c22f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="9c7d00ba-2f31-4166-b13a-3d560078b5a2" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="8e097316-b0d3-41e1-af4b-18225c6792c4" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:commandStatus[1]/text()")
def documentId = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:documentId[1]/text()" )

assert commandStatus.getData() == '1'
assert documentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateEnrollmentDocumentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="79c19945-0fab-4d4e-9523-f435c8e589b3" name="CreateEnrollmentDocument_WFB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateEnrollmentDocument</con:operation><con:request name="CreateEnrollmentDocument_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a2d6acb3-7045-4a9a-bcfb-42997ae5c540"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateEnrollmentDocumentRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:note>ref</mes:note>
            <mes:documentType>type</mes:documentType>
            <mes:base64EncodedContent>JVBERi0xLjQKMyAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQW5ub3RzIFs8PC9UeXBlIC9Bbm5vdCAvU3VidHlwZSAvTGluayAvUmVjdCBbNDE2LjkzIDM2My44NSA0NjAuNjEgMzU3Ljg1XSAvQm9yZGVyIFswIDAgMF0gL0EgPDwvUyAvVVJJIC9VUkkgKGh0dHA6Ly93d3cuY2Z0cGF5LmNvbSk+Pj4+PDwvVHlwZSAvQW5ub3QgL1N1YnR5cGUgL0xpbmsgL1JlY3QgWzE0My40OSAzMjEuMzMgMjE0LjE3IDMxNS4zM10gL0JvcmRlciBbMCAwIDBdIC9BIDw8L1MgL1VSSSAvVVJJIChodHRwOi8vd3d3LmZpbnhlcmEuY29tL2xpY2Vuc2luZyk+Pj4+XQovQ29udGVudHMgNCAwIFI+PgplbmRvYmoKNCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMjIzOT4+CnN0cmVhbQp4nI1Y23LayhJ93vmKfkjtSqrwWPdL3jDgCqdsICAnlaq8DGIAHQuJPZJM+JHzvadnRjeETDapGCFmVq9efZkWBvzng0ZsF04fHgK4f9TBIZoGwRYmgbijmy5xDfAMm5g2BBv4tDqyMKIxLAp+TDMGwzBMiySHWXFYM\/4FLNPQxEvH\/5Zj+7DKac4ODJcsGI\/SzRd4pjzcgz4AQ9NtuCs\/m9UNWNAdA\/0e7M8Q\/FcQ+Qe\/0AQv8Q8Z4ZXhmcRywHUdYlsQHuB+qsM4hW8fXI2YGriOSxwDTN8hHtrQiKsDZ\/AAwivXJLoJrm0TX5NOLTjNaJLvYfS9stkss1xiqWXPLInT6wWmRzxf4VD+CnIVyMvRsLX6\/tHoqGvaDnG0NpHxdDkZBTB8eoLhaDR\/mQUwnX17mS6nkxUE8y\/Qwqt2WxaxHbl7xNMs4yndZPAYJTSRgQpYuE\/SON1FLOvbbiIntX0xh4f0Nxi2bfp9Kw2X2GUS0ASjlrN0gC7e+ZalGT3rdZ9oav1inyYMZin8DzzPuzMt786yLbPaU4ZMl9tuhkxzxV1J4eX5ebj8CfNHVCqYfp8GP+FC7KtUNiyRyo5vioyRrJaT79P5ywpWwTCYPE9QbHgYPg1nownMZ6AZ94bXgqwAPIMYZbQmi\/lqGqzuR8vJGN\/bGhg68fT24o+GSOEePPTeUwH4MQ2+jpfDH8On1f3q5SFYCs\/ms0tcm2CNtDZ9NPphbZ\/YhpKqdq\/tnXlv6j2Em20fda+FrGLk2BYxrHdidJ3gKmqO6RPHk5jo0mylvGrCFnydrmAxWU7n4\/cjWNo3LYLJaSrzukV0V9hfQWMMBbJViozR7QpQx8wRuqn9uifbSQdA13zie22ENt3xZDVaThfiugI1vDaoY4tQdzANr4v5XtKYtiF6bAlmoWR6F8zERqFfgLUypsKxNJ34t0lZGqaI38apmk2ZIJ2gY+Yaxk3RdZ2YpkTCvGqaQaW6AritegOxZGHBeZTsYMzwjIly2PL0AKM9C1\/xbld9Bd7rqEhq3WljqyoE+eoqr4D6lccw6nob6BKiEv0GF8vELv9HLqXimiNa5w3Fbd8VnpWKm1pXcQVwU\/EWxHD0FQ+sszyl8xRCzjZRnnLAPr\/hFIbHY8x22O+70isr\/dJj0dta20i\/6AqiX3QXP15AyF7Xr\/wNKqXybRzZ2vqUt9Gm59YNrlPM+BHDa6MV3+ueQstJ8LKcTcYwxWYLj5PJqoPsaMTB1mPpxDUvkD8YOvpl1ivEOetc2cYpw3fBtmWbls1pHgyf4HG+7GugUn7\/NqSJxGzzGvLnZLi8C+Z37f5Z+mA54nTo8QHhUF5MbBvnM8dsob2vS+V2CXrNsfbi\/RVNQeiu6GnC7mweTL7A5Dc9RDh15Psog6weQkPK2baI4zNgbiPIMeU5Xp4h4pztipjyKMdJiXQcx5JxWmmhm6K51hQM\/IzMLJTAVxPP9HkxXwZDbKnNHIeheh62z4+avOU5Iv\/lxgQp4lydboFxnvIMsA7\/KViWR2mSAdB1WuRwTgveODUAFrMw52kShZBzmmRbxsU+eU1DtTVNrrbluO8oZ7MiA4q1v2eQyEEejtiAc7YRu67pup7ohoKu2IHdGYVFwh2pkcAJ1azA\/zidDqA9gQ7gYsocgBwzgaKFFEnhO3qDWiUDiLbyGs0nrz1sHV\/MlYLtpf+CIGchi445IPETurET90q4hKH7hxSDHCXblB+okLHUn7ZkTqRsfagEfjA4FFkOe0a5OsUkcgoxruZ9XHXR8pSy6D7y3tAzyrcVy09oRlhQzjJ4nC5XQdtyAqd9hM9S4kuZPUjm2gY2W1f1wb\/gL9AJBiGORZCkPAk9MFkbtHyyKxPi1yfUBQvl12fSA6kTo4E0CJ7cWcijNbugIj\/UwgkvsBihSLIC36SwA2mZ\/T7GNJIxDmNUThRrHW508Syv1yyO2BtGR0YPv6jNVCuaCF4zNg3i2jVj8WpFucdDnKqNZr3ZiCZ82qQxNg6gBymYrAQMVZHhs7KoIUmsBxP7n1\/OcQxOEeJFyZuodHHWqmiE6UFqkUth5JowxU4VqqalXD5iYh3z+ExguhVJktNXpvyWSYQJtS4y7IVZprIJj\/hNKqt1IJYrVHnmK6NV5K8Z4+BYPgtvy3CWPjf1h7GIylgMsFQFBfW1NLOnbyonCtXjxOUBG9AZNoUc+WSKRAcZVuFHJjVOlRAMZREEG5nawVKt2vQs0YSrVu3ZRLO6h4Xp1I+y2Ip+M04HME1CgvQyaVXkXhbtElVWWyXLez99DHecqQKUFf4o1s7pawYPFPX4GwIuWsAIHcCQDZpAoolC1BpeXilt2vXDM2fZEft3tI5ieTQJPh0bRbJhKhxXnAhA6aJ0jm7wUIwy7CaYl3\/+veDXp+Y3GDFKauVfXf7lOzle4XO7f8H4dDqRcJsf6Zlg2EqEZp1HLJz4THGg3smQYXS28K02oVDF5KK3UX99rmTqrq0k06qgYiNcsz2Ntz1adeJBYIEtBqOZpDkbCA15WRFrcQ9CrKCdOAJUZjJ+yOqEuE6Asigyxt+isPm95R3CliFyUxDGCn6LNhgSzHSEJjDM4Eh5c6oqGgNld1M+FlV1igXWcbJyIIwxUTcy5QSvNY0xysirasJcmaTYKk+Qlfl9m7RZ\/35yLOugptHOrfW5zrtq8ChDIho77uAbQQWZ5vtLad9L4xpPOnegifiZUALfJoxPuZoaSCsHu8TXhdRQFKJoPRns03ijoLdYWpkiuWVYZFRMjpE8sTZVHFIub+VRXshJC7kOEarKkgoCb3F2EOfa43g6qkDIH9hj0diK\/SMmV3ccwQ7LWA\/CdZXqWHCW38YTVbpVkooyvY8xY7HN1A\/YzRZb1C12V8e7UbCGGstbBvA4wlBv8FiRTFlSZqM4OqQyeIxhGmTy+MYGfzxX4V\/w6I2GZ1ikSEoc\/lmKgRNHqYzEvwi65lVBf6drk2b\/\/wGfn0ckCmVuZHN0cmVhbQplbmRvYmoKNSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgNiAwIFI+PgplbmRvYmoKNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk5Pj4Kc3RyZWFtCnicNY7dTsMwDIXv8xTnEiRIbWdp1t0N8SNNgDotL9BlodtE6Sit9vp4iFk6sj\/bso9gZcj6gLN5iCieGaUlQvzAUzTfIAVCC52xCzYI5uKt84g73GxOOR2aT9TTcOp\/MpYp9dPXiPep2+ZhgZkTugSrZqWvsBmbMXdZV+o8HPrdAm\/NkPbgOwixx\/0\/u2sDddNmSAF\/i3hUS1hfTGEFxlnzUfWiav+shqoMCnQtZW6d\/oUw2cqxIHWmiPUr47HXQ2vzC3XrPWwKZW5kc3RyZWFtCmVuZG9iago3IDAgb2JqCjw8L1R5cGUgL1BhZ2UKL1BhcmVudCAxIDAgUgovUmVzb3VyY2VzIDIgMCBSCi9Db250ZW50cyA4IDAgUj4+CmVuZG9iago4IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11HNJQ3pg2JqENFZEfKCEU0LpC14rfn0Fg6co+tmVfxlKRdh5X9RaQLQxyTYSwx0dQF5AAoYbMjPXaM6bstHUIO4w25xSP1Q\/KoTu3fwnzGNvht8dqaLapm2FimW5hRJPcFdj0VZ+aJCtl6o7tbobvqosHmBcwGYfXB9tnA2VVJ9gMboxwEktY30xhCYOr5JPoU1Tfrfoi9wL0LHmqrfwFG9KFNYzYqCyUX4z3Vg6t1T92TT1uCmVuZHN0cmVhbQplbmRvYmoKOSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgMTAgMCBSPj4KZW5kb2JqCjEwIDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11kqahvIHYkNCGipofKCEUEKWstOL3ZxBYurKPbdlXYyVIWoe7mHsk3wqZJILf48uLPxADoQbPlHHSaUy0lcbC7zAqrzEcqzOKobu2t4hZCO1w6bEemm3spkiNpkcoVprZHGVf9bGJvFLE7tjupvitunCA+oAmZfH5YvNuoKjqiDSBHcOf2BI2D1NYQeHO+cRasuqnVZdnjoHepZ5Iw3+hFcncKI3QiMQXPwaLlg9txD92rz1wCmVuZHN0cmVhbQplbmRvYmoKMTEgMCBvYmoKPDwvVHlwZSAvUGFnZQovUGFyZW50IDEgMCBSCi9SZXNvdXJjZXMgMiAwIFIKL0NvbnRlbnRzIDEyIDAgUj4+CmVuZG9iagoxMiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk4Pj4Kc3RyZWFtCnicNY7RbsIwDEXf8xX3EaQtdZKmobyB2JDQhoqaHyghFBClrLTi92cQWLqyj23ZV2MlSFqHu5h7JN8KmSSC3+PLiz8QA6EGz5Rx0mlMtJXGwu8wKq8xHKsziqG7treIWQjtcOmxHppt7KZIjaZHKFaa2RxlX\/WxibxSxO7Y7qb4rbpwgPqAJmXx+WLzbqCo6gibwI7hT2wJm4cprKBw53xiLVn106rLM8dA71JPpOG\/0IpkbpRGaETii58Ui5YPbcQ\/dxE9cgplbmRzdHJlYW0KZW5kb2JqCjEgMCBvYmoKPDwvVHlwZSAvUGFnZXMKL0tpZHMgWzMgMCBSIDUgMCBSIDcgMCBSIDkgMCBSIDExIDAgUiBdCi9Db3VudCA1Ci9NZWRpYUJveCBbMCAwIDU5NS4yOCA4NDEuODldCj4+CmVuZG9iagoxMyAwIG9iago8PC9UeXBlIC9Gb250Ci9CYXNlRm9udCAvSGVsdmV0aWNhCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTQgMCBvYmoKPDwvVHlwZSAvRm9udAovQmFzZUZvbnQgL0hlbHZldGljYS1Cb2xkCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTUgMCBvYmoKPDwvVHlwZSAvWE9iamVjdAovU3VidHlwZSAvSW1hZ2UKL1dpZHRoIDIwMAovSGVpZ2h0IDM3Ci9Db2xvclNwYWNlIFsvSW5kZXhlZCAvRGV2aWNlUkdCIDI1NCAxNiAwIFJdCi9CaXRzUGVyQ29tcG9uZW50IDgKL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0RlY29kZVBhcm1zIDw8L1ByZWRpY3RvciAxNSAvQ29sb3JzIDEgL0JpdHNQZXJDb21wb25lbnQgOCAvQ29sdW1ucyAyMDA+PgovTWFzayBbMCAwIF0KL0xlbmd0aCAxNjE2Pj4Kc3RyZWFtCliF7VcHeFRFEH4bOyiWWECsKPYuYldExYq994IdQknIu9frUiI19CYSCR3RxCASBDEixWCABEKNEA64AEmAnEAE7mNm37tLuZCEzxT9vvu\/u2\/fzsy+m392ZnaP4yKIIIII\/q\/I7XSw90q\/P7Ww68w1je3Lv8ENee+8Pvrtdu0e2z7mu0k5x6DC64R4Gtav40Rujr\/99o6v\/IbYseuOxOx7q7KSCSEGx5mEb2j\/agtf3tS9BU0X7sgH7Fi48MiGDP\/MKsxEYuJAidzA\/tUWm19MvKKge\/6X6xm6N83vuOeekv7hdhqxcPjvEjk4dfqeFq1SUo44SElJ33X1mNQzQnpbhJzSMLEIMZ1BlAixTMg04GQbKLEw57CCTKI5y1SU25CRAiE6hkAnvEUI5W0QmHbd8+jkH7140fr0VvsX9ezZZ1HPPi32p6fvWvxqaZKrl3TmaAUiFkdcSBxPXBE88MxdtkxDoQ58HDVkpUHKwax7IqvHPh3ti\/Z9eOYHb700LH\/TZ3828\/mi\/3ig5H5XT4nhhM90UouFGfwVOHRdcIxY\/VAichI6zzH\/mbXNTICVygn4IgiExjavznnE+d8cEjvk0qKipKS2yl2xbXO\/v\/vsHxVl\/ildY5hewqiHE6FsIqDbtqU7IbYIha\/IjAWXouUQQ94aSzoKlDACdU7ki6nXXNXjkY+Lug0qLj5x8EeDBv2aFPPP9Z+P3OiPY3o1dHZUIOJMIOfd1EMiHp1IBnG2j7qENCDHzM3yROR6INJ1+cWZLVs+fquiKLPmrHqqCEbl4cnLLsl832nBEDy5EhEpNIFsgS9UrsqSXiRWMPkN90EkusflVc9EsjP2ZGW1OmGzktumTVGX4sBsILL2vYLnshIvY3oIs86XJ6KzWLPmZGEhsCRzzhgoEHDTRl9BJSADmdWIiNGoZyIrx2Rt2PSNolwQKM4FDt0CM2JgaDbsrMQ8x8DpUyTUWAWWR6YjNdz2xJ5wHyD+Fssz0+1lWrCpwcJ6rZHUjIKTwPNTA4MVpcmhHjGxPwS6wDzmtMRS10JCXwT0khGxwUURkx5qQ4Oge4AZFZ2a1tAOigaT0aKsO3MqjCbuqRMI7F9YeHVPpPAWRYkvDiQpyhuTR2QeaqIUr8JCef6cvOqWuXlWCQJ62Ugo7Dw\/Nn5WYLOi9Fh2+4asEdcuVU6e001RPi05t7plVRKxnMpuHORduED5NgDl8XLm9K8Ar115ujJ7jm\/IPG8V160y0HAiEiFVblMD4bB33k0\/A4+Rv89tvQTQesvfS5XZMwZ29lf7Byt4ToQg6zahocQyq2QkE9c0TGNpld9Wflara+oa\/50LoE+9u3duv78Y+m25bm38zpsHrI53DODyF\/7D4bCp+yDVeJNCU9YLaUhUmYhdpuKMSiE7Fp75+pOdytKN53WY6KLDlotiB44dvi\/oF4TZQwyC3cnC5mtDf1VFg4gyXsPAb12CktEp07k+GJYFXc2CQ4eoMsXT0WMQg9eZwPFSpuwgUjkJdlc1wNoxhNs0lcGEjbAKWiOR4GwyPBIhWjVE4laW3PjsQyu27g7hQPMXHjx\/tasWWDzgSmsZEEYJnOYwg2DGwUFpolYULeqRqK1LoWAKqmpwPD7xhq3b8NHAUnIFQSIS9UAOUR63Hdq0Ywg\/aKEJG3kDVSC0IFu16mhwWCW3rZuQdqAMaUvum5IdFyTCLn\/U5jRIeyprEBkV9kDV4GILDpgePFYEDf1HHbvvEltTVSaCI535TW0qc+UFjAi74uNrOGYdMrQJPLIRd0RFITYSidbQ3XOihu\/tlzZ+3Ljk5ORxyeO3Tsjwpu4LKlXWiXSbE2FHsLsa8DJRg6T2wDaZlmpyoiXijnCOjrnpErF1D286\/pkmV17AiMgQH7gDWRWIQElYaMJGD3XC6DYPnoZ7X4HJgCntm09M6zV06NBeabt\/2uYdta9MiZd0GZIfgqPLkKbgDAiwOlWsajjHDQ3y2SBM5+aPaYEBZA7IKQogaSC2EAgUOC3JrRGgoxNIG5g7hhJWHpiwEWsKXizhalWoub0fHhWVsDxj2ooV06b9sm1KVOmjNdg3GES8ox3P4XR5zqQob9+EhIS+Xm\/vw9H15tjxAnYr+Ce0tljTf90ThaOySw8+6asfnyKIIIJGw1G2ZvkFCmVuZHN0cmVhbQplbmRvYmoKMTYgMCBvYmoKPDwvRmlsdGVyIC9GbGF0ZURlY29kZSAvTGVuZ3RoIDc3Nj4+CnN0cmVhbQp4nAH9AgL9\/\/\/\/AAAARE9x3OHs9PTy2uTo8vHwiI6P8fHxssXL9PX5pr\/O4+Xv4ePo7vP06\/DzaZKs+vn5ZW9\/9\/n6qK+9Y4mTPkxx9fX2ZoaYlrPEX2l9cIm1nam\/ZIiwYoGx\/\/34pKu56+zwn7jIaY2mfpC3cJaisrvZb5iwjZu5i5vChZay5uny3+Hm09K3+vfoxMOr4uvm7e\/1a3SCZIip7OzqZoWg\/\/7+dHuF\/v\/+\/Pv5YX+a1tjfYXWY0tXdy825qayhkKq9kqK1V2+O0tfm3+Lw5ujsbZGYiqS4navLf4id4OLn4+Pg5+rWmLbHqbC+\/f3yZZCp7+3TxMnHmJ6uuMvVvsTasMnWW26JXYGhUmiG29\/tvb+uzdrhgJuxUF98z9Tiy9biS1x63ufr8\/f34uTp9vX06+70sLGj2trB1ODl1tnqv8TOgoiN+fn4\/f39j5ep9vb1o7zMyM7j\/\/\/+6uzvkq\/C\/v7+qqqq7u7uVVVVd3d3zMzMu7u7\/\/\/\/mZmZZmZmERERMzMzREREiIiI3d3dIiIia5CGgImdk7DDSVZ5S1l8pL3LbpSdzdDYTVp39PLX8\/Py9fX1T2KA\/\/\/4ao6Co7zKR1Z7X3+pwcfaa3WNaYSdX3mVeYKJZ4uFb5Woao6GQU9xbI6e+vr5+\/v7a5CYaIuGZHCJhZa\/SVV3Tl19YX6PZouk6unmxcnT7Ozt7u7sS2B+\/Pz6nbfHX2uF6uroa5CM8vLw\/v784uLfYn6VZYycobrJtrmq6ens\/\/\/l6+jNWnGLscbT9vb2W3WRuc7ZlLDDYn6hfqK2bZOh6enxa4Sx\/P30Y4CrVWmK4+vubZWtY4OOY26K5OThcnuTrrTAm6K07\/Dz\/Pz78vP3pKq0pLzMc5mteYukxNPbk5qsbJGd+\/v8X4OXqsDPbJGSRVJ0UmOFdZOrrMPR9\/j5g6a7\/f3viqq+ao6SbXuR+Pj28PDudp60ZIKf2t3iVWF6WWaCfI+xmrXFaY2Ms7jEjJSm9Pb5qbTTyc3VnrjI5ubkjbkP+QplbmRzdHJlYW0KZW5kb2JqCjE3IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0Zvcm1UeXBlIDEKL0JCb3ggWzAuMDAgMC4wMCA2MTIuMDAgNzkyLjAwXQovUmVzb3VyY2VzIAo8PC9Qcm9jU2V0IFsvUERGIC9UZXh0IF0KL0NvbG9yU3BhY2UgPDwvQ3MxIDE4IDAgUgo+Pi9Gb250IDw8L1RjMiAxOSAwIFIKL1RjNCAyMCAwIFIKL1RjMyAyMSAwIFIKL1RjMSAyMiAwIFIKL1RUMyAyMyAwIFIKL1RUMSAyNCAwIFIKL1RUMiAyNSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNDU0ID4+CnN0cmVhbQp4nK1a3XbbNhK+x1PgUjrHyxAAf8DsRU\/WjU+zZ+OksXa7OW0vaAqy2KVIhaTs6oH2kfZ9dvBHUbZEQg7TU5MEwA+DwWDmm6G+4Z\/xN0wCj8RMX2gS45AzLwoDguPI3NQC\/4JL\/Oa6IThrsO8xnySRzw936NDWZIDpezTAvvxP3iTwN2R+jGMfJglinG3w3xY4DtUQc1ls8JtFRhDBixX+Fc9uPtzO8V98j+DZv+dYXd\/LK8WzL6oDbt7Zmyt7g+0NvI3029fmLQ\/6fseLv+P3C7XuYxmpn3gxI9GQjMjIiJWMszdv5njxxxk4Srw4DC9Aw+fBOv1FnHjMBQ309\/m5sj78y7R0WrOa+WoVbbSHZne2ZfFC1V2L3Y2P5mqfb3vv\/o7O6juKvTCIyNCacH9NqK8hBSNNjXOPE4ajGEw1igne4JDCbdJrKo6aCI9R0X8NGmDIGq8G1B5RL6JWxFBPri9G7fTlJsqX\/YT7AOjFlIQRj+CO0zgIiZRcnabru8M4dGLc3TXcJzzAT5jiRT0gYpB4gRURkPyERXiRYTi9crC5aGFZZyM3cle1IcjLQm47bNzbOQ7VWiI0+wWaIjz7CS5MW4EcKPvw7Efd+Elf3pu3dd\/NhzkOtDEweYKR7Hr\/RQ8xMKdQdJuZVWMsfup3fdVQZvg\/9eVLf+rP+sFOZsQyL9weLeQfeI66eUzXzacjzI9aFLtyPfQY7AftWJAxzRP7FMSwPTHhx\/s0sDunrf389lPwXsGQhQbGQm\/yMi2zPC1wVm22aZmLBmfrqmoEXldPuF2LPW7WKbj8fbWr8VbUTVXC6LxcVfUmbfOqxDdiKWpom6Nxj0XC3uk+Egz3BUOzIn3CD\/mjFKcqm90GJpbS4Dp\/WLe4rXCRb\/IWN9VG4Ptdi8uqxWlRKGHz8sHrpJJAadFUTuL5cLycxKvFt11eg3S7RgrTCpgaNKSU9iRA5qIQWWtUl5ZLvK2rVrYoNfa057nIFfIIvCM4r3HBPhcihc2rRboEfeWNVEyegUQgyGpXFHsp7q4E3TStlOtpnbZS4mXlnY84AUTDJOEHQdCYIG4BLIypDIdToYWxtHoHtAUYUrvfwvZVq9M23dtDqSW9j0uxFfAA3dISYUeXO+h32b+AOZp9VeNG1I9yx5Q5pY8CP+XtGuzMw1Lsg5DnNcIgwFGga3ZeB40MrriRSzbToaFlUu50fPCsr7+RJYMJ9zcmS0t4zordUrw9r\/kgimT0ZM4ioSELIz6XKyQ4JNTj0QDaAsgJkgv87wAaYV4c08gBjaJR6yc0cpQtCwzaXaUc\/p3IdnXe7nG529yLWu06aBYc6oBlEaBpJI7tbN93cju9BglsFx9AW1ha7KLXcbQT\/OysXkfRupW+y7JqV7b4Pi0gpmq339Zp2aSZMl0w5baq9+etlgUhZAmHOSey2oADlfSnstpxtEusdhSts9rrWiwh4BslKuVmuqnJKojEA8lXEno+hDA72UThRvoYNh1aSLzECe0dUI3VCdpWCrGUwV177mwHehowNRp6lFFu53UwNaBg\/2tOR0vJgHZ16bROBh7EaZ0QI\/Iai0dR75fpHkhek5eigZjw4VbF30boY3UviurpSsavAmxDk0TgQMAae2pyCNIBRE3ipIkeVYZopPWtpVVaP6+oqyPpXGSCMzxyPIxMQOT\/BL5ryHvTGcJfsWZ5AmauVYCVMmvyrPihJczn43sQEI+EPnOWxlg8Gl4bSwJ5fpzQxjXFIKVys2MXK2URuIzTKb5xcsy4zAtS\/OGUnYW0F2dkyh6wkZR99hWSiSGXHXhxAi8eQw8BDrlsCP2RH0WvEfRXPNsCq4D0GcSFDBmcNSTPcDpUWzFHur4Q41muag3lSqXVlR69gbQanvTgVvXoYYqVxvZV+xe9aHntX3TB+B91QaDSy9QL1D030ILswv5U3X1d6GXpofq1ddrr1kN\/6AZdItPY3+eaMnUfPb3R7V49gNtQT4VahV6L2Rb90M5RoGDOl1RDkoA5JtZ+hmoe4wTicGwCv+dFXonW0ZFp0CI6JVrCJ0SjLJgSLfYnRGP+lLvAgil3gcVT7kJATu4C+FIec\/+FM0XPnHTv38AcAfd8\/\/kcqhbs83F\/3a67402VYzIVWtY9rOfIuGVZ9Kz1wFK\/9dB3BDpsQgA8WQsNCfGoD6m6kXMgbXOIUge\/AEc6olOxcwZCDpaWTsk2xAfQKB+gcO6PTONMCR8dl\/ArXabWwUMXwMWjDjq6bW9DCfQs9eDUtsni971u2+lLo3pM8NJNorEhrsPZHr0j50G2rerjmFffDn55k2kVi4lVwGWsZdjWOn91jP1K6+j81QVoQyeWkfBSvK9DeS8DX89pkEy0WutPp0Gz\/nQStM6fToMWXmwlt5X7sX9Zqwy9hNDnJ37U4NGxwZ93JJyNZUYmYjW7bI1TlTtu6yqDZFt\/rugVsZqrATbAuZdwQuyME\/leGiWOFYOPaV628L+WOtXluN9mzW\/zK0i6m20lC3IDRRG5gIBEiZ1yomSShuF4YUElk9cj+Rz4G58HI4CoX0PBVS0\/9agiQCEeVDniUTRt\/pDq7Rxid5CgxyTqFjDVfgauVbhPNWzbtqrV9z5T7Lvf1SLdNf2PVeg5xY28mDFmJ3ItV4x83KA0ci5XjBc\/KHEru7kVP0gSj5crXnxG\/q5yBYEzzmm\/CuD0C4MT9ETmkcAu0nqOoO0\/olV9R5Tj4RzNwOdoBur\/bsGVilIKmWkch3ZxhjIPFikrXK1WosaDJ5dyCpyGPNfa9\/KOC9CceIc7nhvvmGa1lndMg2Z5xyRoHe+YBs3yDne0SXjHkbVPxzsgkPZ+2zLEO8yXYB2lzLdgxUIgjg\/8KoHKDDeJuZ1povhEQlX7nQoNgtDgTxymzxxhT3ux5dWZ4\/kUjRDfiwKQ6TATMuULnowHgT8q7fHzUl\/bo7meRXPCQkXFjhfllg2iF4IzYNgkCU+oiEcJ\/DsrfPc71E2qogpoiUOwUvfCVEBlC4Qt4qu4pasgOgABJ549mUwayX49eK1Gmf5KPfQ7hJ1pIFkGlxHSqFvQ95X4DxYk\/dpRcPfp+L6ucl047sr1si5knjJdLNIjTFdhKwhU9qthlb5ISpDo2P4CKVexXeg2U4rybLl96Ae98qcwnNu1mdg+TVnBFlWP9fZK19EVKSZBO5AFdzQ3suCM50gWJlltRxYmQevIwhRoB7IwCVp4sZVMQxb6x2c6spAkcnIQZ5wtuHzHGYFDFwZxHsgfkZ2GQ2ej+M\/4\/zgQtckKZW5kc3RyZWFtCmVuZG9iagoyNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9HMSAyNyAwIFIKL1RUMSAyNCAwIFIKL1RjNCAyMCAwIFIKL1RUMiAyNSAwIFIKL1RjMyAyMSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNTcxID4+CnN0cmVhbQp4nM1b247juBF911fUYzuY0YoUSUmLIINsI5OdYJPdwRgZBNk8qGW6raws9erSbud\/8kPJD6VIXXxpi6LGxiAYoNst0acuLNapKml+hY\/wKxDmksBvf9EoAB76ruCMQCC6D6WEz5DDN\/cVgaQCz6Xci0KP4aeAEi5C4XhuSAPGCVRJu+7+06V1MKz7dI+fo5DBDigsS9QDl+NK9U99iNS3fS+AgOB3ROAkW\/huife8yBewTAD1Uou7X8stfLNM0ApYruHvcPe+WMBbAnflAny4gwUIuOsuNQvn\/E681n+0P9MFcLjL9M\/2c1zrG7JaIH73Ffms\/5DlwsFbe\/3HqhUQ7\/t1\/4Dln+APS+3mU\/Oo77te6NHePNDmOco85k+b99CgLrTXL5daYHupasU6l8WGKEEE\/FSsSRia4Sz\/edmIYY9EFLgk7NG0ERf3yDkx4qcG94DB3VPRan5sxbfayScu1GJVfCFS6ZzrQhh3AybomS68\/Vb3q7WMdZal+boot3GdFjnED0VTw75oyiN7jQGMilwMXBr4LvG56BVxbFwMg8hjI19h+55QHidn2CYjj7Bfo0Wz0UxwhM+F+5s6UqN4PkNfs+hGxjJ6S9cF4Q3RGObeG6Jxby7aX4qjCDQEvYOB+Uqc4G5E6HkSmIx35zTex3NLSN3AfJ6dFrYu47yKE3WeK4jzFciXJ1mmMk9MYYYR5hLBo17Qdc4\/qC1C15+LNuV7M1MKzs+y8GWmdOyZ8tWdM6Z0ZjEljDOlcO4eToS2CB2\/tZc61MrIqz3Bdc6Yl33HXcuIy73jIuQywcEMgnPGrSCYrCLfH+ROninHnkMORHmCfRKhzihR2sXqgRyds+3xQpdzKqwNO2yPM2UYJcT1BQo3GHaWMY5ZfzxBBLgZLDTiOjNIt6dwezQw0244F3CCdoOOdm9i7kC7N0ELZttqRbs3QRto1xrtmHbHafUWyh0SGUWS9gJiAXdfylVa74qy3qS5rCoAcyBSj6iUIAYZt2JSgrzsfVUm5RGSt\/d\/x6TtpQ6yvbTFP9TqFvkXqZY448tbvj0oNdJdXciBnsu47\/eesWoVJsIlDGdDWqTVeQpapFV7QLu0ehtz+7R6G7Rgtq02afU2aH1atUezSqs3Ue6QMELfjW6HJqKjatOE9mEN+3FATMIuC2g4A7BoIC4lxJDLHSRNVRdbWb6BnYQkzuFBPqY5VJu4TPPHtm46HqL4HqzifQXrstjajI24qtFHyOhEL+eu3kjErqXSpJJ5DUhKFeRFnSbShc8bmSt1tO55AVmRP8oSlH6nNhR5neaNtFKOeYp2bHQrtEvka4fEFaxklZTpg1zhjVOlvy928lkpphRX3lXaYftqpRwVRwRlUq7BVrjGbngPdbqVgLpm6TatTTQeuB4zirCvOyjxZoIpF3YB5ppqcoZ4XJwCO1cfPGwhIo3m3OAYsyiwPHUfG1npscU7Ay7hWAexcAbsX1MDIRHMCaGaU9rjpQY01SSJgM1AM8QgCXQM+jPQTI4LvbloeGqKPMOyVx2e086aXJpWUWyqfT+cI2K327nrNH+RZewmxfZC+36J9MOAzAksYwnB56IV5ZCj2rTy04\/wXfEClHM\/OohyBjcpt9BIeUWoqQxstQ2Bf7iSHV3hqj7HK4dv6StOBhtYj7vlcN6QhIlV3\/8Js+2fkU2KN3D\/e4iY51FTsvHCdqZ0IuDqZMNE2BHMTZINZzesZ5gfWdYzv1ma6g+sBL0wmgGHNP++PRRv4EOeuPDz3X+6C\/\/9eQFP8X6r2P+pLBJsSVUVUsnyGfkUkFnj1TbN06qW2LnCw96GSBnlU7Oijkjvy6KqyiJeVUrDOE\/SODN2wxjgoQhNEs6obymTTV5kxWMqqzfwww\/3gJUExFmGRcRDjYbWdSa1+aXMMHpXve2VO24pxz6GRVE0w1KrAEGmnDhrQBzbcPMxG0zUWs6sFn\/06dxBJJ7l04luFHjTI93Pm7Y77xvsSKtEKObzhdOOeMVwaaXXFvZtNuFYf5CQnGl37Wn2FdXTrzpBwcLCFfR4goLJfnKC8n2hZ+O7YWQRaSdS7cTWu74eoLP+7vv+kX3oqMcEuOZF321Xlu2kpZ+64PonvabsZzNUb6Lo1yf6Z71wRL9ezVeonpuwU4hjAa1CLVyrRCsy02q131Iq9nfXCwj69eUwxhm+1mrUfuEY9J1+1QD6oLMNKj8grlBvWpzsydX0pXg7YreiL5+GLmc2IbosVPavZdIN7p9kWRU55uLjxkt3oE0eN\/WmKNN\/YaqME0UY+rFgU0ndDeJvG4rw1ZsxzCZxVjJpyrTew1bGVVPKChs+rJKwunvK9rBLa6xj5AqpLIMs3rmw3EhUYVic5knWrKx0olGEvYCNTkp4g4wIVbyWj01crpBbtKLolHWaydYnD02arZBO8SaqUpdpUity7byGXePZqxHjmoVYCVtpNmycko+CigaZbdhEA7PyyCVRMIiyKVxzZQLGArpb4mYUe4l27zYF5BLdgPd+yYtdu1s2NgaeCn2bucVxUA7hoQw22IdEHQpKz8QYD+xTmT7HiWEURIXAIOZsAL2OWigyylw4XbOtVKQbam3fx24giIIv1PM60qI8ODpVlk9bx9FUGyMmKNA5LzC+nAKdgV\/MFJj0jwVoy1D9zwMFOh0F3YQClVo3okAHKbCzw5r81LzXC9jZblz7GI36xOWXX0r5EjQy+sraGdpnNcPMMiP5vdFtg3yJMdEpoutmo9+OJzZG0RohTHq8OnKjYMTrHiao54HGFmFJutP0b0MLSXzMB1RYoNHphoNQYanb0HD8+ITui\/OBoNC1j+mzKh7aHegHIhffkXj9aASTms95L\/\/KuVbvaYJE6Jnq+87TYOXpaTRqoVvv6Um0wdJPGwOcjx2MmIOGdI5blK6wXU7XadKdjKd4327bQ5plldpMZKVnXKUHWuc1CG6loa\/2XCbIoNJ1ffVhK0XYVdWGrXSst3ISjb7uq8e3cgptODRLmWXKo6rCSnX5WMpEqmOzLXK5N83aotANIz\/ohd3qhHB69BL51SdkEm3WCZlCO87+cVYV0xTQ9j9FvcF7WO03yUY9ikr0Cx2m1D2o5IcY3DYx\/YD1XNygkHiNzUQa12p0hcdKy9adT5ynExUfcxnBcrcTeuWODyZQpoa2X7N8JF7kipOCb2SkdDr06EZKe10RdZOjpK\/ahK58DG8KqpekOR2Ej77v+McuwH\/r+cz\/3bj\/sEwS6n+DnMApW7xwejqmnpVgffahf2elnYHo\/6eghmOqxAt1WUeHtWjj22FZ+xP6ElfVg+ict2xYVqa6DMzbi4\/txXftrxlVIeVE\/c8WdmbmtUOMCGvNMPC4Bdz7bg5gojwM4DD056Bm8U5XJ7o2AfXMvEwfN\/Xw1Fc91NobCkGfBq7nhXyQOY\/VPsL\/AIqxj\/sKZW5kc3RyZWFtCmVuZG9iagoyOCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCi9UVDIgMjUgMCBSCi9UVDEgMjQgMCBSCi9UYzMgMjEgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggMjgyOCA+PgpzdHJlYW0KeJy1W92O27gVvtdT8HIGSLTin0TlptimXWD3YtNFpgiKohcambaVyJJDyfF636cv1KLv00NSv54xRe3MIsBIlsTvHB6efzJf0S\/oK8IsxAm1F5ImiAsaxpxhlMTdjZLoE6rQd+8bjPIGReZfk8PYKCTM\/tY3OBIh4RRGRkmYiiTID+jPD4jbAd3l4YC+e3jACKOHLbr79z16+Iz++mA4uULDNEwSEnugkQ4NOdBI7Mlbzjq0j\/tMFdUObWuFsu22KIuslc3\/kPwm1WWTXdDjqSkq2TToeFLHupHNfXCLPE1pyOkwF7RM\/a0LDOYCV38w5AJLV4IVFUjkkLVFXaHssT61DvRB7LEWgAd8cHepTwrlSm6K9lyrdm9EfHthCWOhIIS4KATX0ritJr0Kx0kS8siBtkqFl9HWqPAi2jDT7we1RVtVH5BW2B0yEp6uYlujQ6a+yFbfwVvNQ\/AsD4xEIaNCuHjw171R2jEOGXGgddIO\/KS9iAbSDrylvYSWs+Cpw6jqavQZzwr4hjmyJIziiPVkPfyUYxJppOcAyxRrWC+0jy1wjMrs3ADLF7QrvknNMco2DhukIqQpXkEFjBsULyuRKnb71gioLA5FixorwxB9lBI9yrI+G3EeaghCtxVpnCclYexerE6RQO2NHXQMnKqNVKjpJx86hEo4zFbggdhrLREGYyAJXgenR0epAIWJwoRgHosY7gRJGMcBxGgTtN9\/dH6HPr6H+1QwdEYEPSgHjxGfLHAURmmaAHM5gixBf91dLLfUcvtPdPdpf484usvuUYzu2nuUmilggu7298Hw4mg+sn+leVKZe3D+yTDgfI\/MsOuPzOvg7ke4RMPHJVwwBCx7OcBl+DHjwlKYMqnug3T41lLYmRfdiK2lU5s3aoqVXTOlHwXwKDcv7F877mT+2k9n\/MxnYfmyQ8r7QHO0mcJ\/tlzaD2YsW9BOCpdrMQZzWeynmFYiFtLKTU4YrybihwH\/Ch5+WlBunpKQswSjUXMgG3pGcYKZ4siy1wDNwZ80LdTTsoYBKh49p7IYAlWKCR0ov5KV8kSEIn4tm+cxC5kX2j9MVrSvi9wRssD9phiLFbAQm85FWaLseCwv2gub5LauJOr9Y5bn9alqQ0cGmXCgRnlP1sP5esmGg5YsoS1F8RGN8jCOBwV0hXFP76pVz+0tOSGTZdA6D9NZdJZ\/AbuixsMkxpyFsTei7wNhjDXun9fmuX0LNsKsNfpaCAfuCE+v2HyluPOsZIacikPilwy5upHMTcEEvWC+35qpb3sBJMa1Jf19ZsTQ9q5pEMm7QSTBokiSNMSCiCv+PJXlCZoga9Hy+nDMqgKsUskSUpENerwgeHgAa6zPlVTNvjgiyIfyumpVXYboYS\/hi6wa+Qhu6iNLGSQufjm7RQscebE\/2qNE26LKqryAhC+rNjo5Hh8Mcw5dVSo4A54k\/lSdPgZDzWjnAN6cuqoYXXcES1UeS23dsYxGPLQmJp68DVrz4TRtUEBll5enjXRlsFC80SjmExrBwhqOmnku2j1q9xL9oMPDh+xLg6rsIN+g5pTvUda46r1hbjENU4\/qMbgbifwA86rV8Q36scpDx9xEAm6NcBeNFf2AQdthkf1q7peGj5EkhCwczcJH7JFs\/zyNClkfS4zjDIbIUZq\/9t5+Y+OKjT3XjvNpLAmueE7TkBLGep5f5mJIRNaijepZ1e2y87ytogxCgOAs9aYd3HWe2CMJ0d2T5CZmsFYlb6NdqeQQJPw98c1owiIKVCO6MBnfaDJ44oi5C\/d5v+357tToiRfRxn6bh7daQhtU4edZ1+fs9MGchnGUONGvllH3RqT1v7OI\/zRa0jjkgk\/lsOTfu6DhwEzikCWQzXSYL6uAKJjZSrRDrdpdtpPIUQExhuGS8BWwvc6\/8YnJVJuyF2xRNScFdiVHq3JRIIJCsROLFRQ2hZJ52\/UVddtxQqgz7aOqt4WzPT9MDGo44dc3Uzsg8ptpHDeuOEyTUKQpdUH\/jjhMb3dj\/6g4TGddTR2HSbochn+CMPzW9puYicZvbaeFGJ9j2ypvYxN99Rtl3nyxP+T06xnAzl5W1DQE6zSIsX4aL6tpCI7XomXIbDRAvNkpKQ+yaiEMtWcpq1mT3NFeZnqLB3NxtRK\/0\/UwAFmJNoZIjyBPX6MrPCqfN9qYArX7TG807CRk6arfeBjnAF5hc8rbRqdCjVTfitzuUFzqk6sE4zrwk3Rg6ZVKMAoaxdlrlWDLaGtKsEW0WQn2uS6qiTs+ZqrVSedQj9k9TQjdamMc9FHJY1Zs7ANHUjNwo9Nir4Lbq6QmoGKCp8Ib172evcLq+mtxH\/m6bfeyPht8pvsrEwft0Wb7YAuevSl4bNmj+oZ2ajYSEuujidmToKbbNnxkB9vKqZrUT8i00oeunam9gmQ+tgOdll1DO8\/C+ZZdhEHWkES8l8DLcvFRnnGke9weaH9vJKq3phswKpr+DD97PgQcbiyYD35nVufzOQTH9atUWQhKPVGYXi5PjwPwkOBkSmQp9XWFOyZmaB5u+Cwfm6J1JNLgQiHVE3wF5juEPu2lacijE4jcyBs9lfeVeuijHVor\/NfzWt7BorxZmkCtHq1Z1OdYN6qBKVRFqUnvDmYhIz4+KWdPMJh7ORsFT+CbPdqaaQs+xdJMknSKNX1isaajRqyb8x6NhcW3Nj2CZzXjjd1XKesdRIbZMYyigRy+LCGrlzZCNG2tbGL0fGigApwuZtzFxIpjRUJAbkf80ZwBgYKa+6MFYw06nFD58W8+6RaBbOTGNtGV\/LPNRskGqqNHVZ8h8UHt5QirsakPGSyE7mHqyinP9YmutoBfZg1gnebL5IqpI1c40dtNPg1Oa27arnXmVjQ9LYcHgVgbp1E8pxK4lt3o19bVjWAhpYnoIX0KZ2X80KGuClBTWLU3qD7CTExhCIK8HWgYodr4Ym8pmaB480gSjTTrfAXaxtH\/g7KVGY\/vvYLOWiNagWaM4OspK4v24qX6kJETP9Vv+m5EF62HvL\/ebiX4GL3dO48qT+w5ghkQyMs6qh4a4o6DFLQ4YWwFnqvHqosShiGb9Yd70HIAFs05p6xsautv0X\/yuv4CyfN\/fXIlLIRnbO031HVyfmrB\/ex13r9R+oAVVF97WR5NgAcbavTRqOI3aQfUVVlUEslf4U0hYRG9PBBonacTf2+nq3uKunn+eNG+aKN5UqdKV4s7lR1MtbiRJXCrHKsAtYqg6UD9hU3CmK9F+1Yo60jrubC92vM4NicOPMj0ItP92FNVfD3JElSoaYpdZSUHxG0XTjdqYQEvuvWuZGb2JDIEqYAxQanPYXqtJuOe3khbcRfSTB+gANPXPO11J1Jz3Zf6DrljrPP0georHXbBFHtaphca1OZ+2fMHaz8fZX5S4Fnf6T3zZ3LQJzsdehuKUyZ6Un9I\/kwjrXOC+BBZ7lzQiK5F67JSm38U1ebUtOriiGhEVy8Ezyk4c4+3LjQaJjyaoi1Va00LZtV3TK6qCLNi+v8yYG7Ozh6sePHwBLL66ROb509Hrcn8ceR7bsYRBVNI5TBJ2Qq0KleXoz23LfN9VesMVe826QpRyVwW3+xuQNWcDvpMq6xggXWU2WQtxA7dqmq0LYBX8PA8EN\/AJ0KBt+x6Oo\/WnI7HWrUNwkQ4Gkb6PzFQTpwEAm9NgtAfplALrIF7LFokB2lCJSCPsjL1R5cNgU0ovY336NBgysIoZfFA12MBXQZBISkSZBVcV844HDoTLMQRlLsrUCf29Qv6P\/gi4N0KZW5kc3RyZWFtCmVuZG9iagoyOSAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggNTQ3ID4+CnN0cmVhbQp4nJVUTW+cMBS88yvecXNxbGxjyLGrHnprKtSqRwdM1ynYG9sk2r\/ZKv+nZr+kVcquERIYJGbee\/NmXuARXoAwRAQ9PPJKAC8pKjgjIIrjwSn4AQbu155A4wHvL9\/EfzHK2eF9OlTxzikWIHCFikKQrBngUw388MfxUQ9wXzcMCNQdrOAO6mf4XO9LmYErKo7yQiSgrWWvO+uMlldwCeOIlWIJrlNet8oEfwU1gmFW8AWoD\/DTjjDIHci+t29gRwd+I502v8B2oE1sZZBBWwNvOmzgLrs9qhKjshBwizxbGWtk1+ley6BaCBvtWthKF7TyIE0LvR50iCXNd5xXDFFc8hNpyhzn+osneLbahL1u2Y0miwKxhCZhNUj3W4WJbz9AGzbKQaeNNI2WPTR22Epz6niqYZLgPBb\/DupVuV0bFUqZPc8RTpr90+i1Ud7DdnRb6yP\/0y7ST0sw1RqrjMPxwY3NNBwfX\/bf5qWg0bMVE+caEqRQpukjdQt\/vgxb64I0YR6fVRQJSukC\/CRjU5GaE1+dfpXN7or\/KEacxMMC0GshQeliuPXG6iaKOS3SOuo2Dsr5v2BsmD6jM1n2QT4sEME4P5MlrHaSUXI6RVEC2nflBhvd9+0UdA+wu8im+f3PS4Lyskpny1a3gu4ym1IWCZeJCXQZdEm2+49T4LiOKbHAY0ympFV2sT8fBHk\/7hG6FgM4urMqyIlzmQUe4R+blwYzCmVuZHN0cmVhbQplbmRvYmoKMTggMCBvYmoKWy9JQ0NCYXNlZCAzMCAwIFIKXQoKZW5kb2JqCjE5IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUxIC9CYXNlRm9udCAvTExWQ1lEK0FkZWxsZVNhbnMtUmVndWxhciAvRm9udERlc2NyaXB0b3IgMzEgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyMTQgXQo+PgplbmRvYmoKMjAgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHlwZTEgL0Jhc2VGb250IC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZvbnREZXNjcmlwdG9yIDMyIDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMjEzIC9XaWR0aHMgWzI1MCAwIDAgMCAwIDAgMCAwIDI4NyAyODcgNTMzIDAgMjIzIDIyNCAyMjMgMCA1MzMgNTMzIDUzMyA1MzMgNTMzIDUzMyAwIDAgNTMzIDUzMyAyMjMgMjIzIDAgMCAwIDQ3MSAwIDczMSA2MjkgNjcwIDAgMCA1ODYgMCA3NjIgMzI0IDAgMCA1ODMgOTE5IDc2MCA3MzAgNTg3IDcyMCA2NTUgNTUzIDYzMCA3MjcgNzAxIDk1MSAwIDYzOSAwIDAgMCAwIDAgMCAwIDU0MSA1OTMgNTE4IDU5MCA1MzAgMzIxIDU4OSA1ODEgMjYxIDI0OCA1NDAgMjU4IDg3OCA1ODcgNTQ1IDU4OSA1ODkgMzY4IDQ2MiAzNDAgNTgwIDU0MCA4NTUgNTY4IDU0MCA0NTQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMzY3IDM2NyAwIDIzMyBdCj4+CmVuZG9iagoyMSAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0FHS1hKRStBZGVsbGVTYW5zLVNlbWlCb2xkIC9Gb250RGVzY3JpcHRvciAzMyAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMzIgL0xhc3RDaGFyIDEyMSAvV2lkdGhzIFsxOTggMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyNDQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDI0NCAwIDAgMCAwIDUyNCAwIDY5NiAwIDY5MyA3MjYgNTc4IDU1MCAwIDczMCAyOTEgNTExIDAgNTU4IDkwNCA3NDUgNzYwIDYxOCAwIDYzOSA1OTkgNTcxIDcxMSAwIDkxOSA2MzUgNTgyIDAgMCAwIDAgMCAwIDAgNTUwIDU4NiA1NDEgNTgzIDU0NyAzNDIgNTU1IDU4MyAyNTcgMjU1IDU0NCAyNTcgODYxIDU4MyA1ODIgNTg1IDAgMzc2IDQ5MyAzOTIgNTgwIDUxNyA3ODEgNTA4IDUwMiBdCj4+CmVuZG9iagoyMiAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0lQRUpKRytBZGVsbGVTYW5zLVRoaW4gL0ZvbnREZXNjcmlwdG9yIDM0IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgODkgL1dpZHRocyBbMjQyIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyMDAgMCAyMDkgMzM0IDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCA2MzcgMCA3MTYgMCA1NzAgNTQzIDAgMCAyNzIgMCAwIDAgODg1IDc0NSAwIDYxMiAwIDYzNyA1NzggNTMyIDAgNjE0IDAgNjA3IDUzOCBdCj4+CmVuZG9iagoyMyAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UcnVlVHlwZSAvQmFzZUZvbnQgL1FRVEFRQStUaW1lcy1Sb21hbiAvRm9udERlc2NyaXB0b3IgMzUgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyNTAgXQo+PgplbmRvYmoKMjQgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHJ1ZVR5cGUgL0Jhc2VGb250IC9TUUtVRVQrU3ltYm9sIC9Gb250RGVzY3JpcHRvciAzNiAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMTY1IC9MYXN0Q2hhciAxNjUgL1dpZHRocyBbNDYwIF0KPj4KZW5kb2JqCjI1IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1RydWVUeXBlIC9CYXNlRm9udCAvSkZSWFFEK0FyaWFsTVQgL0ZvbnREZXNjcmlwdG9yIDM3IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMzIgL1dpZHRocyBbMjc4IF0KPj4KZW5kb2JqCjI3IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUwIC9FbmNvZGluZyAvSWRlbnRpdHktSCAvRGVzY2VuZGFudEZvbnRzIFszOCAwIFIKXQovQmFzZUZvbnQgL0pPVk9WVStNUy1NaW5jaG8gL1RvVW5pY29kZSAzOSAwIFIKPj4KZW5kb2JqCjMwIDAgb2JqCjw8L0xlbmd0aCA0MCAwIFIKL04gMyAvQWx0ZXJuYXRlIC9EZXZpY2VSR0IgL0ZpbHRlciAvRmxhdGVEZWNvZGUgPj5zdHJlYW0KeAGdlndUU9kWh8+9N73QEiIgJfQaegkg0jtIFQRRiUmAUAKGhCZ2RAVGFBEpVmRUwAFHhyJjRRQLg4Ji1wnyEFDGwVFEReXdjGsJ7601896a\/cdZ39nnt9fZZ+9917oAUPyCBMJ0WAGANKFYFO7rwVwSE8vE9wIYEAEOWAHA4WZmBEf4RALU\/L09mZmoSMaz9u4ugGS72yy\/UCZz1v9\/kSI3QyQGAApF1TY8fiYX5QKUU7PFGTL\/BMr0lSkyhjEyFqEJoqwi48SvbPan5iu7yZiXJuShGlnOGbw0noy7UN6aJeGjjAShXJgl4GejfAdlvVRJmgDl9yjT0\/icTAAwFJlfzOcmoWyJMkUUGe6J8gIACJTEObxyDov5OWieAHimZ+SKBIlJYqYR15hp5ejIZvrxs1P5YjErlMNN4Yh4TM\/0tAyOMBeAr2+WRQElWW2ZaJHtrRzt7VnW5mj5v9nfHn5T\/T3IevtV8Sbsz55BjJ5Z32zsrC+9FgD2JFqbHbO+lVUAtG0GQOXhrE\/vIADyBQC03pzzHoZsXpLE4gwnC4vs7GxzAZ9rLivoN\/ufgm\/Kv4Y595nL7vtWO6YXP4EjSRUzZUXlpqemS0TMzAwOl89k\/fcQ\/+PAOWnNycMsnJ\/AF\/GF6FVR6JQJhIlou4U8gViQLmQKhH\/V4X8YNicHGX6daxRodV8AfYU5ULhJB8hvPQBDIwMkbj96An3rWxAxCsi+vGitka9zjzJ6\/uf6Hwtcim7hTEEiU+b2DI9kciWiLBmj34RswQISkAd0oAo0gS4wAixgDRyAM3AD3iAAhIBIEAOWAy5IAmlABLJBPtgACkEx2AF2g2pwANSBetAEToI2cAZcBFfADXALDIBHQAqGwUswAd6BaQiC8BAVokGqkBakD5lC1hAbWgh5Q0FQOBQDxUOJkBCSQPnQJqgYKoOqoUNQPfQjdBq6CF2D+qAH0CA0Bv0BfYQRmALTYQ3YALaA2bA7HAhHwsvgRHgVnAcXwNvhSrgWPg63whfhG\/AALIVfwpMIQMgIA9FGWAgb8URCkFgkAREha5EipAKpRZqQDqQbuY1IkXHkAwaHoWGYGBbGGeOHWYzhYlZh1mJKMNWYY5hWTBfmNmYQM4H5gqVi1bGmWCesP3YJNhGbjS3EVmCPYFuwl7ED2GHsOxwOx8AZ4hxwfrgYXDJuNa4Etw\/XjLuA68MN4SbxeLwq3hTvgg\/Bc\/BifCG+Cn8cfx7fjx\/GvyeQCVoEa4IPIZYgJGwkVBAaCOcI\/YQRwjRRgahPdCKGEHnEXGIpsY7YQbxJHCZOkxRJhiQXUiQpmbSBVElqIl0mPSa9IZPJOmRHchhZQF5PriSfIF8lD5I\/UJQoJhRPShxFQtlOOUq5QHlAeUOlUg2obtRYqpi6nVpPvUR9Sn0vR5Mzl\/OX48mtk6uRa5Xrl3slT5TXl3eXXy6fJ18hf0r+pvy4AlHBQMFTgaOwVqFG4bTCPYVJRZqilWKIYppiiWKD4jXFUSW8koGStxJPqUDpsNIlpSEaQtOledK4tE20Otpl2jAdRzek+9OT6cX0H+i99AllJWVb5SjlHOUa5bPKUgbCMGD4M1IZpYyTjLuMj\/M05rnP48\/bNq9pXv+8KZX5Km4qfJUilWaVAZWPqkxVb9UU1Z2qbapP1DBqJmphatlq+9Uuq43Pp893ns+dXzT\/5PyH6rC6iXq4+mr1w+o96pMamhq+GhkaVRqXNMY1GZpumsma5ZrnNMe0aFoLtQRa5VrntV4wlZnuzFRmJbOLOaGtru2nLdE+pN2rPa1jqLNYZ6NOs84TXZIuWzdBt1y3U3dCT0svWC9fr1HvoT5Rn62fpL9Hv1t\/ysDQINpgi0GbwaihiqG\/YZ5ho+FjI6qRq9Eqo1qjO8Y4Y7ZxivE+41smsImdSZJJjclNU9jU3lRgus+0zwxr5mgmNKs1u8eisNxZWaxG1qA5wzzIfKN5m\/krCz2LWIudFt0WXyztLFMt6ywfWSlZBVhttOqw+sPaxJprXWN9x4Zq42Ozzqbd5rWtqS3fdr\/tfTuaXbDdFrtOu8\/2DvYi+yb7MQc9h3iHvQ732HR2KLuEfdUR6+jhuM7xjOMHJ3snsdNJp9+dWc4pzg3OowsMF\/AX1C0YctFx4bgccpEuZC6MX3hwodRV25XjWuv6zE3Xjed2xG3E3dg92f24+ysPSw+RR4vHlKeT5xrPC16Il69XkVevt5L3Yu9q76c+Oj6JPo0+E752vqt9L\/hh\/QL9dvrd89fw5\/rX+08EOASsCegKpARGBFYHPgsyCRIFdQTDwQHBu4IfL9JfJFzUFgJC\/EN2hTwJNQxdFfpzGC4sNKwm7Hm4VXh+eHcELWJFREPEu0iPyNLIR4uNFksWd0bJR8VF1UdNRXtFl0VLl1gsWbPkRoxajCCmPRYfGxV7JHZyqffS3UuH4+ziCuPuLjNclrPs2nK15anLz66QX8FZcSoeGx8d3xD\/iRPCqeVMrvRfuXflBNeTu4f7kufGK+eN8V34ZfyRBJeEsoTRRJfEXYljSa5JFUnjAk9BteB1sl\/ygeSplJCUoykzqdGpzWmEtPi000IlYYqwK10zPSe9L8M0ozBDuspp1e5VE6JA0ZFMKHNZZruYjv5M9UiMJJslg1kLs2qy3mdHZZ\/KUcwR5vTkmuRuyx3J88n7fjVmNXd1Z752\/ob8wTXuaw6thdauXNu5Tnddwbrh9b7rj20gbUjZ8MtGy41lG99uit7UUaBRsL5gaLPv5sZCuUJR4b0tzlsObMVsFWzt3WazrWrblyJe0fViy+KK4k8l3JLr31l9V\/ndzPaE7b2l9qX7d+B2CHfc3em681iZYlle2dCu4F2t5czyovK3u1fsvlZhW3FgD2mPZI+0MqiyvUqvakfVp+qk6oEaj5rmvep7t+2d2sfb17\/fbX\/TAY0DxQc+HhQcvH\/I91BrrUFtxWHc4azDz+ui6rq\/Z39ff0TtSPGRz0eFR6XHwo911TvU1zeoN5Q2wo2SxrHjccdv\/eD1Q3sTq+lQM6O5+AQ4ITnx4sf4H++eDDzZeYp9qukn\/Z\/2ttBailqh1tzWibakNml7THvf6YDTnR3OHS0\/m\/989Iz2mZqzymdLz5HOFZybOZ93fvJCxoXxi4kXhzpXdD66tOTSna6wrt7LgZevXvG5cqnbvfv8VZerZ645XTt9nX297Yb9jdYeu56WX+x+aem172296XCz\/ZbjrY6+BX3n+l37L972un3ljv+dGwOLBvruLr57\/17cPel93v3RB6kPXj\/Mejj9aP1j7OOiJwpPKp6qP6391fjXZqm99Oyg12DPs4hnj4a4Qy\/\/lfmvT8MFz6nPK0a0RupHrUfPjPmM3Xqx9MXwy4yX0+OFvyn+tveV0auffnf7vWdiycTwa9HrmT9K3qi+OfrW9m3nZOjk03dp76anit6rvj\/2gf2h+2P0x5Hp7E\/4T5WfjT93fAn88ngmbWbm3\/eE8\/sKZW5kc3RyZWFtCmVuZG9iagozMSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0xMVkNZRCtBZGVsbGVTYW5zLVJlZ3VsYXIgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE4MiAtMzIzIDExOTggMTA5OCBdCi9JdGFsaWNBbmdsZSAwIC9Bc2NlbnQgODgwIC9EZXNjZW50IC0zNzAgL0NhcEhlaWdodCA3MzcgL1N0ZW1WIDk0IC9YSGVpZ2h0IDUyNiAvU3RlbUggNzYgL0F2Z1dpZHRoIDU3MCAvTWF4V2lkdGggMTM4MCAvRm9udEZpbGUzIDQxIDAgUgo+PgplbmRvYmoKMzIgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE3NCAtMzA4IDEwMzUgOTQ3IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA2NjggL0Rlc2NlbnQgLTMzMiAvQ2FwSGVpZ2h0IDY3NyAvU3RlbVYgNTYgL0xlYWRpbmcgMjAwIC9YSGVpZ2h0IDQ3OSAvU3RlbUggNDMgL0F2Z1dpZHRoIDUwMCAvTWF4V2lkdGggMTIwOSAvRm9udEZpbGUzIDQyIDAgUgo+PgplbmRvYmoKMzMgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9BR0tYSkUrQWRlbGxlU2Fucy1TZW1pQm9sZCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTg2IC0zMjMgMTIyNyAxMTEzIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgMTE1IC9YSGVpZ2h0IDUyOSAvU3RlbUggMTAyIC9BdmdXaWR0aCA1NzAgL01heFdpZHRoIDE0MTMgL0ZvbnRGaWxlMyA0MyAwIFIKPj4KZW5kb2JqCjM0IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvSVBFSkpHK0FkZWxsZVNhbnMtVGhpbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTc1IC0zMjIgMTE0NyAxMDk0IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgNDkgL1hIZWlnaHQgNTIwIC9TdGVtSCA0NCAvQXZnV2lkdGggNTcwIC9NYXhXaWR0aCAxMzIyIC9Gb250RmlsZTMgNDQgMCBSCj4+CmVuZG9iagozNSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL1FRVEFRQStUaW1lcy1Sb21hbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMjAzIC00MjggMTcwMCAxMjcyIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA3NTAgL0Rlc2NlbnQgLTI1MCAvQ2FwSGVpZ2h0IDY3NiAvU3RlbVYgMTAyIC9YSGVpZ2h0IDQ2MSAvU3RlbUggNDQgL01heFdpZHRoIDE3MjEgL0ZvbnRGaWxlMiA0NSAwIFIKPj4KZW5kb2JqCjM2IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvU1FLVUVUK1N5bWJvbCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTY3IC0yOTkgMTA5NCA4MjcgXQovSXRhbGljQW5nbGUgMCAvQXNjZW50IDcwMSAvRGVzY2VudCAtMjk5IC9DYXBIZWlnaHQgNjIzIC9TdGVtViAxMDMgL1hIZWlnaHQgNDY3IC9TdGVtSCAzOCAvQXZnV2lkdGggNTcyIC9NYXhXaWR0aCAxMDQyIC9Gb250RmlsZTIgNDYgMCBSCj4+CmVuZG9iagozNyAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0pGUlhRRCtBcmlhbE1UIC9GbGFncyAzMiAvR</mes:base64EncodedContent><mes:contentType>contentType</mes:contentType><mes:documentName>names</mes:documentName>
        </mes:CreateEnrollmentDocumentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6fc9718f-f69d-46f7-9a41-dffda9a7c22f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="9c7d00ba-2f31-4166-b13a-3d560078b5a2" name="Not SOAP Fault"/><con:assertion type="SOAP Response" name="SOAP Response1" id="3358cc26-bd03-4a0b-9105-4da9779a1d57"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="87c82d3c-e4c6-4bd1-aa6c-4eb7f59047c4"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:commandStatus[1]/text()")
def documentId = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:documentId[1]/text()" )

assert commandStatus.getData() == '1'
assert documentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateEnrollmentDocumentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="dc70ddc3-bb9d-4ee0-ae05-b7f9ee621995" name="CreateEnrollmentDocument_BOI"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateEnrollmentDocument</con:operation><con:request name="CreateEnrollmentDocument_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a2d6acb3-7045-4a9a-bcfb-42997ae5c540"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateEnrollmentDocumentRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:note>ref</mes:note>
            <mes:documentType>type</mes:documentType>
            <mes:base64EncodedContent>JVBERi0xLjQKMyAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQW5ub3RzIFs8PC9UeXBlIC9Bbm5vdCAvU3VidHlwZSAvTGluayAvUmVjdCBbNDE2LjkzIDM2My44NSA0NjAuNjEgMzU3Ljg1XSAvQm9yZGVyIFswIDAgMF0gL0EgPDwvUyAvVVJJIC9VUkkgKGh0dHA6Ly93d3cuY2Z0cGF5LmNvbSk+Pj4+PDwvVHlwZSAvQW5ub3QgL1N1YnR5cGUgL0xpbmsgL1JlY3QgWzE0My40OSAzMjEuMzMgMjE0LjE3IDMxNS4zM10gL0JvcmRlciBbMCAwIDBdIC9BIDw8L1MgL1VSSSAvVVJJIChodHRwOi8vd3d3LmZpbnhlcmEuY29tL2xpY2Vuc2luZyk+Pj4+XQovQ29udGVudHMgNCAwIFI+PgplbmRvYmoKNCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMjIzOT4+CnN0cmVhbQp4nI1Y23LayhJ93vmKfkjtSqrwWPdL3jDgCqdsICAnlaq8DGIAHQuJPZJM+JHzvadnRjeETDapGCFmVq9efZkWBvzng0ZsF04fHgK4f9TBIZoGwRYmgbijmy5xDfAMm5g2BBv4tDqyMKIxLAp+TDMGwzBMiySHWXFYM\/4FLNPQxEvH\/5Zj+7DKac4ODJcsGI\/SzRd4pjzcgz4AQ9NtuCs\/m9UNWNAdA\/0e7M8Q\/FcQ+Qe\/0AQv8Q8Z4ZXhmcRywHUdYlsQHuB+qsM4hW8fXI2YGriOSxwDTN8hHtrQiKsDZ\/AAwivXJLoJrm0TX5NOLTjNaJLvYfS9stkss1xiqWXPLInT6wWmRzxf4VD+CnIVyMvRsLX6\/tHoqGvaDnG0NpHxdDkZBTB8eoLhaDR\/mQUwnX17mS6nkxUE8y\/Qwqt2WxaxHbl7xNMs4yndZPAYJTSRgQpYuE\/SON1FLOvbbiIntX0xh4f0Nxi2bfp9Kw2X2GUS0ASjlrN0gC7e+ZalGT3rdZ9oav1inyYMZin8DzzPuzMt786yLbPaU4ZMl9tuhkxzxV1J4eX5ebj8CfNHVCqYfp8GP+FC7KtUNiyRyo5vioyRrJaT79P5ywpWwTCYPE9QbHgYPg1nownMZ6AZ94bXgqwAPIMYZbQmi\/lqGqzuR8vJGN\/bGhg68fT24o+GSOEePPTeUwH4MQ2+jpfDH8On1f3q5SFYCs\/ms0tcm2CNtDZ9NPphbZ\/YhpKqdq\/tnXlv6j2Em20fda+FrGLk2BYxrHdidJ3gKmqO6RPHk5jo0mylvGrCFnydrmAxWU7n4\/cjWNo3LYLJaSrzukV0V9hfQWMMBbJViozR7QpQx8wRuqn9uifbSQdA13zie22ENt3xZDVaThfiugI1vDaoY4tQdzANr4v5XtKYtiF6bAlmoWR6F8zERqFfgLUypsKxNJ34t0lZGqaI38apmk2ZIJ2gY+Yaxk3RdZ2YpkTCvGqaQaW6AritegOxZGHBeZTsYMzwjIly2PL0AKM9C1\/xbld9Bd7rqEhq3WljqyoE+eoqr4D6lccw6nob6BKiEv0GF8vELv9HLqXimiNa5w3Fbd8VnpWKm1pXcQVwU\/EWxHD0FQ+sszyl8xRCzjZRnnLAPr\/hFIbHY8x22O+70isr\/dJj0dta20i\/6AqiX3QXP15AyF7Xr\/wNKqXybRzZ2vqUt9Gm59YNrlPM+BHDa6MV3+ueQstJ8LKcTcYwxWYLj5PJqoPsaMTB1mPpxDUvkD8YOvpl1ivEOetc2cYpw3fBtmWbls1pHgyf4HG+7GugUn7\/NqSJxGzzGvLnZLi8C+Z37f5Z+mA54nTo8QHhUF5MbBvnM8dsob2vS+V2CXrNsfbi\/RVNQeiu6GnC7mweTL7A5Dc9RDh15Psog6weQkPK2baI4zNgbiPIMeU5Xp4h4pztipjyKMdJiXQcx5JxWmmhm6K51hQM\/IzMLJTAVxPP9HkxXwZDbKnNHIeheh62z4+avOU5Iv\/lxgQp4lydboFxnvIMsA7\/KViWR2mSAdB1WuRwTgveODUAFrMw52kShZBzmmRbxsU+eU1DtTVNrrbluO8oZ7MiA4q1v2eQyEEejtiAc7YRu67pup7ohoKu2IHdGYVFwh2pkcAJ1azA\/zidDqA9gQ7gYsocgBwzgaKFFEnhO3qDWiUDiLbyGs0nrz1sHV\/MlYLtpf+CIGchi445IPETurET90q4hKH7hxSDHCXblB+okLHUn7ZkTqRsfagEfjA4FFkOe0a5OsUkcgoxruZ9XHXR8pSy6D7y3tAzyrcVy09oRlhQzjJ4nC5XQdtyAqd9hM9S4kuZPUjm2gY2W1f1wb\/gL9AJBiGORZCkPAk9MFkbtHyyKxPi1yfUBQvl12fSA6kTo4E0CJ7cWcijNbugIj\/UwgkvsBihSLIC36SwA2mZ\/T7GNJIxDmNUThRrHW508Syv1yyO2BtGR0YPv6jNVCuaCF4zNg3i2jVj8WpFucdDnKqNZr3ZiCZ82qQxNg6gBymYrAQMVZHhs7KoIUmsBxP7n1\/OcQxOEeJFyZuodHHWqmiE6UFqkUth5JowxU4VqqalXD5iYh3z+ExguhVJktNXpvyWSYQJtS4y7IVZprIJj\/hNKqt1IJYrVHnmK6NV5K8Z4+BYPgtvy3CWPjf1h7GIylgMsFQFBfW1NLOnbyonCtXjxOUBG9AZNoUc+WSKRAcZVuFHJjVOlRAMZREEG5nawVKt2vQs0YSrVu3ZRLO6h4Xp1I+y2Ip+M04HME1CgvQyaVXkXhbtElVWWyXLez99DHecqQKUFf4o1s7pawYPFPX4GwIuWsAIHcCQDZpAoolC1BpeXilt2vXDM2fZEft3tI5ieTQJPh0bRbJhKhxXnAhA6aJ0jm7wUIwy7CaYl3\/+veDXp+Y3GDFKauVfXf7lOzle4XO7f8H4dDqRcJsf6Zlg2EqEZp1HLJz4THGg3smQYXS28K02oVDF5KK3UX99rmTqrq0k06qgYiNcsz2Ntz1adeJBYIEtBqOZpDkbCA15WRFrcQ9CrKCdOAJUZjJ+yOqEuE6Asigyxt+isPm95R3CliFyUxDGCn6LNhgSzHSEJjDM4Eh5c6oqGgNld1M+FlV1igXWcbJyIIwxUTcy5QSvNY0xysirasJcmaTYKk+Qlfl9m7RZ\/35yLOugptHOrfW5zrtq8ChDIho77uAbQQWZ5vtLad9L4xpPOnegifiZUALfJoxPuZoaSCsHu8TXhdRQFKJoPRns03ijoLdYWpkiuWVYZFRMjpE8sTZVHFIub+VRXshJC7kOEarKkgoCb3F2EOfa43g6qkDIH9hj0diK\/SMmV3ccwQ7LWA\/CdZXqWHCW38YTVbpVkooyvY8xY7HN1A\/YzRZb1C12V8e7UbCGGstbBvA4wlBv8FiRTFlSZqM4OqQyeIxhGmTy+MYGfzxX4V\/w6I2GZ1ikSEoc\/lmKgRNHqYzEvwi65lVBf6drk2b\/\/wGfn0ckCmVuZHN0cmVhbQplbmRvYmoKNSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgNiAwIFI+PgplbmRvYmoKNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk5Pj4Kc3RyZWFtCnicNY7dTsMwDIXv8xTnEiRIbWdp1t0N8SNNgDotL9BlodtE6Sit9vp4iFk6sj\/bso9gZcj6gLN5iCieGaUlQvzAUzTfIAVCC52xCzYI5uKt84g73GxOOR2aT9TTcOp\/MpYp9dPXiPep2+ZhgZkTugSrZqWvsBmbMXdZV+o8HPrdAm\/NkPbgOwixx\/0\/u2sDddNmSAF\/i3hUS1hfTGEFxlnzUfWiav+shqoMCnQtZW6d\/oUw2cqxIHWmiPUr47HXQ2vzC3XrPWwKZW5kc3RyZWFtCmVuZG9iago3IDAgb2JqCjw8L1R5cGUgL1BhZ2UKL1BhcmVudCAxIDAgUgovUmVzb3VyY2VzIDIgMCBSCi9Db250ZW50cyA4IDAgUj4+CmVuZG9iago4IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11HNJQ3pg2JqENFZEfKCEU0LpC14rfn0Fg6co+tmVfxlKRdh5X9RaQLQxyTYSwx0dQF5AAoYbMjPXaM6bstHUIO4w25xSP1Q\/KoTu3fwnzGNvht8dqaLapm2FimW5hRJPcFdj0VZ+aJCtl6o7tbobvqosHmBcwGYfXB9tnA2VVJ9gMboxwEktY30xhCYOr5JPoU1Tfrfoi9wL0LHmqrfwFG9KFNYzYqCyUX4z3Vg6t1T92TT1uCmVuZHN0cmVhbQplbmRvYmoKOSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgMTAgMCBSPj4KZW5kb2JqCjEwIDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11kqahvIHYkNCGipofKCEUEKWstOL3ZxBYurKPbdlXYyVIWoe7mHsk3wqZJILf48uLPxADoQbPlHHSaUy0lcbC7zAqrzEcqzOKobu2t4hZCO1w6bEemm3spkiNpkcoVprZHGVf9bGJvFLE7tjupvitunCA+oAmZfH5YvNuoKjqiDSBHcOf2BI2D1NYQeHO+cRasuqnVZdnjoHepZ5Iw3+hFcncKI3QiMQXPwaLlg9txD92rz1wCmVuZHN0cmVhbQplbmRvYmoKMTEgMCBvYmoKPDwvVHlwZSAvUGFnZQovUGFyZW50IDEgMCBSCi9SZXNvdXJjZXMgMiAwIFIKL0NvbnRlbnRzIDEyIDAgUj4+CmVuZG9iagoxMiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk4Pj4Kc3RyZWFtCnicNY7RbsIwDEXf8xX3EaQtdZKmobyB2JDQhoqaHyghFBClrLTi92cQWLqyj23ZV2MlSFqHu5h7JN8KmSSC3+PLiz8QA6EGz5Rx0mlMtJXGwu8wKq8xHKsziqG7treIWQjtcOmxHppt7KZIjaZHKFaa2RxlX\/WxibxSxO7Y7qb4rbpwgPqAJmXx+WLzbqCo6gibwI7hT2wJm4cprKBw53xiLVn106rLM8dA71JPpOG\/0IpkbpRGaETii58Ui5YPbcQ\/dxE9cgplbmRzdHJlYW0KZW5kb2JqCjEgMCBvYmoKPDwvVHlwZSAvUGFnZXMKL0tpZHMgWzMgMCBSIDUgMCBSIDcgMCBSIDkgMCBSIDExIDAgUiBdCi9Db3VudCA1Ci9NZWRpYUJveCBbMCAwIDU5NS4yOCA4NDEuODldCj4+CmVuZG9iagoxMyAwIG9iago8PC9UeXBlIC9Gb250Ci9CYXNlRm9udCAvSGVsdmV0aWNhCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTQgMCBvYmoKPDwvVHlwZSAvRm9udAovQmFzZUZvbnQgL0hlbHZldGljYS1Cb2xkCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTUgMCBvYmoKPDwvVHlwZSAvWE9iamVjdAovU3VidHlwZSAvSW1hZ2UKL1dpZHRoIDIwMAovSGVpZ2h0IDM3Ci9Db2xvclNwYWNlIFsvSW5kZXhlZCAvRGV2aWNlUkdCIDI1NCAxNiAwIFJdCi9CaXRzUGVyQ29tcG9uZW50IDgKL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0RlY29kZVBhcm1zIDw8L1ByZWRpY3RvciAxNSAvQ29sb3JzIDEgL0JpdHNQZXJDb21wb25lbnQgOCAvQ29sdW1ucyAyMDA+PgovTWFzayBbMCAwIF0KL0xlbmd0aCAxNjE2Pj4Kc3RyZWFtCliF7VcHeFRFEH4bOyiWWECsKPYuYldExYq994IdQknIu9frUiI19CYSCR3RxCASBDEixWCABEKNEA64AEmAnEAE7mNm37tLuZCEzxT9vvu\/u2\/fzsy+m392ZnaP4yKIIIII\/q\/I7XSw90q\/P7Ww68w1je3Lv8ENee+8Pvrtdu0e2z7mu0k5x6DC64R4Gtav40Rujr\/99o6v\/IbYseuOxOx7q7KSCSEGx5mEb2j\/agtf3tS9BU0X7sgH7Fi48MiGDP\/MKsxEYuJAidzA\/tUWm19MvKKge\/6X6xm6N83vuOeekv7hdhqxcPjvEjk4dfqeFq1SUo44SElJ33X1mNQzQnpbhJzSMLEIMZ1BlAixTMg04GQbKLEw57CCTKI5y1SU25CRAiE6hkAnvEUI5W0QmHbd8+jkH7140fr0VvsX9ezZZ1HPPi32p6fvWvxqaZKrl3TmaAUiFkdcSBxPXBE88MxdtkxDoQ58HDVkpUHKwax7IqvHPh3ti\/Z9eOYHb700LH\/TZ3828\/mi\/3ig5H5XT4nhhM90UouFGfwVOHRdcIxY\/VAichI6zzH\/mbXNTICVygn4IgiExjavznnE+d8cEjvk0qKipKS2yl2xbXO\/v\/vsHxVl\/ildY5hewqiHE6FsIqDbtqU7IbYIha\/IjAWXouUQQ94aSzoKlDACdU7ki6nXXNXjkY+Lug0qLj5x8EeDBv2aFPPP9Z+P3OiPY3o1dHZUIOJMIOfd1EMiHp1IBnG2j7qENCDHzM3yROR6INJ1+cWZLVs+fquiKLPmrHqqCEbl4cnLLsl832nBEDy5EhEpNIFsgS9UrsqSXiRWMPkN90EkusflVc9EsjP2ZGW1OmGzktumTVGX4sBsILL2vYLnshIvY3oIs86XJ6KzWLPmZGEhsCRzzhgoEHDTRl9BJSADmdWIiNGoZyIrx2Rt2PSNolwQKM4FDt0CM2JgaDbsrMQ8x8DpUyTUWAWWR6YjNdz2xJ5wHyD+Fssz0+1lWrCpwcJ6rZHUjIKTwPNTA4MVpcmhHjGxPwS6wDzmtMRS10JCXwT0khGxwUURkx5qQ4Oge4AZFZ2a1tAOigaT0aKsO3MqjCbuqRMI7F9YeHVPpPAWRYkvDiQpyhuTR2QeaqIUr8JCef6cvOqWuXlWCQJ62Ugo7Dw\/Nn5WYLOi9Fh2+4asEdcuVU6e001RPi05t7plVRKxnMpuHORduED5NgDl8XLm9K8Ar115ujJ7jm\/IPG8V160y0HAiEiFVblMD4bB33k0\/A4+Rv89tvQTQesvfS5XZMwZ29lf7Byt4ToQg6zahocQyq2QkE9c0TGNpld9Wflara+oa\/50LoE+9u3duv78Y+m25bm38zpsHrI53DODyF\/7D4bCp+yDVeJNCU9YLaUhUmYhdpuKMSiE7Fp75+pOdytKN53WY6KLDlotiB44dvi\/oF4TZQwyC3cnC5mtDf1VFg4gyXsPAb12CktEp07k+GJYFXc2CQ4eoMsXT0WMQg9eZwPFSpuwgUjkJdlc1wNoxhNs0lcGEjbAKWiOR4GwyPBIhWjVE4laW3PjsQyu27g7hQPMXHjx\/tasWWDzgSmsZEEYJnOYwg2DGwUFpolYULeqRqK1LoWAKqmpwPD7xhq3b8NHAUnIFQSIS9UAOUR63Hdq0Ywg\/aKEJG3kDVSC0IFu16mhwWCW3rZuQdqAMaUvum5IdFyTCLn\/U5jRIeyprEBkV9kDV4GILDpgePFYEDf1HHbvvEltTVSaCI535TW0qc+UFjAi74uNrOGYdMrQJPLIRd0RFITYSidbQ3XOihu\/tlzZ+3Ljk5ORxyeO3Tsjwpu4LKlXWiXSbE2FHsLsa8DJRg6T2wDaZlmpyoiXijnCOjrnpErF1D286\/pkmV17AiMgQH7gDWRWIQElYaMJGD3XC6DYPnoZ7X4HJgCntm09M6zV06NBeabt\/2uYdta9MiZd0GZIfgqPLkKbgDAiwOlWsajjHDQ3y2SBM5+aPaYEBZA7IKQogaSC2EAgUOC3JrRGgoxNIG5g7hhJWHpiwEWsKXizhalWoub0fHhWVsDxj2ooV06b9sm1KVOmjNdg3GES8ox3P4XR5zqQob9+EhIS+Xm\/vw9H15tjxAnYr+Ce0tljTf90ThaOySw8+6asfnyKIIIJGw1G2ZvkFCmVuZHN0cmVhbQplbmRvYmoKMTYgMCBvYmoKPDwvRmlsdGVyIC9GbGF0ZURlY29kZSAvTGVuZ3RoIDc3Nj4+CnN0cmVhbQp4nAH9AgL9\/\/\/\/AAAARE9x3OHs9PTy2uTo8vHwiI6P8fHxssXL9PX5pr\/O4+Xv4ePo7vP06\/DzaZKs+vn5ZW9\/9\/n6qK+9Y4mTPkxx9fX2ZoaYlrPEX2l9cIm1nam\/ZIiwYoGx\/\/34pKu56+zwn7jIaY2mfpC3cJaisrvZb5iwjZu5i5vChZay5uny3+Hm09K3+vfoxMOr4uvm7e\/1a3SCZIip7OzqZoWg\/\/7+dHuF\/v\/+\/Pv5YX+a1tjfYXWY0tXdy825qayhkKq9kqK1V2+O0tfm3+Lw5ujsbZGYiqS4navLf4id4OLn4+Pg5+rWmLbHqbC+\/f3yZZCp7+3TxMnHmJ6uuMvVvsTasMnWW26JXYGhUmiG29\/tvb+uzdrhgJuxUF98z9Tiy9biS1x63ufr8\/f34uTp9vX06+70sLGj2trB1ODl1tnqv8TOgoiN+fn4\/f39j5ep9vb1o7zMyM7j\/\/\/+6uzvkq\/C\/v7+qqqq7u7uVVVVd3d3zMzMu7u7\/\/\/\/mZmZZmZmERERMzMzREREiIiI3d3dIiIia5CGgImdk7DDSVZ5S1l8pL3LbpSdzdDYTVp39PLX8\/Py9fX1T2KA\/\/\/4ao6Co7zKR1Z7X3+pwcfaa3WNaYSdX3mVeYKJZ4uFb5Woao6GQU9xbI6e+vr5+\/v7a5CYaIuGZHCJhZa\/SVV3Tl19YX6PZouk6unmxcnT7Ozt7u7sS2B+\/Pz6nbfHX2uF6uroa5CM8vLw\/v784uLfYn6VZYycobrJtrmq6ens\/\/\/l6+jNWnGLscbT9vb2W3WRuc7ZlLDDYn6hfqK2bZOh6enxa4Sx\/P30Y4CrVWmK4+vubZWtY4OOY26K5OThcnuTrrTAm6K07\/Dz\/Pz78vP3pKq0pLzMc5mteYukxNPbk5qsbJGd+\/v8X4OXqsDPbJGSRVJ0UmOFdZOrrMPR9\/j5g6a7\/f3viqq+ao6SbXuR+Pj28PDudp60ZIKf2t3iVWF6WWaCfI+xmrXFaY2Ms7jEjJSm9Pb5qbTTyc3VnrjI5ubkjbkP+QplbmRzdHJlYW0KZW5kb2JqCjE3IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0Zvcm1UeXBlIDEKL0JCb3ggWzAuMDAgMC4wMCA2MTIuMDAgNzkyLjAwXQovUmVzb3VyY2VzIAo8PC9Qcm9jU2V0IFsvUERGIC9UZXh0IF0KL0NvbG9yU3BhY2UgPDwvQ3MxIDE4IDAgUgo+Pi9Gb250IDw8L1RjMiAxOSAwIFIKL1RjNCAyMCAwIFIKL1RjMyAyMSAwIFIKL1RjMSAyMiAwIFIKL1RUMyAyMyAwIFIKL1RUMSAyNCAwIFIKL1RUMiAyNSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNDU0ID4+CnN0cmVhbQp4nK1a3XbbNhK+x1PgUjrHyxAAf8DsRU\/WjU+zZ+OksXa7OW0vaAqy2KVIhaTs6oH2kfZ9dvBHUbZEQg7TU5MEwA+DwWDmm6G+4Z\/xN0wCj8RMX2gS45AzLwoDguPI3NQC\/4JL\/Oa6IThrsO8xnySRzw936NDWZIDpezTAvvxP3iTwN2R+jGMfJglinG3w3xY4DtUQc1ls8JtFRhDBixX+Fc9uPtzO8V98j+DZv+dYXd\/LK8WzL6oDbt7Zmyt7g+0NvI3029fmLQ\/6fseLv+P3C7XuYxmpn3gxI9GQjMjIiJWMszdv5njxxxk4Srw4DC9Aw+fBOv1FnHjMBQ309\/m5sj78y7R0WrOa+WoVbbSHZne2ZfFC1V2L3Y2P5mqfb3vv\/o7O6juKvTCIyNCacH9NqK8hBSNNjXOPE4ajGEw1igne4JDCbdJrKo6aCI9R0X8NGmDIGq8G1B5RL6JWxFBPri9G7fTlJsqX\/YT7AOjFlIQRj+CO0zgIiZRcnabru8M4dGLc3TXcJzzAT5jiRT0gYpB4gRURkPyERXiRYTi9crC5aGFZZyM3cle1IcjLQm47bNzbOQ7VWiI0+wWaIjz7CS5MW4EcKPvw7Efd+Elf3pu3dd\/NhzkOtDEweYKR7Hr\/RQ8xMKdQdJuZVWMsfup3fdVQZvg\/9eVLf+rP+sFOZsQyL9weLeQfeI66eUzXzacjzI9aFLtyPfQY7AftWJAxzRP7FMSwPTHhx\/s0sDunrf389lPwXsGQhQbGQm\/yMi2zPC1wVm22aZmLBmfrqmoEXldPuF2LPW7WKbj8fbWr8VbUTVXC6LxcVfUmbfOqxDdiKWpom6Nxj0XC3uk+Egz3BUOzIn3CD\/mjFKcqm90GJpbS4Dp\/WLe4rXCRb\/IWN9VG4Ptdi8uqxWlRKGHz8sHrpJJAadFUTuL5cLycxKvFt11eg3S7RgrTCpgaNKSU9iRA5qIQWWtUl5ZLvK2rVrYoNfa057nIFfIIvCM4r3HBPhcihc2rRboEfeWNVEyegUQgyGpXFHsp7q4E3TStlOtpnbZS4mXlnY84AUTDJOEHQdCYIG4BLIypDIdToYWxtHoHtAUYUrvfwvZVq9M23dtDqSW9j0uxFfAA3dISYUeXO+h32b+AOZp9VeNG1I9yx5Q5pY8CP+XtGuzMw1Lsg5DnNcIgwFGga3ZeB40MrriRSzbToaFlUu50fPCsr7+RJYMJ9zcmS0t4zordUrw9r\/kgimT0ZM4ioSELIz6XKyQ4JNTj0QDaAsgJkgv87wAaYV4c08gBjaJR6yc0cpQtCwzaXaUc\/p3IdnXe7nG529yLWu06aBYc6oBlEaBpJI7tbN93cju9BglsFx9AW1ha7KLXcbQT\/OysXkfRupW+y7JqV7b4Pi0gpmq339Zp2aSZMl0w5baq9+etlgUhZAmHOSey2oADlfSnstpxtEusdhSts9rrWiwh4BslKuVmuqnJKojEA8lXEno+hDA72UThRvoYNh1aSLzECe0dUI3VCdpWCrGUwV177mwHehowNRp6lFFu53UwNaBg\/2tOR0vJgHZ16bROBh7EaZ0QI\/Iai0dR75fpHkhek5eigZjw4VbF30boY3UviurpSsavAmxDk0TgQMAae2pyCNIBRE3ipIkeVYZopPWtpVVaP6+oqyPpXGSCMzxyPIxMQOT\/BL5ryHvTGcJfsWZ5AmauVYCVMmvyrPihJczn43sQEI+EPnOWxlg8Gl4bSwJ5fpzQxjXFIKVys2MXK2URuIzTKb5xcsy4zAtS\/OGUnYW0F2dkyh6wkZR99hWSiSGXHXhxAi8eQw8BDrlsCP2RH0WvEfRXPNsCq4D0GcSFDBmcNSTPcDpUWzFHur4Q41muag3lSqXVlR69gbQanvTgVvXoYYqVxvZV+xe9aHntX3TB+B91QaDSy9QL1D030ILswv5U3X1d6GXpofq1ddrr1kN\/6AZdItPY3+eaMnUfPb3R7V49gNtQT4VahV6L2Rb90M5RoGDOl1RDkoA5JtZ+hmoe4wTicGwCv+dFXonW0ZFp0CI6JVrCJ0SjLJgSLfYnRGP+lLvAgil3gcVT7kJATu4C+FIec\/+FM0XPnHTv38AcAfd8\/\/kcqhbs83F\/3a67402VYzIVWtY9rOfIuGVZ9Kz1wFK\/9dB3BDpsQgA8WQsNCfGoD6m6kXMgbXOIUge\/AEc6olOxcwZCDpaWTsk2xAfQKB+gcO6PTONMCR8dl\/ArXabWwUMXwMWjDjq6bW9DCfQs9eDUtsni971u2+lLo3pM8NJNorEhrsPZHr0j50G2rerjmFffDn55k2kVi4lVwGWsZdjWOn91jP1K6+j81QVoQyeWkfBSvK9DeS8DX89pkEy0WutPp0Gz\/nQStM6fToMWXmwlt5X7sX9Zqwy9hNDnJ37U4NGxwZ93JJyNZUYmYjW7bI1TlTtu6yqDZFt\/rugVsZqrATbAuZdwQuyME\/leGiWOFYOPaV628L+WOtXluN9mzW\/zK0i6m20lC3IDRRG5gIBEiZ1yomSShuF4YUElk9cj+Rz4G58HI4CoX0PBVS0\/9agiQCEeVDniUTRt\/pDq7Rxid5CgxyTqFjDVfgauVbhPNWzbtqrV9z5T7Lvf1SLdNf2PVeg5xY28mDFmJ3ItV4x83KA0ci5XjBc\/KHEru7kVP0gSj5crXnxG\/q5yBYEzzmm\/CuD0C4MT9ETmkcAu0nqOoO0\/olV9R5Tj4RzNwOdoBur\/bsGVilIKmWkch3ZxhjIPFikrXK1WosaDJ5dyCpyGPNfa9\/KOC9CceIc7nhvvmGa1lndMg2Z5xyRoHe+YBs3yDne0SXjHkbVPxzsgkPZ+2zLEO8yXYB2lzLdgxUIgjg\/8KoHKDDeJuZ1povhEQlX7nQoNgtDgTxymzxxhT3ux5dWZ4\/kUjRDfiwKQ6TATMuULnowHgT8q7fHzUl\/bo7meRXPCQkXFjhfllg2iF4IzYNgkCU+oiEcJ\/DsrfPc71E2qogpoiUOwUvfCVEBlC4Qt4qu4pasgOgABJ549mUwayX49eK1Gmf5KPfQ7hJ1pIFkGlxHSqFvQ95X4DxYk\/dpRcPfp+L6ucl047sr1si5knjJdLNIjTFdhKwhU9qthlb5ISpDo2P4CKVexXeg2U4rybLl96Ae98qcwnNu1mdg+TVnBFlWP9fZK19EVKSZBO5AFdzQ3suCM50gWJlltRxYmQevIwhRoB7IwCVp4sZVMQxb6x2c6spAkcnIQZ5wtuHzHGYFDFwZxHsgfkZ2GQ2ej+M\/4\/zgQtckKZW5kc3RyZWFtCmVuZG9iagoyNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9HMSAyNyAwIFIKL1RUMSAyNCAwIFIKL1RjNCAyMCAwIFIKL1RUMiAyNSAwIFIKL1RjMyAyMSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNTcxID4+CnN0cmVhbQp4nM1b247juBF911fUYzuY0YoUSUmLIINsI5OdYJPdwRgZBNk8qGW6raws9erSbud\/8kPJD6VIXXxpi6LGxiAYoNst0acuLNapKml+hY\/wKxDmksBvf9EoAB76ruCMQCC6D6WEz5DDN\/cVgaQCz6Xci0KP4aeAEi5C4XhuSAPGCVRJu+7+06V1MKz7dI+fo5DBDigsS9QDl+NK9U99iNS3fS+AgOB3ROAkW\/huife8yBewTAD1Uou7X8stfLNM0ApYruHvcPe+WMBbAnflAny4gwUIuOsuNQvn\/E681n+0P9MFcLjL9M\/2c1zrG7JaIH73Ffms\/5DlwsFbe\/3HqhUQ7\/t1\/4Dln+APS+3mU\/Oo77te6NHePNDmOco85k+b99CgLrTXL5daYHupasU6l8WGKEEE\/FSsSRia4Sz\/edmIYY9EFLgk7NG0ERf3yDkx4qcG94DB3VPRan5sxbfayScu1GJVfCFS6ZzrQhh3AybomS68\/Vb3q7WMdZal+boot3GdFjnED0VTw75oyiN7jQGMilwMXBr4LvG56BVxbFwMg8hjI19h+55QHidn2CYjj7Bfo0Wz0UxwhM+F+5s6UqN4PkNfs+hGxjJ6S9cF4Q3RGObeG6Jxby7aX4qjCDQEvYOB+Uqc4G5E6HkSmIx35zTex3NLSN3AfJ6dFrYu47yKE3WeK4jzFciXJ1mmMk9MYYYR5hLBo17Qdc4\/qC1C15+LNuV7M1MKzs+y8GWmdOyZ8tWdM6Z0ZjEljDOlcO4eToS2CB2\/tZc61MrIqz3Bdc6Yl33HXcuIy73jIuQywcEMgnPGrSCYrCLfH+ROninHnkMORHmCfRKhzihR2sXqgRyds+3xQpdzKqwNO2yPM2UYJcT1BQo3GHaWMY5ZfzxBBLgZLDTiOjNIt6dwezQw0244F3CCdoOOdm9i7kC7N0ELZttqRbs3QRto1xrtmHbHafUWyh0SGUWS9gJiAXdfylVa74qy3qS5rCoAcyBSj6iUIAYZt2JSgrzsfVUm5RGSt\/d\/x6TtpQ6yvbTFP9TqFvkXqZY448tbvj0oNdJdXciBnsu47\/eesWoVJsIlDGdDWqTVeQpapFV7QLu0ehtz+7R6G7Rgtq02afU2aH1atUezSqs3Ue6QMELfjW6HJqKjatOE9mEN+3FATMIuC2g4A7BoIC4lxJDLHSRNVRdbWb6BnYQkzuFBPqY5VJu4TPPHtm46HqL4HqzifQXrstjajI24qtFHyOhEL+eu3kjErqXSpJJ5DUhKFeRFnSbShc8bmSt1tO55AVmRP8oSlH6nNhR5neaNtFKOeYp2bHQrtEvka4fEFaxklZTpg1zhjVOlvy928lkpphRX3lXaYftqpRwVRwRlUq7BVrjGbngPdbqVgLpm6TatTTQeuB4zirCvOyjxZoIpF3YB5ppqcoZ4XJwCO1cfPGwhIo3m3OAYsyiwPHUfG1npscU7Ay7hWAexcAbsX1MDIRHMCaGaU9rjpQY01SSJgM1AM8QgCXQM+jPQTI4LvbloeGqKPMOyVx2e086aXJpWUWyqfT+cI2K327nrNH+RZewmxfZC+36J9MOAzAksYwnB56IV5ZCj2rTy04\/wXfEClHM\/OohyBjcpt9BIeUWoqQxstQ2Bf7iSHV3hqj7HK4dv6StOBhtYj7vlcN6QhIlV3\/8Js+2fkU2KN3D\/e4iY51FTsvHCdqZ0IuDqZMNE2BHMTZINZzesZ5gfWdYzv1ma6g+sBL0wmgGHNP++PRRv4EOeuPDz3X+6C\/\/9eQFP8X6r2P+pLBJsSVUVUsnyGfkUkFnj1TbN06qW2LnCw96GSBnlU7Oijkjvy6KqyiJeVUrDOE\/SODN2wxjgoQhNEs6obymTTV5kxWMqqzfwww\/3gJUExFmGRcRDjYbWdSa1+aXMMHpXve2VO24pxz6GRVE0w1KrAEGmnDhrQBzbcPMxG0zUWs6sFn\/06dxBJJ7l04luFHjTI93Pm7Y77xvsSKtEKObzhdOOeMVwaaXXFvZtNuFYf5CQnGl37Wn2FdXTrzpBwcLCFfR4goLJfnKC8n2hZ+O7YWQRaSdS7cTWu74eoLP+7vv+kX3oqMcEuOZF321Xlu2kpZ+64PonvabsZzNUb6Lo1yf6Z71wRL9ezVeonpuwU4hjAa1CLVyrRCsy02q131Iq9nfXCwj69eUwxhm+1mrUfuEY9J1+1QD6oLMNKj8grlBvWpzsydX0pXg7YreiL5+GLmc2IbosVPavZdIN7p9kWRU55uLjxkt3oE0eN\/WmKNN\/YaqME0UY+rFgU0ndDeJvG4rw1ZsxzCZxVjJpyrTew1bGVVPKChs+rJKwunvK9rBLa6xj5AqpLIMs3rmw3EhUYVic5knWrKx0olGEvYCNTkp4g4wIVbyWj01crpBbtKLolHWaydYnD02arZBO8SaqUpdpUity7byGXePZqxHjmoVYCVtpNmycko+CigaZbdhEA7PyyCVRMIiyKVxzZQLGArpb4mYUe4l27zYF5BLdgPd+yYtdu1s2NgaeCn2bucVxUA7hoQw22IdEHQpKz8QYD+xTmT7HiWEURIXAIOZsAL2OWigyylw4XbOtVKQbam3fx24giIIv1PM60qI8ODpVlk9bx9FUGyMmKNA5LzC+nAKdgV\/MFJj0jwVoy1D9zwMFOh0F3YQClVo3okAHKbCzw5r81LzXC9jZblz7GI36xOWXX0r5EjQy+sraGdpnNcPMMiP5vdFtg3yJMdEpoutmo9+OJzZG0RohTHq8OnKjYMTrHiao54HGFmFJutP0b0MLSXzMB1RYoNHphoNQYanb0HD8+ITui\/OBoNC1j+mzKh7aHegHIhffkXj9aASTms95L\/\/KuVbvaYJE6Jnq+87TYOXpaTRqoVvv6Um0wdJPGwOcjx2MmIOGdI5blK6wXU7XadKdjKd4327bQ5plldpMZKVnXKUHWuc1CG6loa\/2XCbIoNJ1ffVhK0XYVdWGrXSst3ISjb7uq8e3cgptODRLmWXKo6rCSnX5WMpEqmOzLXK5N83aotANIz\/ohd3qhHB69BL51SdkEm3WCZlCO87+cVYV0xTQ9j9FvcF7WO03yUY9ikr0Cx2m1D2o5IcY3DYx\/YD1XNygkHiNzUQa12p0hcdKy9adT5ynExUfcxnBcrcTeuWODyZQpoa2X7N8JF7kipOCb2SkdDr06EZKe10RdZOjpK\/ahK58DG8KqpekOR2Ej77v+McuwH\/r+cz\/3bj\/sEwS6n+DnMApW7xwejqmnpVgffahf2elnYHo\/6eghmOqxAt1WUeHtWjj22FZ+xP6ElfVg+ict2xYVqa6DMzbi4\/txXftrxlVIeVE\/c8WdmbmtUOMCGvNMPC4Bdz7bg5gojwM4DD056Bm8U5XJ7o2AfXMvEwfN\/Xw1Fc91NobCkGfBq7nhXyQOY\/VPsL\/AIqxj\/sKZW5kc3RyZWFtCmVuZG9iagoyOCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCi9UVDIgMjUgMCBSCi9UVDEgMjQgMCBSCi9UYzMgMjEgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggMjgyOCA+PgpzdHJlYW0KeJy1W92O27gVvtdT8HIGSLTin0TlptimXWD3YtNFpgiKohcambaVyJJDyfF636cv1KLv00NSv54xRe3MIsBIlsTvHB6efzJf0S\/oK8IsxAm1F5ImiAsaxpxhlMTdjZLoE6rQd+8bjPIGReZfk8PYKCTM\/tY3OBIh4RRGRkmYiiTID+jPD4jbAd3l4YC+e3jACKOHLbr79z16+Iz++mA4uULDNEwSEnugkQ4NOdBI7Mlbzjq0j\/tMFdUObWuFsu22KIuslc3\/kPwm1WWTXdDjqSkq2TToeFLHupHNfXCLPE1pyOkwF7RM\/a0LDOYCV38w5AJLV4IVFUjkkLVFXaHssT61DvRB7LEWgAd8cHepTwrlSm6K9lyrdm9EfHthCWOhIIS4KATX0ritJr0Kx0kS8siBtkqFl9HWqPAi2jDT7we1RVtVH5BW2B0yEp6uYlujQ6a+yFbfwVvNQ\/AsD4xEIaNCuHjw171R2jEOGXGgddIO\/KS9iAbSDrylvYSWs+Cpw6jqavQZzwr4hjmyJIziiPVkPfyUYxJppOcAyxRrWC+0jy1wjMrs3ADLF7QrvknNMco2DhukIqQpXkEFjBsULyuRKnb71gioLA5FixorwxB9lBI9yrI+G3EeaghCtxVpnCclYexerE6RQO2NHXQMnKqNVKjpJx86hEo4zFbggdhrLREGYyAJXgenR0epAIWJwoRgHosY7gRJGMcBxGgTtN9\/dH6HPr6H+1QwdEYEPSgHjxGfLHAURmmaAHM5gixBf91dLLfUcvtPdPdpf484usvuUYzu2nuUmilggu7298Hw4mg+sn+leVKZe3D+yTDgfI\/MsOuPzOvg7ke4RMPHJVwwBCx7OcBl+DHjwlKYMqnug3T41lLYmRfdiK2lU5s3aoqVXTOlHwXwKDcv7F877mT+2k9n\/MxnYfmyQ8r7QHO0mcJ\/tlzaD2YsW9BOCpdrMQZzWeynmFYiFtLKTU4YrybihwH\/Ch5+WlBunpKQswSjUXMgG3pGcYKZ4siy1wDNwZ80LdTTsoYBKh49p7IYAlWKCR0ov5KV8kSEIn4tm+cxC5kX2j9MVrSvi9wRssD9phiLFbAQm85FWaLseCwv2gub5LauJOr9Y5bn9alqQ0cGmXCgRnlP1sP5esmGg5YsoS1F8RGN8jCOBwV0hXFP76pVz+0tOSGTZdA6D9NZdJZ\/AbuixsMkxpyFsTei7wNhjDXun9fmuX0LNsKsNfpaCAfuCE+v2HyluPOsZIacikPilwy5upHMTcEEvWC+35qpb3sBJMa1Jf19ZsTQ9q5pEMm7QSTBokiSNMSCiCv+PJXlCZoga9Hy+nDMqgKsUskSUpENerwgeHgAa6zPlVTNvjgiyIfyumpVXYboYS\/hi6wa+Qhu6iNLGSQufjm7RQscebE\/2qNE26LKqryAhC+rNjo5Hh8Mcw5dVSo4A54k\/lSdPgZDzWjnAN6cuqoYXXcES1UeS23dsYxGPLQmJp68DVrz4TRtUEBll5enjXRlsFC80SjmExrBwhqOmnku2j1q9xL9oMPDh+xLg6rsIN+g5pTvUda46r1hbjENU4\/qMbgbifwA86rV8Q36scpDx9xEAm6NcBeNFf2AQdthkf1q7peGj5EkhCwczcJH7JFs\/zyNClkfS4zjDIbIUZq\/9t5+Y+OKjT3XjvNpLAmueE7TkBLGep5f5mJIRNaijepZ1e2y87ytogxCgOAs9aYd3HWe2CMJ0d2T5CZmsFYlb6NdqeQQJPw98c1owiIKVCO6MBnfaDJ44oi5C\/d5v+357tToiRfRxn6bh7daQhtU4edZ1+fs9MGchnGUONGvllH3RqT1v7OI\/zRa0jjkgk\/lsOTfu6DhwEzikCWQzXSYL6uAKJjZSrRDrdpdtpPIUQExhuGS8BWwvc6\/8YnJVJuyF2xRNScFdiVHq3JRIIJCsROLFRQ2hZJ52\/UVddtxQqgz7aOqt4WzPT9MDGo44dc3Uzsg8ptpHDeuOEyTUKQpdUH\/jjhMb3dj\/6g4TGddTR2HSbochn+CMPzW9puYicZvbaeFGJ9j2ypvYxN99Rtl3nyxP+T06xnAzl5W1DQE6zSIsX4aL6tpCI7XomXIbDRAvNkpKQ+yaiEMtWcpq1mT3NFeZnqLB3NxtRK\/0\/UwAFmJNoZIjyBPX6MrPCqfN9qYArX7TG807CRk6arfeBjnAF5hc8rbRqdCjVTfitzuUFzqk6sE4zrwk3Rg6ZVKMAoaxdlrlWDLaGtKsEW0WQn2uS6qiTs+ZqrVSedQj9k9TQjdamMc9FHJY1Zs7ANHUjNwo9Nir4Lbq6QmoGKCp8Ib172evcLq+mtxH\/m6bfeyPht8pvsrEwft0Wb7YAuevSl4bNmj+oZ2ajYSEuujidmToKbbNnxkB9vKqZrUT8i00oeunam9gmQ+tgOdll1DO8\/C+ZZdhEHWkES8l8DLcvFRnnGke9weaH9vJKq3phswKpr+DD97PgQcbiyYD35nVufzOQTH9atUWQhKPVGYXi5PjwPwkOBkSmQp9XWFOyZmaB5u+Cwfm6J1JNLgQiHVE3wF5juEPu2lacijE4jcyBs9lfeVeuijHVor\/NfzWt7BorxZmkCtHq1Z1OdYN6qBKVRFqUnvDmYhIz4+KWdPMJh7ORsFT+CbPdqaaQs+xdJMknSKNX1isaajRqyb8x6NhcW3Nj2CZzXjjd1XKesdRIbZMYyigRy+LCGrlzZCNG2tbGL0fGigApwuZtzFxIpjRUJAbkf80ZwBgYKa+6MFYw06nFD58W8+6RaBbOTGNtGV\/LPNRskGqqNHVZ8h8UHt5QirsakPGSyE7mHqyinP9YmutoBfZg1gnebL5IqpI1c40dtNPg1Oa27arnXmVjQ9LYcHgVgbp1E8pxK4lt3o19bVjWAhpYnoIX0KZ2X80KGuClBTWLU3qD7CTExhCIK8HWgYodr4Ym8pmaB480gSjTTrfAXaxtH\/g7KVGY\/vvYLOWiNagWaM4OspK4v24qX6kJETP9Vv+m5EF62HvL\/ebiX4GL3dO48qT+w5ghkQyMs6qh4a4o6DFLQ4YWwFnqvHqosShiGb9Yd70HIAFs05p6xsautv0X\/yuv4CyfN\/fXIlLIRnbO031HVyfmrB\/ex13r9R+oAVVF97WR5NgAcbavTRqOI3aQfUVVlUEslf4U0hYRG9PBBonacTf2+nq3uKunn+eNG+aKN5UqdKV4s7lR1MtbiRJXCrHKsAtYqg6UD9hU3CmK9F+1Yo60jrubC92vM4NicOPMj0ItP92FNVfD3JElSoaYpdZSUHxG0XTjdqYQEvuvWuZGb2JDIEqYAxQanPYXqtJuOe3khbcRfSTB+gANPXPO11J1Jz3Zf6DrljrPP0georHXbBFHtaphca1OZ+2fMHaz8fZX5S4Fnf6T3zZ3LQJzsdehuKUyZ6Un9I\/kwjrXOC+BBZ7lzQiK5F67JSm38U1ebUtOriiGhEVy8Ezyk4c4+3LjQaJjyaoi1Va00LZtV3TK6qCLNi+v8yYG7Ozh6sePHwBLL66ROb509Hrcn8ceR7bsYRBVNI5TBJ2Qq0KleXoz23LfN9VesMVe826QpRyVwW3+xuQNWcDvpMq6xggXWU2WQtxA7dqmq0LYBX8PA8EN\/AJ0KBt+x6Oo\/WnI7HWrUNwkQ4Gkb6PzFQTpwEAm9NgtAfplALrIF7LFokB2lCJSCPsjL1R5cNgU0ovY336NBgysIoZfFA12MBXQZBISkSZBVcV844HDoTLMQRlLsrUCf29Qv6P\/gi4N0KZW5kc3RyZWFtCmVuZG9iagoyOSAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggNTQ3ID4+CnN0cmVhbQp4nJVUTW+cMBS88yvecXNxbGxjyLGrHnprKtSqRwdM1ynYG9sk2r\/ZKv+nZr+kVcquERIYJGbee\/NmXuARXoAwRAQ9PPJKAC8pKjgjIIrjwSn4AQbu155A4wHvL9\/EfzHK2eF9OlTxzikWIHCFikKQrBngUw388MfxUQ9wXzcMCNQdrOAO6mf4XO9LmYErKo7yQiSgrWWvO+uMlldwCeOIlWIJrlNet8oEfwU1gmFW8AWoD\/DTjjDIHci+t29gRwd+I502v8B2oE1sZZBBWwNvOmzgLrs9qhKjshBwizxbGWtk1+ley6BaCBvtWthKF7TyIE0LvR50iCXNd5xXDFFc8hNpyhzn+osneLbahL1u2Y0miwKxhCZhNUj3W4WJbz9AGzbKQaeNNI2WPTR22Epz6niqYZLgPBb\/DupVuV0bFUqZPc8RTpr90+i1Ud7DdnRb6yP\/0y7ST0sw1RqrjMPxwY3NNBwfX\/bf5qWg0bMVE+caEqRQpukjdQt\/vgxb64I0YR6fVRQJSukC\/CRjU5GaE1+dfpXN7or\/KEacxMMC0GshQeliuPXG6iaKOS3SOuo2Dsr5v2BsmD6jM1n2QT4sEME4P5MlrHaSUXI6RVEC2nflBhvd9+0UdA+wu8im+f3PS4Lyskpny1a3gu4ym1IWCZeJCXQZdEm2+49T4LiOKbHAY0ympFV2sT8fBHk\/7hG6FgM4urMqyIlzmQUe4R+blwYzCmVuZHN0cmVhbQplbmRvYmoKMTggMCBvYmoKWy9JQ0NCYXNlZCAzMCAwIFIKXQoKZW5kb2JqCjE5IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUxIC9CYXNlRm9udCAvTExWQ1lEK0FkZWxsZVNhbnMtUmVndWxhciAvRm9udERlc2NyaXB0b3IgMzEgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyMTQgXQo+PgplbmRvYmoKMjAgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHlwZTEgL0Jhc2VGb250IC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZvbnREZXNjcmlwdG9yIDMyIDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMjEzIC9XaWR0aHMgWzI1MCAwIDAgMCAwIDAgMCAwIDI4NyAyODcgNTMzIDAgMjIzIDIyNCAyMjMgMCA1MzMgNTMzIDUzMyA1MzMgNTMzIDUzMyAwIDAgNTMzIDUzMyAyMjMgMjIzIDAgMCAwIDQ3MSAwIDczMSA2MjkgNjcwIDAgMCA1ODYgMCA3NjIgMzI0IDAgMCA1ODMgOTE5IDc2MCA3MzAgNTg3IDcyMCA2NTUgNTUzIDYzMCA3MjcgNzAxIDk1MSAwIDYzOSAwIDAgMCAwIDAgMCAwIDU0MSA1OTMgNTE4IDU5MCA1MzAgMzIxIDU4OSA1ODEgMjYxIDI0OCA1NDAgMjU4IDg3OCA1ODcgNTQ1IDU4OSA1ODkgMzY4IDQ2MiAzNDAgNTgwIDU0MCA4NTUgNTY4IDU0MCA0NTQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMzY3IDM2NyAwIDIzMyBdCj4+CmVuZG9iagoyMSAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0FHS1hKRStBZGVsbGVTYW5zLVNlbWlCb2xkIC9Gb250RGVzY3JpcHRvciAzMyAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMzIgL0xhc3RDaGFyIDEyMSAvV2lkdGhzIFsxOTggMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyNDQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDI0NCAwIDAgMCAwIDUyNCAwIDY5NiAwIDY5MyA3MjYgNTc4IDU1MCAwIDczMCAyOTEgNTExIDAgNTU4IDkwNCA3NDUgNzYwIDYxOCAwIDYzOSA1OTkgNTcxIDcxMSAwIDkxOSA2MzUgNTgyIDAgMCAwIDAgMCAwIDAgNTUwIDU4NiA1NDEgNTgzIDU0NyAzNDIgNTU1IDU4MyAyNTcgMjU1IDU0NCAyNTcgODYxIDU4MyA1ODIgNTg1IDAgMzc2IDQ5MyAzOTIgNTgwIDUxNyA3ODEgNTA4IDUwMiBdCj4+CmVuZG9iagoyMiAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0lQRUpKRytBZGVsbGVTYW5zLVRoaW4gL0ZvbnREZXNjcmlwdG9yIDM0IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgODkgL1dpZHRocyBbMjQyIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyMDAgMCAyMDkgMzM0IDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCA2MzcgMCA3MTYgMCA1NzAgNTQzIDAgMCAyNzIgMCAwIDAgODg1IDc0NSAwIDYxMiAwIDYzNyA1NzggNTMyIDAgNjE0IDAgNjA3IDUzOCBdCj4+CmVuZG9iagoyMyAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UcnVlVHlwZSAvQmFzZUZvbnQgL1FRVEFRQStUaW1lcy1Sb21hbiAvRm9udERlc2NyaXB0b3IgMzUgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyNTAgXQo+PgplbmRvYmoKMjQgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHJ1ZVR5cGUgL0Jhc2VGb250IC9TUUtVRVQrU3ltYm9sIC9Gb250RGVzY3JpcHRvciAzNiAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMTY1IC9MYXN0Q2hhciAxNjUgL1dpZHRocyBbNDYwIF0KPj4KZW5kb2JqCjI1IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1RydWVUeXBlIC9CYXNlRm9udCAvSkZSWFFEK0FyaWFsTVQgL0ZvbnREZXNjcmlwdG9yIDM3IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMzIgL1dpZHRocyBbMjc4IF0KPj4KZW5kb2JqCjI3IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUwIC9FbmNvZGluZyAvSWRlbnRpdHktSCAvRGVzY2VuZGFudEZvbnRzIFszOCAwIFIKXQovQmFzZUZvbnQgL0pPVk9WVStNUy1NaW5jaG8gL1RvVW5pY29kZSAzOSAwIFIKPj4KZW5kb2JqCjMwIDAgb2JqCjw8L0xlbmd0aCA0MCAwIFIKL04gMyAvQWx0ZXJuYXRlIC9EZXZpY2VSR0IgL0ZpbHRlciAvRmxhdGVEZWNvZGUgPj5zdHJlYW0KeAGdlndUU9kWh8+9N73QEiIgJfQaegkg0jtIFQRRiUmAUAKGhCZ2RAVGFBEpVmRUwAFHhyJjRRQLg4Ji1wnyEFDGwVFEReXdjGsJ7601896a\/cdZ39nnt9fZZ+9917oAUPyCBMJ0WAGANKFYFO7rwVwSE8vE9wIYEAEOWAHA4WZmBEf4RALU\/L09mZmoSMaz9u4ugGS72yy\/UCZz1v9\/kSI3QyQGAApF1TY8fiYX5QKUU7PFGTL\/BMr0lSkyhjEyFqEJoqwi48SvbPan5iu7yZiXJuShGlnOGbw0noy7UN6aJeGjjAShXJgl4GejfAdlvVRJmgDl9yjT0\/icTAAwFJlfzOcmoWyJMkUUGe6J8gIACJTEObxyDov5OWieAHimZ+SKBIlJYqYR15hp5ejIZvrxs1P5YjErlMNN4Yh4TM\/0tAyOMBeAr2+WRQElWW2ZaJHtrRzt7VnW5mj5v9nfHn5T\/T3IevtV8Sbsz55BjJ5Z32zsrC+9FgD2JFqbHbO+lVUAtG0GQOXhrE\/vIADyBQC03pzzHoZsXpLE4gwnC4vs7GxzAZ9rLivoN\/ufgm\/Kv4Y595nL7vtWO6YXP4EjSRUzZUXlpqemS0TMzAwOl89k\/fcQ\/+PAOWnNycMsnJ\/AF\/GF6FVR6JQJhIlou4U8gViQLmQKhH\/V4X8YNicHGX6daxRodV8AfYU5ULhJB8hvPQBDIwMkbj96An3rWxAxCsi+vGitka9zjzJ6\/uf6Hwtcim7hTEEiU+b2DI9kciWiLBmj34RswQISkAd0oAo0gS4wAixgDRyAM3AD3iAAhIBIEAOWAy5IAmlABLJBPtgACkEx2AF2g2pwANSBetAEToI2cAZcBFfADXALDIBHQAqGwUswAd6BaQiC8BAVokGqkBakD5lC1hAbWgh5Q0FQOBQDxUOJkBCSQPnQJqgYKoOqoUNQPfQjdBq6CF2D+qAH0CA0Bv0BfYQRmALTYQ3YALaA2bA7HAhHwsvgRHgVnAcXwNvhSrgWPg63whfhG\/AALIVfwpMIQMgIA9FGWAgb8URCkFgkAREha5EipAKpRZqQDqQbuY1IkXHkAwaHoWGYGBbGGeOHWYzhYlZh1mJKMNWYY5hWTBfmNmYQM4H5gqVi1bGmWCesP3YJNhGbjS3EVmCPYFuwl7ED2GHsOxwOx8AZ4hxwfrgYXDJuNa4Etw\/XjLuA68MN4SbxeLwq3hTvgg\/Bc\/BifCG+Cn8cfx7fjx\/GvyeQCVoEa4IPIZYgJGwkVBAaCOcI\/YQRwjRRgahPdCKGEHnEXGIpsY7YQbxJHCZOkxRJhiQXUiQpmbSBVElqIl0mPSa9IZPJOmRHchhZQF5PriSfIF8lD5I\/UJQoJhRPShxFQtlOOUq5QHlAeUOlUg2obtRYqpi6nVpPvUR9Sn0vR5Mzl\/OX48mtk6uRa5Xrl3slT5TXl3eXXy6fJ18hf0r+pvy4AlHBQMFTgaOwVqFG4bTCPYVJRZqilWKIYppiiWKD4jXFUSW8koGStxJPqUDpsNIlpSEaQtOledK4tE20Otpl2jAdRzek+9OT6cX0H+i99AllJWVb5SjlHOUa5bPKUgbCMGD4M1IZpYyTjLuMj\/M05rnP48\/bNq9pXv+8KZX5Km4qfJUilWaVAZWPqkxVb9UU1Z2qbapP1DBqJmphatlq+9Uuq43Pp893ns+dXzT\/5PyH6rC6iXq4+mr1w+o96pMamhq+GhkaVRqXNMY1GZpumsma5ZrnNMe0aFoLtQRa5VrntV4wlZnuzFRmJbOLOaGtru2nLdE+pN2rPa1jqLNYZ6NOs84TXZIuWzdBt1y3U3dCT0svWC9fr1HvoT5Rn62fpL9Hv1t\/ysDQINpgi0GbwaihiqG\/YZ5ho+FjI6qRq9Eqo1qjO8Y4Y7ZxivE+41smsImdSZJJjclNU9jU3lRgus+0zwxr5mgmNKs1u8eisNxZWaxG1qA5wzzIfKN5m\/krCz2LWIudFt0WXyztLFMt6ywfWSlZBVhttOqw+sPaxJprXWN9x4Zq42Ozzqbd5rWtqS3fdr\/tfTuaXbDdFrtOu8\/2DvYi+yb7MQc9h3iHvQ732HR2KLuEfdUR6+jhuM7xjOMHJ3snsdNJp9+dWc4pzg3OowsMF\/AX1C0YctFx4bgccpEuZC6MX3hwodRV25XjWuv6zE3Xjed2xG3E3dg92f24+ysPSw+RR4vHlKeT5xrPC16Il69XkVevt5L3Yu9q76c+Oj6JPo0+E752vqt9L\/hh\/QL9dvrd89fw5\/rX+08EOASsCegKpARGBFYHPgsyCRIFdQTDwQHBu4IfL9JfJFzUFgJC\/EN2hTwJNQxdFfpzGC4sNKwm7Hm4VXh+eHcELWJFREPEu0iPyNLIR4uNFksWd0bJR8VF1UdNRXtFl0VLl1gsWbPkRoxajCCmPRYfGxV7JHZyqffS3UuH4+ziCuPuLjNclrPs2nK15anLz66QX8FZcSoeGx8d3xD\/iRPCqeVMrvRfuXflBNeTu4f7kufGK+eN8V34ZfyRBJeEsoTRRJfEXYljSa5JFUnjAk9BteB1sl\/ygeSplJCUoykzqdGpzWmEtPi000IlYYqwK10zPSe9L8M0ozBDuspp1e5VE6JA0ZFMKHNZZruYjv5M9UiMJJslg1kLs2qy3mdHZZ\/KUcwR5vTkmuRuyx3J88n7fjVmNXd1Z752\/ob8wTXuaw6thdauXNu5Tnddwbrh9b7rj20gbUjZ8MtGy41lG99uit7UUaBRsL5gaLPv5sZCuUJR4b0tzlsObMVsFWzt3WazrWrblyJe0fViy+KK4k8l3JLr31l9V\/ndzPaE7b2l9qX7d+B2CHfc3em681iZYlle2dCu4F2t5czyovK3u1fsvlZhW3FgD2mPZI+0MqiyvUqvakfVp+qk6oEaj5rmvep7t+2d2sfb17\/fbX\/TAY0DxQc+HhQcvH\/I91BrrUFtxWHc4azDz+ui6rq\/Z39ff0TtSPGRz0eFR6XHwo911TvU1zeoN5Q2wo2SxrHjccdv\/eD1Q3sTq+lQM6O5+AQ4ITnx4sf4H++eDDzZeYp9qukn\/Z\/2ttBailqh1tzWibakNml7THvf6YDTnR3OHS0\/m\/989Iz2mZqzymdLz5HOFZybOZ93fvJCxoXxi4kXhzpXdD66tOTSna6wrt7LgZevXvG5cqnbvfv8VZerZ645XTt9nX297Yb9jdYeu56WX+x+aem172296XCz\/ZbjrY6+BX3n+l37L972un3ljv+dGwOLBvruLr57\/17cPel93v3RB6kPXj\/Mejj9aP1j7OOiJwpPKp6qP6391fjXZqm99Oyg12DPs4hnj4a4Qy\/\/lfmvT8MFz6nPK0a0RupHrUfPjPmM3Xqx9MXwy4yX0+OFvyn+tveV0auffnf7vWdiycTwa9HrmT9K3qi+OfrW9m3nZOjk03dp76anit6rvj\/2gf2h+2P0x5Hp7E\/4T5WfjT93fAn88ngmbWbm3\/eE8\/sKZW5kc3RyZWFtCmVuZG9iagozMSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0xMVkNZRCtBZGVsbGVTYW5zLVJlZ3VsYXIgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE4MiAtMzIzIDExOTggMTA5OCBdCi9JdGFsaWNBbmdsZSAwIC9Bc2NlbnQgODgwIC9EZXNjZW50IC0zNzAgL0NhcEhlaWdodCA3MzcgL1N0ZW1WIDk0IC9YSGVpZ2h0IDUyNiAvU3RlbUggNzYgL0F2Z1dpZHRoIDU3MCAvTWF4V2lkdGggMTM4MCAvRm9udEZpbGUzIDQxIDAgUgo+PgplbmRvYmoKMzIgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE3NCAtMzA4IDEwMzUgOTQ3IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA2NjggL0Rlc2NlbnQgLTMzMiAvQ2FwSGVpZ2h0IDY3NyAvU3RlbVYgNTYgL0xlYWRpbmcgMjAwIC9YSGVpZ2h0IDQ3OSAvU3RlbUggNDMgL0F2Z1dpZHRoIDUwMCAvTWF4V2lkdGggMTIwOSAvRm9udEZpbGUzIDQyIDAgUgo+PgplbmRvYmoKMzMgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9BR0tYSkUrQWRlbGxlU2Fucy1TZW1pQm9sZCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTg2IC0zMjMgMTIyNyAxMTEzIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgMTE1IC9YSGVpZ2h0IDUyOSAvU3RlbUggMTAyIC9BdmdXaWR0aCA1NzAgL01heFdpZHRoIDE0MTMgL0ZvbnRGaWxlMyA0MyAwIFIKPj4KZW5kb2JqCjM0IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvSVBFSkpHK0FkZWxsZVNhbnMtVGhpbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTc1IC0zMjIgMTE0NyAxMDk0IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgNDkgL1hIZWlnaHQgNTIwIC9TdGVtSCA0NCAvQXZnV2lkdGggNTcwIC9NYXhXaWR0aCAxMzIyIC9Gb250RmlsZTMgNDQgMCBSCj4+CmVuZG9iagozNSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL1FRVEFRQStUaW1lcy1Sb21hbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMjAzIC00MjggMTcwMCAxMjcyIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA3NTAgL0Rlc2NlbnQgLTI1MCAvQ2FwSGVpZ2h0IDY3NiAvU3RlbVYgMTAyIC9YSGVpZ2h0IDQ2MSAvU3RlbUggNDQgL01heFdpZHRoIDE3MjEgL0ZvbnRGaWxlMiA0NSAwIFIKPj4KZW5kb2JqCjM2IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvU1FLVUVUK1N5bWJvbCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTY3IC0yOTkgMTA5NCA4MjcgXQovSXRhbGljQW5nbGUgMCAvQXNjZW50IDcwMSAvRGVzY2VudCAtMjk5IC9DYXBIZWlnaHQgNjIzIC9TdGVtViAxMDMgL1hIZWlnaHQgNDY3IC9TdGVtSCAzOCAvQXZnV2lkdGggNTcyIC9NYXhXaWR0aCAxMDQyIC9Gb250RmlsZTIgNDYgMCBSCj4+CmVuZG9iagozNyAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0pGUlhRRCtBcmlhbE1UIC9GbGFncyAzMiAvR</mes:base64EncodedContent><mes:contentType>contentType</mes:contentType><mes:documentName>names</mes:documentName>
        </mes:CreateEnrollmentDocumentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6fc9718f-f69d-46f7-9a41-dffda9a7c22f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="9c7d00ba-2f31-4166-b13a-3d560078b5a2" name="Not SOAP Fault"/><con:assertion type="SOAP Response" name="SOAP Response1" id="f8e27ea4-14cd-48d9-9451-c380987a6c7c"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="b0b879b3-dea4-41e2-b30c-784b8f27fcc1"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:commandStatus[1]/text()")
def documentId = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:documentId[1]/text()" )

assert commandStatus.getData() == '1'
assert documentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateEnrollmentDocumentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="797127d4-7df9-402a-8e12-f400e09f2299" name="CaptureDraft_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureDraft</con:operation><con:request name="CaptureDraft_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="7891d1d9-c5e5-4bd1-ad2d-b1157d94a5e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CaptureDraftRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:recurringType>MONTHLY</mes:recurringType>
                <mes:recurringStartDate>
                    <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
                </mes:recurringStartDate>
                <mes:recurringAmount1>10</mes:recurringAmount1>
                <mes:recurringDay1>10</mes:recurringDay1>
                <mes:recurringAmount2>12</mes:recurringAmount2>
                <mes:recurringDay2>10</mes:recurringDay2>
                <mes:lumpSumOnly>false</mes:lumpSumOnly>
            </mes:CaptureDraftRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2dbf5baf-25d6-4d0e-8c11-e30c4e4feda7" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="f2e5c6f8-d1f1-4c53-bb17-fcc353a37301" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="42f13961-d007-47da-80f9-9fcc62c0334c" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureDraftResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureDraftRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="b03c28c6-6333-4c58-962d-7cfa1b31d1ad" name="CaptureDraft_WFB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureDraft</con:operation><con:request name="CaptureDraft_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="7891d1d9-c5e5-4bd1-ad2d-b1157d94a5e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CaptureDraftRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:recurringType>MONTHLY</mes:recurringType>
                <mes:recurringStartDate>
                    <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
                </mes:recurringStartDate>
                <mes:recurringAmount1>10</mes:recurringAmount1>
                <mes:recurringDay1>10</mes:recurringDay1>
                <mes:recurringAmount2>12</mes:recurringAmount2>
                <mes:recurringDay2>10</mes:recurringDay2>
                <mes:lumpSumOnly>false</mes:lumpSumOnly>
            </mes:CaptureDraftRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2dbf5baf-25d6-4d0e-8c11-e30c4e4feda7" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="f2e5c6f8-d1f1-4c53-bb17-fcc353a37301" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="59cff742-02cd-4a2b-a6e3-1f577a455953"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureDraftResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureDraftRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="e790e173-4360-41e0-a02b-bf20dcecaefc" name="CaptureDraft_BOI"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureDraft</con:operation><con:request name="CaptureDraft_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="7891d1d9-c5e5-4bd1-ad2d-b1157d94a5e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CaptureDraftRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:recurringType>MONTHLY</mes:recurringType>
                <mes:recurringStartDate>
                    <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
                </mes:recurringStartDate>
                <mes:recurringAmount1>10</mes:recurringAmount1>
                <mes:recurringDay1>10</mes:recurringDay1>
                <mes:recurringAmount2>12</mes:recurringAmount2>
                <mes:recurringDay2>10</mes:recurringDay2>
                <mes:lumpSumOnly>false</mes:lumpSumOnly>
            </mes:CaptureDraftRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2dbf5baf-25d6-4d0e-8c11-e30c4e4feda7" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="f2e5c6f8-d1f1-4c53-bb17-fcc353a37301" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="ee4f26a4-ba23-4dfe-9cdf-b284c5864799"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureDraftResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureDraftRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CaptureEnrollmentAddress_TPB" id="8cc7f480-a7ae-46e7-9b22-8a1860e83554"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureEnrollmentAddress</con:operation><con:request name="CaptureEnrollmentAddress_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="8109068b-3704-44fa-9500-8b98977bdb7f" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <CaptureEnrollmentAddressRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</clientId>
            <subscriberId>${#Project#subscriberId}</subscriberId>
            <address1>Finxera Headquarters</address1>
            <address2>1900 South Norfolk Street</address2>
            <city>San Mateo</city>
            <state>CA</state>
            <zip>94403</zip>
        </CaptureEnrollmentAddressRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="69ff674e-66f1-4a51-a492-4f025474ffa1"/><con:assertion type="Simple Contains" id="2bba8473-788a-4449-88ff-35b863cc3afa" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="848fe002-b6b3-4635-9a13-dd18d2625901" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureEnrollmentAddressResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureEnrollmentAddressRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CaptureEnrollmentAddress_WFB" id="192d6158-65aa-47e2-a7f1-b809e74e85d7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureEnrollmentAddress</con:operation><con:request name="CaptureEnrollmentAddress_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="8109068b-3704-44fa-9500-8b98977bdb7f" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <CaptureEnrollmentAddressRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</clientId>
            <subscriberId>${#Project#subscriberId}</subscriberId>
            <address1>Finxera Headquarters</address1>
            <address2>1900 South Norfolk Street</address2>
            <city>Jupiter</city>
            <state>FL</state>
            <zip>94403</zip>
        </CaptureEnrollmentAddressRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="69ff674e-66f1-4a51-a492-4f025474ffa1"/><con:assertion type="Simple Contains" id="2bba8473-788a-4449-88ff-35b863cc3afa" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="b62a96b6-9ca1-4d93-b4ec-5e94e3e0c3a0"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureEnrollmentAddressResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureEnrollmentAddressRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CaptureEnrollmentAddress_BOI" id="4b59bd9f-addb-444c-aab0-0b826a7d4d58"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureEnrollmentAddress</con:operation><con:request name="CaptureEnrollmentAddress_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="8109068b-3704-44fa-9500-8b98977bdb7f" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <CaptureEnrollmentAddressRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</clientId>
            <subscriberId>${#Project#subscriberId}</subscriberId>
            <address1>Finxera Headquarters</address1>
            <address2>1900 South Norfolk Street</address2>
            <city>Clio</city>
            <state>AL</state>
            <zip>94403</zip>
        </CaptureEnrollmentAddressRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="69ff674e-66f1-4a51-a492-4f025474ffa1"/><con:assertion type="Simple Contains" id="2bba8473-788a-4449-88ff-35b863cc3afa" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="e96fdd44-aa00-4fe9-a783-b2c80f20ea25"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureEnrollmentAddressResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureEnrollmentAddressRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="AdminUpdateActivateEnrollment_TPB" id="40af8e29-477e-49ec-afbb-cf80bded76fe"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>AdminUpdateActivateEnrollment</con:operation><con:request name="AdminUpdateActivateEnrollment_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="9d950928-5c62-4063-883f-23631a056978" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <AdminUpdateActivateEnrollmentRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <enrollmentId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:enrollmentId[1]}</enrollmentId>
            <actionType>ACTIVATE</actionType>
        </AdminUpdateActivateEnrollmentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e8b2f94d-8e2b-4058-b7bc-8534d58f1dde"/><con:assertion type="Simple Contains" id="5e0bb77c-e4b1-40d2-b982-891114e6df45" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c0ebd301-0760-4f5b-ac30-d2b01dccc36b" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:commandStatus[1]/text()");

def enrollmentId = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:enrollmentId[1]/text()");

def cipStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:cipStatuses[1]/text()");

def ofacStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:ofacStatuses[1]/text()");

def spaStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:spaStatuses[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentId != null
assert cipStatuses.getData() == 'IGNORED'
assert ofacStatuses.getData() == 'IGNORED'
assert spaStatuses.getData() == 'PENDING'
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateActivateEnrollmentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="AdminUpdateActivateEnrollment_WFB" id="e50cddcc-0d02-4b47-8bd0-0534d3c97594"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>AdminUpdateActivateEnrollment</con:operation><con:request name="AdminUpdateActivateEnrollment_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="9d950928-5c62-4063-883f-23631a056978" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <AdminUpdateActivateEnrollmentRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <enrollmentId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:enrollmentId[1]}</enrollmentId>
            <actionType>ACTIVATE</actionType>
        </AdminUpdateActivateEnrollmentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e8b2f94d-8e2b-4058-b7bc-8534d58f1dde"/><con:assertion type="Simple Contains" id="5e0bb77c-e4b1-40d2-b982-891114e6df45" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="25358eb2-f5de-4ba4-90aa-375a9a2452a9"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:commandStatus[1]/text()");

def enrollmentId = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:enrollmentId[1]/text()");

def cipStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:cipStatuses[1]/text()");

def ofacStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:ofacStatuses[1]/text()");

def spaStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:spaStatuses[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentId != null
assert cipStatuses.getData() == 'IGNORED'
assert ofacStatuses.getData() == 'IGNORED'
assert spaStatuses.getData() == 'PENDING'
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateActivateEnrollmentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="AdminUpdateActivateEnrollment_BOI" id="e9dfb6e9-faf3-4ed5-9bc5-789bc1f77b52"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>AdminUpdateActivateEnrollment</con:operation><con:request name="AdminUpdateActivateEnrollment_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="9d950928-5c62-4063-883f-23631a056978" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <AdminUpdateActivateEnrollmentRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <enrollmentId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:enrollmentId[1]}</enrollmentId>
            <actionType>ACTIVATE</actionType>
        </AdminUpdateActivateEnrollmentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e8b2f94d-8e2b-4058-b7bc-8534d58f1dde"/><con:assertion type="Simple Contains" id="5e0bb77c-e4b1-40d2-b982-891114e6df45" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="bcb71e61-6bde-41b4-9dd1-e2fd61c5576f"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:commandStatus[1]/text()");

def enrollmentId = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:enrollmentId[1]/text()");

def cipStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:cipStatuses[1]/text()");

def ofacStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:ofacStatuses[1]/text()");

def spaStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:spaStatuses[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentId != null
assert cipStatuses.getData() == 'IGNORED'
assert ofacStatuses.getData() == 'IGNORED'
assert spaStatuses.getData() == 'PENDING'
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateActivateEnrollmentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="a9b92659-b5ed-45dd-929e-f48e1a711a28" name="GetClient_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClient</con:operation><con:request name="GetClient_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="97f62804-71d1-4e83-828f-866e9e5cbccb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientRequest>
            <!--You may enter the following 5 items in any order-->
            <!--Optional:-->
            <mes:status xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
                <!--Optional:-->
                <!--Optional:-->
                <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
                <!--Optional:-->
                <mes:returnSPAAImage>false</mes:returnSPAAImage>
            </mes:GetClientRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a3523fa7-7eec-4e9d-b082-ef80a12b22d9" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="40a18b0b-3325-4e7e-b7bb-4086ca79a2ec" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="e8b33528-2c49-46a0-b6bb-6c1bd78da2d3" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:GetClientResponse[1]/*:commandStatus[1]/text()");
def enrollmentStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");

def cipStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:cipStatuses[1]/text()");
def ofacStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:ofacStatuses[1]/text()");
def spaStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:spaStatuses[1]/text()");
def firstName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:firstName[1]/text()");
def lastName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:lastName[1]/text()");
def nextDraftAmount = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:nextDraftAmount[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentStatuses.getData() == 'ACTIVE';
assert cipStatuses.getData() == 'IGNORED';
assert ofacStatuses.getData() == 'IGNORED';
assert spaStatuses.getData() == 'PENDING';
assert firstName.getData() == 'CFT_FDR_TPB';
assert lastName.getData() == 'Automation';
assert nextDraftAmount.getData() == '100.0';
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="341b1e66-0398-405a-8bd7-f717b348ce46" name="GetClient_WFB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClient</con:operation><con:request name="GetClient_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="97f62804-71d1-4e83-828f-866e9e5cbccb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientRequest>
            <!--You may enter the following 5 items in any order-->
            <!--Optional:-->
            <mes:status xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
                <!--Optional:-->
                <!--Optional:-->
                <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
                <!--Optional:-->
                <mes:returnSPAAImage>false</mes:returnSPAAImage>
            </mes:GetClientRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a3523fa7-7eec-4e9d-b082-ef80a12b22d9" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="40a18b0b-3325-4e7e-b7bb-4086ca79a2ec" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="fe05b188-f222-494f-9507-7e57e06e8011"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:GetClientResponse[1]/*:commandStatus[1]/text()");
def enrollmentStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");

def cipStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:cipStatuses[1]/text()");
def ofacStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:ofacStatuses[1]/text()");
def spaStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:spaStatuses[1]/text()");
def firstName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:firstName[1]/text()");
def lastName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:lastName[1]/text()");
def nextDraftAmount = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:nextDraftAmount[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentStatuses.getData() == 'ACTIVE';
assert cipStatuses.getData() == 'IGNORED';
assert ofacStatuses.getData() == 'IGNORED';
assert spaStatuses.getData() == 'PENDING';
assert firstName.getData() == 'CFT_FDR_WFB';
assert lastName.getData() == 'Automation';
assert nextDraftAmount.getData() == '100.0';
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="bf4accb4-07b7-4230-b70d-46d17387fdb7" name="GetClient_BOI"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClient</con:operation><con:request name="GetClient_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="97f62804-71d1-4e83-828f-866e9e5cbccb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientRequest>
            <!--You may enter the following 5 items in any order-->
            <!--Optional:-->
            <mes:status xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
                <!--Optional:-->
                <!--Optional:-->
                <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
                <!--Optional:-->
                <mes:returnSPAAImage>false</mes:returnSPAAImage>
            </mes:GetClientRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a3523fa7-7eec-4e9d-b082-ef80a12b22d9" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="40a18b0b-3325-4e7e-b7bb-4086ca79a2ec" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="a3f88efe-6bb7-4054-833d-bb37561587f1"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:GetClientResponse[1]/*:commandStatus[1]/text()");
def enrollmentStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");

def cipStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:cipStatuses[1]/text()");
def ofacStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:ofacStatuses[1]/text()");
def spaStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:spaStatuses[1]/text()");
def firstName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:firstName[1]/text()");
def lastName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:lastName[1]/text()");
def nextDraftAmount = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:nextDraftAmount[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentStatuses.getData() == 'ACTIVE';
assert cipStatuses.getData() == 'IGNORED';
assert ofacStatuses.getData() == 'IGNORED';
assert spaStatuses.getData() == 'PENDING';
assert firstName.getData() == 'CFT_FDR_BOI';
assert lastName.getData() == 'Automation';
assert nextDraftAmount.getData() == '100.0';
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="0683104a-0b5f-47aa-a4cd-bebe67a8d2ea" name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="7641f367-b9c0-41e8-87db-1fc810437fc6" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="1e487627-9030-4c1b-a6c6-1dec29ef9de7" name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_WFB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="8e5fde9f-a696-4737-a6f7-b098fb4cbe9f"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion1" id="5fdeb459-ccf4-48eb-9a18-ac81105173d5"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="5d8e6739-24c0-4806-8f06-caa89282b18f" name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_BOI"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="5928c7c6-8d76-452e-96db-c743877afa38"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion1" id="8941e0c3-250c-4b19-9652-3ba57c10530a"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="RunJob-NewScheduler" id="5e97f0d9-9f88-4a8e-a937-8074d59709a5"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-NewScheduler";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
int minTimeOut=4;
def maxTimeOut=context.expand('${#Project#jobTimeOutInterval}') as int;

// //def minTimeOut=a.getPropertyValue('minTimeOut') as int;
// //def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;
String jobEnv = context.expand('${#Project#ENV}');


 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	//return(null);
	return 'NO VALID JOB ENVIRONMENT FOUND';
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
	return ""+jobStatus[0]+" | "+jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timeout"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
	return ""+jobStatus[0]+" | "+jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
	return ""+iJobStatus;
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
	return ""+finalJobURL+" | "+all;
}</script></con:config></con:testStep><con:testStep type="request" id="4b4d8744-4840-4721-bf48-5f2e160df2fc" name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="7641f367-b9c0-41e8-87db-1fc810437fc6" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '100.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="69707753-5fef-4712-9349-7f7097b4cfde" name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_WFB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="8e5fde9f-a696-4737-a6f7-b098fb4cbe9f"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '100.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="5077ccbd-a4f7-4d69-aa4a-7e2923a67aa1" name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_BOI"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="5928c7c6-8d76-452e-96db-c743877afa38"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '100.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="80c5a21b-f616-453c-8113-358c6d486e84" name="GetDraftSchedule_CheckDraftInProcess_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftInProcess_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:assertion type="XPath Match" id="6106ae37-dc95-4e16-949d-455b14e12ef0" name="Match content of [ns3:id]"><con:configuration><path>declare namespace ns3='http://nationalpayment.net/ws/schemas/types';
declare namespace ns4='http://nationalpayment.net/ws/schemas/messages';
//ns4:GetDraftScheduleResponse[1]/ns4:draft[1]/ns3:client[1]/ns3:id[1]/text()</path><content>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="31ab35b6-7a07-430a-992e-740910c58a3f" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
def scheduleId = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:scheduleId[1]/text()"); //not null
def type = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:type[1]/text()");  //MONTHLY
def amount = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:amount[1]/text()");   //100.0
def status = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:status[1]/text()");  //INPROCESS


assert scheduleId != null
assert type.getData() == 'MONTHLY';
assert amount.getData() == '100.0';
assert status.getData() == 'INPROCESS';</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="5f7cd2c3-1a53-4e45-913f-ff687bddf399" name="GetDraftSchedule_CheckDraftInProcess_WFB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftInProcess_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="1162b5fa-e7b4-4c14-b4ba-7190d81f284a"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
def scheduleId = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:scheduleId[1]/text()"); //not null
def type = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:type[1]/text()");  //MONTHLY
def amount = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:amount[1]/text()");   //100.0
def status = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:status[1]/text()");  //INPROCESS


assert scheduleId != null
assert type.getData() == 'MONTHLY';
assert amount.getData() == '100.0';
assert status.getData() == 'INPROCESS';</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="ca9eeda8-9c0b-4799-96c5-301ee9289ead" name="GetDraftSchedule_CheckDraftInProcess_BOI"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftInProcess_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="eb64c7af-3eaf-417a-9df6-b2c9e8dcbe81"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
def scheduleId = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:scheduleId[1]/text()"); //not null
def type = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:type[1]/text()");  //MONTHLY
def amount = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:amount[1]/text()");   //100.0
def status = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:status[1]/text()");  //INPROCESS


assert scheduleId != null
assert type.getData() == 'MONTHLY';
assert amount.getData() == '100.0';
assert status.getData() == 'INPROCESS';</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="RunJob-TPBACHOutboundProcessor" id="80bc6ae0-0d69-4844-810b-1ea4b8ea9144"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-TPBACHOutboundProcessor";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

int minTimeOut=4;
def maxTimeOut=context.expand('${#Project#jobTimeOutInterval}') as int;

//def minTimeOut=a.getPropertyValue('minTimeOut') as int;
//def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	//return(null);
	return 'NO VALID JOB ENVIRONMENT FOUND'
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
	return ""+jobStatus[0]+" | "+jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timeout"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
	return ""+jobStatus[0]+" | "+jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
	return ""+iJobStatus;
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
	return ""+finalJobURL+" | "+all;
}</script></con:config></con:testStep><con:testStep type="groovy" name="RunJob-WFBACHOutboundProcessor" id="3902228d-992c-47d3-9136-5078e4be2566"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-WFBACHOutboundProcessor";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

int minTimeOut=4;
def maxTimeOut=context.expand('${#Project#jobTimeOutInterval}') as int;

//def minTimeOut=a.getPropertyValue('minTimeOut') as int;
//def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	//return(null);
	return 'NO VALID JOB ENVIRONMENT FOUND';
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
	return ""+jobStatus[0]+" | "+jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timeout"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
	return ""+jobStatus[0]+" | "+jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
	return ""+iJobStatus;
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
	return ""+finalJobURL+" | "+all;
}</script></con:config></con:testStep><con:testStep type="groovy" name="RunJob-BOIACHOutboundProcessor" id="5540e39f-8f63-407b-add8-4016036a55a6"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-BOIACHOutboundProcessor";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

int minTimeOut=4;
def maxTimeOut=context.expand('${#Project#jobTimeOutInterval}') as int;

//def minTimeOut=a.getPropertyValue('minTimeOut') as int;
//def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	//return(null);
	return 'NO VALID JOB ENVIRONMENT FOUND';
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
	return ""+jobStatus[0]+" | "+jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timeout"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
	return ""+jobStatus[0]+" | "+jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
	return ""+iJobStatus;
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
	return ""+finalJobURL+" | "+all;
}</script></con:config></con:testStep><con:testStep type="request" id="055f6f9d-18b5-4648-8ec8-2eefc659262a" name="GetDraftSchedule_CheckDraftSubmitted_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftSubmitted_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="9af053b7-7eca-4b2d-85c3-2e78acf1e4cd" name="GetDraftSchedule_CheckDraftSubmitted_WFB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftSubmitted_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="fc8a1aee-aecb-405a-8b93-116d62784aec" name="GetDraftSchedule_CheckDraftSubmitted_BOI"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftSubmitted_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="a8c3fcdf-d25f-4d5d-9f79-5cdded36993a" name="GetClientsEnhanced_Current=0_Pending=100_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=100_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="c0dc0034-48e5-41ca-8f7b-f914e02d1a9a" name="GetClientsEnhanced_Current=0_Pending=100_WFB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=100_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="50f8ff3c-314f-47d7-a7e2-a82cda43009e" name="GetClientsEnhanced_Current=0_Pending=100_BOI"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=100_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="RunJob-FundsRealization" id="4117b210-9816-4eaa-86f0-767989e89773"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-FundsRealization";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')
int minTimeOut=4;
def maxTimeOut=context.expand('${#Project#jobTimeOutInterval}') as int;

//def minTimeOut=a.getPropertyValue('minTimeOut') as int;
//def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	//return(null);
	return 'NO VALID JOB ENVIRONMENT FOUND';
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
	return ""+jobStatus[0]+" | "+jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timeout"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
	return ""+jobStatus[0]+" | "+jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
	return ""+iJobStatus;
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
	return ""+finalJobURL+" | "+all;
}</script></con:config></con:testStep><con:testStep type="request" id="0a17c752-46d7-4184-8339-872151f38ee3" name="GetDraftSchedule_CheckDraftCompleted_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftCompleted_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="1532db97-706d-4881-abe5-12b76f69466c" name="GetDraftSchedule_CheckDraftCompleted_WFB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftCompleted_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="19b24d96-8e8d-465c-9624-8244bc719e4a" name="GetDraftSchedule_CheckDraftCompleted_BOI"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftCompleted_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="76d436bf-00ed-4259-8b85-2a17adc4f14a" name="GetClientsEnhanced_Current=100_Pending=100_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=100_Pending=100_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="b89c3f78-8127-4f84-8d98-d250d95fd3ce" name="GetClientsEnhanced_Current=100_Pending=100_WFB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=100_Pending=100_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="20cd096c-9269-457a-95e9-0732c970ff06" name="GetClientsEnhanced_Current=100_Pending=100_BOI"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=100_Pending=100_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="SendResultsEmail" disabled="true" id="a9a6023c-5e36-44fd-ad5e-e25e14aa6700"><con:settings/><con:config><script><![CDATA[import javax.mail.*;
import javax.mail.internet.*;
import java.util.Properties;

public class JavaEmailSender {

	def static log;
   def static context;
   def static testRunner;
 
    private String emailAddressTo = new String();
    private String msgSubject = new String();
    private String msgText = new String();

    final String USER_NAME = "automationqa@finxera.com";   //User name of the Goole(gmail) account
    final String PASSSWORD = "Abcd1234+";  //Password of the Goole(gmail) account
    final String FROM_ADDRESS = "automationqa@finxera.com";  //From addresss
 
    public JavaEmailSender() {
    }

    public static void main(String[] args) {
      JavaEmailSender email = new JavaEmailSender();
     //Sending test email
      def currentDate = new Date().format("yyyy-MM-dd hh:mm");
    	 String msg = createResults(); 
    	 log.info ("*******************"); 
    	 log.info (msg);
    	 def resultStep = testRunner.testCase.getTestStepByName("Results");
resultStep.setPropertyValue("HTML",""+msg);
    	 log.info ("*******************"); 

     String emailRecipients = context.expand('${#Project#email}')
    // emailRecipients += ",raghav@finxera.com";
     log.info ("    >>>>    emailRecipients : "+emailRecipients);
    email.createAndSendEmail(emailRecipients, "Test email subject-"+currentDate,
      "Congratulations !!! \nThis is test email sent by java class.\n"+msg);
    }

    public void createAndSendEmail(String emailAddressTo, String msgSubject, String msgText) {
        this.emailAddressTo = emailAddressTo;
        this.msgSubject = msgSubject;
        this.msgText = msgText;
        sendEmailMessage();
    }
  
    private void sendEmailMessage() {
     
     //Create email sending properties
     Properties props = new Properties();
     props.put("mail.smtp.auth", "true");
     props.put("mail.smtp.starttls.enable", "true");
     props.put("mail.smtp.host", "smtp.gmail.com");
     props.put("mail.smtp.port", "587");
  
    Session session = Session.getInstance(props,
    new javax.mail.Authenticator() {
    protected PasswordAuthentication getPasswordAuthentication() {
    return new PasswordAuthentication(USER_NAME, PASSSWORD);
   }
    });

  try {

     Message message = new MimeMessage(session);
     message.setFrom(new InternetAddress(FROM_ADDRESS)); //Set from address of the email
     message.setContent(msgText,"text/html"); //set content type of the email
    //  message.setContent("<h3>sending html mail check</h3>","text/html" ); 
    message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(emailAddressTo)); //Set email recipient
    message.setRecipients(Message.RecipientType.BCC,InternetAddress.parse("raghav@finxera.com"));
    message.setSubject(msgSubject); //Set email message subject
    Transport.send(message); //Send email message

   System.out.println("sent email successfully!");

  } catch (MessagingException e) {
       throw new RuntimeException(e);
  }
    }

    public void setEmailAddressTo(String emailAddressTo) {
        this.emailAddressTo = emailAddressTo;
    }

    public void setSubject(String subject) {
        this.msgSubject = subject;
    }

    public void setMessageText(String msgText) {
        this.msgText = msgText;
    }

public static String createResults(){
String message1="";
try {
    //Check a project level property to see if the reports should be produced.
    if(context.expand('${#Project#ProduceReports}') == 'Y') 
    //if((testRunner.testCase.testSuite.project.getPropertyValue("ProduceReports")).toLowerCase() == "y")
    {
        //The path and file to persist results
       
		log.info ("  >>  Creating Results");

		 message1 = '<table border="2" style="width:80%">';
 message1 += '<tr>';
 message1 += '<th>Name</th>';
 //message1 += '<th>TimeStamp</th>';
  message1 += '<th>TimeTaken [ms]</th>';
   message1 += '<th>Size [bytes]</th>';
   message1 += '<th>Message</th>';
   message1 += '<th>Result</th>';
 message1 += '</tr>';
             //resultsFile2.write('"Name","TimeStamp","TimeTaken [ms]","Size [bytes]","Message","Result"');
        


def tsResults = testRunner.getResults()
for(i in tsResults){
	String stepName = i.getTestStep().getName();
	if(stepName.contains("Gen name") || stepName.contains("GetCurrentDate") || stepName.contains("Results")){
		continue;
	}
	
	//String stepClass = i.getClass();
	String stepTimeStamp = new Date(i.getTimeStamp());
	String stepTimeTaken = i.getTimeTaken();
	String stepSize = i.getSize();
	
	
	//String stepMessage = i.getMessages();
	String stepMessage = "";
            def msgCount = 0;
            for(message in i.getMessages()) {
                msgCount++;
                if(msgCount < 10) {
                    //resultsFile.append(message + ';\n');
					stepMessage=stepMessage+message+" | ";
                }
            }
	
	String stepResult = i.getStatus();
	if((stepName.toLowerCase().contains("runjob"))){
		if(i.getMessages().toString().toLowerCase().contains("pass")){
			stepResult="OK";
		}else if(i.getMessages().toString().toLowerCase().contains("timeout")){
			stepResult="TimeOut";
		}
		else{
			stepResult="FAILED";
		}
	}

 message1 += '<tr>';
//message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';    
 if(!(stepName.toLowerCase().contains("runjob"))){
    message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';
 }else{
 	 message1 += '<td bgcolor="#F3F781">'+stepName+'</td>';
 }
   // message1 += '<td>'+stepTimeStamp+'</td>';
    message1 += '<td>'+stepTimeTaken+'</td>';
    message1 += '<td  align="center">'+stepSize+'</td>';
    message1 += '<td>'+stepMessage+'</td>';
    if(stepResult.toLowerCase().contains("ok") || stepResult.toLowerCase().contains("pass")){
    message1 += '<td align="center" bgcolor="#00FF00">'+stepResult+'</td>';
    }
    else if(stepResult.toLowerCase().contains("timeout")){
    message1 += '<td align="center" bgcolor="#skyblue">'+stepResult+'</td>';
    }
    else{
    	 message1 += '<td align="center" bgcolor="red">'+stepResult+'</td>';
    }
  message1 += '</tr>';
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
  log.info (message1);
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
	//String resultToLog = stepName+","+stepClass+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	String resultToLog = stepName+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	log.info (resultToLog);
}
message1 += '</table>';
    return message1;
} 
}catch(e) {
    log.error("An error occurred: " + e.toString());
}
}
}
]]></script></con:config></con:testStep><con:testStep type="properties" name="Results" disabled="true" id="c4a431d1-6dd8-4977-80eb-56b3215ec824"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>HTML</con:name><con:value><![CDATA[<h3>Note: This is auto-generated email. Do not reply.</h3><hr><hr><br><table border="2" style="width:80%"><tr><td bgcolor="#ccddff">Environment</td><th bgcolor="#e5eeff" align="left">QA-CFT</th></tr><tr><td bgcolor="#ccddff">Endpoint</td><th bgcolor="#e5eeff" align="left">http://qaws.cftpay.com:8080/wsrv/npn.wsdl</th></tr><tr><td bgcolor="#ccddff">SubscriberId</td><th bgcolor="#e5eeff" align="left">200001</th></tr><tr><td bgcolor="#ccddff">TestCase Executed</td><th bgcolor="#e5eeff" align="left">DraftSuccessScenario</th></tr><tr><td bgcolor="#ccddff">Executed by</td><th bgcolor="#e5eeff" align="left">CI Automation</th></tr></table>;<table border="2" style="width:80%"><tr><th bgcolor="#e5eeff">Name</th><th bgcolor="#e5eeff">TimeTaken [ms]</th><th bgcolor="#e5eeff">Size [bytes]</th><th bgcolor="#e5eeff">Message</th><th bgcolor="#e5eeff">Result</th></tr><tr><td bgcolor="#F7FE2E">UIServerStatus</td><td>1030</td><td  align="center">0</td><td>Script-result: Pass- http://qa.cftpay.com/ : | 200 | </td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F7FE2E">APIServerStatus</td><td>889</td><td  align="center">0</td><td>Script-result: Pass- http://qaws.cftpay.com:8080/wsrv/npn.wsdl : | 405 | </td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F7FE2E">JobServerStatus</td><td>57207</td><td  align="center">0</td><td>Script-result: Fail- http://10.10.200.151:8710//scheduler/stat.go?opt1=0&opt2=0&opt3=0 : | 404 | </td><td align="center" bgcolor="red">FAIL</td></tr><tr><td bgcolor="#F7FE2E">DBServerStatus</td><td>2228</td><td  align="center">0</td><td>Script-result: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server. | 10.10.200.151:3415 | </td><td align="center" bgcolor="red">FAIL</td></tr><tr><td bgcolor="#F5DA81">CreateClient_TPB</td><td>2682</td><td  align="center">968</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateClient_WFB</td><td>1829</td><td  align="center">968</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateClient_BOI</td><td>1938</td><td  align="center">968</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateClientBankAccount_TPB</td><td>989</td><td  align="center">1004</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateClientBankAccount_WFB</td><td>914</td><td  align="center">1004</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateClientBankAccount_BOI</td><td>916</td><td  align="center">1004</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateDraftSchedule_TPB</td><td>1319</td><td  align="center">6051</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateDraftSchedule_WFB</td><td>1194</td><td  align="center">6051</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateDraftSchedule_BOI</td><td>1169</td><td  align="center">6051</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftScheduleList_TPB</td><td>2226</td><td  align="center">14207</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftScheduleList_WFB</td><td>1292</td><td  align="center">14207</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftScheduleList_BOI</td><td>1328</td><td  align="center">14207</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateEnrollmentDocument_TPB</td><td>2311</td><td  align="center">856</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateEnrollmentDocument_WFB</td><td>2311</td><td  align="center">856</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateEnrollmentDocument_BOI</td><td>2290</td><td  align="center">856</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CaptureDraft_TPB</td><td>853</td><td  align="center">792</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CaptureDraft_WFB</td><td>874</td><td  align="center">792</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CaptureDraft_BOI</td><td>885</td><td  align="center">792</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CaptureEnrollmentAddress_TPB</td><td>858</td><td  align="center">904</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CaptureEnrollmentAddress_WFB</td><td>852</td><td  align="center">904</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CaptureEnrollmentAddress_BOI</td><td>861</td><td  align="center">904</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">AdminUpdateActivateEnrollment_TPB</td><td>905</td><td  align="center">1217</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">AdminUpdateActivateEnrollment_WFB</td><td>899</td><td  align="center">1217</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">AdminUpdateActivateEnrollment_BOI</td><td>1204</td><td  align="center">1217</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClient_TPB</td><td>2016</td><td  align="center">39132</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClient_WFB</td><td>1669</td><td  align="center">39130</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClient_BOI</td><td>1732</td><td  align="center">39127</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_TPB</td><td>954</td><td  align="center">5598</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_WFB</td><td>1004</td><td  align="center">5596</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_BOI</td><td>964</td><td  align="center">5593</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F3F781">RunJob-NewScheduler</td><td>10518</td><td  align="center">0</td><td>Script-result: Pass. | http://10.10.200.151:8710/scheduler/stat.go?opt1=1&opt2=jobDetail-scheduleProcessorCftEnhanced&opt3=0 | </td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_TPB</td><td>952</td><td  align="center">5600</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_WFB</td><td>924</td><td  align="center">5598</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_BOI</td><td>950</td><td  align="center">5595</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftSchedule_CheckDraftInProcess_TPB</td><td>911</td><td  align="center">5901</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftSchedule_CheckDraftInProcess_WFB</td><td>928</td><td  align="center">5901</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftSchedule_CheckDraftInProcess_BOI</td><td>930</td><td  align="center">5901</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F3F781">RunJob-TPBACHOutboundProcessor</td><td>10597</td><td  align="center">0</td><td>Script-result: Pass. | http://10.10.200.151:8710/scheduler/stat.go?opt1=1&opt2=jobDetail-TPBACHOutboundProcessor&opt3=0 | </td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F3F781">RunJob-WFBACHOutboundProcessor</td><td>10160</td><td  align="center">0</td><td>Script-result: Pass. | http://10.10.200.151:8710/scheduler/stat.go?opt1=1&opt2=jobDetail-WFBACHOutboundProcessor&opt3=0 | </td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F3F781">RunJob-BOIACHOutboundProcessor</td><td>10168</td><td  align="center">0</td><td>Script-result: Pass. | http://10.10.200.151:8710/scheduler/stat.go?opt1=1&opt2=jobDetail-BOIACHOutboundProcessor&opt3=0 | </td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftSchedule_CheckDraftSubmitted_TPB</td><td>1064</td><td  align="center">5907</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftSchedule_CheckDraftSubmitted_WFB</td><td>905</td><td  align="center">5907</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftSchedule_CheckDraftSubmitted_BOI</td><td>886</td><td  align="center">5907</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=0_Pending=100_TPB</td><td>926</td><td  align="center">5600</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=0_Pending=100_WFB</td><td>1087</td><td  align="center">5598</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=0_Pending=100_BOI</td><td>927</td><td  align="center">5595</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F3F781">RunJob-FundsRealization</td><td>10581</td><td  align="center">0</td><td>Script-result: Pass. | http://10.10.200.151:8710/scheduler/stat.go;jsessionid=87F63AF82F8FC6C2D579A403F7A79F83?opt1=1&opt2=jobDetail-fundsRealizationProcessorEnhanced&opt3=0 | </td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftSchedule_CheckDraftCompleted_TPB</td><td>868</td><td  align="center">5907</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftSchedule_CheckDraftCompleted_WFB</td><td>869</td><td  align="center">5907</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftSchedule_CheckDraftCompleted_BOI</td><td>898</td><td  align="center">5907</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=100_Pending=100_TPB</td><td>910</td><td  align="center">5602</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=100_Pending=100_WFB</td><td>932</td><td  align="center">5600</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=100_Pending=100_BOI</td><td>913</td><td  align="center">5597</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr></table><br><hr>End Of Report<hr><hr><br>]]></con:value></con:property></con:properties></con:config></con:testStep><con:tearDownScript><![CDATA[import javax.mail.*;
import javax.mail.internet.*;
import java.util.Properties;

public class JavaEmailSender {

   def static log;
   def static context;
   def static testRunner;
   def static testStatus;
   
    private String emailAddressTo = new String();
    private String msgSubject = new String();
    private String msgText = new String();

    final String USER_NAME = "automationqa@finxera.com";   //User name of the Goole(gmail) account
    final String PASSSWORD = "Abcd1234+";  //Password of the Goole(gmail) account
    final String FROM_ADDRESS = "automationqa@finxera.com";  //From addresss
 
    public JavaEmailSender() {
    }

    public static void main(String[] args) {

    	testStatus = checkTestStatus();
    	log.info ("  >>  testStatus : "+testStatus);
	boolean emailOnPass=context.expand('${#Project#sendEmailOnPass}').toLowerCase().contains("y");
	log.info ("  >>  emailOnPass : "+emailOnPass);
	if(emailOnPass || (emailOnPass||testStatus.toLowerCase().contains("fail")))
	 //if(context.expand('${#Project#sendEmailOnPass}').toString().toLowerCase().contains('n'))
    	  	{
    	  	log.warn ("=========================");
		log.warn ("  >>  Email will be sent"); 
    	 
      JavaEmailSender email = new JavaEmailSender();
     //Sending test email
      def currentDate = new Date().format("dd-MM-yyyy hh:mm");
    	 String msg = createResults(); 
    	 log.info ("*******************"); 
    	 log.info (msg);
    	 def resultStep = testRunner.testCase.getTestStepByName("Results");
	resultStep.setPropertyValue("HTML",""+msg);
    	 log.info ("*******************"); 

     String emailRecipients = context.expand('${#Project#email}')
    // emailRecipients += ",raghav@finxera.com";
     log.info ("    >>>>    emailRecipients : "+emailRecipients);
    email.createAndSendEmail(emailRecipients, "CI Automation Report - "+testStatus+" | "+currentDate,
      ""+msg);
    	  	}else{
    	  	log.warn ("=========================");
    	  	log.warn ("  >>  Email will NOT be sent"); }

	if(testStatus.toLowerCase().contains("fail")){
		log.warn ("  >>  System Exit with -1");
		System.exit(-1);
	}
    	  	
    }

	public static String checkTestStatus(){
		def tsResults = testRunner.getResults()
		for(i in tsResults){
		String stepName1 = i.getTestStep().getName();
		String stepResult1 = i.getStatus();
		log.info ("=========================");
		log.info ("  >>  stepResult : "+stepName1+" - "+stepResult1);

		if((stepName1.toLowerCase().contains("runjob")) || (stepName1.toLowerCase().contains("serverstatus"))){
		if(i.getMessages().toString().toLowerCase().contains("pass")){
			stepResult1="OK";
		}/*else if(i.getMessages().toString().toLowerCase().contains("timeout")){
			stepResult1="TimeOut";
		}*/
		else{
			stepResult1="FAIL";
		}
	}

		
		if(stepResult1.toLowerCase().contains("fail")){
		return "Fail";
		}/*else if(stepResult1.toLowerCase().contains("timeout")){
		return "Job-TimeOut";
		}*/
		}
		return "Pass";
	}
	
    public void createAndSendEmail(String emailAddressTo, String msgSubject, String msgText) {
        this.emailAddressTo = emailAddressTo;
        this.msgSubject = msgSubject;
        this.msgText = msgText;
        sendEmailMessage();
    }
  
    private void sendEmailMessage() {
     
     //Create email sending properties
     Properties props = new Properties();
     props.put("mail.smtp.auth", "true");
     props.put("mail.smtp.starttls.enable", "true");
     props.put("mail.smtp.host", "smtp.gmail.com");
     props.put("mail.smtp.port", "587");
  
    Session session = Session.getInstance(props,
    new javax.mail.Authenticator() {
    protected PasswordAuthentication getPasswordAuthentication() {
    return new PasswordAuthentication(USER_NAME, PASSSWORD);
   }
    });

  try {

     Message message = new MimeMessage(session);
     message.setFrom(new InternetAddress(FROM_ADDRESS)); //Set from address of the email
     message.setContent(msgText,"text/html"); //set content type of the email
    //  message.setContent("<h3>sending html mail check</h3>","text/html" ); 
    message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(emailAddressTo)); //Set email recipient
    message.setRecipients(Message.RecipientType.BCC,InternetAddress.parse("raghav@finxera.com"));
    message.setSubject(msgSubject); //Set email message subject
    Transport.send(message); //Send email message

   System.out.println("sent email successfully!");

  } catch (MessagingException e) {
       throw new RuntimeException(e);
  }
    }

    public void setEmailAddressTo(String emailAddressTo) {
        this.emailAddressTo = emailAddressTo;
    }

    public void setSubject(String subject) {
        this.msgSubject = subject;
    }

    public void setMessageText(String msgText) {
        this.msgText = msgText;
    }

public static String createResults(){
String messageTitle="";
String message1="";
try {
    //Check a project level property to see if the reports should be produced.
    if(context.expand('${#Project#ProduceReports}') == 'Y') 
    //if((testRunner.testCase.testSuite.project.getPropertyValue("ProduceReports")).toLowerCase() == "y")
    {
        //The path and file to persist results
       
		log.info ("  >>  Creating Results");

/****************Title Message***********************/
messageTitle = '<h3>Note: This is auto-generated email. Do not reply.</h3><hr><hr><br>'
messageTitle += '<table border="2" style="width:80%">';
messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">Environment</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+context.expand('${#Project#Env}')+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">Endpoint</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+context.expand('${#Project#Endpoint}')+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">SubscriberId</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+context.expand('${#Project#subscriberId}')+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">TestCase Executed</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+testRunner.testCase.name+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">Executed by</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">CI Automation</th>';
messageTitle += '</tr>';

messageTitle += '</table>;'


/****************Title Message***********************/


 message1 = '<table border="2" style="width:80%">';
 message1 += '<tr>';
 message1 += '<th bgcolor="#e5eeff">Name</th>';
 //message1 += '<th>TimeStamp</th>';
  message1 += '<th bgcolor="#e5eeff">TimeTaken [ms]</th>';
   message1 += '<th bgcolor="#e5eeff">Size [bytes]</th>';
   message1 += '<th bgcolor="#e5eeff">Message</th>';
   message1 += '<th bgcolor="#e5eeff">Result</th>';
 message1 += '</tr>';
             //resultsFile2.write('"Name","TimeStamp","TimeTaken [ms]","Size [bytes]","Message","Result"');

def tsResults = testRunner.getResults()
for(i in tsResults){
	String stepName = i.getTestStep().getName();
	if(stepName.contains("Gen name") || stepName.contains("GetCurrentDate") || stepName.contains("Results")){
		continue;
	}
	
	//String stepClass = i.getClass();
	String stepTimeStamp = new Date(i.getTimeStamp());
	String stepTimeTaken = i.getTimeTaken();
	String stepSize = i.getSize();
	
	
	//String stepMessage = i.getMessages();
	String stepMessage = "";
            def msgCount = 0;
            for(message in i.getMessages()) {
                msgCount++;
                if(msgCount < 10) {
                    //resultsFile.append(message + ';\n');
					stepMessage=stepMessage+message+" | ";
                }
            }
	
	String stepResult = i.getStatus();
	if((stepName.toLowerCase().contains("runjob")) || (stepName.toLowerCase().contains("serverstatus"))){
		if(i.getMessages().toString().toLowerCase().contains("pass")){
			stepResult="OK";
		}else if(i.getMessages().toString().toLowerCase().contains("timeout")){
			stepResult="TimeOut";
		}
		else{
			stepResult="FAIL";
		}
	}

 message1 += '<tr>';
//message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';    
 if((stepName.toLowerCase().contains("runjob"))){
    message1 += '<td bgcolor="#F3F781">'+stepName+'</td>';
    stepName="wow1-"+stepName;
 }else if(stepName.toLowerCase().contains("serverstatus")){
 	 message1 += '<td bgcolor="#F7FE2E">'+stepName+'</td>';
 	 stepName="wow2-"+stepName;
 }
 else{
 	 message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';
 	 stepName="wow3-"+stepName;
 }
   // message1 += '<td>'+stepTimeStamp+'</td>';
    message1 += '<td>'+stepTimeTaken+'</td>';
    message1 += '<td  align="center">'+stepSize+'</td>';
    message1 += '<td>'+stepMessage+'</td>';
    if(stepResult.toLowerCase().contains("ok") || stepResult.toLowerCase().contains("pass")){
    message1 += '<td align="center" bgcolor="#00FF00">'+stepResult+'</td>';
    }
    else if(stepResult.toLowerCase().contains("timeout")){
    message1 += '<td align="center" bgcolor="#skyblue">'+stepResult+'</td>';
    }
    else{
    	 message1 += '<td align="center" bgcolor="red">'+stepResult+'</td>';
    }
  message1 += '</tr>';
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
  log.info (message1);
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
	//String resultToLog = stepName+","+stepClass+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	String resultToLog = stepName+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	log.info (resultToLog);
}
message1 += '</table><br><hr>End Of Report<hr><hr><br>';
    return messageTitle+""+message1;
} 
}catch(e) {
    log.error("An error occurred: " + e.toString());
}
}
}
]]></con:tearDownScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>c26798fd-2b72-4a0c-a5c1-a72d6644bc58</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ab382168-228a-4607-a6d5-c34702bbca33</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>19d63366-0c52-4145-a038-d85ac4fe8803</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e9d1ef3f-73ca-49ce-9d1d-bd7e1294eec7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>45f1aa99-092a-4b95-8f68-d42dc1425e7b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6ae7c6d3-43a8-40a0-ada0-4d73e37c4c8f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1913e0e1-e17d-41b5-8982-01ef27e46764</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf3c8c1f-6f7d-41ec-b2e9-137280a2cccb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d5f83aea-14fb-45c0-b128-ac782ad28711</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>50807989-d114-426b-a146-1a20b54611af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b65eccee-3ca7-48eb-843a-99dbe9291319</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c37ff707-c00e-449e-ab5a-9c7265d22f66</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>15c2c0a7-ad9c-4214-b80d-a6d84fd1414b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f1fbf360-ee95-4df4-b3d5-85896f094bbf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0d1d4844-09f1-43db-9118-01bae8d3cf9c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6a463e72-74c7-4c75-add5-454b38367492</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>edd4ca67-dd19-4142-b647-134d2d1f6ac4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7032aa7-e6e1-443e-8c35-e62dc0eef951</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76aaea4b-3651-427e-8216-9998adcf1496</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5e97f0d9-9f88-4a8e-a937-8074d59709a5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>735f1cf8-d028-4667-9e71-2227e9752cdd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f45b32de-b23e-4c6b-ae90-efce09f0d35d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1d021472-3c53-4b27-9115-e1a8fc5a8352</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f2d6368b-9365-4974-a75f-838f1ee72e62</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d5da2c04-14d4-45bb-8d1b-48a3b97ce2f5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5934230-0eb8-4f7b-9a95-ef0601b95a4e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>16241add-ddd0-4622-af38-e013b30cde43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4c8f3188-2d56-43ad-b43b-de967fca3aaa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc85c6d9-b9ad-4f6b-a686-b7bb8af2998f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0f649678-fa34-4a5d-95b5-5c3affa5784e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b936ff2e-68f6-47ea-8eba-227f2227f207</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>762cc6fc-1bab-4bc1-9300-06b323e6b6af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2b130f51-54b9-422d-b302-1c19c89bc215</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3f60561-7671-4b4f-a6d6-c181c64d7a01</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>79c19945-0fab-4d4e-9523-f435c8e589b3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dc70ddc3-bb9d-4ee0-ae05-b7f9ee621995</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>797127d4-7df9-402a-8e12-f400e09f2299</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b03c28c6-6333-4c58-962d-7cfa1b31d1ad</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e790e173-4360-41e0-a02b-bf20dcecaefc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8cc7f480-a7ae-46e7-9b22-8a1860e83554</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>192d6158-65aa-47e2-a7f1-b809e74e85d7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4b59bd9f-addb-444c-aab0-0b826a7d4d58</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>40af8e29-477e-49ec-afbb-cf80bded76fe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e50cddcc-0d02-4b47-8bd0-0534d3c97594</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e9dfb6e9-faf3-4ed5-9bc5-789bc1f77b52</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9b92659-b5ed-45dd-929e-f48e1a711a28</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>341b1e66-0398-405a-8bd7-f717b348ce46</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf4accb4-07b7-4230-b70d-46d17387fdb7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0683104a-0b5f-47aa-a4cd-bebe67a8d2ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1e487627-9030-4c1b-a6c6-1dec29ef9de7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5d8e6739-24c0-4806-8f06-caa89282b18f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>80c5a21b-f616-453c-8113-358c6d486e84</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5f7cd2c3-1a53-4e45-913f-ff687bddf399</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca9eeda8-9c0b-4799-96c5-301ee9289ead</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>80bc6ae0-0d69-4844-810b-1ea4b8ea9144</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3902228d-992c-47d3-9136-5078e4be2566</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5540e39f-8f63-407b-add8-4016036a55a6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>055f6f9d-18b5-4648-8ec8-2eefc659262a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9af053b7-7eca-4b2d-85c3-2e78acf1e4cd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fc8a1aee-aecb-405a-8b93-116d62784aec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8c3fcdf-d25f-4d5d-9f79-5cdded36993a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0dc0034-48e5-41ca-8f7b-f914e02d1a9a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>50f8ff3c-314f-47d7-a7e2-a82cda43009e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4117b210-9816-4eaa-86f0-767989e89773</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0a17c752-46d7-4184-8339-872151f38ee3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1532db97-706d-4881-abe5-12b76f69466c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>19b24d96-8e8d-465c-9624-8244bc719e4a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76d436bf-00ed-4259-8b85-2a17adc4f14a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b89c3f78-8127-4f84-8d98-d250d95fd3ce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>20cd096c-9269-457a-95e9-0732c970ff06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4b4d8744-4840-4721-bf48-5f2e160df2fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>69707753-5fef-4712-9349-7f7097b4cfde</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5077ccbd-a4f7-4d69-aa4a-7e2923a67aa1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DraftSuccessScenario2" searchProperties="true" id="37d22e74-975a-4cd7-b4ce-0957e1a885a0" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">false</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="groovy" name="UIServerStatus" id="a81f037f-fbb2-4d1e-8a43-be13f160a3a6"><con:settings/><con:config><script>
	log.info ("  >>  Inside Job Server Check Module");
		try
		{
			String targetUrl = context.expand('${#Project#UI}');

			HttpURLConnection httpUrlConnection = (HttpURLConnection) new URL(
					targetUrl).openConnection();
			httpUrlConnection.setRequestMethod("HEAD");

			int responseCode = httpUrlConnection.getResponseCode();
			
			if(responseCode==200 || responseCode==401){
			return "Pass- "+targetUrl+" : | "+responseCode;
			}
			else{
			return "Fail- "+targetUrl+" : | "+responseCode;
			}
		} catch (Exception exp)
		{
			log.info("Exp - "+exp.getMessage());
			return exp.toString();
		}
	</script></con:config></con:testStep><con:testStep type="groovy" name="APIServerStatus" id="bca73cf1-e555-4db3-9097-bfd421c668ab"><con:settings/><con:config><script>
	log.info ("  >>  Inside API Server Check Module");
		try
		{
			String targetUrl = context.expand('${#Project#Endpoint}');
			HttpURLConnection httpUrlConnection = (HttpURLConnection) new URL(
					targetUrl).openConnection();
			httpUrlConnection.setRequestMethod("HEAD");

			int responseCode = httpUrlConnection.getResponseCode();
			
			if(responseCode==200 || responseCode==405){
			return "Pass- "+targetUrl+" : | "+responseCode;
			}
			else{
			return "Fail- "+targetUrl+" : | "+responseCode;
			}
			//return ""+responseCode;
			//  return responseCode == HttpURLConnection.HTTP_OK;
		} catch (Exception exp)
		{
			log.info("Exp - "+exp.getMessage());
			return exp.toString();
		}
	</script></con:config></con:testStep><con:testStep type="groovy" name="JobServerStatus" id="955192da-b740-41e8-91f5-28e5832e909a"><con:settings/><con:config><script>
	log.info ("  >>  Inside Job Server Check Module");
		try
		{
			String JSUrl = context.expand('${#Project#JS}');

// - http://cftadmin:CFTis%231@10.10.110.188:8870/
// - http://10.10.200.151:8710/scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0
		String[] targetUrl0 = JSUrl.split("@");
		String targetUrl = (targetUrl0[0].split(":"))[0]+"://"+targetUrl0[1]+"/scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
		log.info ("  >>  targetUrl : "+targetUrl)
			
			HttpURLConnection httpUrlConnection = (HttpURLConnection) new URL(
					targetUrl).openConnection();
			httpUrlConnection.setRequestMethod("HEAD");

			int responseCode = httpUrlConnection.getResponseCode();
			
			if(responseCode==200 || responseCode==401){
			return "Pass- "+targetUrl+" : | "+responseCode;
			}
			else{
			return "Fail- "+targetUrl+" : | "+responseCode;
			}
		} catch (Exception exp)
		{
			log.info("Exp - "+exp.getMessage());
			return exp.toString();
		}
	</script></con:config></con:testStep><con:testStep type="groovy" name="DBServerStatus" id="1113d254-041d-4467-88f3-138c05757d74"><con:settings/><con:config><script>import groovy.sql.Sql
//import java.sql.SQLException;

/**
 * This scripts test the DB connection is up with ip and port only.
 * Note : As this script is not using valid username and password. The only check performed
 * 		here is to check the db on given ip and port is active.
 * 		Any issues with schema not available/working etc is not verified here.
 * 		
 *		This can be updated to include valid user and password and run a sample query.
 *		This will ensure DB is available for qa/dev teams. 		
 * 		
 * 		Nov 30 2015 - Raghav
 */
log.info ("  >>  Inside DB Server Check Module");
String dbHostPort = context.expand('${#Project#DB}');

try{
def sql;

com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "com.mysql.jdbc.Driver" )

//sql = Sql.newInstance("jdbc:mysql://10.10.200.151:3416/CFT_QA","user", null, "com.mysql.jdbc.Driver");
sql = Sql.newInstance("jdbc:mysql://"+dbHostPort+"", "com.mysql.jdbc.Driver");

log.info ("  >>  sql : "+sql);
//row = sql.firstRow("SELECT count(1) count FROM users");
//log.info("  >>  Count: ${row.count}")
//assert (row.count > 0):ERROR_MSG
sql.close();
}
catch(Exception exp){
	log.info ("  >>  Exp is : "+exp.getMessage());
	if(exp.toString().contains("Access denied for user")){
		return "Pass | "+dbHostPort;
	}else{
	return exp.getMessage()+" | "+dbHostPort;
	}
}
/*finally
{
log.info ("Closing DB Connection");
}*/
</script></con:config></con:testStep><con:testStep type="groovy" name="Gen name" id="b5420d2b-e996-403c-907a-430037bf2f58"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}

generator( (('A'..'Z')).join(), 9 )
</script></con:config></con:testStep><con:testStep type="groovy" name="GetCurrentDate" id="7b087b16-a623-4b70-934a-db03c436921a"><con:settings/><con:config><script>
def currentTime = new Date().format("dd/MM/yyyy");
	log.info "    >>>>    TIME NOW IS : "+currentTime;
		return currentTime;
	

   
</script></con:config></con:testStep><con:testStep type="request" name="CreateClient_TPB" id="4a79626a-6081-4b46-9760-6e5b9e9f949c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClient</con:operation><con:request name="CreateClient_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="18d5e90d-6870-4130-97c8-f95dead90278" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            	<wsse:Username>${#Project#global_username}</wsse:Username>
            	<wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientRequest>
            <mes:clientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:channelId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:productId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:firstname>CFT_FDR_TPB</mes:firstname>
            <mes:lastname>Automation</mes:lastname>
            <mes:ssn>232-36-3333</mes:ssn>
            <mes:dob>
                <typ:date format="MM-dd-yyyy" value="09-09-1980"/>
            </mes:dob>
            <mes:address1>Finxera Headquarters</mes:address1>
            <mes:address2>1900 South Norfolk Street</mes:address2>
            <mes:city>San Mateo</mes:city>
            <mes:state>CA</mes:state>
            <mes:zip>94403</mes:zip>
            <mes:phone>9874563210</mes:phone>
            <mes:mobile>8996655000</mes:mobile>
            <mes:email xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:draftAmount>100</mes:draftAmount>
        </mes:CreateClientRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5b1cba04-966f-4b54-ab63-4bf2bb398213"/><con:assertion type="GroovyScriptAssertion" id="c0ea2155-427e-4545-9eea-7c8f0dc10ca9" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def enrollmentId = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert enrollmentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClient_TPB2" id="36b8d800-db83-49c1-8e51-25bec4e04127" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClient</con:operation><con:request name="CreateClient_TPB2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="18d5e90d-6870-4130-97c8-f95dead90278" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            	<wsse:Username>${#Project#global_username}</wsse:Username>
            	<wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientRequest>
            <mes:clientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:channelId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:productId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:firstname>CFT_FDR_TPB</mes:firstname>
            <mes:lastname>Automation</mes:lastname>
            <mes:ssn>232-36-3333</mes:ssn>
            <mes:dob>
                <typ:date format="MM-dd-yyyy" value="09-09-1980"/>
            </mes:dob>
            <mes:address1>Finxera Headquarters</mes:address1>
            <mes:address2>1900 South Norfolk Street</mes:address2>
            <mes:city>San Mateo</mes:city>
            <mes:state>CA</mes:state>
            <mes:zip>94403</mes:zip>
            <mes:phone>9874563210</mes:phone>
            <mes:mobile>8996655000</mes:mobile>
            <mes:email xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:draftAmount>100</mes:draftAmount>
        </mes:CreateClientRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5b1cba04-966f-4b54-ab63-4bf2bb398213"/><con:assertion type="GroovyScriptAssertion" id="c0ea2155-427e-4545-9eea-7c8f0dc10ca9" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def enrollmentId = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert enrollmentId != null
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" id="8aa5fb8e-812c-4d42-a461-a89cb5f1f44a"><con:configuration><token>1234</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="TestCaseStatus2" disabled="true" id="a253cb00-a854-470d-b4fd-8350dd9be59f"><con:settings/><con:config><script>for ( testCaseResult in runner.results )
{
testCaseName = testCaseResult.getTestCase().name
log.info testCaseName
if ( testCaseResult.getStatus().toString() == 'FAILED' )
{
log.info "$testCaseName has failed"
for ( testStepResult in testCaseResult.getResults() )
{
testStepResult.messages.each() { msg -> log.info msg }
}
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="TestStatus" disabled="true" id="f50e9f4b-7ad9-4771-bd6f-1656f61c5983"><con:settings/><con:config><script>context.expand('${#Project#sendEmailOnPass}').toString().toLowerCase().contains("n");</script></con:config></con:testStep><con:testStep type="groovy" name="TestCaseStatus1" disabled="true" id="3967b7ba-afef-453d-b8d6-24a14cff19f1"><con:settings/><con:config><script>
for ( testCaseResult in runner.results )
{
testCaseName = testCaseResult.getTestCase().name
log.info "  >>  TestCaseName : "+testCaseName
log.info "  >>  TestCaseStatus : "+testCaseResult.getStatus().toString();
if ( testCaseResult.getStatus().toString() == 'FAILED' )
{
log.info "$testCaseName has failed"
for ( testStepResult in testCaseResult.getResults() )
{
testStepResult.messages.each() { msg -> log.info msg }
}
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="SendResults" disabled="true" id="def38dd2-f5c5-4a3d-9abf-73daebfa4cca"><con:settings/><con:config><script>try {
    //Check a project level property to see if the reports should be produced.
    if(context.expand('${#Project#ProduceReports}') == 'Y') {
        //The path and file to persist results
       
		log.info ("  >>  I am here");


        def resultDir2 = new File("C:/Users/raghav/Desktop/ToSend/Nov-14/SoapUIResults");
        if(!resultDir2.exists()) {
            resultDir2.mkdirs();
        }
        def currentDate = new Date().format("dd-MM-yyyy hh-mm-ss");
        def resultsFile2 = new File(resultDir2, currentDate+"_Result.csv");

        //If the file does not already exist, we want to create it, otherwise we want to append
        if(!resultsFile2.exists()) {
            resultsFile2.createNewFile();
            //Header values
              
            //resultsFile2.write('"Name","Class","TimeStamp","TimeTaken","Size","Message","Result"');
             resultsFile2.write('"Name","TimeStamp","TimeTaken [ms]","Size [bytes]","Message","Result"');
        }


tsResults = testRunner.getResults()
for(i in tsResults){
	String stepName = i.getTestStep().getName();
	//String stepClass = i.getClass();
	String stepTimeStamp = new Date(i.getTimeStamp());
	String stepTimeTaken = i.getTimeTaken();
	String stepSize = i.getSize();
	
	
	//String stepMessage = i.getMessages();
	String stepMessage = "";
            msgCount = 0;
            for(message in i.getMessages()) {
                msgCount++;
                if(msgCount &lt; 10) {
                    //resultsFile.append(message + ';\n');
					stepMessage=stepMessage+message+" | ";
                }
            }
	
	String stepResult = i.getStatus();
 
	//String resultToLog = stepName+","+stepClass+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	String resultToLog = stepName+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	
	resultsFile2.append('\n');    //Newline
	resultsFile2.append (resultToLog);
}
    
} 
}catch(e) {
    log.error("An error occurred: " + e.toString());
}</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of RunJob-NewScheduler" id="9846791a-1f32-4e56-beb8-cb80a034d496"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-NewScheduler";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

int minTimeOut=4;
def maxTimeOut=context.expand('${#Project#jobTimeOutInterval}') as int;

//def minTimeOut=a.getPropertyValue('minTimeOut') as int;
//def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	//return(null);
	return 'NO VALID JOB ENVIRONMENT FOUND';
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
	return ""+jobStatus[0]+" | "+jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timeout"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
	return ""+jobStatus[0]+" | "+jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
	return ""+iJobStatus;
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
	return ""+finalJobURL+" | "+all;
}</script></con:config></con:testStep><con:testStep type="groovy" name="SendEmail_Nov22_2" disabled="true" id="7ed4c4a9-3c73-4f7e-9304-1b11df02b777"><con:settings/><con:config><script><![CDATA[import javax.mail.*;
import javax.mail.internet.*;
import java.util.Properties;

public class JavaEmailSender {

	def static log;
   def static context;
   def static testRunner;
 
    private String emailAddressTo = new String();
    private String msgSubject = new String();
    private String msgText = new String();

    final String USER_NAME = "automationqa@finxera.com";   //User name of the Goole(gmail) account
    final String PASSSWORD = "Abcd1234+";  //Password of the Goole(gmail) account
    final String FROM_ADDRESS = "automationqa@finxera.com";  //From addresss
 
    public JavaEmailSender() {
    }

    public static void main(String[] args) {
      JavaEmailSender email = new JavaEmailSender();
     //Sending test email
      def currentDate = new Date().format("yyyy-MM-dd hh:mm");
    	 String msg = createResults(); 
    	 log.info ("*******************"); 
    	 log.info (msg);
    	 def resultStep = testRunner.testCase.getTestStepByName("Results");
resultStep.setPropertyValue("HTML",""+msg);
    	 log.info ("*******************"); 

     String emailRecipients = context.expand('${#Project#email}')
    // emailRecipients += ",raghav@finxera.com";
     log.info ("    >>>>    emailRecipients : "+emailRecipients);
    email.createAndSendEmail(emailRecipients, "CI Automation Report - "+currentDate,
      ""+msg);
    }

    public void createAndSendEmail(String emailAddressTo, String msgSubject, String msgText) {
        this.emailAddressTo = emailAddressTo;
        this.msgSubject = msgSubject;
        this.msgText = msgText;
        sendEmailMessage();
    }
  
    private void sendEmailMessage() {
     
     //Create email sending properties
     Properties props = new Properties();
     props.put("mail.smtp.auth", "true");
     props.put("mail.smtp.starttls.enable", "true");
     props.put("mail.smtp.host", "smtp.gmail.com");
     props.put("mail.smtp.port", "587");
  
    Session session = Session.getInstance(props,
    new javax.mail.Authenticator() {
    protected PasswordAuthentication getPasswordAuthentication() {
    return new PasswordAuthentication(USER_NAME, PASSSWORD);
   }
    });

  try {

     Message message = new MimeMessage(session);
     message.setFrom(new InternetAddress(FROM_ADDRESS)); //Set from address of the email
     message.setContent(msgText,"text/html"); //set content type of the email
    //  message.setContent("<h3>sending html mail check</h3>","text/html" ); 
    message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(emailAddressTo)); //Set email recipient
    message.setRecipients(Message.RecipientType.BCC,InternetAddress.parse("raghav@finxera.com"));
    message.setSubject(msgSubject); //Set email message subject
    Transport.send(message); //Send email message

   System.out.println("sent email successfully!");

  } catch (MessagingException e) {
       throw new RuntimeException(e);
  }
    }

    public void setEmailAddressTo(String emailAddressTo) {
        this.emailAddressTo = emailAddressTo;
    }

    public void setSubject(String subject) {
        this.msgSubject = subject;
    }

    public void setMessageText(String msgText) {
        this.msgText = msgText;
    }

public static String createResults(){
String messageTitle="";
String message1="";
try {
    //Check a project level property to see if the reports should be produced.
    if(context.expand('${#Project#ProduceReports}') == 'Y') 
    //if((testRunner.testCase.testSuite.project.getPropertyValue("ProduceReports")).toLowerCase() == "y")
    {
        //The path and file to persist results
       
		log.info ("  >>  Creating Results");

/****************Title Message***********************/
messageTitle = '<h3>Note: This is auto-generated email. Do not reply.</h3><hr><hr><br>'
messageTitle += '<table border="2" style="width:80%">';
messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">Environment</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+context.expand('${#Project#Env}')+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">Endpoint</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+context.expand('${#Project#Endpoint}')+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">SubscriberId</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+context.expand('${#Project#subscriberId}')+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">TestCase Executed</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+testRunner.testCase.name+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">Executed by</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">CI Automation</th>';
messageTitle += '</tr>';

messageTitle += '</table>;'


/****************Title Message***********************/


 message1 = '<table border="2" style="width:80%">';
 message1 += '<tr>';
 message1 += '<th bgcolor="#e5eeff">Name</th>';
 //message1 += '<th>TimeStamp</th>';
  message1 += '<th bgcolor="#e5eeff">TimeTaken [ms]</th>';
   message1 += '<th bgcolor="#e5eeff">Size [bytes]</th>';
   message1 += '<th bgcolor="#e5eeff">Message</th>';
   message1 += '<th bgcolor="#e5eeff">Result</th>';
 message1 += '</tr>';
             //resultsFile2.write('"Name","TimeStamp","TimeTaken [ms]","Size [bytes]","Message","Result"');
        


def tsResults = testRunner.getResults()
for(i in tsResults){
	String stepName = i.getTestStep().getName();
	if(stepName.contains("Gen name") || stepName.contains("GetCurrentDate") || stepName.contains("Results")){
		continue;
	}
	
	//String stepClass = i.getClass();
	String stepTimeStamp = new Date(i.getTimeStamp());
	String stepTimeTaken = i.getTimeTaken();
	String stepSize = i.getSize();
	
	
	//String stepMessage = i.getMessages();
	String stepMessage = "";
            def msgCount = 0;
            for(message in i.getMessages()) {
                msgCount++;
                if(msgCount < 10) {
                    //resultsFile.append(message + ';\n');
					stepMessage=stepMessage+message+" | ";
                }
            }
	
	String stepResult = i.getStatus();
	if((stepName.toLowerCase().contains("runjob"))){
		if(i.getMessages().toString().toLowerCase().contains("pass")){
			stepResult="OK";
		}else if(i.getMessages().toString().toLowerCase().contains("timeout")){
			stepResult="TimeOut";
		}
		else{
			stepResult="FAILED";
		}
	}

 message1 += '<tr>';
//message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';    
 if(!(stepName.toLowerCase().contains("runjob"))){
    message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';
 }else{
 	 message1 += '<td bgcolor="#F3F781">'+stepName+'</td>';
 }
   // message1 += '<td>'+stepTimeStamp+'</td>';
    message1 += '<td>'+stepTimeTaken+'</td>';
    message1 += '<td  align="center">'+stepSize+'</td>';
    message1 += '<td>'+stepMessage+'</td>';
    if(stepResult.toLowerCase().contains("ok") || stepResult.toLowerCase().contains("pass")){
    message1 += '<td align="center" bgcolor="#00FF00">'+stepResult+'</td>';
    }
    else if(stepResult.toLowerCase().contains("timeout")){
    message1 += '<td align="center" bgcolor="#skyblue">'+stepResult+'</td>';
    }
    else{
    	 message1 += '<td align="center" bgcolor="red">'+stepResult+'</td>';
    }
  message1 += '</tr>';
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
  log.info (message1);
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
	//String resultToLog = stepName+","+stepClass+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	String resultToLog = stepName+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	log.info (resultToLog);
}
message1 += '</table><br><hr>End Of Report<hr><hr><br>';
    return messageTitle+""+message1;
} 
}catch(e) {
    log.error("An error occurred: " + e.toString());
}
}
}
]]></script></con:config></con:testStep><con:testStep type="groovy" name="SendEmail_Nov22_1" disabled="true" id="0ab851f4-6276-4f6b-a6ce-ec86c57cf167"><con:settings/><con:config><script><![CDATA[import javax.mail.*;
import javax.mail.internet.*;
import java.util.Properties;

public class JavaEmailSender {

	def static log;
   def static context;
   def static testRunner;
 
    private String emailAddressTo = new String();
    private String msgSubject = new String();
    private String msgText = new String();

    final String USER_NAME = "automationqa@finxera.com";   //User name of the Goole(gmail) account
    final String PASSSWORD = "Abcd1234+";  //Password of the Goole(gmail) account
    final String FROM_ADDRESS = "automationqa@finxera.com";  //From addresss
 
    public JavaEmailSender() {
    }

    public static void main(String[] args) {
      JavaEmailSender email = new JavaEmailSender();
     //Sending test email
      def currentDate = new Date().format("yyyy-MM-dd hh:mm");
    	 String msg = createResults(); 
    	 log.info ("*******************"); 
    	 log.info (msg);
    	 def resultStep = testRunner.testCase.getTestStepByName("Results");
resultStep.setPropertyValue("HTML",""+msg);
    	 log.info ("*******************"); 

     String emailRecipients = context.expand('${#Project#email}')
    // emailRecipients += ",raghav@finxera.com";
     log.info ("    >>>>    emailRecipients : "+emailRecipients);
    email.createAndSendEmail(emailRecipients, "Test email subject-"+currentDate,
      "Congratulations !!! \nThis is test email sent by java class.\n"+msg);
    }

    public void createAndSendEmail(String emailAddressTo, String msgSubject, String msgText) {
        this.emailAddressTo = emailAddressTo;
        this.msgSubject = msgSubject;
        this.msgText = msgText;
        sendEmailMessage();
    }
  
    private void sendEmailMessage() {
     
     //Create email sending properties
     Properties props = new Properties();
     props.put("mail.smtp.auth", "true");
     props.put("mail.smtp.starttls.enable", "true");
     props.put("mail.smtp.host", "smtp.gmail.com");
     props.put("mail.smtp.port", "587");
  
    Session session = Session.getInstance(props,
    new javax.mail.Authenticator() {
    protected PasswordAuthentication getPasswordAuthentication() {
    return new PasswordAuthentication(USER_NAME, PASSSWORD);
   }
    });

  try {

     Message message = new MimeMessage(session);
     message.setFrom(new InternetAddress(FROM_ADDRESS)); //Set from address of the email
     message.setContent(msgText,"text/html"); //set content type of the email
    //  message.setContent("<h3>sending html mail check</h3>","text/html" ); 
    message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(emailAddressTo)); //Set email recipient
    message.setRecipients(Message.RecipientType.BCC,InternetAddress.parse("raghav@finxera.com"));
    message.setSubject(msgSubject); //Set email message subject
    Transport.send(message); //Send email message

   System.out.println("sent email successfully!");

  } catch (MessagingException e) {
       throw new RuntimeException(e);
  }
    }

    public void setEmailAddressTo(String emailAddressTo) {
        this.emailAddressTo = emailAddressTo;
    }

    public void setSubject(String subject) {
        this.msgSubject = subject;
    }

    public void setMessageText(String msgText) {
        this.msgText = msgText;
    }

public static String createResults(){
String message1="";
try {
    //Check a project level property to see if the reports should be produced.
    if(context.expand('${#Project#ProduceReports}') == 'Y') 
    //if((testRunner.testCase.testSuite.project.getPropertyValue("ProduceReports")).toLowerCase() == "y")
    {
        //The path and file to persist results
       
		log.info ("  >>  Creating Results");

		 message1 = '<table border="2" style="width:80%">';
 message1 += '<tr>';
 message1 += '<th>Name</th>';
 //message1 += '<th>TimeStamp</th>';
  message1 += '<th>TimeTaken [ms]</th>';
   message1 += '<th>Size [bytes]</th>';
   message1 += '<th>Message</th>';
   message1 += '<th>Result</th>';
 message1 += '</tr>';
             //resultsFile2.write('"Name","TimeStamp","TimeTaken [ms]","Size [bytes]","Message","Result"');
        


def tsResults = testRunner.getResults()
for(i in tsResults){
	String stepName = i.getTestStep().getName();
	if(stepName.contains("Gen name") || stepName.contains("GetCurrentDate") || stepName.contains("Results")){
		continue;
	}
	
	//String stepClass = i.getClass();
	String stepTimeStamp = new Date(i.getTimeStamp());
	String stepTimeTaken = i.getTimeTaken();
	String stepSize = i.getSize();
	
	
	//String stepMessage = i.getMessages();
	String stepMessage = "";
            def msgCount = 0;
            for(message in i.getMessages()) {
                msgCount++;
                if(msgCount < 10) {
                    //resultsFile.append(message + ';\n');
					stepMessage=stepMessage+message+" | ";
                }
            }
	
	String stepResult = i.getStatus();
	if((stepName.toLowerCase().contains("runjob"))){
		if(i.getMessages().toString().toLowerCase().contains("pass")){
			stepResult="OK";
		}else if(i.getMessages().toString().toLowerCase().contains("timeout")){
			stepResult="TimeOut";
		}
		else{
			stepResult="FAILED";
		}
	}

 message1 += '<tr>';
//message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';    
 if(!(stepName.toLowerCase().contains("runjob"))){
    message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';
 }else{
 	 message1 += '<td bgcolor="#F3F781">'+stepName+'</td>';
 }
   // message1 += '<td>'+stepTimeStamp+'</td>';
    message1 += '<td>'+stepTimeTaken+'</td>';
    message1 += '<td  align="center">'+stepSize+'</td>';
    message1 += '<td>'+stepMessage+'</td>';
    if(stepResult.toLowerCase().contains("ok") || stepResult.toLowerCase().contains("pass")){
    message1 += '<td align="center" bgcolor="#00FF00">'+stepResult+'</td>';
    }
    else if(stepResult.toLowerCase().contains("timeout")){
    message1 += '<td align="center" bgcolor="#skyblue">'+stepResult+'</td>';
    }
    else{
    	 message1 += '<td align="center" bgcolor="red">'+stepResult+'</td>';
    }
  message1 += '</tr>';
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
  log.info (message1);
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
	//String resultToLog = stepName+","+stepClass+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	String resultToLog = stepName+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	log.info (resultToLog);
}
message1 += '</table>';
    return message1;
} 
}catch(e) {
    log.error("An error occurred: " + e.toString());
}
}
}
]]></script></con:config></con:testStep><con:testStep type="groovy" name="SendEmail_Nov21" disabled="true" id="efd12bea-7e41-495f-be50-c71573fc616e"><con:settings/><con:config><script><![CDATA[import javax.mail.*;
import javax.mail.internet.*;
import java.util.Properties;

public class JavaEmailSender {

	def static log;
   def static context;
   def static testRunner;
 
    private String emailAddressTo = new String();
    private String msgSubject = new String();
    private String msgText = new String();

    final String USER_NAME = "localstakeqa@gmail.com";   //User name of the Goole(gmail) account
    final String PASSSWORD = "Abcd1234+";  //Password of the Goole(gmail) account
    final String FROM_ADDRESS = "localstakeqa@gmail.com";  //From addresss
 
    public JavaEmailSender() {
    }

    public static void main(String[] args) {
      JavaEmailSender email = new JavaEmailSender();
     //Sending test email
      def currentDate = new Date().format("yyyy-MM-dd hh:mm");
    	 String msg = createResults(); 
    	 log.info ("*******************"); 
    	 log.info (msg);
    	 def resultStep = testRunner.testCase.getTestStepByName("Results");
resultStep.setPropertyValue("HTML",""+msg);
    	 log.info ("*******************"); 
    	 //String content= "<html><body><b><td><tr>Hello!</b></tr></td></body></html>" 

/*
 String message = "<br><i>Greetings!!!</i><br>";
        message += "<b>Wish you a nice day!</b><br>";
        message += "<font color=red>Duke</font>";

     message += '<table border="2" style="width:100%">';
message += '<tr>';
    message += '<td>Jill</td>';
    message += '<td>Smith</td>'; 
    message += '<td>50</td>';
  message += '</tr>';
  message += '<tr>';
    message += '<td>Eve</td>';
   message +=  '<td>Jackson</td>'; 
    message += '<td>94</td>';
 message +=  '</tr>';
message += '</table>';
     */ 
    email.createAndSendEmail("raghav@finxera.com , go2raghav10@gmail.com", "Test email subject-"+currentDate,
      "Congratulations !!! \nThis is test email sent by java class.\n"+msg);
    }

    public void createAndSendEmail(String emailAddressTo, String msgSubject, String msgText) {
        this.emailAddressTo = emailAddressTo;
        this.msgSubject = msgSubject;
        this.msgText = msgText;
        sendEmailMessage();
    }
  
    private void sendEmailMessage() {
     
     //Create email sending properties
     Properties props = new Properties();
     props.put("mail.smtp.auth", "true");
     props.put("mail.smtp.starttls.enable", "true");
     props.put("mail.smtp.host", "smtp.gmail.com");
     props.put("mail.smtp.port", "587");
  
    Session session = Session.getInstance(props,
    new javax.mail.Authenticator() {
    protected PasswordAuthentication getPasswordAuthentication() {
    return new PasswordAuthentication(USER_NAME, PASSSWORD);
   }
    });

  try {

     Message message = new MimeMessage(session);
     message.setFrom(new InternetAddress(FROM_ADDRESS)); //Set from address of the email
     message.setContent(msgText,"text/html"); //set content type of the email
    //  message.setContent("<h3>sending html mail check</h3>","text/html" ); 
    message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(emailAddressTo)); //Set email recipient
    
    message.setSubject(msgSubject); //Set email message subject
    Transport.send(message); //Send email message

   System.out.println("sent email successfully!");

  } catch (MessagingException e) {
       throw new RuntimeException(e);
  }
    }

    public void setEmailAddressTo(String emailAddressTo) {
        this.emailAddressTo = emailAddressTo;
    }

    public void setSubject(String subject) {
        this.msgSubject = subject;
    }

    public void setMessageText(String msgText) {
        this.msgText = msgText;
    }

public static String createResults(){
String message1="";
try {
    //Check a project level property to see if the reports should be produced.
    if(context.expand('${#Project#ProduceReports}') == 'Y') 
    //if((testRunner.testCase.testSuite.project.getPropertyValue("ProduceReports")).toLowerCase() == "y")
    {
        //The path and file to persist results
       
		log.info ("  >>  Creating Results");

		 message1 = '<table border="2" style="width:80%">';
 message1 += '<tr>';
 message1 += '<th>Name</th>';
 //message1 += '<th>TimeStamp</th>';
  message1 += '<th>TimeTaken [ms]</th>';
   message1 += '<th>Size [bytes]</th>';
   message1 += '<th>Message</th>';
   message1 += '<th>Result</th>';
 message1 += '</tr>';
             //resultsFile2.write('"Name","TimeStamp","TimeTaken [ms]","Size [bytes]","Message","Result"');
        


def tsResults = testRunner.getResults()
for(i in tsResults){
	String stepName = i.getTestStep().getName();
	if(stepName.contains("Gen name") || stepName.contains("GetCurrentDate") || stepName.contains("Results")){
		continue;
	}
	//String stepClass = i.getClass();
	String stepTimeStamp = new Date(i.getTimeStamp());
	String stepTimeTaken = i.getTimeTaken();
	String stepSize = i.getSize();
	
	
	//String stepMessage = i.getMessages();
	String stepMessage = "";
            def msgCount = 0;
            for(message in i.getMessages()) {
                msgCount++;
                if(msgCount < 10) {
                    //resultsFile.append(message + ';\n');
					stepMessage=stepMessage+message+" | ";
                }
            }
	
	String stepResult = i.getStatus();


 message1 += '<tr>';
//message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';    
 if(!(stepName.toLowerCase().contains("runjob"))){
    message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';
 }else{
 	 message1 += '<td bgcolor="#F3F781">'+stepName+'</td>';
 }
   // message1 += '<td>'+stepTimeStamp+'</td>';
    message1 += '<td>'+stepTimeTaken+'</td>';
    message1 += '<td  align="center">'+stepSize+'</td>';
    message1 += '<td>'+stepMessage+'</td>';
    if(stepResult.toLowerCase().contains("ok")){
    message1 += '<td align="center" bgcolor="#00FF00">'+stepResult+'</td>';
    }else{
    	 message1 += '<td align="center" bgcolor="red">'+stepResult+'</td>';
    }
  message1 += '</tr>';
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
  log.info (message1);
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
	//String resultToLog = stepName+","+stepClass+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	String resultToLog = stepName+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	log.info (resultToLog);
}
message1 += '</table>';
    return message1;
} 
}catch(e) {
    log.error("An error occurred: " + e.toString());
}
}
}
]]></script></con:config></con:testStep><con:testStep type="groovy" name="SendEmail_Nov21_3" disabled="true" id="7f6ae057-df1e-4231-9d1b-72efbd95a4ca"><con:settings/><con:config><script><![CDATA[import javax.mail.*;
import javax.mail.internet.*;
import java.util.Properties;

public class JavaEmailSender {

	def static log;
   def static context;
   def static testRunner;
 
    private String emailAddressTo = new String();
    private String msgSubject = new String();
    private String msgText = new String();

    final String USER_NAME = "localstakeqa@gmail.com";   //User name of the Goole(gmail) account
    final String PASSSWORD = "Abcd1234+";  //Password of the Goole(gmail) account
    final String FROM_ADDRESS = "localstakeqa@gmail.com";  //From addresss
 
    public JavaEmailSender() {
    }

    public static void main(String[] args) {
      JavaEmailSender email = new JavaEmailSender();
     //Sending test email
      def currentDate = new Date().format("yyyy-MM-dd hh:mm");
    	 createResults();  
    	 //String content= "<html><body><b><td><tr>Hello!</b></tr></td></body></html>" 

StringBuilder content = new StringBuilder();
//sb.append("<table><tr><td>your content here</td></tr></table>");
    content.append("<html><head></head><title></title>")
    content.append("<body style='font-size:12px;font-family:Trebuchet MS;'>")
    content.append("<table width='600px' align='center' border='0' cellpadding='0' cellspacing='0' style='border-top:5px solid white;'")
    content.append("<tr><td></tr></td></table>")  	 

 String message = "<br><i>Greetings!!!</i><br>";
        message += "<b>Wish you a nice day!</b><br>";
        message += "<font color=red>Duke</font>";

     message += '<table border="2" style="width:100%">';
message += '<tr>';
    message += '<td>Jill</td>';
    message += '<td>Smith</td>'; 
    message += '<td>50</td>';
  message += '</tr>';
  message += '<tr>';
    message += '<td>Eve</td>';
   message +=  '<td>Jackson</td>'; 
    message += '<td>94</td>';
 message +=  '</tr>';
message += '</table>';
      
    email.createAndSendEmail("raghav@finxera.com , go2raghav10@gmail.com", "Test email subject-"+currentDate,
      "Congratulations !!! \nThis is test email sent by java class.\n"+message);
    }

    public void createAndSendEmail(String emailAddressTo, String msgSubject, String msgText) {
        this.emailAddressTo = emailAddressTo;
        this.msgSubject = msgSubject;
        this.msgText = msgText;
        sendEmailMessage();
    }
  
    private void sendEmailMessage() {
     
     //Create email sending properties
     Properties props = new Properties();
     props.put("mail.smtp.auth", "true");
     props.put("mail.smtp.starttls.enable", "true");
     props.put("mail.smtp.host", "smtp.gmail.com");
     props.put("mail.smtp.port", "587");
  
    Session session = Session.getInstance(props,
    new javax.mail.Authenticator() {
    protected PasswordAuthentication getPasswordAuthentication() {
    return new PasswordAuthentication(USER_NAME, PASSSWORD);
   }
    });

  try {

     Message message = new MimeMessage(session);
     message.setFrom(new InternetAddress(FROM_ADDRESS)); //Set from address of the email
     message.setContent(msgText,"text/html"); //set content type of the email
    //  message.setContent("<h3>sending html mail check</h3>","text/html" ); 
    message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(emailAddressTo)); //Set email recipient
    
    message.setSubject(msgSubject); //Set email message subject
    Transport.send(message); //Send email message

   System.out.println("sent email successfully!");

  } catch (MessagingException e) {
       throw new RuntimeException(e);
  }
    }

    public void setEmailAddressTo(String emailAddressTo) {
        this.emailAddressTo = emailAddressTo;
    }

    public void setSubject(String subject) {
        this.msgSubject = subject;
    }

    public void setMessageText(String msgText) {
        this.msgText = msgText;
    }

public static void createResults(){

try {
    //Check a project level property to see if the reports should be produced.
    if(context.expand('${#Project#ProduceReports}') == 'Y') 
    //if((testRunner.testCase.testSuite.project.getPropertyValue("ProduceReports")).toLowerCase() == "y")
    {
        //The path and file to persist results
       
		log.info ("  >>  I am here");


        def resultDir2 = new File("C:/Users/raghav/Desktop/ToSend/Nov-14/SoapUIResults");
        if(!resultDir2.exists()) {
            resultDir2.mkdirs();
        }
        def currentDate = new Date().format("dd-MM-yyyy hh-mm-ss");
        def resultsFile2 = new File(resultDir2, currentDate+"_Result.csv");

        //If the file does not already exist, we want to create it, otherwise we want to append
        if(!resultsFile2.exists()) {
            resultsFile2.createNewFile();
            //Header values
              
            //resultsFile2.write('"Name","Class","TimeStamp","TimeTaken","Size","Message","Result"');
             resultsFile2.write('"Name","TimeStamp","TimeTaken [ms]","Size [bytes]","Message","Result"');
        }


def tsResults = testRunner.getResults()
for(i in tsResults){
	String stepName = i.getTestStep().getName();
	//String stepClass = i.getClass();
	String stepTimeStamp = new Date(i.getTimeStamp());
	String stepTimeTaken = i.getTimeTaken();
	String stepSize = i.getSize();
	
	
	//String stepMessage = i.getMessages();
	String stepMessage = "";
            def msgCount = 0;
            for(message in i.getMessages()) {
                msgCount++;
                if(msgCount < 10) {
                    //resultsFile.append(message + ';\n');
					stepMessage=stepMessage+message+" | ";
                }
            }
	
	String stepResult = i.getStatus();
 
	//String resultToLog = stepName+","+stepClass+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	String resultToLog = stepName+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	
	resultsFile2.append('\n');    //Newline
	resultsFile2.append (resultToLog);
}
    
} 
}catch(e) {
    log.error("An error occurred: " + e.toString());
}
}
}
]]></script></con:config></con:testStep><con:testStep type="groovy" name="SendEmail_Nov21_2" disabled="true" id="5d8e183f-87de-4745-987a-c2c96bba0432"><con:settings/><con:config><script>import javax.mail.*;
import javax.mail.internet.*;
import java.util.Properties;

public class JavaEmailSender {

def static log;
   def static context;
   def static testRunner;
 
    private String emailAddressTo = new String();
    private String msgSubject = new String();
    private String msgText = new String();

    final String USER_NAME = "localstakeqa@gmail.com";   //User name of the Goole(gmail) account
    final String PASSSWORD = "Abcd1234+";  //Password of the Goole(gmail) account
    final String FROM_ADDRESS = "localstakeqa@gmail.com";  //From addresss
 
    public JavaEmailSender() {
    }

    public static void main(String[] args) {
      JavaEmailSender email = new JavaEmailSender();
     //Sending test email
      def currentDate = new Date().format("yyyy-MM-dd hh:mm");
    	 createResults();  
      email.createAndSendEmail("raghav@finxera.com", "Test email subject-"+currentDate,
      "Congratulations !!! \nThis is test email sent by java class.");
    }

    public void createAndSendEmail(String emailAddressTo, String msgSubject, String msgText) {
        this.emailAddressTo = emailAddressTo;
        this.msgSubject = msgSubject;
        this.msgText = msgText;
        sendEmailMessage();
    }
  
    private void sendEmailMessage() {
     
     //Create email sending properties
     Properties props = new Properties();
     props.put("mail.smtp.auth", "true");
     props.put("mail.smtp.starttls.enable", "true");
     props.put("mail.smtp.host", "smtp.gmail.com");
     props.put("mail.smtp.port", "587");
  
    Session session = Session.getInstance(props,
    new javax.mail.Authenticator() {
    protected PasswordAuthentication getPasswordAuthentication() {
    return new PasswordAuthentication(USER_NAME, PASSSWORD);
   }
    });

  try {

     Message message = new MimeMessage(session);
     message.setFrom(new InternetAddress(FROM_ADDRESS)); //Set from address of the email
     message.setContent(msgText,"text/html"); //set content type of the email
     
    message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(emailAddressTo)); //Set email recipient
    
    message.setSubject(msgSubject); //Set email message subject
    Transport.send(message); //Send email message

   System.out.println("sent email successfully!");

  } catch (MessagingException e) {
       throw new RuntimeException(e);
  }
    }

    public void setEmailAddressTo(String emailAddressTo) {
        this.emailAddressTo = emailAddressTo;
    }

    public void setSubject(String subject) {
        this.msgSubject = subject;
    }

    public void setMessageText(String msgText) {
        this.msgText = msgText;
    }

public static void createResults(){

try {
    //Check a project level property to see if the reports should be produced.
    if(context.expand('${#Project#ProduceReports}') == 'Y') 
    //if((testRunner.testCase.testSuite.project.getPropertyValue("ProduceReports")).toLowerCase() == "y")
    {
        //The path and file to persist results
       
		log.info ("  >>  I am here");


        def resultDir2 = new File("C:/Users/raghav/Desktop/ToSend/Nov-14/SoapUIResults");
        if(!resultDir2.exists()) {
            resultDir2.mkdirs();
        }
        def currentDate = new Date().format("dd-MM-yyyy hh-mm-ss");
        def resultsFile2 = new File(resultDir2, currentDate+"_Result.csv");

        //If the file does not already exist, we want to create it, otherwise we want to append
        if(!resultsFile2.exists()) {
            resultsFile2.createNewFile();
            //Header values
              
            //resultsFile2.write('"Name","Class","TimeStamp","TimeTaken","Size","Message","Result"');
             resultsFile2.write('"Name","TimeStamp","TimeTaken [ms]","Size [bytes]","Message","Result"');
        }


def tsResults = testRunner.getResults()
for(i in tsResults){
	String stepName = i.getTestStep().getName();
	//String stepClass = i.getClass();
	String stepTimeStamp = new Date(i.getTimeStamp());
	String stepTimeTaken = i.getTimeTaken();
	String stepSize = i.getSize();
	
	
	//String stepMessage = i.getMessages();
	String stepMessage = "";
            def msgCount = 0;
            for(message in i.getMessages()) {
                msgCount++;
                if(msgCount &lt; 10) {
                    //resultsFile.append(message + ';\n');
					stepMessage=stepMessage+message+" | ";
                }
            }
	
	String stepResult = i.getStatus();
 
	//String resultToLog = stepName+","+stepClass+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	String resultToLog = stepName+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	
	resultsFile2.append('\n');    //Newline
	resultsFile2.append (resultToLog);
}
    
} 
}catch(e) {
    log.error("An error occurred: " + e.toString());
}
}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="String Builder" disabled="true" id="e331c60b-75be-485e-b72b-6c0db66393ac"><con:settings/><con:config><script><![CDATA[StringBuilder sb = new StringBuilder();
sb.append("abcd");
sb.append("<table><tr><td>your content here</td></tr></table>");
log.info (sb);]]></script></con:config></con:testStep><con:testStep type="groovy" name="GetTestCaseResult" disabled="true" id="1d7fb7b2-5ae4-4239-89a1-55737ccfd35d"><con:settings/><con:config><script>/*
def result = testRunner.getStatus();
log.info ("   >>>>   result : "+result);
def resultStep = testRunner.testCase.getTestStepByName("Results");
resultStep.setPropertyValue("TCResult",""+result);
*/

/*project = testRunner.testCase.testSuite.project ;
 tcase = project.testSuites["TestSuite"].testCases["Copy of DraftSuccessScenario"] ; 
 def TCresult1 =  tcase.getStatus();
 */



 def result = testRunner.getStatus().toString()
if (result == "FINISHED") {
  log.info("Test passed")
} else {
  log.info("Test not passed")
}</script></con:config></con:testStep><con:testStep type="groovy" name="LogResults" disabled="true" id="165ceb03-73ef-4744-8b04-adf11b4b5971"><con:settings/><con:config><script>//Get Results
log.info ("abcd");
tsResults = testRunner.getResults()
log.info ("  >>  tsResults : "+tsResults);
for(i in tsResults){
 log.info(i.getTestStep().getName() + " :")
 log.info("   Class: " + i.getClass())
 tStamp = new Date(i.getTimeStamp())
 log.info("   TimeStamp: " + tStamp)
 log.info("   TimeTaken: " + i.getTimeTaken())
 log.info("   Size: " + i.getSize())
 log.info("   Status: " + i.getStatus())
 log.info("   Messages: " + i.getMessages())
}</script></con:config></con:testStep><con:testStep type="groovy" name="SendResults2" disabled="true" id="1fa26683-b55b-4d4c-a91d-bd716d7970e3"><con:settings/><con:config><script/></con:config></con:testStep><con:testStep type="properties" name="Results" disabled="true" id="56efee35-f195-4b1f-b209-093fc0274363"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TCResult</con:name><con:value>RUNNING</con:value></con:property><con:property><con:name>HTML</con:name><con:value><![CDATA[<h3>Note: This is auto-generated email. Do not reply.</h3><hr><hr><br><table border="2" style="width:80%"><tr><td bgcolor="#ccddff">Environment</td><th bgcolor="#e5eeff" align="left">QA-CFT</th></tr><tr><td bgcolor="#ccddff">Endpoint</td><th bgcolor="#e5eeff" align="left">http://qaws.cftpay.com:8080/wsrv/npn.wsdl</th></tr><tr><td bgcolor="#ccddff">SubscriberId</td><th bgcolor="#e5eeff" align="left">200001</th></tr><tr><td bgcolor="#ccddff">TestCase Executed</td><th bgcolor="#e5eeff" align="left">DraftSuccessScenario2</th></tr><tr><td bgcolor="#ccddff">Executed by</td><th bgcolor="#e5eeff" align="left">CI Automation</th></tr></table>;<table border="2" style="width:80%"><tr><th bgcolor="#e5eeff">Name</th><th bgcolor="#e5eeff">TimeTaken [ms]</th><th bgcolor="#e5eeff">Size [bytes]</th><th bgcolor="#e5eeff">Message</th><th bgcolor="#e5eeff">Result</th></tr></table><br><hr>End Of Report<hr><hr><br>]]></con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="CreateClient_WFB" id="391ea5eb-3026-4c3e-8f07-0b8978d768c1" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClient</con:operation><con:request name="CreateClient_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="18d5e90d-6870-4130-97c8-f95dead90278" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            	<wsse:Username>${#Project#global_username}</wsse:Username>
            	<wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientRequest>
            <mes:clientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:channelId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:productId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:firstname>CFT_FDR_WFB</mes:firstname>
            <mes:lastname>Automation</mes:lastname>
            <mes:ssn>232-36-4545</mes:ssn>
            <mes:dob>
                <typ:date format="MM-dd-yyyy" value="09-09-1980"/>
            </mes:dob>
            <mes:address1>Finxera Headquarters</mes:address1>
            <mes:address2>1900 South Norfolk Street</mes:address2>
            <mes:city>Jupiter</mes:city>
            <mes:state>FL</mes:state>
            <mes:zip>94403</mes:zip>
            <mes:phone>9874563210</mes:phone>
            <mes:mobile>8996655000</mes:mobile>
            <mes:email xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:draftAmount>100</mes:draftAmount>
        </mes:CreateClientRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5b1cba04-966f-4b54-ab63-4bf2bb398213"/><con:assertion type="SOAP Response" name="SOAP Response1" id="45796fc5-1ad7-4bc5-aaf1-32f6688af019"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="8dec95da-4bd2-48dc-9c70-9d840ae05f12"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def node1 = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def node2 = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def node3 = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

log.info (" >> >> "+node1.getData())
assert node1.getData() == '1'
assert node2 != null
assert node3 != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" name="SOAP Response1" id="f2455ddc-2bc7-4b4a-9855-f35a97dd446a"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion1" id="ecfff8e1-87b3-43d7-a71f-89b69a3b9091"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def enrollmentId = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert enrollmentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClient_BOI" id="6384bd72-bc26-465d-a57a-697b3d7a0fac" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClient</con:operation><con:request name="CreateClient_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="18d5e90d-6870-4130-97c8-f95dead90278" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
            	<wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
       	 </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientRequest>
            <mes:clientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:channelId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:productId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:firstname>CFT_FDR_BOI</mes:firstname>
            <mes:lastname>Automation</mes:lastname>
            <mes:ssn>232-36-4544</mes:ssn>
            <mes:dob>
                <typ:date format="MM-dd-yyyy" value="09-09-1980"/>
            </mes:dob>
            <mes:address1>Finxera Headquarters</mes:address1>
            <mes:address2>1900 South Norfolk Street</mes:address2>
            <mes:city>Clio</mes:city>
            <mes:state>AL</mes:state>
            <mes:zip>94403</mes:zip>
            <mes:phone>9874563210</mes:phone>
            <mes:mobile>8996655000</mes:mobile>
            <mes:email xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:draftAmount>100</mes:draftAmount>
        </mes:CreateClientRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5b1cba04-966f-4b54-ab63-4bf2bb398213"/><con:assertion type="SOAP Response" name="SOAP Response1" id="2f17e1d0-40db-45aa-acd9-b1a17d407496"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="a4119d0a-7888-4b44-ba9b-dddc1d538eca"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def node1 = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def node2 = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def node3 = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

log.info (" >> >> "+node1.getData())
assert node1.getData() == '1'
assert node2 != null
assert node3 != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" name="SOAP Response1" id="52a90438-d0b7-4cf0-a18b-bdac383e5cb7"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion1" id="a27ee8f6-b04b-49e2-9985-d560a0663645"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def enrollmentId = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert enrollmentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClientBankAccount_TPB" id="34499609-2bfd-4b74-a8fe-a5013072908d" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClientBankAccount</con:operation><con:request name="CreateClientBankAccount_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="253b5085-e099-40e3-ad27-918bd588eae1" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create client Bank account +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientBankAccountRequest>
            <!--You may enter the following 10 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:routingNumber>051000017</mes:routingNumber>
            <mes:accountType>CHECKING</mes:accountType>
            <mes:accountNumber>54364434</mes:accountNumber>
            <mes:holdersName>AutoAccount</mes:holdersName>
            <!--Optional:-->
        </mes:CreateClientBankAccountRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="GroovyScriptAssertion" id="dc66fa8c-a323-48dd-afcc-ba87cf4ebc82" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientId[1]/text()" )
def clientBankAccountId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientBankAccountId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert clientBankAccountId != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" id="b05b5e9a-c6c7-4088-bf18-1068907a473d" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientBankAccountRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClientBankAccount_WFB" id="7e0e68ba-acd1-4266-9617-52f85dcb47a4" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClientBankAccount</con:operation><con:request name="CreateClientBankAccount_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="253b5085-e099-40e3-ad27-918bd588eae1" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create client Bank account +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientBankAccountRequest>
            <!--You may enter the following 10 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:routingNumber>051000017</mes:routingNumber>
            <mes:accountType>CHECKING</mes:accountType>
            <mes:accountNumber>54364434</mes:accountNumber>
            <mes:holdersName>AutoAccount</mes:holdersName>
            <!--Optional:-->
        </mes:CreateClientBankAccountRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f904f6d-c595-43e8-b788-151c067931fb"/><con:assertion type="Simple Contains" id="d6cc1093-8684-4c0b-9e1c-9872241599fe" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="84e771e7-604c-4596-ac34-7f9f96374efc"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientId[1]/text()" )
def clientBankAccountId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientBankAccountId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert clientBankAccountId != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" name="SOAP Response1" id="0c027a37-6367-4f0b-bddf-ec486e33ecc2"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientBankAccountRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClientBankAccount_BOI" id="05e42b40-0691-43af-b490-6159e733a664" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClientBankAccount</con:operation><con:request name="CreateClientBankAccount_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="253b5085-e099-40e3-ad27-918bd588eae1" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create client Bank account +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientBankAccountRequest>
            <!--You may enter the following 10 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:routingNumber>051000017</mes:routingNumber>
            <mes:accountType>CHECKING</mes:accountType>
            <mes:accountNumber>54364434</mes:accountNumber>
            <mes:holdersName>AutoAccount</mes:holdersName>
            <!--Optional:-->
        </mes:CreateClientBankAccountRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f904f6d-c595-43e8-b788-151c067931fb"/><con:assertion type="Simple Contains" id="d6cc1093-8684-4c0b-9e1c-9872241599fe" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="3bf4b402-0b5d-4e59-b05d-668537629ceb"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientId[1]/text()" )
def clientBankAccountId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientBankAccountId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert clientBankAccountId != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" name="SOAP Response1" id="e02f32d4-884d-4025-a4db-3a33399ff84b"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientBankAccountRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateDraftSchedule_TPB" id="a568b459-3a37-4206-a496-c7eb1727fc10" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateDraftSchedule</con:operation><con:request name="CreateDraftSchedule_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="b45939bc-67df-4797-9e67-eb91f5cf6946" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create draft schedule +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateDraftScheduleRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:clientBankAccountId>${CreateClientBankAccount_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientBankAccountResponse[1]/ns4:clientBankAccountId[1]}</mes:clientBankAccountId>
            <mes:amount>100</mes:amount>
            <mes:occurs>21</mes:occurs>
            <mes:startDate>
                <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
            </mes:startDate>
            <mes:type>MONTHLY</mes:type>
        </mes:CreateDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="177becab-36f5-46db-b0f2-aefbd008283f"/><con:assertion type="XPath Match" name="Check for existance of [ns3:scheduleId]" id="eb3e50d7-8cad-46ab-9d81-c6b4fd671ba8"><con:configuration><path>declare namespace ns3='http://nationalpayment.net/ws/schemas/messages';
exists( //ns3:CreateDraftScheduleResponse/ns3:scheduleList/ns3:schedule/ns3:scheduleId)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e34bba25-c3df-4532-b338-e803ce54084a" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="40362eb6-899e-4dd6-9cac-8b5da954560f" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:commandStatus[1]/text()")

def schedule1 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[1]/*:scheduleId[1]/text()" )
def schedule2 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[2]/*:scheduleId[1]/text()" )
def schedule3 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[3]/*:scheduleId[1]/text()" )
def schedule4 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[4]/*:scheduleId[1]/text()" )
def schedule5 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[5]/*:scheduleId[1]/text()" )
def schedule6 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[6]/*:scheduleId[1]/text()" )
def schedule7 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[7]/*:scheduleId[1]/text()" )
def schedule8 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[8]/*:scheduleId[1]/text()" )
def schedule9 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[9]/*:scheduleId[1]/text()" )
def schedule10 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[10]/*:scheduleId[1]/text()" )
def schedule11 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[11]/*:scheduleId[1]/text()" )
def schedule12 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[12]/*:scheduleId[1]/text()" )
def schedule13 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[13]/*:scheduleId[1]/text()" )
def schedule14 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[14]/*:scheduleId[1]/text()" )
def schedule15 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[15]/*:scheduleId[1]/text()" )
def schedule16 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[16]/*:scheduleId[1]/text()" )
def schedule17 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[17]/*:scheduleId[1]/text()" )
def schedule18 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[18]/*:scheduleId[1]/text()" )
def schedule19 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[19]/*:scheduleId[1]/text()" )
def schedule20 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[20]/*:scheduleId[1]/text()" )
def schedule21 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[21]/*:scheduleId[1]/text()" )

assert commandStatus.getData() == '1'
assert schedule1 != null
assert schedule2 != null
assert schedule3 != null
assert schedule4 != null
assert schedule5 != null
assert schedule6 != null
assert schedule7 != null
assert schedule8 != null
assert schedule9 != null
assert schedule10 != null
assert schedule11 != null
assert schedule12 != null
assert schedule13 != null
assert schedule14 != null
assert schedule15 != null
assert schedule16 != null
assert schedule17 != null
assert schedule18 != null
assert schedule19 != null
assert schedule20!= null
assert schedule21 != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateDraftSchedule_WFB" id="012d9fe9-5c2b-41f0-9e45-5144dda24800" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateDraftSchedule</con:operation><con:request name="CreateDraftSchedule_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="b45939bc-67df-4797-9e67-eb91f5cf6946" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create draft schedule +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateDraftScheduleRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:clientBankAccountId>${CreateClientBankAccount_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientBankAccountResponse[1]/ns4:clientBankAccountId[1]}</mes:clientBankAccountId>
            <mes:amount>100</mes:amount>
            <mes:occurs>21</mes:occurs>
            <mes:startDate>
                <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
            </mes:startDate>
            <mes:type>MONTHLY</mes:type>
        </mes:CreateDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="177becab-36f5-46db-b0f2-aefbd008283f"/><con:assertion type="XPath Match" name="Check for existance of [ns3:scheduleId]" id="eb3e50d7-8cad-46ab-9d81-c6b4fd671ba8"><con:configuration><path>declare namespace ns3='http://nationalpayment.net/ws/schemas/messages';
exists( //ns3:CreateDraftScheduleResponse/ns3:scheduleList/ns3:schedule/ns3:scheduleId)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e34bba25-c3df-4532-b338-e803ce54084a" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="d40550f4-f5b3-4dc4-acc8-9297022a35ef"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:commandStatus[1]/text()")

def schedule1 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[1]/*:scheduleId[1]/text()" )
def schedule2 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[2]/*:scheduleId[1]/text()" )
def schedule3 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[3]/*:scheduleId[1]/text()" )
def schedule4 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[4]/*:scheduleId[1]/text()" )
def schedule5 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[5]/*:scheduleId[1]/text()" )
def schedule6 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[6]/*:scheduleId[1]/text()" )
def schedule7 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[7]/*:scheduleId[1]/text()" )
def schedule8 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[8]/*:scheduleId[1]/text()" )
def schedule9 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[9]/*:scheduleId[1]/text()" )
def schedule10 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[10]/*:scheduleId[1]/text()" )
def schedule11 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[11]/*:scheduleId[1]/text()" )
def schedule12 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[12]/*:scheduleId[1]/text()" )
def schedule13 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[13]/*:scheduleId[1]/text()" )
def schedule14 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[14]/*:scheduleId[1]/text()" )
def schedule15 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[15]/*:scheduleId[1]/text()" )
def schedule16 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[16]/*:scheduleId[1]/text()" )
def schedule17 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[17]/*:scheduleId[1]/text()" )
def schedule18 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[18]/*:scheduleId[1]/text()" )
def schedule19 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[19]/*:scheduleId[1]/text()" )
def schedule20 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[20]/*:scheduleId[1]/text()" )
def schedule21 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[21]/*:scheduleId[1]/text()" )

assert commandStatus.getData() == '1'
assert schedule1 != null
assert schedule2 != null
assert schedule3 != null
assert schedule4 != null
assert schedule5 != null
assert schedule6 != null
assert schedule7 != null
assert schedule8 != null
assert schedule9 != null
assert schedule10 != null
assert schedule11 != null
assert schedule12 != null
assert schedule13 != null
assert schedule14 != null
assert schedule15 != null
assert schedule16 != null
assert schedule17 != null
assert schedule18 != null
assert schedule19 != null
assert schedule20!= null
assert schedule21 != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateDraftSchedule_BOI" id="794b3b44-4072-4e3d-ad01-b9d243534c89" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateDraftSchedule</con:operation><con:request name="CreateDraftSchedule_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="b45939bc-67df-4797-9e67-eb91f5cf6946" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create draft schedule +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateDraftScheduleRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:clientBankAccountId>${CreateClientBankAccount_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientBankAccountResponse[1]/ns4:clientBankAccountId[1]}</mes:clientBankAccountId>
            <mes:amount>100</mes:amount>
            <mes:occurs>21</mes:occurs>
            <mes:startDate>
                <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
            </mes:startDate>
            <mes:type>MONTHLY</mes:type>
        </mes:CreateDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="177becab-36f5-46db-b0f2-aefbd008283f"/><con:assertion type="XPath Match" name="Check for existance of [ns3:scheduleId]" id="eb3e50d7-8cad-46ab-9d81-c6b4fd671ba8"><con:configuration><path>declare namespace ns3='http://nationalpayment.net/ws/schemas/messages';
exists( //ns3:CreateDraftScheduleResponse/ns3:scheduleList/ns3:schedule/ns3:scheduleId)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e34bba25-c3df-4532-b338-e803ce54084a" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="6a7bcdd3-5662-4b99-9196-03adabec8dce"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:commandStatus[1]/text()")

def schedule1 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[1]/*:scheduleId[1]/text()" )
def schedule2 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[2]/*:scheduleId[1]/text()" )
def schedule3 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[3]/*:scheduleId[1]/text()" )
def schedule4 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[4]/*:scheduleId[1]/text()" )
def schedule5 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[5]/*:scheduleId[1]/text()" )
def schedule6 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[6]/*:scheduleId[1]/text()" )
def schedule7 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[7]/*:scheduleId[1]/text()" )
def schedule8 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[8]/*:scheduleId[1]/text()" )
def schedule9 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[9]/*:scheduleId[1]/text()" )
def schedule10 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[10]/*:scheduleId[1]/text()" )
def schedule11 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[11]/*:scheduleId[1]/text()" )
def schedule12 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[12]/*:scheduleId[1]/text()" )
def schedule13 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[13]/*:scheduleId[1]/text()" )
def schedule14 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[14]/*:scheduleId[1]/text()" )
def schedule15 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[15]/*:scheduleId[1]/text()" )
def schedule16 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[16]/*:scheduleId[1]/text()" )
def schedule17 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[17]/*:scheduleId[1]/text()" )
def schedule18 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[18]/*:scheduleId[1]/text()" )
def schedule19 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[19]/*:scheduleId[1]/text()" )
def schedule20 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[20]/*:scheduleId[1]/text()" )
def schedule21 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[21]/*:scheduleId[1]/text()" )

assert commandStatus.getData() == '1'
assert schedule1 != null
assert schedule2 != null
assert schedule3 != null
assert schedule4 != null
assert schedule5 != null
assert schedule6 != null
assert schedule7 != null
assert schedule8 != null
assert schedule9 != null
assert schedule10 != null
assert schedule11 != null
assert schedule12 != null
assert schedule13 != null
assert schedule14 != null
assert schedule15 != null
assert schedule16 != null
assert schedule17 != null
assert schedule18 != null
assert schedule19 != null
assert schedule20!= null
assert schedule21 != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="651b4fb1-4805-43e9-8670-10a291a2367a" name="GetDraftScheduleList_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftScheduleList</con:operation><con:request name="GetDraftScheduleList_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="311078f8-03f6-4621-95f9-30e4e34a935b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleListRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:order>scheduleDate</mes:order>
            <mes:ascending>false</mes:ascending>
            <mes:pageNumber>1</mes:pageNumber>
            <mes:numberOfRecordsPerPage>5</mes:numberOfRecordsPerPage>
        </mes:GetDraftScheduleListRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="4fa0357b-9cca-4f29-b0ba-e9a9db3e976a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e3329fbe-4933-47ad-a3e7-0b50c3a22fcb" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2fd84260-87e3-4517-a6d9-fb7396f582d6" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="dbcd0c8f-0aab-453e-9171-1dc0600d0daa" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def totalCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" )
def returnedCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:returnedCount[1]/text()" )
def pageNumber = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:pageNumber[1]/text()" )

log.info ("  >>  "+holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" ).getData());
assert totalCount.getData() == "21";
assert returnedCount.getData() == "5";
assert pageNumber.getData() == "1";
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleListRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="25dec279-d0a7-4861-9e4f-c71f3ddf4833" name="GetDraftScheduleList_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftScheduleList</con:operation><con:request name="GetDraftScheduleList_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="311078f8-03f6-4621-95f9-30e4e34a935b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleListRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:order>scheduleDate</mes:order>
            <mes:ascending>false</mes:ascending>
            <mes:pageNumber>1</mes:pageNumber>
            <mes:numberOfRecordsPerPage>5</mes:numberOfRecordsPerPage>
        </mes:GetDraftScheduleListRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="4fa0357b-9cca-4f29-b0ba-e9a9db3e976a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e3329fbe-4933-47ad-a3e7-0b50c3a22fcb" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2fd84260-87e3-4517-a6d9-fb7396f582d6" name="Not SOAP Fault"/><con:assertion type="SOAP Response" name="SOAP Response1" id="963db3c8-3783-4b77-9ca9-212d41238fc1"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="1baaf347-bd84-44fa-9f51-110f878089c4"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def totalCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" )
def returnedCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:returnedCount[1]/text()" )
def pageNumber = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:pageNumber[1]/text()" )

log.info ("  >>  "+holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" ).getData());
assert totalCount.getData() == "21";
assert returnedCount.getData() == "5";
assert pageNumber.getData() == "1";
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleListRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="b7097562-f665-48f6-8628-92a674ffd045" name="GetDraftScheduleList_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftScheduleList</con:operation><con:request name="GetDraftScheduleList_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="311078f8-03f6-4621-95f9-30e4e34a935b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleListRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:order>scheduleDate</mes:order>
            <mes:ascending>false</mes:ascending>
            <mes:pageNumber>1</mes:pageNumber>
            <mes:numberOfRecordsPerPage>5</mes:numberOfRecordsPerPage>
        </mes:GetDraftScheduleListRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="4fa0357b-9cca-4f29-b0ba-e9a9db3e976a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e3329fbe-4933-47ad-a3e7-0b50c3a22fcb" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2fd84260-87e3-4517-a6d9-fb7396f582d6" name="Not SOAP Fault"/><con:assertion type="SOAP Response" name="SOAP Response1" id="64a8b78c-fde8-4d29-a4f9-4edb82d6bfcb"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="2e7a32fd-fc09-4679-ae58-3c45ba678aee"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def totalCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" )
def returnedCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:returnedCount[1]/text()" )
def pageNumber = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:pageNumber[1]/text()" )

log.info ("  >>  "+holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" ).getData());
assert totalCount.getData() == "21";
assert returnedCount.getData() == "5";
assert pageNumber.getData() == "1";
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleListRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="ddfaf7e3-f8d2-4a37-a238-4a7009cc0e49" name="CreateEnrollmentDocument_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateEnrollmentDocument</con:operation><con:request name="CreateEnrollmentDocument_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a2d6acb3-7045-4a9a-bcfb-42997ae5c540"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateEnrollmentDocumentRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:note>ref</mes:note>
            <mes:documentType>type</mes:documentType>
            <mes:base64EncodedContent>JVBERi0xLjQKMyAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQW5ub3RzIFs8PC9UeXBlIC9Bbm5vdCAvU3VidHlwZSAvTGluayAvUmVjdCBbNDE2LjkzIDM2My44NSA0NjAuNjEgMzU3Ljg1XSAvQm9yZGVyIFswIDAgMF0gL0EgPDwvUyAvVVJJIC9VUkkgKGh0dHA6Ly93d3cuY2Z0cGF5LmNvbSk+Pj4+PDwvVHlwZSAvQW5ub3QgL1N1YnR5cGUgL0xpbmsgL1JlY3QgWzE0My40OSAzMjEuMzMgMjE0LjE3IDMxNS4zM10gL0JvcmRlciBbMCAwIDBdIC9BIDw8L1MgL1VSSSAvVVJJIChodHRwOi8vd3d3LmZpbnhlcmEuY29tL2xpY2Vuc2luZyk+Pj4+XQovQ29udGVudHMgNCAwIFI+PgplbmRvYmoKNCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMjIzOT4+CnN0cmVhbQp4nI1Y23LayhJ93vmKfkjtSqrwWPdL3jDgCqdsICAnlaq8DGIAHQuJPZJM+JHzvadnRjeETDapGCFmVq9efZkWBvzng0ZsF04fHgK4f9TBIZoGwRYmgbijmy5xDfAMm5g2BBv4tDqyMKIxLAp+TDMGwzBMiySHWXFYM\/4FLNPQxEvH\/5Zj+7DKac4ODJcsGI\/SzRd4pjzcgz4AQ9NtuCs\/m9UNWNAdA\/0e7M8Q\/FcQ+Qe\/0AQv8Q8Z4ZXhmcRywHUdYlsQHuB+qsM4hW8fXI2YGriOSxwDTN8hHtrQiKsDZ\/AAwivXJLoJrm0TX5NOLTjNaJLvYfS9stkss1xiqWXPLInT6wWmRzxf4VD+CnIVyMvRsLX6\/tHoqGvaDnG0NpHxdDkZBTB8eoLhaDR\/mQUwnX17mS6nkxUE8y\/Qwqt2WxaxHbl7xNMs4yndZPAYJTSRgQpYuE\/SON1FLOvbbiIntX0xh4f0Nxi2bfp9Kw2X2GUS0ASjlrN0gC7e+ZalGT3rdZ9oav1inyYMZin8DzzPuzMt786yLbPaU4ZMl9tuhkxzxV1J4eX5ebj8CfNHVCqYfp8GP+FC7KtUNiyRyo5vioyRrJaT79P5ywpWwTCYPE9QbHgYPg1nownMZ6AZ94bXgqwAPIMYZbQmi\/lqGqzuR8vJGN\/bGhg68fT24o+GSOEePPTeUwH4MQ2+jpfDH8On1f3q5SFYCs\/ms0tcm2CNtDZ9NPphbZ\/YhpKqdq\/tnXlv6j2Em20fda+FrGLk2BYxrHdidJ3gKmqO6RPHk5jo0mylvGrCFnydrmAxWU7n4\/cjWNo3LYLJaSrzukV0V9hfQWMMBbJViozR7QpQx8wRuqn9uifbSQdA13zie22ENt3xZDVaThfiugI1vDaoY4tQdzANr4v5XtKYtiF6bAlmoWR6F8zERqFfgLUypsKxNJ34t0lZGqaI38apmk2ZIJ2gY+Yaxk3RdZ2YpkTCvGqaQaW6AritegOxZGHBeZTsYMzwjIly2PL0AKM9C1\/xbld9Bd7rqEhq3WljqyoE+eoqr4D6lccw6nob6BKiEv0GF8vELv9HLqXimiNa5w3Fbd8VnpWKm1pXcQVwU\/EWxHD0FQ+sszyl8xRCzjZRnnLAPr\/hFIbHY8x22O+70isr\/dJj0dta20i\/6AqiX3QXP15AyF7Xr\/wNKqXybRzZ2vqUt9Gm59YNrlPM+BHDa6MV3+ueQstJ8LKcTcYwxWYLj5PJqoPsaMTB1mPpxDUvkD8YOvpl1ivEOetc2cYpw3fBtmWbls1pHgyf4HG+7GugUn7\/NqSJxGzzGvLnZLi8C+Z37f5Z+mA54nTo8QHhUF5MbBvnM8dsob2vS+V2CXrNsfbi\/RVNQeiu6GnC7mweTL7A5Dc9RDh15Psog6weQkPK2baI4zNgbiPIMeU5Xp4h4pztipjyKMdJiXQcx5JxWmmhm6K51hQM\/IzMLJTAVxPP9HkxXwZDbKnNHIeheh62z4+avOU5Iv\/lxgQp4lydboFxnvIMsA7\/KViWR2mSAdB1WuRwTgveODUAFrMw52kShZBzmmRbxsU+eU1DtTVNrrbluO8oZ7MiA4q1v2eQyEEejtiAc7YRu67pup7ohoKu2IHdGYVFwh2pkcAJ1azA\/zidDqA9gQ7gYsocgBwzgaKFFEnhO3qDWiUDiLbyGs0nrz1sHV\/MlYLtpf+CIGchi445IPETurET90q4hKH7hxSDHCXblB+okLHUn7ZkTqRsfagEfjA4FFkOe0a5OsUkcgoxruZ9XHXR8pSy6D7y3tAzyrcVy09oRlhQzjJ4nC5XQdtyAqd9hM9S4kuZPUjm2gY2W1f1wb\/gL9AJBiGORZCkPAk9MFkbtHyyKxPi1yfUBQvl12fSA6kTo4E0CJ7cWcijNbugIj\/UwgkvsBihSLIC36SwA2mZ\/T7GNJIxDmNUThRrHW508Syv1yyO2BtGR0YPv6jNVCuaCF4zNg3i2jVj8WpFucdDnKqNZr3ZiCZ82qQxNg6gBymYrAQMVZHhs7KoIUmsBxP7n1\/OcQxOEeJFyZuodHHWqmiE6UFqkUth5JowxU4VqqalXD5iYh3z+ExguhVJktNXpvyWSYQJtS4y7IVZprIJj\/hNKqt1IJYrVHnmK6NV5K8Z4+BYPgtvy3CWPjf1h7GIylgMsFQFBfW1NLOnbyonCtXjxOUBG9AZNoUc+WSKRAcZVuFHJjVOlRAMZREEG5nawVKt2vQs0YSrVu3ZRLO6h4Xp1I+y2Ip+M04HME1CgvQyaVXkXhbtElVWWyXLez99DHecqQKUFf4o1s7pawYPFPX4GwIuWsAIHcCQDZpAoolC1BpeXilt2vXDM2fZEft3tI5ieTQJPh0bRbJhKhxXnAhA6aJ0jm7wUIwy7CaYl3\/+veDXp+Y3GDFKauVfXf7lOzle4XO7f8H4dDqRcJsf6Zlg2EqEZp1HLJz4THGg3smQYXS28K02oVDF5KK3UX99rmTqrq0k06qgYiNcsz2Ntz1adeJBYIEtBqOZpDkbCA15WRFrcQ9CrKCdOAJUZjJ+yOqEuE6Asigyxt+isPm95R3CliFyUxDGCn6LNhgSzHSEJjDM4Eh5c6oqGgNld1M+FlV1igXWcbJyIIwxUTcy5QSvNY0xysirasJcmaTYKk+Qlfl9m7RZ\/35yLOugptHOrfW5zrtq8ChDIho77uAbQQWZ5vtLad9L4xpPOnegifiZUALfJoxPuZoaSCsHu8TXhdRQFKJoPRns03ijoLdYWpkiuWVYZFRMjpE8sTZVHFIub+VRXshJC7kOEarKkgoCb3F2EOfa43g6qkDIH9hj0diK\/SMmV3ccwQ7LWA\/CdZXqWHCW38YTVbpVkooyvY8xY7HN1A\/YzRZb1C12V8e7UbCGGstbBvA4wlBv8FiRTFlSZqM4OqQyeIxhGmTy+MYGfzxX4V\/w6I2GZ1ikSEoc\/lmKgRNHqYzEvwi65lVBf6drk2b\/\/wGfn0ckCmVuZHN0cmVhbQplbmRvYmoKNSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgNiAwIFI+PgplbmRvYmoKNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk5Pj4Kc3RyZWFtCnicNY7dTsMwDIXv8xTnEiRIbWdp1t0N8SNNgDotL9BlodtE6Sit9vp4iFk6sj\/bso9gZcj6gLN5iCieGaUlQvzAUzTfIAVCC52xCzYI5uKt84g73GxOOR2aT9TTcOp\/MpYp9dPXiPep2+ZhgZkTugSrZqWvsBmbMXdZV+o8HPrdAm\/NkPbgOwixx\/0\/u2sDddNmSAF\/i3hUS1hfTGEFxlnzUfWiav+shqoMCnQtZW6d\/oUw2cqxIHWmiPUr47HXQ2vzC3XrPWwKZW5kc3RyZWFtCmVuZG9iago3IDAgb2JqCjw8L1R5cGUgL1BhZ2UKL1BhcmVudCAxIDAgUgovUmVzb3VyY2VzIDIgMCBSCi9Db250ZW50cyA4IDAgUj4+CmVuZG9iago4IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11HNJQ3pg2JqENFZEfKCEU0LpC14rfn0Fg6co+tmVfxlKRdh5X9RaQLQxyTYSwx0dQF5AAoYbMjPXaM6bstHUIO4w25xSP1Q\/KoTu3fwnzGNvht8dqaLapm2FimW5hRJPcFdj0VZ+aJCtl6o7tbobvqosHmBcwGYfXB9tnA2VVJ9gMboxwEktY30xhCYOr5JPoU1Tfrfoi9wL0LHmqrfwFG9KFNYzYqCyUX4z3Vg6t1T92TT1uCmVuZHN0cmVhbQplbmRvYmoKOSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgMTAgMCBSPj4KZW5kb2JqCjEwIDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11kqahvIHYkNCGipofKCEUEKWstOL3ZxBYurKPbdlXYyVIWoe7mHsk3wqZJILf48uLPxADoQbPlHHSaUy0lcbC7zAqrzEcqzOKobu2t4hZCO1w6bEemm3spkiNpkcoVprZHGVf9bGJvFLE7tjupvitunCA+oAmZfH5YvNuoKjqiDSBHcOf2BI2D1NYQeHO+cRasuqnVZdnjoHepZ5Iw3+hFcncKI3QiMQXPwaLlg9txD92rz1wCmVuZHN0cmVhbQplbmRvYmoKMTEgMCBvYmoKPDwvVHlwZSAvUGFnZQovUGFyZW50IDEgMCBSCi9SZXNvdXJjZXMgMiAwIFIKL0NvbnRlbnRzIDEyIDAgUj4+CmVuZG9iagoxMiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk4Pj4Kc3RyZWFtCnicNY7RbsIwDEXf8xX3EaQtdZKmobyB2JDQhoqaHyghFBClrLTi92cQWLqyj23ZV2MlSFqHu5h7JN8KmSSC3+PLiz8QA6EGz5Rx0mlMtJXGwu8wKq8xHKsziqG7treIWQjtcOmxHppt7KZIjaZHKFaa2RxlX\/WxibxSxO7Y7qb4rbpwgPqAJmXx+WLzbqCo6gibwI7hT2wJm4cprKBw53xiLVn106rLM8dA71JPpOG\/0IpkbpRGaETii58Ui5YPbcQ\/dxE9cgplbmRzdHJlYW0KZW5kb2JqCjEgMCBvYmoKPDwvVHlwZSAvUGFnZXMKL0tpZHMgWzMgMCBSIDUgMCBSIDcgMCBSIDkgMCBSIDExIDAgUiBdCi9Db3VudCA1Ci9NZWRpYUJveCBbMCAwIDU5NS4yOCA4NDEuODldCj4+CmVuZG9iagoxMyAwIG9iago8PC9UeXBlIC9Gb250Ci9CYXNlRm9udCAvSGVsdmV0aWNhCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTQgMCBvYmoKPDwvVHlwZSAvRm9udAovQmFzZUZvbnQgL0hlbHZldGljYS1Cb2xkCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTUgMCBvYmoKPDwvVHlwZSAvWE9iamVjdAovU3VidHlwZSAvSW1hZ2UKL1dpZHRoIDIwMAovSGVpZ2h0IDM3Ci9Db2xvclNwYWNlIFsvSW5kZXhlZCAvRGV2aWNlUkdCIDI1NCAxNiAwIFJdCi9CaXRzUGVyQ29tcG9uZW50IDgKL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0RlY29kZVBhcm1zIDw8L1ByZWRpY3RvciAxNSAvQ29sb3JzIDEgL0JpdHNQZXJDb21wb25lbnQgOCAvQ29sdW1ucyAyMDA+PgovTWFzayBbMCAwIF0KL0xlbmd0aCAxNjE2Pj4Kc3RyZWFtCliF7VcHeFRFEH4bOyiWWECsKPYuYldExYq994IdQknIu9frUiI19CYSCR3RxCASBDEixWCABEKNEA64AEmAnEAE7mNm37tLuZCEzxT9vvu\/u2\/fzsy+m392ZnaP4yKIIIII\/q\/I7XSw90q\/P7Ww68w1je3Lv8ENee+8Pvrtdu0e2z7mu0k5x6DC64R4Gtav40Rujr\/99o6v\/IbYseuOxOx7q7KSCSEGx5mEb2j\/agtf3tS9BU0X7sgH7Fi48MiGDP\/MKsxEYuJAidzA\/tUWm19MvKKge\/6X6xm6N83vuOeekv7hdhqxcPjvEjk4dfqeFq1SUo44SElJ33X1mNQzQnpbhJzSMLEIMZ1BlAixTMg04GQbKLEw57CCTKI5y1SU25CRAiE6hkAnvEUI5W0QmHbd8+jkH7140fr0VvsX9ezZZ1HPPi32p6fvWvxqaZKrl3TmaAUiFkdcSBxPXBE88MxdtkxDoQ58HDVkpUHKwax7IqvHPh3ti\/Z9eOYHb700LH\/TZ3828\/mi\/3ig5H5XT4nhhM90UouFGfwVOHRdcIxY\/VAichI6zzH\/mbXNTICVygn4IgiExjavznnE+d8cEjvk0qKipKS2yl2xbXO\/v\/vsHxVl\/ildY5hewqiHE6FsIqDbtqU7IbYIha\/IjAWXouUQQ94aSzoKlDACdU7ki6nXXNXjkY+Lug0qLj5x8EeDBv2aFPPP9Z+P3OiPY3o1dHZUIOJMIOfd1EMiHp1IBnG2j7qENCDHzM3yROR6INJ1+cWZLVs+fquiKLPmrHqqCEbl4cnLLsl832nBEDy5EhEpNIFsgS9UrsqSXiRWMPkN90EkusflVc9EsjP2ZGW1OmGzktumTVGX4sBsILL2vYLnshIvY3oIs86XJ6KzWLPmZGEhsCRzzhgoEHDTRl9BJSADmdWIiNGoZyIrx2Rt2PSNolwQKM4FDt0CM2JgaDbsrMQ8x8DpUyTUWAWWR6YjNdz2xJ5wHyD+Fssz0+1lWrCpwcJ6rZHUjIKTwPNTA4MVpcmhHjGxPwS6wDzmtMRS10JCXwT0khGxwUURkx5qQ4Oge4AZFZ2a1tAOigaT0aKsO3MqjCbuqRMI7F9YeHVPpPAWRYkvDiQpyhuTR2QeaqIUr8JCef6cvOqWuXlWCQJ62Ugo7Dw\/Nn5WYLOi9Fh2+4asEdcuVU6e001RPi05t7plVRKxnMpuHORduED5NgDl8XLm9K8Ar115ujJ7jm\/IPG8V160y0HAiEiFVblMD4bB33k0\/A4+Rv89tvQTQesvfS5XZMwZ29lf7Byt4ToQg6zahocQyq2QkE9c0TGNpld9Wflara+oa\/50LoE+9u3duv78Y+m25bm38zpsHrI53DODyF\/7D4bCp+yDVeJNCU9YLaUhUmYhdpuKMSiE7Fp75+pOdytKN53WY6KLDlotiB44dvi\/oF4TZQwyC3cnC5mtDf1VFg4gyXsPAb12CktEp07k+GJYFXc2CQ4eoMsXT0WMQg9eZwPFSpuwgUjkJdlc1wNoxhNs0lcGEjbAKWiOR4GwyPBIhWjVE4laW3PjsQyu27g7hQPMXHjx\/tasWWDzgSmsZEEYJnOYwg2DGwUFpolYULeqRqK1LoWAKqmpwPD7xhq3b8NHAUnIFQSIS9UAOUR63Hdq0Ywg\/aKEJG3kDVSC0IFu16mhwWCW3rZuQdqAMaUvum5IdFyTCLn\/U5jRIeyprEBkV9kDV4GILDpgePFYEDf1HHbvvEltTVSaCI535TW0qc+UFjAi74uNrOGYdMrQJPLIRd0RFITYSidbQ3XOihu\/tlzZ+3Ljk5ORxyeO3Tsjwpu4LKlXWiXSbE2FHsLsa8DJRg6T2wDaZlmpyoiXijnCOjrnpErF1D286\/pkmV17AiMgQH7gDWRWIQElYaMJGD3XC6DYPnoZ7X4HJgCntm09M6zV06NBeabt\/2uYdta9MiZd0GZIfgqPLkKbgDAiwOlWsajjHDQ3y2SBM5+aPaYEBZA7IKQogaSC2EAgUOC3JrRGgoxNIG5g7hhJWHpiwEWsKXizhalWoub0fHhWVsDxj2ooV06b9sm1KVOmjNdg3GES8ox3P4XR5zqQob9+EhIS+Xm\/vw9H15tjxAnYr+Ce0tljTf90ThaOySw8+6asfnyKIIIJGw1G2ZvkFCmVuZHN0cmVhbQplbmRvYmoKMTYgMCBvYmoKPDwvRmlsdGVyIC9GbGF0ZURlY29kZSAvTGVuZ3RoIDc3Nj4+CnN0cmVhbQp4nAH9AgL9\/\/\/\/AAAARE9x3OHs9PTy2uTo8vHwiI6P8fHxssXL9PX5pr\/O4+Xv4ePo7vP06\/DzaZKs+vn5ZW9\/9\/n6qK+9Y4mTPkxx9fX2ZoaYlrPEX2l9cIm1nam\/ZIiwYoGx\/\/34pKu56+zwn7jIaY2mfpC3cJaisrvZb5iwjZu5i5vChZay5uny3+Hm09K3+vfoxMOr4uvm7e\/1a3SCZIip7OzqZoWg\/\/7+dHuF\/v\/+\/Pv5YX+a1tjfYXWY0tXdy825qayhkKq9kqK1V2+O0tfm3+Lw5ujsbZGYiqS4navLf4id4OLn4+Pg5+rWmLbHqbC+\/f3yZZCp7+3TxMnHmJ6uuMvVvsTasMnWW26JXYGhUmiG29\/tvb+uzdrhgJuxUF98z9Tiy9biS1x63ufr8\/f34uTp9vX06+70sLGj2trB1ODl1tnqv8TOgoiN+fn4\/f39j5ep9vb1o7zMyM7j\/\/\/+6uzvkq\/C\/v7+qqqq7u7uVVVVd3d3zMzMu7u7\/\/\/\/mZmZZmZmERERMzMzREREiIiI3d3dIiIia5CGgImdk7DDSVZ5S1l8pL3LbpSdzdDYTVp39PLX8\/Py9fX1T2KA\/\/\/4ao6Co7zKR1Z7X3+pwcfaa3WNaYSdX3mVeYKJZ4uFb5Woao6GQU9xbI6e+vr5+\/v7a5CYaIuGZHCJhZa\/SVV3Tl19YX6PZouk6unmxcnT7Ozt7u7sS2B+\/Pz6nbfHX2uF6uroa5CM8vLw\/v784uLfYn6VZYycobrJtrmq6ens\/\/\/l6+jNWnGLscbT9vb2W3WRuc7ZlLDDYn6hfqK2bZOh6enxa4Sx\/P30Y4CrVWmK4+vubZWtY4OOY26K5OThcnuTrrTAm6K07\/Dz\/Pz78vP3pKq0pLzMc5mteYukxNPbk5qsbJGd+\/v8X4OXqsDPbJGSRVJ0UmOFdZOrrMPR9\/j5g6a7\/f3viqq+ao6SbXuR+Pj28PDudp60ZIKf2t3iVWF6WWaCfI+xmrXFaY2Ms7jEjJSm9Pb5qbTTyc3VnrjI5ubkjbkP+QplbmRzdHJlYW0KZW5kb2JqCjE3IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0Zvcm1UeXBlIDEKL0JCb3ggWzAuMDAgMC4wMCA2MTIuMDAgNzkyLjAwXQovUmVzb3VyY2VzIAo8PC9Qcm9jU2V0IFsvUERGIC9UZXh0IF0KL0NvbG9yU3BhY2UgPDwvQ3MxIDE4IDAgUgo+Pi9Gb250IDw8L1RjMiAxOSAwIFIKL1RjNCAyMCAwIFIKL1RjMyAyMSAwIFIKL1RjMSAyMiAwIFIKL1RUMyAyMyAwIFIKL1RUMSAyNCAwIFIKL1RUMiAyNSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNDU0ID4+CnN0cmVhbQp4nK1a3XbbNhK+x1PgUjrHyxAAf8DsRU\/WjU+zZ+OksXa7OW0vaAqy2KVIhaTs6oH2kfZ9dvBHUbZEQg7TU5MEwA+DwWDmm6G+4Z\/xN0wCj8RMX2gS45AzLwoDguPI3NQC\/4JL\/Oa6IThrsO8xnySRzw936NDWZIDpezTAvvxP3iTwN2R+jGMfJglinG3w3xY4DtUQc1ls8JtFRhDBixX+Fc9uPtzO8V98j+DZv+dYXd\/LK8WzL6oDbt7Zmyt7g+0NvI3029fmLQ\/6fseLv+P3C7XuYxmpn3gxI9GQjMjIiJWMszdv5njxxxk4Srw4DC9Aw+fBOv1FnHjMBQ309\/m5sj78y7R0WrOa+WoVbbSHZne2ZfFC1V2L3Y2P5mqfb3vv\/o7O6juKvTCIyNCacH9NqK8hBSNNjXOPE4ajGEw1igne4JDCbdJrKo6aCI9R0X8NGmDIGq8G1B5RL6JWxFBPri9G7fTlJsqX\/YT7AOjFlIQRj+CO0zgIiZRcnabru8M4dGLc3TXcJzzAT5jiRT0gYpB4gRURkPyERXiRYTi9crC5aGFZZyM3cle1IcjLQm47bNzbOQ7VWiI0+wWaIjz7CS5MW4EcKPvw7Efd+Elf3pu3dd\/NhzkOtDEweYKR7Hr\/RQ8xMKdQdJuZVWMsfup3fdVQZvg\/9eVLf+rP+sFOZsQyL9weLeQfeI66eUzXzacjzI9aFLtyPfQY7AftWJAxzRP7FMSwPTHhx\/s0sDunrf389lPwXsGQhQbGQm\/yMi2zPC1wVm22aZmLBmfrqmoEXldPuF2LPW7WKbj8fbWr8VbUTVXC6LxcVfUmbfOqxDdiKWpom6Nxj0XC3uk+Egz3BUOzIn3CD\/mjFKcqm90GJpbS4Dp\/WLe4rXCRb\/IWN9VG4Ptdi8uqxWlRKGHz8sHrpJJAadFUTuL5cLycxKvFt11eg3S7RgrTCpgaNKSU9iRA5qIQWWtUl5ZLvK2rVrYoNfa057nIFfIIvCM4r3HBPhcihc2rRboEfeWNVEyegUQgyGpXFHsp7q4E3TStlOtpnbZS4mXlnY84AUTDJOEHQdCYIG4BLIypDIdToYWxtHoHtAUYUrvfwvZVq9M23dtDqSW9j0uxFfAA3dISYUeXO+h32b+AOZp9VeNG1I9yx5Q5pY8CP+XtGuzMw1Lsg5DnNcIgwFGga3ZeB40MrriRSzbToaFlUu50fPCsr7+RJYMJ9zcmS0t4zordUrw9r\/kgimT0ZM4ioSELIz6XKyQ4JNTj0QDaAsgJkgv87wAaYV4c08gBjaJR6yc0cpQtCwzaXaUc\/p3IdnXe7nG529yLWu06aBYc6oBlEaBpJI7tbN93cju9BglsFx9AW1ha7KLXcbQT\/OysXkfRupW+y7JqV7b4Pi0gpmq339Zp2aSZMl0w5baq9+etlgUhZAmHOSey2oADlfSnstpxtEusdhSts9rrWiwh4BslKuVmuqnJKojEA8lXEno+hDA72UThRvoYNh1aSLzECe0dUI3VCdpWCrGUwV177mwHehowNRp6lFFu53UwNaBg\/2tOR0vJgHZ16bROBh7EaZ0QI\/Iai0dR75fpHkhek5eigZjw4VbF30boY3UviurpSsavAmxDk0TgQMAae2pyCNIBRE3ipIkeVYZopPWtpVVaP6+oqyPpXGSCMzxyPIxMQOT\/BL5ryHvTGcJfsWZ5AmauVYCVMmvyrPihJczn43sQEI+EPnOWxlg8Gl4bSwJ5fpzQxjXFIKVys2MXK2URuIzTKb5xcsy4zAtS\/OGUnYW0F2dkyh6wkZR99hWSiSGXHXhxAi8eQw8BDrlsCP2RH0WvEfRXPNsCq4D0GcSFDBmcNSTPcDpUWzFHur4Q41muag3lSqXVlR69gbQanvTgVvXoYYqVxvZV+xe9aHntX3TB+B91QaDSy9QL1D030ILswv5U3X1d6GXpofq1ddrr1kN\/6AZdItPY3+eaMnUfPb3R7V49gNtQT4VahV6L2Rb90M5RoGDOl1RDkoA5JtZ+hmoe4wTicGwCv+dFXonW0ZFp0CI6JVrCJ0SjLJgSLfYnRGP+lLvAgil3gcVT7kJATu4C+FIec\/+FM0XPnHTv38AcAfd8\/\/kcqhbs83F\/3a67402VYzIVWtY9rOfIuGVZ9Kz1wFK\/9dB3BDpsQgA8WQsNCfGoD6m6kXMgbXOIUge\/AEc6olOxcwZCDpaWTsk2xAfQKB+gcO6PTONMCR8dl\/ArXabWwUMXwMWjDjq6bW9DCfQs9eDUtsni971u2+lLo3pM8NJNorEhrsPZHr0j50G2rerjmFffDn55k2kVi4lVwGWsZdjWOn91jP1K6+j81QVoQyeWkfBSvK9DeS8DX89pkEy0WutPp0Gz\/nQStM6fToMWXmwlt5X7sX9Zqwy9hNDnJ37U4NGxwZ93JJyNZUYmYjW7bI1TlTtu6yqDZFt\/rugVsZqrATbAuZdwQuyME\/leGiWOFYOPaV628L+WOtXluN9mzW\/zK0i6m20lC3IDRRG5gIBEiZ1yomSShuF4YUElk9cj+Rz4G58HI4CoX0PBVS0\/9agiQCEeVDniUTRt\/pDq7Rxid5CgxyTqFjDVfgauVbhPNWzbtqrV9z5T7Lvf1SLdNf2PVeg5xY28mDFmJ3ItV4x83KA0ci5XjBc\/KHEru7kVP0gSj5crXnxG\/q5yBYEzzmm\/CuD0C4MT9ETmkcAu0nqOoO0\/olV9R5Tj4RzNwOdoBur\/bsGVilIKmWkch3ZxhjIPFikrXK1WosaDJ5dyCpyGPNfa9\/KOC9CceIc7nhvvmGa1lndMg2Z5xyRoHe+YBs3yDne0SXjHkbVPxzsgkPZ+2zLEO8yXYB2lzLdgxUIgjg\/8KoHKDDeJuZ1povhEQlX7nQoNgtDgTxymzxxhT3ux5dWZ4\/kUjRDfiwKQ6TATMuULnowHgT8q7fHzUl\/bo7meRXPCQkXFjhfllg2iF4IzYNgkCU+oiEcJ\/DsrfPc71E2qogpoiUOwUvfCVEBlC4Qt4qu4pasgOgABJ549mUwayX49eK1Gmf5KPfQ7hJ1pIFkGlxHSqFvQ95X4DxYk\/dpRcPfp+L6ucl047sr1si5knjJdLNIjTFdhKwhU9qthlb5ISpDo2P4CKVexXeg2U4rybLl96Ae98qcwnNu1mdg+TVnBFlWP9fZK19EVKSZBO5AFdzQ3suCM50gWJlltRxYmQevIwhRoB7IwCVp4sZVMQxb6x2c6spAkcnIQZ5wtuHzHGYFDFwZxHsgfkZ2GQ2ej+M\/4\/zgQtckKZW5kc3RyZWFtCmVuZG9iagoyNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9HMSAyNyAwIFIKL1RUMSAyNCAwIFIKL1RjNCAyMCAwIFIKL1RUMiAyNSAwIFIKL1RjMyAyMSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNTcxID4+CnN0cmVhbQp4nM1b247juBF911fUYzuY0YoUSUmLIINsI5OdYJPdwRgZBNk8qGW6raws9erSbud\/8kPJD6VIXXxpi6LGxiAYoNst0acuLNapKml+hY\/wKxDmksBvf9EoAB76ruCMQCC6D6WEz5DDN\/cVgaQCz6Xci0KP4aeAEi5C4XhuSAPGCVRJu+7+06V1MKz7dI+fo5DBDigsS9QDl+NK9U99iNS3fS+AgOB3ROAkW\/huife8yBewTAD1Uou7X8stfLNM0ApYruHvcPe+WMBbAnflAny4gwUIuOsuNQvn\/E681n+0P9MFcLjL9M\/2c1zrG7JaIH73Ffms\/5DlwsFbe\/3HqhUQ7\/t1\/4Dln+APS+3mU\/Oo77te6NHePNDmOco85k+b99CgLrTXL5daYHupasU6l8WGKEEE\/FSsSRia4Sz\/edmIYY9EFLgk7NG0ERf3yDkx4qcG94DB3VPRan5sxbfayScu1GJVfCFS6ZzrQhh3AybomS68\/Vb3q7WMdZal+boot3GdFjnED0VTw75oyiN7jQGMilwMXBr4LvG56BVxbFwMg8hjI19h+55QHidn2CYjj7Bfo0Wz0UxwhM+F+5s6UqN4PkNfs+hGxjJ6S9cF4Q3RGObeG6Jxby7aX4qjCDQEvYOB+Uqc4G5E6HkSmIx35zTex3NLSN3AfJ6dFrYu47yKE3WeK4jzFciXJ1mmMk9MYYYR5hLBo17Qdc4\/qC1C15+LNuV7M1MKzs+y8GWmdOyZ8tWdM6Z0ZjEljDOlcO4eToS2CB2\/tZc61MrIqz3Bdc6Yl33HXcuIy73jIuQywcEMgnPGrSCYrCLfH+ROninHnkMORHmCfRKhzihR2sXqgRyds+3xQpdzKqwNO2yPM2UYJcT1BQo3GHaWMY5ZfzxBBLgZLDTiOjNIt6dwezQw0244F3CCdoOOdm9i7kC7N0ELZttqRbs3QRto1xrtmHbHafUWyh0SGUWS9gJiAXdfylVa74qy3qS5rCoAcyBSj6iUIAYZt2JSgrzsfVUm5RGSt\/d\/x6TtpQ6yvbTFP9TqFvkXqZY448tbvj0oNdJdXciBnsu47\/eesWoVJsIlDGdDWqTVeQpapFV7QLu0ehtz+7R6G7Rgtq02afU2aH1atUezSqs3Ue6QMELfjW6HJqKjatOE9mEN+3FATMIuC2g4A7BoIC4lxJDLHSRNVRdbWb6BnYQkzuFBPqY5VJu4TPPHtm46HqL4HqzifQXrstjajI24qtFHyOhEL+eu3kjErqXSpJJ5DUhKFeRFnSbShc8bmSt1tO55AVmRP8oSlH6nNhR5neaNtFKOeYp2bHQrtEvka4fEFaxklZTpg1zhjVOlvy928lkpphRX3lXaYftqpRwVRwRlUq7BVrjGbngPdbqVgLpm6TatTTQeuB4zirCvOyjxZoIpF3YB5ppqcoZ4XJwCO1cfPGwhIo3m3OAYsyiwPHUfG1npscU7Ay7hWAexcAbsX1MDIRHMCaGaU9rjpQY01SSJgM1AM8QgCXQM+jPQTI4LvbloeGqKPMOyVx2e086aXJpWUWyqfT+cI2K327nrNH+RZewmxfZC+36J9MOAzAksYwnB56IV5ZCj2rTy04\/wXfEClHM\/OohyBjcpt9BIeUWoqQxstQ2Bf7iSHV3hqj7HK4dv6StOBhtYj7vlcN6QhIlV3\/8Js+2fkU2KN3D\/e4iY51FTsvHCdqZ0IuDqZMNE2BHMTZINZzesZ5gfWdYzv1ma6g+sBL0wmgGHNP++PRRv4EOeuPDz3X+6C\/\/9eQFP8X6r2P+pLBJsSVUVUsnyGfkUkFnj1TbN06qW2LnCw96GSBnlU7Oijkjvy6KqyiJeVUrDOE\/SODN2wxjgoQhNEs6obymTTV5kxWMqqzfwww\/3gJUExFmGRcRDjYbWdSa1+aXMMHpXve2VO24pxz6GRVE0w1KrAEGmnDhrQBzbcPMxG0zUWs6sFn\/06dxBJJ7l04luFHjTI93Pm7Y77xvsSKtEKObzhdOOeMVwaaXXFvZtNuFYf5CQnGl37Wn2FdXTrzpBwcLCFfR4goLJfnKC8n2hZ+O7YWQRaSdS7cTWu74eoLP+7vv+kX3oqMcEuOZF321Xlu2kpZ+64PonvabsZzNUb6Lo1yf6Z71wRL9ezVeonpuwU4hjAa1CLVyrRCsy02q131Iq9nfXCwj69eUwxhm+1mrUfuEY9J1+1QD6oLMNKj8grlBvWpzsydX0pXg7YreiL5+GLmc2IbosVPavZdIN7p9kWRU55uLjxkt3oE0eN\/WmKNN\/YaqME0UY+rFgU0ndDeJvG4rw1ZsxzCZxVjJpyrTew1bGVVPKChs+rJKwunvK9rBLa6xj5AqpLIMs3rmw3EhUYVic5knWrKx0olGEvYCNTkp4g4wIVbyWj01crpBbtKLolHWaydYnD02arZBO8SaqUpdpUity7byGXePZqxHjmoVYCVtpNmycko+CigaZbdhEA7PyyCVRMIiyKVxzZQLGArpb4mYUe4l27zYF5BLdgPd+yYtdu1s2NgaeCn2bucVxUA7hoQw22IdEHQpKz8QYD+xTmT7HiWEURIXAIOZsAL2OWigyylw4XbOtVKQbam3fx24giIIv1PM60qI8ODpVlk9bx9FUGyMmKNA5LzC+nAKdgV\/MFJj0jwVoy1D9zwMFOh0F3YQClVo3okAHKbCzw5r81LzXC9jZblz7GI36xOWXX0r5EjQy+sraGdpnNcPMMiP5vdFtg3yJMdEpoutmo9+OJzZG0RohTHq8OnKjYMTrHiao54HGFmFJutP0b0MLSXzMB1RYoNHphoNQYanb0HD8+ITui\/OBoNC1j+mzKh7aHegHIhffkXj9aASTms95L\/\/KuVbvaYJE6Jnq+87TYOXpaTRqoVvv6Um0wdJPGwOcjx2MmIOGdI5blK6wXU7XadKdjKd4327bQ5plldpMZKVnXKUHWuc1CG6loa\/2XCbIoNJ1ffVhK0XYVdWGrXSst3ISjb7uq8e3cgptODRLmWXKo6rCSnX5WMpEqmOzLXK5N83aotANIz\/ohd3qhHB69BL51SdkEm3WCZlCO87+cVYV0xTQ9j9FvcF7WO03yUY9ikr0Cx2m1D2o5IcY3DYx\/YD1XNygkHiNzUQa12p0hcdKy9adT5ynExUfcxnBcrcTeuWODyZQpoa2X7N8JF7kipOCb2SkdDr06EZKe10RdZOjpK\/ahK58DG8KqpekOR2Ej77v+McuwH\/r+cz\/3bj\/sEwS6n+DnMApW7xwejqmnpVgffahf2elnYHo\/6eghmOqxAt1WUeHtWjj22FZ+xP6ElfVg+ict2xYVqa6DMzbi4\/txXftrxlVIeVE\/c8WdmbmtUOMCGvNMPC4Bdz7bg5gojwM4DD056Bm8U5XJ7o2AfXMvEwfN\/Xw1Fc91NobCkGfBq7nhXyQOY\/VPsL\/AIqxj\/sKZW5kc3RyZWFtCmVuZG9iagoyOCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCi9UVDIgMjUgMCBSCi9UVDEgMjQgMCBSCi9UYzMgMjEgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggMjgyOCA+PgpzdHJlYW0KeJy1W92O27gVvtdT8HIGSLTin0TlptimXWD3YtNFpgiKohcambaVyJJDyfF636cv1KLv00NSv54xRe3MIsBIlsTvHB6efzJf0S\/oK8IsxAm1F5ImiAsaxpxhlMTdjZLoE6rQd+8bjPIGReZfk8PYKCTM\/tY3OBIh4RRGRkmYiiTID+jPD4jbAd3l4YC+e3jACKOHLbr79z16+Iz++mA4uULDNEwSEnugkQ4NOdBI7Mlbzjq0j\/tMFdUObWuFsu22KIuslc3\/kPwm1WWTXdDjqSkq2TToeFLHupHNfXCLPE1pyOkwF7RM\/a0LDOYCV38w5AJLV4IVFUjkkLVFXaHssT61DvRB7LEWgAd8cHepTwrlSm6K9lyrdm9EfHthCWOhIIS4KATX0ritJr0Kx0kS8siBtkqFl9HWqPAi2jDT7we1RVtVH5BW2B0yEp6uYlujQ6a+yFbfwVvNQ\/AsD4xEIaNCuHjw171R2jEOGXGgddIO\/KS9iAbSDrylvYSWs+Cpw6jqavQZzwr4hjmyJIziiPVkPfyUYxJppOcAyxRrWC+0jy1wjMrs3ADLF7QrvknNMco2DhukIqQpXkEFjBsULyuRKnb71gioLA5FixorwxB9lBI9yrI+G3EeaghCtxVpnCclYexerE6RQO2NHXQMnKqNVKjpJx86hEo4zFbggdhrLREGYyAJXgenR0epAIWJwoRgHosY7gRJGMcBxGgTtN9\/dH6HPr6H+1QwdEYEPSgHjxGfLHAURmmaAHM5gixBf91dLLfUcvtPdPdpf484usvuUYzu2nuUmilggu7298Hw4mg+sn+leVKZe3D+yTDgfI\/MsOuPzOvg7ke4RMPHJVwwBCx7OcBl+DHjwlKYMqnug3T41lLYmRfdiK2lU5s3aoqVXTOlHwXwKDcv7F877mT+2k9n\/MxnYfmyQ8r7QHO0mcJ\/tlzaD2YsW9BOCpdrMQZzWeynmFYiFtLKTU4YrybihwH\/Ch5+WlBunpKQswSjUXMgG3pGcYKZ4siy1wDNwZ80LdTTsoYBKh49p7IYAlWKCR0ov5KV8kSEIn4tm+cxC5kX2j9MVrSvi9wRssD9phiLFbAQm85FWaLseCwv2gub5LauJOr9Y5bn9alqQ0cGmXCgRnlP1sP5esmGg5YsoS1F8RGN8jCOBwV0hXFP76pVz+0tOSGTZdA6D9NZdJZ\/AbuixsMkxpyFsTei7wNhjDXun9fmuX0LNsKsNfpaCAfuCE+v2HyluPOsZIacikPilwy5upHMTcEEvWC+35qpb3sBJMa1Jf19ZsTQ9q5pEMm7QSTBokiSNMSCiCv+PJXlCZoga9Hy+nDMqgKsUskSUpENerwgeHgAa6zPlVTNvjgiyIfyumpVXYboYS\/hi6wa+Qhu6iNLGSQufjm7RQscebE\/2qNE26LKqryAhC+rNjo5Hh8Mcw5dVSo4A54k\/lSdPgZDzWjnAN6cuqoYXXcES1UeS23dsYxGPLQmJp68DVrz4TRtUEBll5enjXRlsFC80SjmExrBwhqOmnku2j1q9xL9oMPDh+xLg6rsIN+g5pTvUda46r1hbjENU4\/qMbgbifwA86rV8Q36scpDx9xEAm6NcBeNFf2AQdthkf1q7peGj5EkhCwczcJH7JFs\/zyNClkfS4zjDIbIUZq\/9t5+Y+OKjT3XjvNpLAmueE7TkBLGep5f5mJIRNaijepZ1e2y87ytogxCgOAs9aYd3HWe2CMJ0d2T5CZmsFYlb6NdqeQQJPw98c1owiIKVCO6MBnfaDJ44oi5C\/d5v+357tToiRfRxn6bh7daQhtU4edZ1+fs9MGchnGUONGvllH3RqT1v7OI\/zRa0jjkgk\/lsOTfu6DhwEzikCWQzXSYL6uAKJjZSrRDrdpdtpPIUQExhuGS8BWwvc6\/8YnJVJuyF2xRNScFdiVHq3JRIIJCsROLFRQ2hZJ52\/UVddtxQqgz7aOqt4WzPT9MDGo44dc3Uzsg8ptpHDeuOEyTUKQpdUH\/jjhMb3dj\/6g4TGddTR2HSbochn+CMPzW9puYicZvbaeFGJ9j2ypvYxN99Rtl3nyxP+T06xnAzl5W1DQE6zSIsX4aL6tpCI7XomXIbDRAvNkpKQ+yaiEMtWcpq1mT3NFeZnqLB3NxtRK\/0\/UwAFmJNoZIjyBPX6MrPCqfN9qYArX7TG807CRk6arfeBjnAF5hc8rbRqdCjVTfitzuUFzqk6sE4zrwk3Rg6ZVKMAoaxdlrlWDLaGtKsEW0WQn2uS6qiTs+ZqrVSedQj9k9TQjdamMc9FHJY1Zs7ANHUjNwo9Nir4Lbq6QmoGKCp8Ib172evcLq+mtxH\/m6bfeyPht8pvsrEwft0Wb7YAuevSl4bNmj+oZ2ajYSEuujidmToKbbNnxkB9vKqZrUT8i00oeunam9gmQ+tgOdll1DO8\/C+ZZdhEHWkES8l8DLcvFRnnGke9weaH9vJKq3phswKpr+DD97PgQcbiyYD35nVufzOQTH9atUWQhKPVGYXi5PjwPwkOBkSmQp9XWFOyZmaB5u+Cwfm6J1JNLgQiHVE3wF5juEPu2lacijE4jcyBs9lfeVeuijHVor\/NfzWt7BorxZmkCtHq1Z1OdYN6qBKVRFqUnvDmYhIz4+KWdPMJh7ORsFT+CbPdqaaQs+xdJMknSKNX1isaajRqyb8x6NhcW3Nj2CZzXjjd1XKesdRIbZMYyigRy+LCGrlzZCNG2tbGL0fGigApwuZtzFxIpjRUJAbkf80ZwBgYKa+6MFYw06nFD58W8+6RaBbOTGNtGV\/LPNRskGqqNHVZ8h8UHt5QirsakPGSyE7mHqyinP9YmutoBfZg1gnebL5IqpI1c40dtNPg1Oa27arnXmVjQ9LYcHgVgbp1E8pxK4lt3o19bVjWAhpYnoIX0KZ2X80KGuClBTWLU3qD7CTExhCIK8HWgYodr4Ym8pmaB480gSjTTrfAXaxtH\/g7KVGY\/vvYLOWiNagWaM4OspK4v24qX6kJETP9Vv+m5EF62HvL\/ebiX4GL3dO48qT+w5ghkQyMs6qh4a4o6DFLQ4YWwFnqvHqosShiGb9Yd70HIAFs05p6xsautv0X\/yuv4CyfN\/fXIlLIRnbO031HVyfmrB\/ex13r9R+oAVVF97WR5NgAcbavTRqOI3aQfUVVlUEslf4U0hYRG9PBBonacTf2+nq3uKunn+eNG+aKN5UqdKV4s7lR1MtbiRJXCrHKsAtYqg6UD9hU3CmK9F+1Yo60jrubC92vM4NicOPMj0ItP92FNVfD3JElSoaYpdZSUHxG0XTjdqYQEvuvWuZGb2JDIEqYAxQanPYXqtJuOe3khbcRfSTB+gANPXPO11J1Jz3Zf6DrljrPP0georHXbBFHtaphca1OZ+2fMHaz8fZX5S4Fnf6T3zZ3LQJzsdehuKUyZ6Un9I\/kwjrXOC+BBZ7lzQiK5F67JSm38U1ebUtOriiGhEVy8Ezyk4c4+3LjQaJjyaoi1Va00LZtV3TK6qCLNi+v8yYG7Ozh6sePHwBLL66ROb509Hrcn8ceR7bsYRBVNI5TBJ2Qq0KleXoz23LfN9VesMVe826QpRyVwW3+xuQNWcDvpMq6xggXWU2WQtxA7dqmq0LYBX8PA8EN\/AJ0KBt+x6Oo\/WnI7HWrUNwkQ4Gkb6PzFQTpwEAm9NgtAfplALrIF7LFokB2lCJSCPsjL1R5cNgU0ovY336NBgysIoZfFA12MBXQZBISkSZBVcV844HDoTLMQRlLsrUCf29Qv6P\/gi4N0KZW5kc3RyZWFtCmVuZG9iagoyOSAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggNTQ3ID4+CnN0cmVhbQp4nJVUTW+cMBS88yvecXNxbGxjyLGrHnprKtSqRwdM1ynYG9sk2r\/ZKv+nZr+kVcquERIYJGbee\/NmXuARXoAwRAQ9PPJKAC8pKjgjIIrjwSn4AQbu155A4wHvL9\/EfzHK2eF9OlTxzikWIHCFikKQrBngUw388MfxUQ9wXzcMCNQdrOAO6mf4XO9LmYErKo7yQiSgrWWvO+uMlldwCeOIlWIJrlNet8oEfwU1gmFW8AWoD\/DTjjDIHci+t29gRwd+I502v8B2oE1sZZBBWwNvOmzgLrs9qhKjshBwizxbGWtk1+ley6BaCBvtWthKF7TyIE0LvR50iCXNd5xXDFFc8hNpyhzn+osneLbahL1u2Y0miwKxhCZhNUj3W4WJbz9AGzbKQaeNNI2WPTR22Epz6niqYZLgPBb\/DupVuV0bFUqZPc8RTpr90+i1Ud7DdnRb6yP\/0y7ST0sw1RqrjMPxwY3NNBwfX\/bf5qWg0bMVE+caEqRQpukjdQt\/vgxb64I0YR6fVRQJSukC\/CRjU5GaE1+dfpXN7or\/KEacxMMC0GshQeliuPXG6iaKOS3SOuo2Dsr5v2BsmD6jM1n2QT4sEME4P5MlrHaSUXI6RVEC2nflBhvd9+0UdA+wu8im+f3PS4Lyskpny1a3gu4ym1IWCZeJCXQZdEm2+49T4LiOKbHAY0ympFV2sT8fBHk\/7hG6FgM4urMqyIlzmQUe4R+blwYzCmVuZHN0cmVhbQplbmRvYmoKMTggMCBvYmoKWy9JQ0NCYXNlZCAzMCAwIFIKXQoKZW5kb2JqCjE5IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUxIC9CYXNlRm9udCAvTExWQ1lEK0FkZWxsZVNhbnMtUmVndWxhciAvRm9udERlc2NyaXB0b3IgMzEgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyMTQgXQo+PgplbmRvYmoKMjAgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHlwZTEgL0Jhc2VGb250IC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZvbnREZXNjcmlwdG9yIDMyIDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMjEzIC9XaWR0aHMgWzI1MCAwIDAgMCAwIDAgMCAwIDI4NyAyODcgNTMzIDAgMjIzIDIyNCAyMjMgMCA1MzMgNTMzIDUzMyA1MzMgNTMzIDUzMyAwIDAgNTMzIDUzMyAyMjMgMjIzIDAgMCAwIDQ3MSAwIDczMSA2MjkgNjcwIDAgMCA1ODYgMCA3NjIgMzI0IDAgMCA1ODMgOTE5IDc2MCA3MzAgNTg3IDcyMCA2NTUgNTUzIDYzMCA3MjcgNzAxIDk1MSAwIDYzOSAwIDAgMCAwIDAgMCAwIDU0MSA1OTMgNTE4IDU5MCA1MzAgMzIxIDU4OSA1ODEgMjYxIDI0OCA1NDAgMjU4IDg3OCA1ODcgNTQ1IDU4OSA1ODkgMzY4IDQ2MiAzNDAgNTgwIDU0MCA4NTUgNTY4IDU0MCA0NTQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMzY3IDM2NyAwIDIzMyBdCj4+CmVuZG9iagoyMSAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0FHS1hKRStBZGVsbGVTYW5zLVNlbWlCb2xkIC9Gb250RGVzY3JpcHRvciAzMyAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMzIgL0xhc3RDaGFyIDEyMSAvV2lkdGhzIFsxOTggMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyNDQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDI0NCAwIDAgMCAwIDUyNCAwIDY5NiAwIDY5MyA3MjYgNTc4IDU1MCAwIDczMCAyOTEgNTExIDAgNTU4IDkwNCA3NDUgNzYwIDYxOCAwIDYzOSA1OTkgNTcxIDcxMSAwIDkxOSA2MzUgNTgyIDAgMCAwIDAgMCAwIDAgNTUwIDU4NiA1NDEgNTgzIDU0NyAzNDIgNTU1IDU4MyAyNTcgMjU1IDU0NCAyNTcgODYxIDU4MyA1ODIgNTg1IDAgMzc2IDQ5MyAzOTIgNTgwIDUxNyA3ODEgNTA4IDUwMiBdCj4+CmVuZG9iagoyMiAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0lQRUpKRytBZGVsbGVTYW5zLVRoaW4gL0ZvbnREZXNjcmlwdG9yIDM0IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgODkgL1dpZHRocyBbMjQyIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyMDAgMCAyMDkgMzM0IDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCA2MzcgMCA3MTYgMCA1NzAgNTQzIDAgMCAyNzIgMCAwIDAgODg1IDc0NSAwIDYxMiAwIDYzNyA1NzggNTMyIDAgNjE0IDAgNjA3IDUzOCBdCj4+CmVuZG9iagoyMyAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UcnVlVHlwZSAvQmFzZUZvbnQgL1FRVEFRQStUaW1lcy1Sb21hbiAvRm9udERlc2NyaXB0b3IgMzUgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyNTAgXQo+PgplbmRvYmoKMjQgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHJ1ZVR5cGUgL0Jhc2VGb250IC9TUUtVRVQrU3ltYm9sIC9Gb250RGVzY3JpcHRvciAzNiAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMTY1IC9MYXN0Q2hhciAxNjUgL1dpZHRocyBbNDYwIF0KPj4KZW5kb2JqCjI1IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1RydWVUeXBlIC9CYXNlRm9udCAvSkZSWFFEK0FyaWFsTVQgL0ZvbnREZXNjcmlwdG9yIDM3IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMzIgL1dpZHRocyBbMjc4IF0KPj4KZW5kb2JqCjI3IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUwIC9FbmNvZGluZyAvSWRlbnRpdHktSCAvRGVzY2VuZGFudEZvbnRzIFszOCAwIFIKXQovQmFzZUZvbnQgL0pPVk9WVStNUy1NaW5jaG8gL1RvVW5pY29kZSAzOSAwIFIKPj4KZW5kb2JqCjMwIDAgb2JqCjw8L0xlbmd0aCA0MCAwIFIKL04gMyAvQWx0ZXJuYXRlIC9EZXZpY2VSR0IgL0ZpbHRlciAvRmxhdGVEZWNvZGUgPj5zdHJlYW0KeAGdlndUU9kWh8+9N73QEiIgJfQaegkg0jtIFQRRiUmAUAKGhCZ2RAVGFBEpVmRUwAFHhyJjRRQLg4Ji1wnyEFDGwVFEReXdjGsJ7601896a\/cdZ39nnt9fZZ+9917oAUPyCBMJ0WAGANKFYFO7rwVwSE8vE9wIYEAEOWAHA4WZmBEf4RALU\/L09mZmoSMaz9u4ugGS72yy\/UCZz1v9\/kSI3QyQGAApF1TY8fiYX5QKUU7PFGTL\/BMr0lSkyhjEyFqEJoqwi48SvbPan5iu7yZiXJuShGlnOGbw0noy7UN6aJeGjjAShXJgl4GejfAdlvVRJmgDl9yjT0\/icTAAwFJlfzOcmoWyJMkUUGe6J8gIACJTEObxyDov5OWieAHimZ+SKBIlJYqYR15hp5ejIZvrxs1P5YjErlMNN4Yh4TM\/0tAyOMBeAr2+WRQElWW2ZaJHtrRzt7VnW5mj5v9nfHn5T\/T3IevtV8Sbsz55BjJ5Z32zsrC+9FgD2JFqbHbO+lVUAtG0GQOXhrE\/vIADyBQC03pzzHoZsXpLE4gwnC4vs7GxzAZ9rLivoN\/ufgm\/Kv4Y595nL7vtWO6YXP4EjSRUzZUXlpqemS0TMzAwOl89k\/fcQ\/+PAOWnNycMsnJ\/AF\/GF6FVR6JQJhIlou4U8gViQLmQKhH\/V4X8YNicHGX6daxRodV8AfYU5ULhJB8hvPQBDIwMkbj96An3rWxAxCsi+vGitka9zjzJ6\/uf6Hwtcim7hTEEiU+b2DI9kciWiLBmj34RswQISkAd0oAo0gS4wAixgDRyAM3AD3iAAhIBIEAOWAy5IAmlABLJBPtgACkEx2AF2g2pwANSBetAEToI2cAZcBFfADXALDIBHQAqGwUswAd6BaQiC8BAVokGqkBakD5lC1hAbWgh5Q0FQOBQDxUOJkBCSQPnQJqgYKoOqoUNQPfQjdBq6CF2D+qAH0CA0Bv0BfYQRmALTYQ3YALaA2bA7HAhHwsvgRHgVnAcXwNvhSrgWPg63whfhG\/AALIVfwpMIQMgIA9FGWAgb8URCkFgkAREha5EipAKpRZqQDqQbuY1IkXHkAwaHoWGYGBbGGeOHWYzhYlZh1mJKMNWYY5hWTBfmNmYQM4H5gqVi1bGmWCesP3YJNhGbjS3EVmCPYFuwl7ED2GHsOxwOx8AZ4hxwfrgYXDJuNa4Etw\/XjLuA68MN4SbxeLwq3hTvgg\/Bc\/BifCG+Cn8cfx7fjx\/GvyeQCVoEa4IPIZYgJGwkVBAaCOcI\/YQRwjRRgahPdCKGEHnEXGIpsY7YQbxJHCZOkxRJhiQXUiQpmbSBVElqIl0mPSa9IZPJOmRHchhZQF5PriSfIF8lD5I\/UJQoJhRPShxFQtlOOUq5QHlAeUOlUg2obtRYqpi6nVpPvUR9Sn0vR5Mzl\/OX48mtk6uRa5Xrl3slT5TXl3eXXy6fJ18hf0r+pvy4AlHBQMFTgaOwVqFG4bTCPYVJRZqilWKIYppiiWKD4jXFUSW8koGStxJPqUDpsNIlpSEaQtOledK4tE20Otpl2jAdRzek+9OT6cX0H+i99AllJWVb5SjlHOUa5bPKUgbCMGD4M1IZpYyTjLuMj\/M05rnP48\/bNq9pXv+8KZX5Km4qfJUilWaVAZWPqkxVb9UU1Z2qbapP1DBqJmphatlq+9Uuq43Pp893ns+dXzT\/5PyH6rC6iXq4+mr1w+o96pMamhq+GhkaVRqXNMY1GZpumsma5ZrnNMe0aFoLtQRa5VrntV4wlZnuzFRmJbOLOaGtru2nLdE+pN2rPa1jqLNYZ6NOs84TXZIuWzdBt1y3U3dCT0svWC9fr1HvoT5Rn62fpL9Hv1t\/ysDQINpgi0GbwaihiqG\/YZ5ho+FjI6qRq9Eqo1qjO8Y4Y7ZxivE+41smsImdSZJJjclNU9jU3lRgus+0zwxr5mgmNKs1u8eisNxZWaxG1qA5wzzIfKN5m\/krCz2LWIudFt0WXyztLFMt6ywfWSlZBVhttOqw+sPaxJprXWN9x4Zq42Ozzqbd5rWtqS3fdr\/tfTuaXbDdFrtOu8\/2DvYi+yb7MQc9h3iHvQ732HR2KLuEfdUR6+jhuM7xjOMHJ3snsdNJp9+dWc4pzg3OowsMF\/AX1C0YctFx4bgccpEuZC6MX3hwodRV25XjWuv6zE3Xjed2xG3E3dg92f24+ysPSw+RR4vHlKeT5xrPC16Il69XkVevt5L3Yu9q76c+Oj6JPo0+E752vqt9L\/hh\/QL9dvrd89fw5\/rX+08EOASsCegKpARGBFYHPgsyCRIFdQTDwQHBu4IfL9JfJFzUFgJC\/EN2hTwJNQxdFfpzGC4sNKwm7Hm4VXh+eHcELWJFREPEu0iPyNLIR4uNFksWd0bJR8VF1UdNRXtFl0VLl1gsWbPkRoxajCCmPRYfGxV7JHZyqffS3UuH4+ziCuPuLjNclrPs2nK15anLz66QX8FZcSoeGx8d3xD\/iRPCqeVMrvRfuXflBNeTu4f7kufGK+eN8V34ZfyRBJeEsoTRRJfEXYljSa5JFUnjAk9BteB1sl\/ygeSplJCUoykzqdGpzWmEtPi000IlYYqwK10zPSe9L8M0ozBDuspp1e5VE6JA0ZFMKHNZZruYjv5M9UiMJJslg1kLs2qy3mdHZZ\/KUcwR5vTkmuRuyx3J88n7fjVmNXd1Z752\/ob8wTXuaw6thdauXNu5Tnddwbrh9b7rj20gbUjZ8MtGy41lG99uit7UUaBRsL5gaLPv5sZCuUJR4b0tzlsObMVsFWzt3WazrWrblyJe0fViy+KK4k8l3JLr31l9V\/ndzPaE7b2l9qX7d+B2CHfc3em681iZYlle2dCu4F2t5czyovK3u1fsvlZhW3FgD2mPZI+0MqiyvUqvakfVp+qk6oEaj5rmvep7t+2d2sfb17\/fbX\/TAY0DxQc+HhQcvH\/I91BrrUFtxWHc4azDz+ui6rq\/Z39ff0TtSPGRz0eFR6XHwo911TvU1zeoN5Q2wo2SxrHjccdv\/eD1Q3sTq+lQM6O5+AQ4ITnx4sf4H++eDDzZeYp9qukn\/Z\/2ttBailqh1tzWibakNml7THvf6YDTnR3OHS0\/m\/989Iz2mZqzymdLz5HOFZybOZ93fvJCxoXxi4kXhzpXdD66tOTSna6wrt7LgZevXvG5cqnbvfv8VZerZ645XTt9nX297Yb9jdYeu56WX+x+aem172296XCz\/ZbjrY6+BX3n+l37L972un3ljv+dGwOLBvruLr57\/17cPel93v3RB6kPXj\/Mejj9aP1j7OOiJwpPKp6qP6391fjXZqm99Oyg12DPs4hnj4a4Qy\/\/lfmvT8MFz6nPK0a0RupHrUfPjPmM3Xqx9MXwy4yX0+OFvyn+tveV0auffnf7vWdiycTwa9HrmT9K3qi+OfrW9m3nZOjk03dp76anit6rvj\/2gf2h+2P0x5Hp7E\/4T5WfjT93fAn88ngmbWbm3\/eE8\/sKZW5kc3RyZWFtCmVuZG9iagozMSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0xMVkNZRCtBZGVsbGVTYW5zLVJlZ3VsYXIgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE4MiAtMzIzIDExOTggMTA5OCBdCi9JdGFsaWNBbmdsZSAwIC9Bc2NlbnQgODgwIC9EZXNjZW50IC0zNzAgL0NhcEhlaWdodCA3MzcgL1N0ZW1WIDk0IC9YSGVpZ2h0IDUyNiAvU3RlbUggNzYgL0F2Z1dpZHRoIDU3MCAvTWF4V2lkdGggMTM4MCAvRm9udEZpbGUzIDQxIDAgUgo+PgplbmRvYmoKMzIgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE3NCAtMzA4IDEwMzUgOTQ3IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA2NjggL0Rlc2NlbnQgLTMzMiAvQ2FwSGVpZ2h0IDY3NyAvU3RlbVYgNTYgL0xlYWRpbmcgMjAwIC9YSGVpZ2h0IDQ3OSAvU3RlbUggNDMgL0F2Z1dpZHRoIDUwMCAvTWF4V2lkdGggMTIwOSAvRm9udEZpbGUzIDQyIDAgUgo+PgplbmRvYmoKMzMgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9BR0tYSkUrQWRlbGxlU2Fucy1TZW1pQm9sZCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTg2IC0zMjMgMTIyNyAxMTEzIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgMTE1IC9YSGVpZ2h0IDUyOSAvU3RlbUggMTAyIC9BdmdXaWR0aCA1NzAgL01heFdpZHRoIDE0MTMgL0ZvbnRGaWxlMyA0MyAwIFIKPj4KZW5kb2JqCjM0IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvSVBFSkpHK0FkZWxsZVNhbnMtVGhpbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTc1IC0zMjIgMTE0NyAxMDk0IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgNDkgL1hIZWlnaHQgNTIwIC9TdGVtSCA0NCAvQXZnV2lkdGggNTcwIC9NYXhXaWR0aCAxMzIyIC9Gb250RmlsZTMgNDQgMCBSCj4+CmVuZG9iagozNSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL1FRVEFRQStUaW1lcy1Sb21hbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMjAzIC00MjggMTcwMCAxMjcyIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA3NTAgL0Rlc2NlbnQgLTI1MCAvQ2FwSGVpZ2h0IDY3NiAvU3RlbVYgMTAyIC9YSGVpZ2h0IDQ2MSAvU3RlbUggNDQgL01heFdpZHRoIDE3MjEgL0ZvbnRGaWxlMiA0NSAwIFIKPj4KZW5kb2JqCjM2IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvU1FLVUVUK1N5bWJvbCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTY3IC0yOTkgMTA5NCA4MjcgXQovSXRhbGljQW5nbGUgMCAvQXNjZW50IDcwMSAvRGVzY2VudCAtMjk5IC9DYXBIZWlnaHQgNjIzIC9TdGVtViAxMDMgL1hIZWlnaHQgNDY3IC9TdGVtSCAzOCAvQXZnV2lkdGggNTcyIC9NYXhXaWR0aCAxMDQyIC9Gb250RmlsZTIgNDYgMCBSCj4+CmVuZG9iagozNyAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0pGUlhRRCtBcmlhbE1UIC9GbGFncyAzMiAvR</mes:base64EncodedContent><mes:contentType>contentType</mes:contentType><mes:documentName>names</mes:documentName>
        </mes:CreateEnrollmentDocumentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6fc9718f-f69d-46f7-9a41-dffda9a7c22f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="9c7d00ba-2f31-4166-b13a-3d560078b5a2" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="8e097316-b0d3-41e1-af4b-18225c6792c4" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:commandStatus[1]/text()")
def documentId = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:documentId[1]/text()" )

assert commandStatus.getData() == '1'
assert documentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateEnrollmentDocumentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="7fa098e2-5944-4d42-8d3a-a4015b438a81" name="CreateEnrollmentDocument_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateEnrollmentDocument</con:operation><con:request name="CreateEnrollmentDocument_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a2d6acb3-7045-4a9a-bcfb-42997ae5c540"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateEnrollmentDocumentRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:note>ref</mes:note>
            <mes:documentType>type</mes:documentType>
            <mes:base64EncodedContent>JVBERi0xLjQKMyAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQW5ub3RzIFs8PC9UeXBlIC9Bbm5vdCAvU3VidHlwZSAvTGluayAvUmVjdCBbNDE2LjkzIDM2My44NSA0NjAuNjEgMzU3Ljg1XSAvQm9yZGVyIFswIDAgMF0gL0EgPDwvUyAvVVJJIC9VUkkgKGh0dHA6Ly93d3cuY2Z0cGF5LmNvbSk+Pj4+PDwvVHlwZSAvQW5ub3QgL1N1YnR5cGUgL0xpbmsgL1JlY3QgWzE0My40OSAzMjEuMzMgMjE0LjE3IDMxNS4zM10gL0JvcmRlciBbMCAwIDBdIC9BIDw8L1MgL1VSSSAvVVJJIChodHRwOi8vd3d3LmZpbnhlcmEuY29tL2xpY2Vuc2luZyk+Pj4+XQovQ29udGVudHMgNCAwIFI+PgplbmRvYmoKNCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMjIzOT4+CnN0cmVhbQp4nI1Y23LayhJ93vmKfkjtSqrwWPdL3jDgCqdsICAnlaq8DGIAHQuJPZJM+JHzvadnRjeETDapGCFmVq9efZkWBvzng0ZsF04fHgK4f9TBIZoGwRYmgbijmy5xDfAMm5g2BBv4tDqyMKIxLAp+TDMGwzBMiySHWXFYM\/4FLNPQxEvH\/5Zj+7DKac4ODJcsGI\/SzRd4pjzcgz4AQ9NtuCs\/m9UNWNAdA\/0e7M8Q\/FcQ+Qe\/0AQv8Q8Z4ZXhmcRywHUdYlsQHuB+qsM4hW8fXI2YGriOSxwDTN8hHtrQiKsDZ\/AAwivXJLoJrm0TX5NOLTjNaJLvYfS9stkss1xiqWXPLInT6wWmRzxf4VD+CnIVyMvRsLX6\/tHoqGvaDnG0NpHxdDkZBTB8eoLhaDR\/mQUwnX17mS6nkxUE8y\/Qwqt2WxaxHbl7xNMs4yndZPAYJTSRgQpYuE\/SON1FLOvbbiIntX0xh4f0Nxi2bfp9Kw2X2GUS0ASjlrN0gC7e+ZalGT3rdZ9oav1inyYMZin8DzzPuzMt786yLbPaU4ZMl9tuhkxzxV1J4eX5ebj8CfNHVCqYfp8GP+FC7KtUNiyRyo5vioyRrJaT79P5ywpWwTCYPE9QbHgYPg1nownMZ6AZ94bXgqwAPIMYZbQmi\/lqGqzuR8vJGN\/bGhg68fT24o+GSOEePPTeUwH4MQ2+jpfDH8On1f3q5SFYCs\/ms0tcm2CNtDZ9NPphbZ\/YhpKqdq\/tnXlv6j2Em20fda+FrGLk2BYxrHdidJ3gKmqO6RPHk5jo0mylvGrCFnydrmAxWU7n4\/cjWNo3LYLJaSrzukV0V9hfQWMMBbJViozR7QpQx8wRuqn9uifbSQdA13zie22ENt3xZDVaThfiugI1vDaoY4tQdzANr4v5XtKYtiF6bAlmoWR6F8zERqFfgLUypsKxNJ34t0lZGqaI38apmk2ZIJ2gY+Yaxk3RdZ2YpkTCvGqaQaW6AritegOxZGHBeZTsYMzwjIly2PL0AKM9C1\/xbld9Bd7rqEhq3WljqyoE+eoqr4D6lccw6nob6BKiEv0GF8vELv9HLqXimiNa5w3Fbd8VnpWKm1pXcQVwU\/EWxHD0FQ+sszyl8xRCzjZRnnLAPr\/hFIbHY8x22O+70isr\/dJj0dta20i\/6AqiX3QXP15AyF7Xr\/wNKqXybRzZ2vqUt9Gm59YNrlPM+BHDa6MV3+ueQstJ8LKcTcYwxWYLj5PJqoPsaMTB1mPpxDUvkD8YOvpl1ivEOetc2cYpw3fBtmWbls1pHgyf4HG+7GugUn7\/NqSJxGzzGvLnZLi8C+Z37f5Z+mA54nTo8QHhUF5MbBvnM8dsob2vS+V2CXrNsfbi\/RVNQeiu6GnC7mweTL7A5Dc9RDh15Psog6weQkPK2baI4zNgbiPIMeU5Xp4h4pztipjyKMdJiXQcx5JxWmmhm6K51hQM\/IzMLJTAVxPP9HkxXwZDbKnNHIeheh62z4+avOU5Iv\/lxgQp4lydboFxnvIMsA7\/KViWR2mSAdB1WuRwTgveODUAFrMw52kShZBzmmRbxsU+eU1DtTVNrrbluO8oZ7MiA4q1v2eQyEEejtiAc7YRu67pup7ohoKu2IHdGYVFwh2pkcAJ1azA\/zidDqA9gQ7gYsocgBwzgaKFFEnhO3qDWiUDiLbyGs0nrz1sHV\/MlYLtpf+CIGchi445IPETurET90q4hKH7hxSDHCXblB+okLHUn7ZkTqRsfagEfjA4FFkOe0a5OsUkcgoxruZ9XHXR8pSy6D7y3tAzyrcVy09oRlhQzjJ4nC5XQdtyAqd9hM9S4kuZPUjm2gY2W1f1wb\/gL9AJBiGORZCkPAk9MFkbtHyyKxPi1yfUBQvl12fSA6kTo4E0CJ7cWcijNbugIj\/UwgkvsBihSLIC36SwA2mZ\/T7GNJIxDmNUThRrHW508Syv1yyO2BtGR0YPv6jNVCuaCF4zNg3i2jVj8WpFucdDnKqNZr3ZiCZ82qQxNg6gBymYrAQMVZHhs7KoIUmsBxP7n1\/OcQxOEeJFyZuodHHWqmiE6UFqkUth5JowxU4VqqalXD5iYh3z+ExguhVJktNXpvyWSYQJtS4y7IVZprIJj\/hNKqt1IJYrVHnmK6NV5K8Z4+BYPgtvy3CWPjf1h7GIylgMsFQFBfW1NLOnbyonCtXjxOUBG9AZNoUc+WSKRAcZVuFHJjVOlRAMZREEG5nawVKt2vQs0YSrVu3ZRLO6h4Xp1I+y2Ip+M04HME1CgvQyaVXkXhbtElVWWyXLez99DHecqQKUFf4o1s7pawYPFPX4GwIuWsAIHcCQDZpAoolC1BpeXilt2vXDM2fZEft3tI5ieTQJPh0bRbJhKhxXnAhA6aJ0jm7wUIwy7CaYl3\/+veDXp+Y3GDFKauVfXf7lOzle4XO7f8H4dDqRcJsf6Zlg2EqEZp1HLJz4THGg3smQYXS28K02oVDF5KK3UX99rmTqrq0k06qgYiNcsz2Ntz1adeJBYIEtBqOZpDkbCA15WRFrcQ9CrKCdOAJUZjJ+yOqEuE6Asigyxt+isPm95R3CliFyUxDGCn6LNhgSzHSEJjDM4Eh5c6oqGgNld1M+FlV1igXWcbJyIIwxUTcy5QSvNY0xysirasJcmaTYKk+Qlfl9m7RZ\/35yLOugptHOrfW5zrtq8ChDIho77uAbQQWZ5vtLad9L4xpPOnegifiZUALfJoxPuZoaSCsHu8TXhdRQFKJoPRns03ijoLdYWpkiuWVYZFRMjpE8sTZVHFIub+VRXshJC7kOEarKkgoCb3F2EOfa43g6qkDIH9hj0diK\/SMmV3ccwQ7LWA\/CdZXqWHCW38YTVbpVkooyvY8xY7HN1A\/YzRZb1C12V8e7UbCGGstbBvA4wlBv8FiRTFlSZqM4OqQyeIxhGmTy+MYGfzxX4V\/w6I2GZ1ikSEoc\/lmKgRNHqYzEvwi65lVBf6drk2b\/\/wGfn0ckCmVuZHN0cmVhbQplbmRvYmoKNSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgNiAwIFI+PgplbmRvYmoKNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk5Pj4Kc3RyZWFtCnicNY7dTsMwDIXv8xTnEiRIbWdp1t0N8SNNgDotL9BlodtE6Sit9vp4iFk6sj\/bso9gZcj6gLN5iCieGaUlQvzAUzTfIAVCC52xCzYI5uKt84g73GxOOR2aT9TTcOp\/MpYp9dPXiPep2+ZhgZkTugSrZqWvsBmbMXdZV+o8HPrdAm\/NkPbgOwixx\/0\/u2sDddNmSAF\/i3hUS1hfTGEFxlnzUfWiav+shqoMCnQtZW6d\/oUw2cqxIHWmiPUr47HXQ2vzC3XrPWwKZW5kc3RyZWFtCmVuZG9iago3IDAgb2JqCjw8L1R5cGUgL1BhZ2UKL1BhcmVudCAxIDAgUgovUmVzb3VyY2VzIDIgMCBSCi9Db250ZW50cyA4IDAgUj4+CmVuZG9iago4IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11HNJQ3pg2JqENFZEfKCEU0LpC14rfn0Fg6co+tmVfxlKRdh5X9RaQLQxyTYSwx0dQF5AAoYbMjPXaM6bstHUIO4w25xSP1Q\/KoTu3fwnzGNvht8dqaLapm2FimW5hRJPcFdj0VZ+aJCtl6o7tbobvqosHmBcwGYfXB9tnA2VVJ9gMboxwEktY30xhCYOr5JPoU1Tfrfoi9wL0LHmqrfwFG9KFNYzYqCyUX4z3Vg6t1T92TT1uCmVuZHN0cmVhbQplbmRvYmoKOSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgMTAgMCBSPj4KZW5kb2JqCjEwIDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11kqahvIHYkNCGipofKCEUEKWstOL3ZxBYurKPbdlXYyVIWoe7mHsk3wqZJILf48uLPxADoQbPlHHSaUy0lcbC7zAqrzEcqzOKobu2t4hZCO1w6bEemm3spkiNpkcoVprZHGVf9bGJvFLE7tjupvitunCA+oAmZfH5YvNuoKjqiDSBHcOf2BI2D1NYQeHO+cRasuqnVZdnjoHepZ5Iw3+hFcncKI3QiMQXPwaLlg9txD92rz1wCmVuZHN0cmVhbQplbmRvYmoKMTEgMCBvYmoKPDwvVHlwZSAvUGFnZQovUGFyZW50IDEgMCBSCi9SZXNvdXJjZXMgMiAwIFIKL0NvbnRlbnRzIDEyIDAgUj4+CmVuZG9iagoxMiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk4Pj4Kc3RyZWFtCnicNY7RbsIwDEXf8xX3EaQtdZKmobyB2JDQhoqaHyghFBClrLTi92cQWLqyj23ZV2MlSFqHu5h7JN8KmSSC3+PLiz8QA6EGz5Rx0mlMtJXGwu8wKq8xHKsziqG7treIWQjtcOmxHppt7KZIjaZHKFaa2RxlX\/WxibxSxO7Y7qb4rbpwgPqAJmXx+WLzbqCo6gibwI7hT2wJm4cprKBw53xiLVn106rLM8dA71JPpOG\/0IpkbpRGaETii58Ui5YPbcQ\/dxE9cgplbmRzdHJlYW0KZW5kb2JqCjEgMCBvYmoKPDwvVHlwZSAvUGFnZXMKL0tpZHMgWzMgMCBSIDUgMCBSIDcgMCBSIDkgMCBSIDExIDAgUiBdCi9Db3VudCA1Ci9NZWRpYUJveCBbMCAwIDU5NS4yOCA4NDEuODldCj4+CmVuZG9iagoxMyAwIG9iago8PC9UeXBlIC9Gb250Ci9CYXNlRm9udCAvSGVsdmV0aWNhCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTQgMCBvYmoKPDwvVHlwZSAvRm9udAovQmFzZUZvbnQgL0hlbHZldGljYS1Cb2xkCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTUgMCBvYmoKPDwvVHlwZSAvWE9iamVjdAovU3VidHlwZSAvSW1hZ2UKL1dpZHRoIDIwMAovSGVpZ2h0IDM3Ci9Db2xvclNwYWNlIFsvSW5kZXhlZCAvRGV2aWNlUkdCIDI1NCAxNiAwIFJdCi9CaXRzUGVyQ29tcG9uZW50IDgKL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0RlY29kZVBhcm1zIDw8L1ByZWRpY3RvciAxNSAvQ29sb3JzIDEgL0JpdHNQZXJDb21wb25lbnQgOCAvQ29sdW1ucyAyMDA+PgovTWFzayBbMCAwIF0KL0xlbmd0aCAxNjE2Pj4Kc3RyZWFtCliF7VcHeFRFEH4bOyiWWECsKPYuYldExYq994IdQknIu9frUiI19CYSCR3RxCASBDEixWCABEKNEA64AEmAnEAE7mNm37tLuZCEzxT9vvu\/u2\/fzsy+m392ZnaP4yKIIIII\/q\/I7XSw90q\/P7Ww68w1je3Lv8ENee+8Pvrtdu0e2z7mu0k5x6DC64R4Gtav40Rujr\/99o6v\/IbYseuOxOx7q7KSCSEGx5mEb2j\/agtf3tS9BU0X7sgH7Fi48MiGDP\/MKsxEYuJAidzA\/tUWm19MvKKge\/6X6xm6N83vuOeekv7hdhqxcPjvEjk4dfqeFq1SUo44SElJ33X1mNQzQnpbhJzSMLEIMZ1BlAixTMg04GQbKLEw57CCTKI5y1SU25CRAiE6hkAnvEUI5W0QmHbd8+jkH7140fr0VvsX9ezZZ1HPPi32p6fvWvxqaZKrl3TmaAUiFkdcSBxPXBE88MxdtkxDoQ58HDVkpUHKwax7IqvHPh3ti\/Z9eOYHb700LH\/TZ3828\/mi\/3ig5H5XT4nhhM90UouFGfwVOHRdcIxY\/VAichI6zzH\/mbXNTICVygn4IgiExjavznnE+d8cEjvk0qKipKS2yl2xbXO\/v\/vsHxVl\/ildY5hewqiHE6FsIqDbtqU7IbYIha\/IjAWXouUQQ94aSzoKlDACdU7ki6nXXNXjkY+Lug0qLj5x8EeDBv2aFPPP9Z+P3OiPY3o1dHZUIOJMIOfd1EMiHp1IBnG2j7qENCDHzM3yROR6INJ1+cWZLVs+fquiKLPmrHqqCEbl4cnLLsl832nBEDy5EhEpNIFsgS9UrsqSXiRWMPkN90EkusflVc9EsjP2ZGW1OmGzktumTVGX4sBsILL2vYLnshIvY3oIs86XJ6KzWLPmZGEhsCRzzhgoEHDTRl9BJSADmdWIiNGoZyIrx2Rt2PSNolwQKM4FDt0CM2JgaDbsrMQ8x8DpUyTUWAWWR6YjNdz2xJ5wHyD+Fssz0+1lWrCpwcJ6rZHUjIKTwPNTA4MVpcmhHjGxPwS6wDzmtMRS10JCXwT0khGxwUURkx5qQ4Oge4AZFZ2a1tAOigaT0aKsO3MqjCbuqRMI7F9YeHVPpPAWRYkvDiQpyhuTR2QeaqIUr8JCef6cvOqWuXlWCQJ62Ugo7Dw\/Nn5WYLOi9Fh2+4asEdcuVU6e001RPi05t7plVRKxnMpuHORduED5NgDl8XLm9K8Ar115ujJ7jm\/IPG8V160y0HAiEiFVblMD4bB33k0\/A4+Rv89tvQTQesvfS5XZMwZ29lf7Byt4ToQg6zahocQyq2QkE9c0TGNpld9Wflara+oa\/50LoE+9u3duv78Y+m25bm38zpsHrI53DODyF\/7D4bCp+yDVeJNCU9YLaUhUmYhdpuKMSiE7Fp75+pOdytKN53WY6KLDlotiB44dvi\/oF4TZQwyC3cnC5mtDf1VFg4gyXsPAb12CktEp07k+GJYFXc2CQ4eoMsXT0WMQg9eZwPFSpuwgUjkJdlc1wNoxhNs0lcGEjbAKWiOR4GwyPBIhWjVE4laW3PjsQyu27g7hQPMXHjx\/tasWWDzgSmsZEEYJnOYwg2DGwUFpolYULeqRqK1LoWAKqmpwPD7xhq3b8NHAUnIFQSIS9UAOUR63Hdq0Ywg\/aKEJG3kDVSC0IFu16mhwWCW3rZuQdqAMaUvum5IdFyTCLn\/U5jRIeyprEBkV9kDV4GILDpgePFYEDf1HHbvvEltTVSaCI535TW0qc+UFjAi74uNrOGYdMrQJPLIRd0RFITYSidbQ3XOihu\/tlzZ+3Ljk5ORxyeO3Tsjwpu4LKlXWiXSbE2FHsLsa8DJRg6T2wDaZlmpyoiXijnCOjrnpErF1D286\/pkmV17AiMgQH7gDWRWIQElYaMJGD3XC6DYPnoZ7X4HJgCntm09M6zV06NBeabt\/2uYdta9MiZd0GZIfgqPLkKbgDAiwOlWsajjHDQ3y2SBM5+aPaYEBZA7IKQogaSC2EAgUOC3JrRGgoxNIG5g7hhJWHpiwEWsKXizhalWoub0fHhWVsDxj2ooV06b9sm1KVOmjNdg3GES8ox3P4XR5zqQob9+EhIS+Xm\/vw9H15tjxAnYr+Ce0tljTf90ThaOySw8+6asfnyKIIIJGw1G2ZvkFCmVuZHN0cmVhbQplbmRvYmoKMTYgMCBvYmoKPDwvRmlsdGVyIC9GbGF0ZURlY29kZSAvTGVuZ3RoIDc3Nj4+CnN0cmVhbQp4nAH9AgL9\/\/\/\/AAAARE9x3OHs9PTy2uTo8vHwiI6P8fHxssXL9PX5pr\/O4+Xv4ePo7vP06\/DzaZKs+vn5ZW9\/9\/n6qK+9Y4mTPkxx9fX2ZoaYlrPEX2l9cIm1nam\/ZIiwYoGx\/\/34pKu56+zwn7jIaY2mfpC3cJaisrvZb5iwjZu5i5vChZay5uny3+Hm09K3+vfoxMOr4uvm7e\/1a3SCZIip7OzqZoWg\/\/7+dHuF\/v\/+\/Pv5YX+a1tjfYXWY0tXdy825qayhkKq9kqK1V2+O0tfm3+Lw5ujsbZGYiqS4navLf4id4OLn4+Pg5+rWmLbHqbC+\/f3yZZCp7+3TxMnHmJ6uuMvVvsTasMnWW26JXYGhUmiG29\/tvb+uzdrhgJuxUF98z9Tiy9biS1x63ufr8\/f34uTp9vX06+70sLGj2trB1ODl1tnqv8TOgoiN+fn4\/f39j5ep9vb1o7zMyM7j\/\/\/+6uzvkq\/C\/v7+qqqq7u7uVVVVd3d3zMzMu7u7\/\/\/\/mZmZZmZmERERMzMzREREiIiI3d3dIiIia5CGgImdk7DDSVZ5S1l8pL3LbpSdzdDYTVp39PLX8\/Py9fX1T2KA\/\/\/4ao6Co7zKR1Z7X3+pwcfaa3WNaYSdX3mVeYKJZ4uFb5Woao6GQU9xbI6e+vr5+\/v7a5CYaIuGZHCJhZa\/SVV3Tl19YX6PZouk6unmxcnT7Ozt7u7sS2B+\/Pz6nbfHX2uF6uroa5CM8vLw\/v784uLfYn6VZYycobrJtrmq6ens\/\/\/l6+jNWnGLscbT9vb2W3WRuc7ZlLDDYn6hfqK2bZOh6enxa4Sx\/P30Y4CrVWmK4+vubZWtY4OOY26K5OThcnuTrrTAm6K07\/Dz\/Pz78vP3pKq0pLzMc5mteYukxNPbk5qsbJGd+\/v8X4OXqsDPbJGSRVJ0UmOFdZOrrMPR9\/j5g6a7\/f3viqq+ao6SbXuR+Pj28PDudp60ZIKf2t3iVWF6WWaCfI+xmrXFaY2Ms7jEjJSm9Pb5qbTTyc3VnrjI5ubkjbkP+QplbmRzdHJlYW0KZW5kb2JqCjE3IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0Zvcm1UeXBlIDEKL0JCb3ggWzAuMDAgMC4wMCA2MTIuMDAgNzkyLjAwXQovUmVzb3VyY2VzIAo8PC9Qcm9jU2V0IFsvUERGIC9UZXh0IF0KL0NvbG9yU3BhY2UgPDwvQ3MxIDE4IDAgUgo+Pi9Gb250IDw8L1RjMiAxOSAwIFIKL1RjNCAyMCAwIFIKL1RjMyAyMSAwIFIKL1RjMSAyMiAwIFIKL1RUMyAyMyAwIFIKL1RUMSAyNCAwIFIKL1RUMiAyNSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNDU0ID4+CnN0cmVhbQp4nK1a3XbbNhK+x1PgUjrHyxAAf8DsRU\/WjU+zZ+OksXa7OW0vaAqy2KVIhaTs6oH2kfZ9dvBHUbZEQg7TU5MEwA+DwWDmm6G+4Z\/xN0wCj8RMX2gS45AzLwoDguPI3NQC\/4JL\/Oa6IThrsO8xnySRzw936NDWZIDpezTAvvxP3iTwN2R+jGMfJglinG3w3xY4DtUQc1ls8JtFRhDBixX+Fc9uPtzO8V98j+DZv+dYXd\/LK8WzL6oDbt7Zmyt7g+0NvI3029fmLQ\/6fseLv+P3C7XuYxmpn3gxI9GQjMjIiJWMszdv5njxxxk4Srw4DC9Aw+fBOv1FnHjMBQ309\/m5sj78y7R0WrOa+WoVbbSHZne2ZfFC1V2L3Y2P5mqfb3vv\/o7O6juKvTCIyNCacH9NqK8hBSNNjXOPE4ajGEw1igne4JDCbdJrKo6aCI9R0X8NGmDIGq8G1B5RL6JWxFBPri9G7fTlJsqX\/YT7AOjFlIQRj+CO0zgIiZRcnabru8M4dGLc3TXcJzzAT5jiRT0gYpB4gRURkPyERXiRYTi9crC5aGFZZyM3cle1IcjLQm47bNzbOQ7VWiI0+wWaIjz7CS5MW4EcKPvw7Efd+Elf3pu3dd\/NhzkOtDEweYKR7Hr\/RQ8xMKdQdJuZVWMsfup3fdVQZvg\/9eVLf+rP+sFOZsQyL9weLeQfeI66eUzXzacjzI9aFLtyPfQY7AftWJAxzRP7FMSwPTHhx\/s0sDunrf389lPwXsGQhQbGQm\/yMi2zPC1wVm22aZmLBmfrqmoEXldPuF2LPW7WKbj8fbWr8VbUTVXC6LxcVfUmbfOqxDdiKWpom6Nxj0XC3uk+Egz3BUOzIn3CD\/mjFKcqm90GJpbS4Dp\/WLe4rXCRb\/IWN9VG4Ptdi8uqxWlRKGHz8sHrpJJAadFUTuL5cLycxKvFt11eg3S7RgrTCpgaNKSU9iRA5qIQWWtUl5ZLvK2rVrYoNfa057nIFfIIvCM4r3HBPhcihc2rRboEfeWNVEyegUQgyGpXFHsp7q4E3TStlOtpnbZS4mXlnY84AUTDJOEHQdCYIG4BLIypDIdToYWxtHoHtAUYUrvfwvZVq9M23dtDqSW9j0uxFfAA3dISYUeXO+h32b+AOZp9VeNG1I9yx5Q5pY8CP+XtGuzMw1Lsg5DnNcIgwFGga3ZeB40MrriRSzbToaFlUu50fPCsr7+RJYMJ9zcmS0t4zordUrw9r\/kgimT0ZM4ioSELIz6XKyQ4JNTj0QDaAsgJkgv87wAaYV4c08gBjaJR6yc0cpQtCwzaXaUc\/p3IdnXe7nG529yLWu06aBYc6oBlEaBpJI7tbN93cju9BglsFx9AW1ha7KLXcbQT\/OysXkfRupW+y7JqV7b4Pi0gpmq339Zp2aSZMl0w5baq9+etlgUhZAmHOSey2oADlfSnstpxtEusdhSts9rrWiwh4BslKuVmuqnJKojEA8lXEno+hDA72UThRvoYNh1aSLzECe0dUI3VCdpWCrGUwV177mwHehowNRp6lFFu53UwNaBg\/2tOR0vJgHZ16bROBh7EaZ0QI\/Iai0dR75fpHkhek5eigZjw4VbF30boY3UviurpSsavAmxDk0TgQMAae2pyCNIBRE3ipIkeVYZopPWtpVVaP6+oqyPpXGSCMzxyPIxMQOT\/BL5ryHvTGcJfsWZ5AmauVYCVMmvyrPihJczn43sQEI+EPnOWxlg8Gl4bSwJ5fpzQxjXFIKVys2MXK2URuIzTKb5xcsy4zAtS\/OGUnYW0F2dkyh6wkZR99hWSiSGXHXhxAi8eQw8BDrlsCP2RH0WvEfRXPNsCq4D0GcSFDBmcNSTPcDpUWzFHur4Q41muag3lSqXVlR69gbQanvTgVvXoYYqVxvZV+xe9aHntX3TB+B91QaDSy9QL1D030ILswv5U3X1d6GXpofq1ddrr1kN\/6AZdItPY3+eaMnUfPb3R7V49gNtQT4VahV6L2Rb90M5RoGDOl1RDkoA5JtZ+hmoe4wTicGwCv+dFXonW0ZFp0CI6JVrCJ0SjLJgSLfYnRGP+lLvAgil3gcVT7kJATu4C+FIec\/+FM0XPnHTv38AcAfd8\/\/kcqhbs83F\/3a67402VYzIVWtY9rOfIuGVZ9Kz1wFK\/9dB3BDpsQgA8WQsNCfGoD6m6kXMgbXOIUge\/AEc6olOxcwZCDpaWTsk2xAfQKB+gcO6PTONMCR8dl\/ArXabWwUMXwMWjDjq6bW9DCfQs9eDUtsni971u2+lLo3pM8NJNorEhrsPZHr0j50G2rerjmFffDn55k2kVi4lVwGWsZdjWOn91jP1K6+j81QVoQyeWkfBSvK9DeS8DX89pkEy0WutPp0Gz\/nQStM6fToMWXmwlt5X7sX9Zqwy9hNDnJ37U4NGxwZ93JJyNZUYmYjW7bI1TlTtu6yqDZFt\/rugVsZqrATbAuZdwQuyME\/leGiWOFYOPaV628L+WOtXluN9mzW\/zK0i6m20lC3IDRRG5gIBEiZ1yomSShuF4YUElk9cj+Rz4G58HI4CoX0PBVS0\/9agiQCEeVDniUTRt\/pDq7Rxid5CgxyTqFjDVfgauVbhPNWzbtqrV9z5T7Lvf1SLdNf2PVeg5xY28mDFmJ3ItV4x83KA0ci5XjBc\/KHEru7kVP0gSj5crXnxG\/q5yBYEzzmm\/CuD0C4MT9ETmkcAu0nqOoO0\/olV9R5Tj4RzNwOdoBur\/bsGVilIKmWkch3ZxhjIPFikrXK1WosaDJ5dyCpyGPNfa9\/KOC9CceIc7nhvvmGa1lndMg2Z5xyRoHe+YBs3yDne0SXjHkbVPxzsgkPZ+2zLEO8yXYB2lzLdgxUIgjg\/8KoHKDDeJuZ1povhEQlX7nQoNgtDgTxymzxxhT3ux5dWZ4\/kUjRDfiwKQ6TATMuULnowHgT8q7fHzUl\/bo7meRXPCQkXFjhfllg2iF4IzYNgkCU+oiEcJ\/DsrfPc71E2qogpoiUOwUvfCVEBlC4Qt4qu4pasgOgABJ549mUwayX49eK1Gmf5KPfQ7hJ1pIFkGlxHSqFvQ95X4DxYk\/dpRcPfp+L6ucl047sr1si5knjJdLNIjTFdhKwhU9qthlb5ISpDo2P4CKVexXeg2U4rybLl96Ae98qcwnNu1mdg+TVnBFlWP9fZK19EVKSZBO5AFdzQ3suCM50gWJlltRxYmQevIwhRoB7IwCVp4sZVMQxb6x2c6spAkcnIQZ5wtuHzHGYFDFwZxHsgfkZ2GQ2ej+M\/4\/zgQtckKZW5kc3RyZWFtCmVuZG9iagoyNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9HMSAyNyAwIFIKL1RUMSAyNCAwIFIKL1RjNCAyMCAwIFIKL1RUMiAyNSAwIFIKL1RjMyAyMSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNTcxID4+CnN0cmVhbQp4nM1b247juBF911fUYzuY0YoUSUmLIINsI5OdYJPdwRgZBNk8qGW6raws9erSbud\/8kPJD6VIXXxpi6LGxiAYoNst0acuLNapKml+hY\/wKxDmksBvf9EoAB76ruCMQCC6D6WEz5DDN\/cVgaQCz6Xci0KP4aeAEi5C4XhuSAPGCVRJu+7+06V1MKz7dI+fo5DBDigsS9QDl+NK9U99iNS3fS+AgOB3ROAkW\/huife8yBewTAD1Uou7X8stfLNM0ApYruHvcPe+WMBbAnflAny4gwUIuOsuNQvn\/E681n+0P9MFcLjL9M\/2c1zrG7JaIH73Ffms\/5DlwsFbe\/3HqhUQ7\/t1\/4Dln+APS+3mU\/Oo77te6NHePNDmOco85k+b99CgLrTXL5daYHupasU6l8WGKEEE\/FSsSRia4Sz\/edmIYY9EFLgk7NG0ERf3yDkx4qcG94DB3VPRan5sxbfayScu1GJVfCFS6ZzrQhh3AybomS68\/Vb3q7WMdZal+boot3GdFjnED0VTw75oyiN7jQGMilwMXBr4LvG56BVxbFwMg8hjI19h+55QHidn2CYjj7Bfo0Wz0UxwhM+F+5s6UqN4PkNfs+hGxjJ6S9cF4Q3RGObeG6Jxby7aX4qjCDQEvYOB+Uqc4G5E6HkSmIx35zTex3NLSN3AfJ6dFrYu47yKE3WeK4jzFciXJ1mmMk9MYYYR5hLBo17Qdc4\/qC1C15+LNuV7M1MKzs+y8GWmdOyZ8tWdM6Z0ZjEljDOlcO4eToS2CB2\/tZc61MrIqz3Bdc6Yl33HXcuIy73jIuQywcEMgnPGrSCYrCLfH+ROninHnkMORHmCfRKhzihR2sXqgRyds+3xQpdzKqwNO2yPM2UYJcT1BQo3GHaWMY5ZfzxBBLgZLDTiOjNIt6dwezQw0244F3CCdoOOdm9i7kC7N0ELZttqRbs3QRto1xrtmHbHafUWyh0SGUWS9gJiAXdfylVa74qy3qS5rCoAcyBSj6iUIAYZt2JSgrzsfVUm5RGSt\/d\/x6TtpQ6yvbTFP9TqFvkXqZY448tbvj0oNdJdXciBnsu47\/eesWoVJsIlDGdDWqTVeQpapFV7QLu0ehtz+7R6G7Rgtq02afU2aH1atUezSqs3Ue6QMELfjW6HJqKjatOE9mEN+3FATMIuC2g4A7BoIC4lxJDLHSRNVRdbWb6BnYQkzuFBPqY5VJu4TPPHtm46HqL4HqzifQXrstjajI24qtFHyOhEL+eu3kjErqXSpJJ5DUhKFeRFnSbShc8bmSt1tO55AVmRP8oSlH6nNhR5neaNtFKOeYp2bHQrtEvka4fEFaxklZTpg1zhjVOlvy928lkpphRX3lXaYftqpRwVRwRlUq7BVrjGbngPdbqVgLpm6TatTTQeuB4zirCvOyjxZoIpF3YB5ppqcoZ4XJwCO1cfPGwhIo3m3OAYsyiwPHUfG1npscU7Ay7hWAexcAbsX1MDIRHMCaGaU9rjpQY01SSJgM1AM8QgCXQM+jPQTI4LvbloeGqKPMOyVx2e086aXJpWUWyqfT+cI2K327nrNH+RZewmxfZC+36J9MOAzAksYwnB56IV5ZCj2rTy04\/wXfEClHM\/OohyBjcpt9BIeUWoqQxstQ2Bf7iSHV3hqj7HK4dv6StOBhtYj7vlcN6QhIlV3\/8Js+2fkU2KN3D\/e4iY51FTsvHCdqZ0IuDqZMNE2BHMTZINZzesZ5gfWdYzv1ma6g+sBL0wmgGHNP++PRRv4EOeuPDz3X+6C\/\/9eQFP8X6r2P+pLBJsSVUVUsnyGfkUkFnj1TbN06qW2LnCw96GSBnlU7Oijkjvy6KqyiJeVUrDOE\/SODN2wxjgoQhNEs6obymTTV5kxWMqqzfwww\/3gJUExFmGRcRDjYbWdSa1+aXMMHpXve2VO24pxz6GRVE0w1KrAEGmnDhrQBzbcPMxG0zUWs6sFn\/06dxBJJ7l04luFHjTI93Pm7Y77xvsSKtEKObzhdOOeMVwaaXXFvZtNuFYf5CQnGl37Wn2FdXTrzpBwcLCFfR4goLJfnKC8n2hZ+O7YWQRaSdS7cTWu74eoLP+7vv+kX3oqMcEuOZF321Xlu2kpZ+64PonvabsZzNUb6Lo1yf6Z71wRL9ezVeonpuwU4hjAa1CLVyrRCsy02q131Iq9nfXCwj69eUwxhm+1mrUfuEY9J1+1QD6oLMNKj8grlBvWpzsydX0pXg7YreiL5+GLmc2IbosVPavZdIN7p9kWRU55uLjxkt3oE0eN\/WmKNN\/YaqME0UY+rFgU0ndDeJvG4rw1ZsxzCZxVjJpyrTew1bGVVPKChs+rJKwunvK9rBLa6xj5AqpLIMs3rmw3EhUYVic5knWrKx0olGEvYCNTkp4g4wIVbyWj01crpBbtKLolHWaydYnD02arZBO8SaqUpdpUity7byGXePZqxHjmoVYCVtpNmycko+CigaZbdhEA7PyyCVRMIiyKVxzZQLGArpb4mYUe4l27zYF5BLdgPd+yYtdu1s2NgaeCn2bucVxUA7hoQw22IdEHQpKz8QYD+xTmT7HiWEURIXAIOZsAL2OWigyylw4XbOtVKQbam3fx24giIIv1PM60qI8ODpVlk9bx9FUGyMmKNA5LzC+nAKdgV\/MFJj0jwVoy1D9zwMFOh0F3YQClVo3okAHKbCzw5r81LzXC9jZblz7GI36xOWXX0r5EjQy+sraGdpnNcPMMiP5vdFtg3yJMdEpoutmo9+OJzZG0RohTHq8OnKjYMTrHiao54HGFmFJutP0b0MLSXzMB1RYoNHphoNQYanb0HD8+ITui\/OBoNC1j+mzKh7aHegHIhffkXj9aASTms95L\/\/KuVbvaYJE6Jnq+87TYOXpaTRqoVvv6Um0wdJPGwOcjx2MmIOGdI5blK6wXU7XadKdjKd4327bQ5plldpMZKVnXKUHWuc1CG6loa\/2XCbIoNJ1ffVhK0XYVdWGrXSst3ISjb7uq8e3cgptODRLmWXKo6rCSnX5WMpEqmOzLXK5N83aotANIz\/ohd3qhHB69BL51SdkEm3WCZlCO87+cVYV0xTQ9j9FvcF7WO03yUY9ikr0Cx2m1D2o5IcY3DYx\/YD1XNygkHiNzUQa12p0hcdKy9adT5ynExUfcxnBcrcTeuWODyZQpoa2X7N8JF7kipOCb2SkdDr06EZKe10RdZOjpK\/ahK58DG8KqpekOR2Ej77v+McuwH\/r+cz\/3bj\/sEwS6n+DnMApW7xwejqmnpVgffahf2elnYHo\/6eghmOqxAt1WUeHtWjj22FZ+xP6ElfVg+ict2xYVqa6DMzbi4\/txXftrxlVIeVE\/c8WdmbmtUOMCGvNMPC4Bdz7bg5gojwM4DD056Bm8U5XJ7o2AfXMvEwfN\/Xw1Fc91NobCkGfBq7nhXyQOY\/VPsL\/AIqxj\/sKZW5kc3RyZWFtCmVuZG9iagoyOCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCi9UVDIgMjUgMCBSCi9UVDEgMjQgMCBSCi9UYzMgMjEgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggMjgyOCA+PgpzdHJlYW0KeJy1W92O27gVvtdT8HIGSLTin0TlptimXWD3YtNFpgiKohcambaVyJJDyfF636cv1KLv00NSv54xRe3MIsBIlsTvHB6efzJf0S\/oK8IsxAm1F5ImiAsaxpxhlMTdjZLoE6rQd+8bjPIGReZfk8PYKCTM\/tY3OBIh4RRGRkmYiiTID+jPD4jbAd3l4YC+e3jACKOHLbr79z16+Iz++mA4uULDNEwSEnugkQ4NOdBI7Mlbzjq0j\/tMFdUObWuFsu22KIuslc3\/kPwm1WWTXdDjqSkq2TToeFLHupHNfXCLPE1pyOkwF7RM\/a0LDOYCV38w5AJLV4IVFUjkkLVFXaHssT61DvRB7LEWgAd8cHepTwrlSm6K9lyrdm9EfHthCWOhIIS4KATX0ritJr0Kx0kS8siBtkqFl9HWqPAi2jDT7we1RVtVH5BW2B0yEp6uYlujQ6a+yFbfwVvNQ\/AsD4xEIaNCuHjw171R2jEOGXGgddIO\/KS9iAbSDrylvYSWs+Cpw6jqavQZzwr4hjmyJIziiPVkPfyUYxJppOcAyxRrWC+0jy1wjMrs3ADLF7QrvknNMco2DhukIqQpXkEFjBsULyuRKnb71gioLA5FixorwxB9lBI9yrI+G3EeaghCtxVpnCclYexerE6RQO2NHXQMnKqNVKjpJx86hEo4zFbggdhrLREGYyAJXgenR0epAIWJwoRgHosY7gRJGMcBxGgTtN9\/dH6HPr6H+1QwdEYEPSgHjxGfLHAURmmaAHM5gixBf91dLLfUcvtPdPdpf484usvuUYzu2nuUmilggu7298Hw4mg+sn+leVKZe3D+yTDgfI\/MsOuPzOvg7ke4RMPHJVwwBCx7OcBl+DHjwlKYMqnug3T41lLYmRfdiK2lU5s3aoqVXTOlHwXwKDcv7F877mT+2k9n\/MxnYfmyQ8r7QHO0mcJ\/tlzaD2YsW9BOCpdrMQZzWeynmFYiFtLKTU4YrybihwH\/Ch5+WlBunpKQswSjUXMgG3pGcYKZ4siy1wDNwZ80LdTTsoYBKh49p7IYAlWKCR0ov5KV8kSEIn4tm+cxC5kX2j9MVrSvi9wRssD9phiLFbAQm85FWaLseCwv2gub5LauJOr9Y5bn9alqQ0cGmXCgRnlP1sP5esmGg5YsoS1F8RGN8jCOBwV0hXFP76pVz+0tOSGTZdA6D9NZdJZ\/AbuixsMkxpyFsTei7wNhjDXun9fmuX0LNsKsNfpaCAfuCE+v2HyluPOsZIacikPilwy5upHMTcEEvWC+35qpb3sBJMa1Jf19ZsTQ9q5pEMm7QSTBokiSNMSCiCv+PJXlCZoga9Hy+nDMqgKsUskSUpENerwgeHgAa6zPlVTNvjgiyIfyumpVXYboYS\/hi6wa+Qhu6iNLGSQufjm7RQscebE\/2qNE26LKqryAhC+rNjo5Hh8Mcw5dVSo4A54k\/lSdPgZDzWjnAN6cuqoYXXcES1UeS23dsYxGPLQmJp68DVrz4TRtUEBll5enjXRlsFC80SjmExrBwhqOmnku2j1q9xL9oMPDh+xLg6rsIN+g5pTvUda46r1hbjENU4\/qMbgbifwA86rV8Q36scpDx9xEAm6NcBeNFf2AQdthkf1q7peGj5EkhCwczcJH7JFs\/zyNClkfS4zjDIbIUZq\/9t5+Y+OKjT3XjvNpLAmueE7TkBLGep5f5mJIRNaijepZ1e2y87ytogxCgOAs9aYd3HWe2CMJ0d2T5CZmsFYlb6NdqeQQJPw98c1owiIKVCO6MBnfaDJ44oi5C\/d5v+357tToiRfRxn6bh7daQhtU4edZ1+fs9MGchnGUONGvllH3RqT1v7OI\/zRa0jjkgk\/lsOTfu6DhwEzikCWQzXSYL6uAKJjZSrRDrdpdtpPIUQExhuGS8BWwvc6\/8YnJVJuyF2xRNScFdiVHq3JRIIJCsROLFRQ2hZJ52\/UVddtxQqgz7aOqt4WzPT9MDGo44dc3Uzsg8ptpHDeuOEyTUKQpdUH\/jjhMb3dj\/6g4TGddTR2HSbochn+CMPzW9puYicZvbaeFGJ9j2ypvYxN99Rtl3nyxP+T06xnAzl5W1DQE6zSIsX4aL6tpCI7XomXIbDRAvNkpKQ+yaiEMtWcpq1mT3NFeZnqLB3NxtRK\/0\/UwAFmJNoZIjyBPX6MrPCqfN9qYArX7TG807CRk6arfeBjnAF5hc8rbRqdCjVTfitzuUFzqk6sE4zrwk3Rg6ZVKMAoaxdlrlWDLaGtKsEW0WQn2uS6qiTs+ZqrVSedQj9k9TQjdamMc9FHJY1Zs7ANHUjNwo9Nir4Lbq6QmoGKCp8Ib172evcLq+mtxH\/m6bfeyPht8pvsrEwft0Wb7YAuevSl4bNmj+oZ2ajYSEuujidmToKbbNnxkB9vKqZrUT8i00oeunam9gmQ+tgOdll1DO8\/C+ZZdhEHWkES8l8DLcvFRnnGke9weaH9vJKq3phswKpr+DD97PgQcbiyYD35nVufzOQTH9atUWQhKPVGYXi5PjwPwkOBkSmQp9XWFOyZmaB5u+Cwfm6J1JNLgQiHVE3wF5juEPu2lacijE4jcyBs9lfeVeuijHVor\/NfzWt7BorxZmkCtHq1Z1OdYN6qBKVRFqUnvDmYhIz4+KWdPMJh7ORsFT+CbPdqaaQs+xdJMknSKNX1isaajRqyb8x6NhcW3Nj2CZzXjjd1XKesdRIbZMYyigRy+LCGrlzZCNG2tbGL0fGigApwuZtzFxIpjRUJAbkf80ZwBgYKa+6MFYw06nFD58W8+6RaBbOTGNtGV\/LPNRskGqqNHVZ8h8UHt5QirsakPGSyE7mHqyinP9YmutoBfZg1gnebL5IqpI1c40dtNPg1Oa27arnXmVjQ9LYcHgVgbp1E8pxK4lt3o19bVjWAhpYnoIX0KZ2X80KGuClBTWLU3qD7CTExhCIK8HWgYodr4Ym8pmaB480gSjTTrfAXaxtH\/g7KVGY\/vvYLOWiNagWaM4OspK4v24qX6kJETP9Vv+m5EF62HvL\/ebiX4GL3dO48qT+w5ghkQyMs6qh4a4o6DFLQ4YWwFnqvHqosShiGb9Yd70HIAFs05p6xsautv0X\/yuv4CyfN\/fXIlLIRnbO031HVyfmrB\/ex13r9R+oAVVF97WR5NgAcbavTRqOI3aQfUVVlUEslf4U0hYRG9PBBonacTf2+nq3uKunn+eNG+aKN5UqdKV4s7lR1MtbiRJXCrHKsAtYqg6UD9hU3CmK9F+1Yo60jrubC92vM4NicOPMj0ItP92FNVfD3JElSoaYpdZSUHxG0XTjdqYQEvuvWuZGb2JDIEqYAxQanPYXqtJuOe3khbcRfSTB+gANPXPO11J1Jz3Zf6DrljrPP0georHXbBFHtaphca1OZ+2fMHaz8fZX5S4Fnf6T3zZ3LQJzsdehuKUyZ6Un9I\/kwjrXOC+BBZ7lzQiK5F67JSm38U1ebUtOriiGhEVy8Ezyk4c4+3LjQaJjyaoi1Va00LZtV3TK6qCLNi+v8yYG7Ozh6sePHwBLL66ROb509Hrcn8ceR7bsYRBVNI5TBJ2Qq0KleXoz23LfN9VesMVe826QpRyVwW3+xuQNWcDvpMq6xggXWU2WQtxA7dqmq0LYBX8PA8EN\/AJ0KBt+x6Oo\/WnI7HWrUNwkQ4Gkb6PzFQTpwEAm9NgtAfplALrIF7LFokB2lCJSCPsjL1R5cNgU0ovY336NBgysIoZfFA12MBXQZBISkSZBVcV844HDoTLMQRlLsrUCf29Qv6P\/gi4N0KZW5kc3RyZWFtCmVuZG9iagoyOSAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggNTQ3ID4+CnN0cmVhbQp4nJVUTW+cMBS88yvecXNxbGxjyLGrHnprKtSqRwdM1ynYG9sk2r\/ZKv+nZr+kVcquERIYJGbee\/NmXuARXoAwRAQ9PPJKAC8pKjgjIIrjwSn4AQbu155A4wHvL9\/EfzHK2eF9OlTxzikWIHCFikKQrBngUw388MfxUQ9wXzcMCNQdrOAO6mf4XO9LmYErKo7yQiSgrWWvO+uMlldwCeOIlWIJrlNet8oEfwU1gmFW8AWoD\/DTjjDIHci+t29gRwd+I502v8B2oE1sZZBBWwNvOmzgLrs9qhKjshBwizxbGWtk1+ley6BaCBvtWthKF7TyIE0LvR50iCXNd5xXDFFc8hNpyhzn+osneLbahL1u2Y0miwKxhCZhNUj3W4WJbz9AGzbKQaeNNI2WPTR22Epz6niqYZLgPBb\/DupVuV0bFUqZPc8RTpr90+i1Ud7DdnRb6yP\/0y7ST0sw1RqrjMPxwY3NNBwfX\/bf5qWg0bMVE+caEqRQpukjdQt\/vgxb64I0YR6fVRQJSukC\/CRjU5GaE1+dfpXN7or\/KEacxMMC0GshQeliuPXG6iaKOS3SOuo2Dsr5v2BsmD6jM1n2QT4sEME4P5MlrHaSUXI6RVEC2nflBhvd9+0UdA+wu8im+f3PS4Lyskpny1a3gu4ym1IWCZeJCXQZdEm2+49T4LiOKbHAY0ympFV2sT8fBHk\/7hG6FgM4urMqyIlzmQUe4R+blwYzCmVuZHN0cmVhbQplbmRvYmoKMTggMCBvYmoKWy9JQ0NCYXNlZCAzMCAwIFIKXQoKZW5kb2JqCjE5IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUxIC9CYXNlRm9udCAvTExWQ1lEK0FkZWxsZVNhbnMtUmVndWxhciAvRm9udERlc2NyaXB0b3IgMzEgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyMTQgXQo+PgplbmRvYmoKMjAgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHlwZTEgL0Jhc2VGb250IC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZvbnREZXNjcmlwdG9yIDMyIDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMjEzIC9XaWR0aHMgWzI1MCAwIDAgMCAwIDAgMCAwIDI4NyAyODcgNTMzIDAgMjIzIDIyNCAyMjMgMCA1MzMgNTMzIDUzMyA1MzMgNTMzIDUzMyAwIDAgNTMzIDUzMyAyMjMgMjIzIDAgMCAwIDQ3MSAwIDczMSA2MjkgNjcwIDAgMCA1ODYgMCA3NjIgMzI0IDAgMCA1ODMgOTE5IDc2MCA3MzAgNTg3IDcyMCA2NTUgNTUzIDYzMCA3MjcgNzAxIDk1MSAwIDYzOSAwIDAgMCAwIDAgMCAwIDU0MSA1OTMgNTE4IDU5MCA1MzAgMzIxIDU4OSA1ODEgMjYxIDI0OCA1NDAgMjU4IDg3OCA1ODcgNTQ1IDU4OSA1ODkgMzY4IDQ2MiAzNDAgNTgwIDU0MCA4NTUgNTY4IDU0MCA0NTQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMzY3IDM2NyAwIDIzMyBdCj4+CmVuZG9iagoyMSAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0FHS1hKRStBZGVsbGVTYW5zLVNlbWlCb2xkIC9Gb250RGVzY3JpcHRvciAzMyAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMzIgL0xhc3RDaGFyIDEyMSAvV2lkdGhzIFsxOTggMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyNDQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDI0NCAwIDAgMCAwIDUyNCAwIDY5NiAwIDY5MyA3MjYgNTc4IDU1MCAwIDczMCAyOTEgNTExIDAgNTU4IDkwNCA3NDUgNzYwIDYxOCAwIDYzOSA1OTkgNTcxIDcxMSAwIDkxOSA2MzUgNTgyIDAgMCAwIDAgMCAwIDAgNTUwIDU4NiA1NDEgNTgzIDU0NyAzNDIgNTU1IDU4MyAyNTcgMjU1IDU0NCAyNTcgODYxIDU4MyA1ODIgNTg1IDAgMzc2IDQ5MyAzOTIgNTgwIDUxNyA3ODEgNTA4IDUwMiBdCj4+CmVuZG9iagoyMiAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0lQRUpKRytBZGVsbGVTYW5zLVRoaW4gL0ZvbnREZXNjcmlwdG9yIDM0IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgODkgL1dpZHRocyBbMjQyIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyMDAgMCAyMDkgMzM0IDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCA2MzcgMCA3MTYgMCA1NzAgNTQzIDAgMCAyNzIgMCAwIDAgODg1IDc0NSAwIDYxMiAwIDYzNyA1NzggNTMyIDAgNjE0IDAgNjA3IDUzOCBdCj4+CmVuZG9iagoyMyAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UcnVlVHlwZSAvQmFzZUZvbnQgL1FRVEFRQStUaW1lcy1Sb21hbiAvRm9udERlc2NyaXB0b3IgMzUgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyNTAgXQo+PgplbmRvYmoKMjQgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHJ1ZVR5cGUgL0Jhc2VGb250IC9TUUtVRVQrU3ltYm9sIC9Gb250RGVzY3JpcHRvciAzNiAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMTY1IC9MYXN0Q2hhciAxNjUgL1dpZHRocyBbNDYwIF0KPj4KZW5kb2JqCjI1IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1RydWVUeXBlIC9CYXNlRm9udCAvSkZSWFFEK0FyaWFsTVQgL0ZvbnREZXNjcmlwdG9yIDM3IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMzIgL1dpZHRocyBbMjc4IF0KPj4KZW5kb2JqCjI3IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUwIC9FbmNvZGluZyAvSWRlbnRpdHktSCAvRGVzY2VuZGFudEZvbnRzIFszOCAwIFIKXQovQmFzZUZvbnQgL0pPVk9WVStNUy1NaW5jaG8gL1RvVW5pY29kZSAzOSAwIFIKPj4KZW5kb2JqCjMwIDAgb2JqCjw8L0xlbmd0aCA0MCAwIFIKL04gMyAvQWx0ZXJuYXRlIC9EZXZpY2VSR0IgL0ZpbHRlciAvRmxhdGVEZWNvZGUgPj5zdHJlYW0KeAGdlndUU9kWh8+9N73QEiIgJfQaegkg0jtIFQRRiUmAUAKGhCZ2RAVGFBEpVmRUwAFHhyJjRRQLg4Ji1wnyEFDGwVFEReXdjGsJ7601896a\/cdZ39nnt9fZZ+9917oAUPyCBMJ0WAGANKFYFO7rwVwSE8vE9wIYEAEOWAHA4WZmBEf4RALU\/L09mZmoSMaz9u4ugGS72yy\/UCZz1v9\/kSI3QyQGAApF1TY8fiYX5QKUU7PFGTL\/BMr0lSkyhjEyFqEJoqwi48SvbPan5iu7yZiXJuShGlnOGbw0noy7UN6aJeGjjAShXJgl4GejfAdlvVRJmgDl9yjT0\/icTAAwFJlfzOcmoWyJMkUUGe6J8gIACJTEObxyDov5OWieAHimZ+SKBIlJYqYR15hp5ejIZvrxs1P5YjErlMNN4Yh4TM\/0tAyOMBeAr2+WRQElWW2ZaJHtrRzt7VnW5mj5v9nfHn5T\/T3IevtV8Sbsz55BjJ5Z32zsrC+9FgD2JFqbHbO+lVUAtG0GQOXhrE\/vIADyBQC03pzzHoZsXpLE4gwnC4vs7GxzAZ9rLivoN\/ufgm\/Kv4Y595nL7vtWO6YXP4EjSRUzZUXlpqemS0TMzAwOl89k\/fcQ\/+PAOWnNycMsnJ\/AF\/GF6FVR6JQJhIlou4U8gViQLmQKhH\/V4X8YNicHGX6daxRodV8AfYU5ULhJB8hvPQBDIwMkbj96An3rWxAxCsi+vGitka9zjzJ6\/uf6Hwtcim7hTEEiU+b2DI9kciWiLBmj34RswQISkAd0oAo0gS4wAixgDRyAM3AD3iAAhIBIEAOWAy5IAmlABLJBPtgACkEx2AF2g2pwANSBetAEToI2cAZcBFfADXALDIBHQAqGwUswAd6BaQiC8BAVokGqkBakD5lC1hAbWgh5Q0FQOBQDxUOJkBCSQPnQJqgYKoOqoUNQPfQjdBq6CF2D+qAH0CA0Bv0BfYQRmALTYQ3YALaA2bA7HAhHwsvgRHgVnAcXwNvhSrgWPg63whfhG\/AALIVfwpMIQMgIA9FGWAgb8URCkFgkAREha5EipAKpRZqQDqQbuY1IkXHkAwaHoWGYGBbGGeOHWYzhYlZh1mJKMNWYY5hWTBfmNmYQM4H5gqVi1bGmWCesP3YJNhGbjS3EVmCPYFuwl7ED2GHsOxwOx8AZ4hxwfrgYXDJuNa4Etw\/XjLuA68MN4SbxeLwq3hTvgg\/Bc\/BifCG+Cn8cfx7fjx\/GvyeQCVoEa4IPIZYgJGwkVBAaCOcI\/YQRwjRRgahPdCKGEHnEXGIpsY7YQbxJHCZOkxRJhiQXUiQpmbSBVElqIl0mPSa9IZPJOmRHchhZQF5PriSfIF8lD5I\/UJQoJhRPShxFQtlOOUq5QHlAeUOlUg2obtRYqpi6nVpPvUR9Sn0vR5Mzl\/OX48mtk6uRa5Xrl3slT5TXl3eXXy6fJ18hf0r+pvy4AlHBQMFTgaOwVqFG4bTCPYVJRZqilWKIYppiiWKD4jXFUSW8koGStxJPqUDpsNIlpSEaQtOledK4tE20Otpl2jAdRzek+9OT6cX0H+i99AllJWVb5SjlHOUa5bPKUgbCMGD4M1IZpYyTjLuMj\/M05rnP48\/bNq9pXv+8KZX5Km4qfJUilWaVAZWPqkxVb9UU1Z2qbapP1DBqJmphatlq+9Uuq43Pp893ns+dXzT\/5PyH6rC6iXq4+mr1w+o96pMamhq+GhkaVRqXNMY1GZpumsma5ZrnNMe0aFoLtQRa5VrntV4wlZnuzFRmJbOLOaGtru2nLdE+pN2rPa1jqLNYZ6NOs84TXZIuWzdBt1y3U3dCT0svWC9fr1HvoT5Rn62fpL9Hv1t\/ysDQINpgi0GbwaihiqG\/YZ5ho+FjI6qRq9Eqo1qjO8Y4Y7ZxivE+41smsImdSZJJjclNU9jU3lRgus+0zwxr5mgmNKs1u8eisNxZWaxG1qA5wzzIfKN5m\/krCz2LWIudFt0WXyztLFMt6ywfWSlZBVhttOqw+sPaxJprXWN9x4Zq42Ozzqbd5rWtqS3fdr\/tfTuaXbDdFrtOu8\/2DvYi+yb7MQc9h3iHvQ732HR2KLuEfdUR6+jhuM7xjOMHJ3snsdNJp9+dWc4pzg3OowsMF\/AX1C0YctFx4bgccpEuZC6MX3hwodRV25XjWuv6zE3Xjed2xG3E3dg92f24+ysPSw+RR4vHlKeT5xrPC16Il69XkVevt5L3Yu9q76c+Oj6JPo0+E752vqt9L\/hh\/QL9dvrd89fw5\/rX+08EOASsCegKpARGBFYHPgsyCRIFdQTDwQHBu4IfL9JfJFzUFgJC\/EN2hTwJNQxdFfpzGC4sNKwm7Hm4VXh+eHcELWJFREPEu0iPyNLIR4uNFksWd0bJR8VF1UdNRXtFl0VLl1gsWbPkRoxajCCmPRYfGxV7JHZyqffS3UuH4+ziCuPuLjNclrPs2nK15anLz66QX8FZcSoeGx8d3xD\/iRPCqeVMrvRfuXflBNeTu4f7kufGK+eN8V34ZfyRBJeEsoTRRJfEXYljSa5JFUnjAk9BteB1sl\/ygeSplJCUoykzqdGpzWmEtPi000IlYYqwK10zPSe9L8M0ozBDuspp1e5VE6JA0ZFMKHNZZruYjv5M9UiMJJslg1kLs2qy3mdHZZ\/KUcwR5vTkmuRuyx3J88n7fjVmNXd1Z752\/ob8wTXuaw6thdauXNu5Tnddwbrh9b7rj20gbUjZ8MtGy41lG99uit7UUaBRsL5gaLPv5sZCuUJR4b0tzlsObMVsFWzt3WazrWrblyJe0fViy+KK4k8l3JLr31l9V\/ndzPaE7b2l9qX7d+B2CHfc3em681iZYlle2dCu4F2t5czyovK3u1fsvlZhW3FgD2mPZI+0MqiyvUqvakfVp+qk6oEaj5rmvep7t+2d2sfb17\/fbX\/TAY0DxQc+HhQcvH\/I91BrrUFtxWHc4azDz+ui6rq\/Z39ff0TtSPGRz0eFR6XHwo911TvU1zeoN5Q2wo2SxrHjccdv\/eD1Q3sTq+lQM6O5+AQ4ITnx4sf4H++eDDzZeYp9qukn\/Z\/2ttBailqh1tzWibakNml7THvf6YDTnR3OHS0\/m\/989Iz2mZqzymdLz5HOFZybOZ93fvJCxoXxi4kXhzpXdD66tOTSna6wrt7LgZevXvG5cqnbvfv8VZerZ645XTt9nX297Yb9jdYeu56WX+x+aem172296XCz\/ZbjrY6+BX3n+l37L972un3ljv+dGwOLBvruLr57\/17cPel93v3RB6kPXj\/Mejj9aP1j7OOiJwpPKp6qP6391fjXZqm99Oyg12DPs4hnj4a4Qy\/\/lfmvT8MFz6nPK0a0RupHrUfPjPmM3Xqx9MXwy4yX0+OFvyn+tveV0auffnf7vWdiycTwa9HrmT9K3qi+OfrW9m3nZOjk03dp76anit6rvj\/2gf2h+2P0x5Hp7E\/4T5WfjT93fAn88ngmbWbm3\/eE8\/sKZW5kc3RyZWFtCmVuZG9iagozMSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0xMVkNZRCtBZGVsbGVTYW5zLVJlZ3VsYXIgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE4MiAtMzIzIDExOTggMTA5OCBdCi9JdGFsaWNBbmdsZSAwIC9Bc2NlbnQgODgwIC9EZXNjZW50IC0zNzAgL0NhcEhlaWdodCA3MzcgL1N0ZW1WIDk0IC9YSGVpZ2h0IDUyNiAvU3RlbUggNzYgL0F2Z1dpZHRoIDU3MCAvTWF4V2lkdGggMTM4MCAvRm9udEZpbGUzIDQxIDAgUgo+PgplbmRvYmoKMzIgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE3NCAtMzA4IDEwMzUgOTQ3IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA2NjggL0Rlc2NlbnQgLTMzMiAvQ2FwSGVpZ2h0IDY3NyAvU3RlbVYgNTYgL0xlYWRpbmcgMjAwIC9YSGVpZ2h0IDQ3OSAvU3RlbUggNDMgL0F2Z1dpZHRoIDUwMCAvTWF4V2lkdGggMTIwOSAvRm9udEZpbGUzIDQyIDAgUgo+PgplbmRvYmoKMzMgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9BR0tYSkUrQWRlbGxlU2Fucy1TZW1pQm9sZCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTg2IC0zMjMgMTIyNyAxMTEzIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgMTE1IC9YSGVpZ2h0IDUyOSAvU3RlbUggMTAyIC9BdmdXaWR0aCA1NzAgL01heFdpZHRoIDE0MTMgL0ZvbnRGaWxlMyA0MyAwIFIKPj4KZW5kb2JqCjM0IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvSVBFSkpHK0FkZWxsZVNhbnMtVGhpbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTc1IC0zMjIgMTE0NyAxMDk0IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgNDkgL1hIZWlnaHQgNTIwIC9TdGVtSCA0NCAvQXZnV2lkdGggNTcwIC9NYXhXaWR0aCAxMzIyIC9Gb250RmlsZTMgNDQgMCBSCj4+CmVuZG9iagozNSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL1FRVEFRQStUaW1lcy1Sb21hbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMjAzIC00MjggMTcwMCAxMjcyIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA3NTAgL0Rlc2NlbnQgLTI1MCAvQ2FwSGVpZ2h0IDY3NiAvU3RlbVYgMTAyIC9YSGVpZ2h0IDQ2MSAvU3RlbUggNDQgL01heFdpZHRoIDE3MjEgL0ZvbnRGaWxlMiA0NSAwIFIKPj4KZW5kb2JqCjM2IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvU1FLVUVUK1N5bWJvbCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTY3IC0yOTkgMTA5NCA4MjcgXQovSXRhbGljQW5nbGUgMCAvQXNjZW50IDcwMSAvRGVzY2VudCAtMjk5IC9DYXBIZWlnaHQgNjIzIC9TdGVtViAxMDMgL1hIZWlnaHQgNDY3IC9TdGVtSCAzOCAvQXZnV2lkdGggNTcyIC9NYXhXaWR0aCAxMDQyIC9Gb250RmlsZTIgNDYgMCBSCj4+CmVuZG9iagozNyAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0pGUlhRRCtBcmlhbE1UIC9GbGFncyAzMiAvR</mes:base64EncodedContent><mes:contentType>contentType</mes:contentType><mes:documentName>names</mes:documentName>
        </mes:CreateEnrollmentDocumentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6fc9718f-f69d-46f7-9a41-dffda9a7c22f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="9c7d00ba-2f31-4166-b13a-3d560078b5a2" name="Not SOAP Fault"/><con:assertion type="SOAP Response" name="SOAP Response1" id="3358cc26-bd03-4a0b-9105-4da9779a1d57"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="87c82d3c-e4c6-4bd1-aa6c-4eb7f59047c4"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:commandStatus[1]/text()")
def documentId = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:documentId[1]/text()" )

assert commandStatus.getData() == '1'
assert documentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateEnrollmentDocumentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="f411729a-13d5-4946-85cc-5c73925b4a7d" name="CreateEnrollmentDocument_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateEnrollmentDocument</con:operation><con:request name="CreateEnrollmentDocument_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a2d6acb3-7045-4a9a-bcfb-42997ae5c540"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateEnrollmentDocumentRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:note>ref</mes:note>
            <mes:documentType>type</mes:documentType>
            <mes:base64EncodedContent>JVBERi0xLjQKMyAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQW5ub3RzIFs8PC9UeXBlIC9Bbm5vdCAvU3VidHlwZSAvTGluayAvUmVjdCBbNDE2LjkzIDM2My44NSA0NjAuNjEgMzU3Ljg1XSAvQm9yZGVyIFswIDAgMF0gL0EgPDwvUyAvVVJJIC9VUkkgKGh0dHA6Ly93d3cuY2Z0cGF5LmNvbSk+Pj4+PDwvVHlwZSAvQW5ub3QgL1N1YnR5cGUgL0xpbmsgL1JlY3QgWzE0My40OSAzMjEuMzMgMjE0LjE3IDMxNS4zM10gL0JvcmRlciBbMCAwIDBdIC9BIDw8L1MgL1VSSSAvVVJJIChodHRwOi8vd3d3LmZpbnhlcmEuY29tL2xpY2Vuc2luZyk+Pj4+XQovQ29udGVudHMgNCAwIFI+PgplbmRvYmoKNCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMjIzOT4+CnN0cmVhbQp4nI1Y23LayhJ93vmKfkjtSqrwWPdL3jDgCqdsICAnlaq8DGIAHQuJPZJM+JHzvadnRjeETDapGCFmVq9efZkWBvzng0ZsF04fHgK4f9TBIZoGwRYmgbijmy5xDfAMm5g2BBv4tDqyMKIxLAp+TDMGwzBMiySHWXFYM\/4FLNPQxEvH\/5Zj+7DKac4ODJcsGI\/SzRd4pjzcgz4AQ9NtuCs\/m9UNWNAdA\/0e7M8Q\/FcQ+Qe\/0AQv8Q8Z4ZXhmcRywHUdYlsQHuB+qsM4hW8fXI2YGriOSxwDTN8hHtrQiKsDZ\/AAwivXJLoJrm0TX5NOLTjNaJLvYfS9stkss1xiqWXPLInT6wWmRzxf4VD+CnIVyMvRsLX6\/tHoqGvaDnG0NpHxdDkZBTB8eoLhaDR\/mQUwnX17mS6nkxUE8y\/Qwqt2WxaxHbl7xNMs4yndZPAYJTSRgQpYuE\/SON1FLOvbbiIntX0xh4f0Nxi2bfp9Kw2X2GUS0ASjlrN0gC7e+ZalGT3rdZ9oav1inyYMZin8DzzPuzMt786yLbPaU4ZMl9tuhkxzxV1J4eX5ebj8CfNHVCqYfp8GP+FC7KtUNiyRyo5vioyRrJaT79P5ywpWwTCYPE9QbHgYPg1nownMZ6AZ94bXgqwAPIMYZbQmi\/lqGqzuR8vJGN\/bGhg68fT24o+GSOEePPTeUwH4MQ2+jpfDH8On1f3q5SFYCs\/ms0tcm2CNtDZ9NPphbZ\/YhpKqdq\/tnXlv6j2Em20fda+FrGLk2BYxrHdidJ3gKmqO6RPHk5jo0mylvGrCFnydrmAxWU7n4\/cjWNo3LYLJaSrzukV0V9hfQWMMBbJViozR7QpQx8wRuqn9uifbSQdA13zie22ENt3xZDVaThfiugI1vDaoY4tQdzANr4v5XtKYtiF6bAlmoWR6F8zERqFfgLUypsKxNJ34t0lZGqaI38apmk2ZIJ2gY+Yaxk3RdZ2YpkTCvGqaQaW6AritegOxZGHBeZTsYMzwjIly2PL0AKM9C1\/xbld9Bd7rqEhq3WljqyoE+eoqr4D6lccw6nob6BKiEv0GF8vELv9HLqXimiNa5w3Fbd8VnpWKm1pXcQVwU\/EWxHD0FQ+sszyl8xRCzjZRnnLAPr\/hFIbHY8x22O+70isr\/dJj0dta20i\/6AqiX3QXP15AyF7Xr\/wNKqXybRzZ2vqUt9Gm59YNrlPM+BHDa6MV3+ueQstJ8LKcTcYwxWYLj5PJqoPsaMTB1mPpxDUvkD8YOvpl1ivEOetc2cYpw3fBtmWbls1pHgyf4HG+7GugUn7\/NqSJxGzzGvLnZLi8C+Z37f5Z+mA54nTo8QHhUF5MbBvnM8dsob2vS+V2CXrNsfbi\/RVNQeiu6GnC7mweTL7A5Dc9RDh15Psog6weQkPK2baI4zNgbiPIMeU5Xp4h4pztipjyKMdJiXQcx5JxWmmhm6K51hQM\/IzMLJTAVxPP9HkxXwZDbKnNHIeheh62z4+avOU5Iv\/lxgQp4lydboFxnvIMsA7\/KViWR2mSAdB1WuRwTgveODUAFrMw52kShZBzmmRbxsU+eU1DtTVNrrbluO8oZ7MiA4q1v2eQyEEejtiAc7YRu67pup7ohoKu2IHdGYVFwh2pkcAJ1azA\/zidDqA9gQ7gYsocgBwzgaKFFEnhO3qDWiUDiLbyGs0nrz1sHV\/MlYLtpf+CIGchi445IPETurET90q4hKH7hxSDHCXblB+okLHUn7ZkTqRsfagEfjA4FFkOe0a5OsUkcgoxruZ9XHXR8pSy6D7y3tAzyrcVy09oRlhQzjJ4nC5XQdtyAqd9hM9S4kuZPUjm2gY2W1f1wb\/gL9AJBiGORZCkPAk9MFkbtHyyKxPi1yfUBQvl12fSA6kTo4E0CJ7cWcijNbugIj\/UwgkvsBihSLIC36SwA2mZ\/T7GNJIxDmNUThRrHW508Syv1yyO2BtGR0YPv6jNVCuaCF4zNg3i2jVj8WpFucdDnKqNZr3ZiCZ82qQxNg6gBymYrAQMVZHhs7KoIUmsBxP7n1\/OcQxOEeJFyZuodHHWqmiE6UFqkUth5JowxU4VqqalXD5iYh3z+ExguhVJktNXpvyWSYQJtS4y7IVZprIJj\/hNKqt1IJYrVHnmK6NV5K8Z4+BYPgtvy3CWPjf1h7GIylgMsFQFBfW1NLOnbyonCtXjxOUBG9AZNoUc+WSKRAcZVuFHJjVOlRAMZREEG5nawVKt2vQs0YSrVu3ZRLO6h4Xp1I+y2Ip+M04HME1CgvQyaVXkXhbtElVWWyXLez99DHecqQKUFf4o1s7pawYPFPX4GwIuWsAIHcCQDZpAoolC1BpeXilt2vXDM2fZEft3tI5ieTQJPh0bRbJhKhxXnAhA6aJ0jm7wUIwy7CaYl3\/+veDXp+Y3GDFKauVfXf7lOzle4XO7f8H4dDqRcJsf6Zlg2EqEZp1HLJz4THGg3smQYXS28K02oVDF5KK3UX99rmTqrq0k06qgYiNcsz2Ntz1adeJBYIEtBqOZpDkbCA15WRFrcQ9CrKCdOAJUZjJ+yOqEuE6Asigyxt+isPm95R3CliFyUxDGCn6LNhgSzHSEJjDM4Eh5c6oqGgNld1M+FlV1igXWcbJyIIwxUTcy5QSvNY0xysirasJcmaTYKk+Qlfl9m7RZ\/35yLOugptHOrfW5zrtq8ChDIho77uAbQQWZ5vtLad9L4xpPOnegifiZUALfJoxPuZoaSCsHu8TXhdRQFKJoPRns03ijoLdYWpkiuWVYZFRMjpE8sTZVHFIub+VRXshJC7kOEarKkgoCb3F2EOfa43g6qkDIH9hj0diK\/SMmV3ccwQ7LWA\/CdZXqWHCW38YTVbpVkooyvY8xY7HN1A\/YzRZb1C12V8e7UbCGGstbBvA4wlBv8FiRTFlSZqM4OqQyeIxhGmTy+MYGfzxX4V\/w6I2GZ1ikSEoc\/lmKgRNHqYzEvwi65lVBf6drk2b\/\/wGfn0ckCmVuZHN0cmVhbQplbmRvYmoKNSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgNiAwIFI+PgplbmRvYmoKNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk5Pj4Kc3RyZWFtCnicNY7dTsMwDIXv8xTnEiRIbWdp1t0N8SNNgDotL9BlodtE6Sit9vp4iFk6sj\/bso9gZcj6gLN5iCieGaUlQvzAUzTfIAVCC52xCzYI5uKt84g73GxOOR2aT9TTcOp\/MpYp9dPXiPep2+ZhgZkTugSrZqWvsBmbMXdZV+o8HPrdAm\/NkPbgOwixx\/0\/u2sDddNmSAF\/i3hUS1hfTGEFxlnzUfWiav+shqoMCnQtZW6d\/oUw2cqxIHWmiPUr47HXQ2vzC3XrPWwKZW5kc3RyZWFtCmVuZG9iago3IDAgb2JqCjw8L1R5cGUgL1BhZ2UKL1BhcmVudCAxIDAgUgovUmVzb3VyY2VzIDIgMCBSCi9Db250ZW50cyA4IDAgUj4+CmVuZG9iago4IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11HNJQ3pg2JqENFZEfKCEU0LpC14rfn0Fg6co+tmVfxlKRdh5X9RaQLQxyTYSwx0dQF5AAoYbMjPXaM6bstHUIO4w25xSP1Q\/KoTu3fwnzGNvht8dqaLapm2FimW5hRJPcFdj0VZ+aJCtl6o7tbobvqosHmBcwGYfXB9tnA2VVJ9gMboxwEktY30xhCYOr5JPoU1Tfrfoi9wL0LHmqrfwFG9KFNYzYqCyUX4z3Vg6t1T92TT1uCmVuZHN0cmVhbQplbmRvYmoKOSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgMTAgMCBSPj4KZW5kb2JqCjEwIDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11kqahvIHYkNCGipofKCEUEKWstOL3ZxBYurKPbdlXYyVIWoe7mHsk3wqZJILf48uLPxADoQbPlHHSaUy0lcbC7zAqrzEcqzOKobu2t4hZCO1w6bEemm3spkiNpkcoVprZHGVf9bGJvFLE7tjupvitunCA+oAmZfH5YvNuoKjqiDSBHcOf2BI2D1NYQeHO+cRasuqnVZdnjoHepZ5Iw3+hFcncKI3QiMQXPwaLlg9txD92rz1wCmVuZHN0cmVhbQplbmRvYmoKMTEgMCBvYmoKPDwvVHlwZSAvUGFnZQovUGFyZW50IDEgMCBSCi9SZXNvdXJjZXMgMiAwIFIKL0NvbnRlbnRzIDEyIDAgUj4+CmVuZG9iagoxMiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk4Pj4Kc3RyZWFtCnicNY7RbsIwDEXf8xX3EaQtdZKmobyB2JDQhoqaHyghFBClrLTi92cQWLqyj23ZV2MlSFqHu5h7JN8KmSSC3+PLiz8QA6EGz5Rx0mlMtJXGwu8wKq8xHKsziqG7treIWQjtcOmxHppt7KZIjaZHKFaa2RxlX\/WxibxSxO7Y7qb4rbpwgPqAJmXx+WLzbqCo6gibwI7hT2wJm4cprKBw53xiLVn106rLM8dA71JPpOG\/0IpkbpRGaETii58Ui5YPbcQ\/dxE9cgplbmRzdHJlYW0KZW5kb2JqCjEgMCBvYmoKPDwvVHlwZSAvUGFnZXMKL0tpZHMgWzMgMCBSIDUgMCBSIDcgMCBSIDkgMCBSIDExIDAgUiBdCi9Db3VudCA1Ci9NZWRpYUJveCBbMCAwIDU5NS4yOCA4NDEuODldCj4+CmVuZG9iagoxMyAwIG9iago8PC9UeXBlIC9Gb250Ci9CYXNlRm9udCAvSGVsdmV0aWNhCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTQgMCBvYmoKPDwvVHlwZSAvRm9udAovQmFzZUZvbnQgL0hlbHZldGljYS1Cb2xkCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTUgMCBvYmoKPDwvVHlwZSAvWE9iamVjdAovU3VidHlwZSAvSW1hZ2UKL1dpZHRoIDIwMAovSGVpZ2h0IDM3Ci9Db2xvclNwYWNlIFsvSW5kZXhlZCAvRGV2aWNlUkdCIDI1NCAxNiAwIFJdCi9CaXRzUGVyQ29tcG9uZW50IDgKL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0RlY29kZVBhcm1zIDw8L1ByZWRpY3RvciAxNSAvQ29sb3JzIDEgL0JpdHNQZXJDb21wb25lbnQgOCAvQ29sdW1ucyAyMDA+PgovTWFzayBbMCAwIF0KL0xlbmd0aCAxNjE2Pj4Kc3RyZWFtCliF7VcHeFRFEH4bOyiWWECsKPYuYldExYq994IdQknIu9frUiI19CYSCR3RxCASBDEixWCABEKNEA64AEmAnEAE7mNm37tLuZCEzxT9vvu\/u2\/fzsy+m392ZnaP4yKIIIII\/q\/I7XSw90q\/P7Ww68w1je3Lv8ENee+8Pvrtdu0e2z7mu0k5x6DC64R4Gtav40Rujr\/99o6v\/IbYseuOxOx7q7KSCSEGx5mEb2j\/agtf3tS9BU0X7sgH7Fi48MiGDP\/MKsxEYuJAidzA\/tUWm19MvKKge\/6X6xm6N83vuOeekv7hdhqxcPjvEjk4dfqeFq1SUo44SElJ33X1mNQzQnpbhJzSMLEIMZ1BlAixTMg04GQbKLEw57CCTKI5y1SU25CRAiE6hkAnvEUI5W0QmHbd8+jkH7140fr0VvsX9ezZZ1HPPi32p6fvWvxqaZKrl3TmaAUiFkdcSBxPXBE88MxdtkxDoQ58HDVkpUHKwax7IqvHPh3ti\/Z9eOYHb700LH\/TZ3828\/mi\/3ig5H5XT4nhhM90UouFGfwVOHRdcIxY\/VAichI6zzH\/mbXNTICVygn4IgiExjavznnE+d8cEjvk0qKipKS2yl2xbXO\/v\/vsHxVl\/ildY5hewqiHE6FsIqDbtqU7IbYIha\/IjAWXouUQQ94aSzoKlDACdU7ki6nXXNXjkY+Lug0qLj5x8EeDBv2aFPPP9Z+P3OiPY3o1dHZUIOJMIOfd1EMiHp1IBnG2j7qENCDHzM3yROR6INJ1+cWZLVs+fquiKLPmrHqqCEbl4cnLLsl832nBEDy5EhEpNIFsgS9UrsqSXiRWMPkN90EkusflVc9EsjP2ZGW1OmGzktumTVGX4sBsILL2vYLnshIvY3oIs86XJ6KzWLPmZGEhsCRzzhgoEHDTRl9BJSADmdWIiNGoZyIrx2Rt2PSNolwQKM4FDt0CM2JgaDbsrMQ8x8DpUyTUWAWWR6YjNdz2xJ5wHyD+Fssz0+1lWrCpwcJ6rZHUjIKTwPNTA4MVpcmhHjGxPwS6wDzmtMRS10JCXwT0khGxwUURkx5qQ4Oge4AZFZ2a1tAOigaT0aKsO3MqjCbuqRMI7F9YeHVPpPAWRYkvDiQpyhuTR2QeaqIUr8JCef6cvOqWuXlWCQJ62Ugo7Dw\/Nn5WYLOi9Fh2+4asEdcuVU6e001RPi05t7plVRKxnMpuHORduED5NgDl8XLm9K8Ar115ujJ7jm\/IPG8V160y0HAiEiFVblMD4bB33k0\/A4+Rv89tvQTQesvfS5XZMwZ29lf7Byt4ToQg6zahocQyq2QkE9c0TGNpld9Wflara+oa\/50LoE+9u3duv78Y+m25bm38zpsHrI53DODyF\/7D4bCp+yDVeJNCU9YLaUhUmYhdpuKMSiE7Fp75+pOdytKN53WY6KLDlotiB44dvi\/oF4TZQwyC3cnC5mtDf1VFg4gyXsPAb12CktEp07k+GJYFXc2CQ4eoMsXT0WMQg9eZwPFSpuwgUjkJdlc1wNoxhNs0lcGEjbAKWiOR4GwyPBIhWjVE4laW3PjsQyu27g7hQPMXHjx\/tasWWDzgSmsZEEYJnOYwg2DGwUFpolYULeqRqK1LoWAKqmpwPD7xhq3b8NHAUnIFQSIS9UAOUR63Hdq0Ywg\/aKEJG3kDVSC0IFu16mhwWCW3rZuQdqAMaUvum5IdFyTCLn\/U5jRIeyprEBkV9kDV4GILDpgePFYEDf1HHbvvEltTVSaCI535TW0qc+UFjAi74uNrOGYdMrQJPLIRd0RFITYSidbQ3XOihu\/tlzZ+3Ljk5ORxyeO3Tsjwpu4LKlXWiXSbE2FHsLsa8DJRg6T2wDaZlmpyoiXijnCOjrnpErF1D286\/pkmV17AiMgQH7gDWRWIQElYaMJGD3XC6DYPnoZ7X4HJgCntm09M6zV06NBeabt\/2uYdta9MiZd0GZIfgqPLkKbgDAiwOlWsajjHDQ3y2SBM5+aPaYEBZA7IKQogaSC2EAgUOC3JrRGgoxNIG5g7hhJWHpiwEWsKXizhalWoub0fHhWVsDxj2ooV06b9sm1KVOmjNdg3GES8ox3P4XR5zqQob9+EhIS+Xm\/vw9H15tjxAnYr+Ce0tljTf90ThaOySw8+6asfnyKIIIJGw1G2ZvkFCmVuZHN0cmVhbQplbmRvYmoKMTYgMCBvYmoKPDwvRmlsdGVyIC9GbGF0ZURlY29kZSAvTGVuZ3RoIDc3Nj4+CnN0cmVhbQp4nAH9AgL9\/\/\/\/AAAARE9x3OHs9PTy2uTo8vHwiI6P8fHxssXL9PX5pr\/O4+Xv4ePo7vP06\/DzaZKs+vn5ZW9\/9\/n6qK+9Y4mTPkxx9fX2ZoaYlrPEX2l9cIm1nam\/ZIiwYoGx\/\/34pKu56+zwn7jIaY2mfpC3cJaisrvZb5iwjZu5i5vChZay5uny3+Hm09K3+vfoxMOr4uvm7e\/1a3SCZIip7OzqZoWg\/\/7+dHuF\/v\/+\/Pv5YX+a1tjfYXWY0tXdy825qayhkKq9kqK1V2+O0tfm3+Lw5ujsbZGYiqS4navLf4id4OLn4+Pg5+rWmLbHqbC+\/f3yZZCp7+3TxMnHmJ6uuMvVvsTasMnWW26JXYGhUmiG29\/tvb+uzdrhgJuxUF98z9Tiy9biS1x63ufr8\/f34uTp9vX06+70sLGj2trB1ODl1tnqv8TOgoiN+fn4\/f39j5ep9vb1o7zMyM7j\/\/\/+6uzvkq\/C\/v7+qqqq7u7uVVVVd3d3zMzMu7u7\/\/\/\/mZmZZmZmERERMzMzREREiIiI3d3dIiIia5CGgImdk7DDSVZ5S1l8pL3LbpSdzdDYTVp39PLX8\/Py9fX1T2KA\/\/\/4ao6Co7zKR1Z7X3+pwcfaa3WNaYSdX3mVeYKJZ4uFb5Woao6GQU9xbI6e+vr5+\/v7a5CYaIuGZHCJhZa\/SVV3Tl19YX6PZouk6unmxcnT7Ozt7u7sS2B+\/Pz6nbfHX2uF6uroa5CM8vLw\/v784uLfYn6VZYycobrJtrmq6ens\/\/\/l6+jNWnGLscbT9vb2W3WRuc7ZlLDDYn6hfqK2bZOh6enxa4Sx\/P30Y4CrVWmK4+vubZWtY4OOY26K5OThcnuTrrTAm6K07\/Dz\/Pz78vP3pKq0pLzMc5mteYukxNPbk5qsbJGd+\/v8X4OXqsDPbJGSRVJ0UmOFdZOrrMPR9\/j5g6a7\/f3viqq+ao6SbXuR+Pj28PDudp60ZIKf2t3iVWF6WWaCfI+xmrXFaY2Ms7jEjJSm9Pb5qbTTyc3VnrjI5ubkjbkP+QplbmRzdHJlYW0KZW5kb2JqCjE3IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0Zvcm1UeXBlIDEKL0JCb3ggWzAuMDAgMC4wMCA2MTIuMDAgNzkyLjAwXQovUmVzb3VyY2VzIAo8PC9Qcm9jU2V0IFsvUERGIC9UZXh0IF0KL0NvbG9yU3BhY2UgPDwvQ3MxIDE4IDAgUgo+Pi9Gb250IDw8L1RjMiAxOSAwIFIKL1RjNCAyMCAwIFIKL1RjMyAyMSAwIFIKL1RjMSAyMiAwIFIKL1RUMyAyMyAwIFIKL1RUMSAyNCAwIFIKL1RUMiAyNSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNDU0ID4+CnN0cmVhbQp4nK1a3XbbNhK+x1PgUjrHyxAAf8DsRU\/WjU+zZ+OksXa7OW0vaAqy2KVIhaTs6oH2kfZ9dvBHUbZEQg7TU5MEwA+DwWDmm6G+4Z\/xN0wCj8RMX2gS45AzLwoDguPI3NQC\/4JL\/Oa6IThrsO8xnySRzw936NDWZIDpezTAvvxP3iTwN2R+jGMfJglinG3w3xY4DtUQc1ls8JtFRhDBixX+Fc9uPtzO8V98j+DZv+dYXd\/LK8WzL6oDbt7Zmyt7g+0NvI3029fmLQ\/6fseLv+P3C7XuYxmpn3gxI9GQjMjIiJWMszdv5njxxxk4Srw4DC9Aw+fBOv1FnHjMBQ309\/m5sj78y7R0WrOa+WoVbbSHZne2ZfFC1V2L3Y2P5mqfb3vv\/o7O6juKvTCIyNCacH9NqK8hBSNNjXOPE4ajGEw1igne4JDCbdJrKo6aCI9R0X8NGmDIGq8G1B5RL6JWxFBPri9G7fTlJsqX\/YT7AOjFlIQRj+CO0zgIiZRcnabru8M4dGLc3TXcJzzAT5jiRT0gYpB4gRURkPyERXiRYTi9crC5aGFZZyM3cle1IcjLQm47bNzbOQ7VWiI0+wWaIjz7CS5MW4EcKPvw7Efd+Elf3pu3dd\/NhzkOtDEweYKR7Hr\/RQ8xMKdQdJuZVWMsfup3fdVQZvg\/9eVLf+rP+sFOZsQyL9weLeQfeI66eUzXzacjzI9aFLtyPfQY7AftWJAxzRP7FMSwPTHhx\/s0sDunrf389lPwXsGQhQbGQm\/yMi2zPC1wVm22aZmLBmfrqmoEXldPuF2LPW7WKbj8fbWr8VbUTVXC6LxcVfUmbfOqxDdiKWpom6Nxj0XC3uk+Egz3BUOzIn3CD\/mjFKcqm90GJpbS4Dp\/WLe4rXCRb\/IWN9VG4Ptdi8uqxWlRKGHz8sHrpJJAadFUTuL5cLycxKvFt11eg3S7RgrTCpgaNKSU9iRA5qIQWWtUl5ZLvK2rVrYoNfa057nIFfIIvCM4r3HBPhcihc2rRboEfeWNVEyegUQgyGpXFHsp7q4E3TStlOtpnbZS4mXlnY84AUTDJOEHQdCYIG4BLIypDIdToYWxtHoHtAUYUrvfwvZVq9M23dtDqSW9j0uxFfAA3dISYUeXO+h32b+AOZp9VeNG1I9yx5Q5pY8CP+XtGuzMw1Lsg5DnNcIgwFGga3ZeB40MrriRSzbToaFlUu50fPCsr7+RJYMJ9zcmS0t4zordUrw9r\/kgimT0ZM4ioSELIz6XKyQ4JNTj0QDaAsgJkgv87wAaYV4c08gBjaJR6yc0cpQtCwzaXaUc\/p3IdnXe7nG529yLWu06aBYc6oBlEaBpJI7tbN93cju9BglsFx9AW1ha7KLXcbQT\/OysXkfRupW+y7JqV7b4Pi0gpmq339Zp2aSZMl0w5baq9+etlgUhZAmHOSey2oADlfSnstpxtEusdhSts9rrWiwh4BslKuVmuqnJKojEA8lXEno+hDA72UThRvoYNh1aSLzECe0dUI3VCdpWCrGUwV177mwHehowNRp6lFFu53UwNaBg\/2tOR0vJgHZ16bROBh7EaZ0QI\/Iai0dR75fpHkhek5eigZjw4VbF30boY3UviurpSsavAmxDk0TgQMAae2pyCNIBRE3ipIkeVYZopPWtpVVaP6+oqyPpXGSCMzxyPIxMQOT\/BL5ryHvTGcJfsWZ5AmauVYCVMmvyrPihJczn43sQEI+EPnOWxlg8Gl4bSwJ5fpzQxjXFIKVys2MXK2URuIzTKb5xcsy4zAtS\/OGUnYW0F2dkyh6wkZR99hWSiSGXHXhxAi8eQw8BDrlsCP2RH0WvEfRXPNsCq4D0GcSFDBmcNSTPcDpUWzFHur4Q41muag3lSqXVlR69gbQanvTgVvXoYYqVxvZV+xe9aHntX3TB+B91QaDSy9QL1D030ILswv5U3X1d6GXpofq1ddrr1kN\/6AZdItPY3+eaMnUfPb3R7V49gNtQT4VahV6L2Rb90M5RoGDOl1RDkoA5JtZ+hmoe4wTicGwCv+dFXonW0ZFp0CI6JVrCJ0SjLJgSLfYnRGP+lLvAgil3gcVT7kJATu4C+FIec\/+FM0XPnHTv38AcAfd8\/\/kcqhbs83F\/3a67402VYzIVWtY9rOfIuGVZ9Kz1wFK\/9dB3BDpsQgA8WQsNCfGoD6m6kXMgbXOIUge\/AEc6olOxcwZCDpaWTsk2xAfQKB+gcO6PTONMCR8dl\/ArXabWwUMXwMWjDjq6bW9DCfQs9eDUtsni971u2+lLo3pM8NJNorEhrsPZHr0j50G2rerjmFffDn55k2kVi4lVwGWsZdjWOn91jP1K6+j81QVoQyeWkfBSvK9DeS8DX89pkEy0WutPp0Gz\/nQStM6fToMWXmwlt5X7sX9Zqwy9hNDnJ37U4NGxwZ93JJyNZUYmYjW7bI1TlTtu6yqDZFt\/rugVsZqrATbAuZdwQuyME\/leGiWOFYOPaV628L+WOtXluN9mzW\/zK0i6m20lC3IDRRG5gIBEiZ1yomSShuF4YUElk9cj+Rz4G58HI4CoX0PBVS0\/9agiQCEeVDniUTRt\/pDq7Rxid5CgxyTqFjDVfgauVbhPNWzbtqrV9z5T7Lvf1SLdNf2PVeg5xY28mDFmJ3ItV4x83KA0ci5XjBc\/KHEru7kVP0gSj5crXnxG\/q5yBYEzzmm\/CuD0C4MT9ETmkcAu0nqOoO0\/olV9R5Tj4RzNwOdoBur\/bsGVilIKmWkch3ZxhjIPFikrXK1WosaDJ5dyCpyGPNfa9\/KOC9CceIc7nhvvmGa1lndMg2Z5xyRoHe+YBs3yDne0SXjHkbVPxzsgkPZ+2zLEO8yXYB2lzLdgxUIgjg\/8KoHKDDeJuZ1povhEQlX7nQoNgtDgTxymzxxhT3ux5dWZ4\/kUjRDfiwKQ6TATMuULnowHgT8q7fHzUl\/bo7meRXPCQkXFjhfllg2iF4IzYNgkCU+oiEcJ\/DsrfPc71E2qogpoiUOwUvfCVEBlC4Qt4qu4pasgOgABJ549mUwayX49eK1Gmf5KPfQ7hJ1pIFkGlxHSqFvQ95X4DxYk\/dpRcPfp+L6ucl047sr1si5knjJdLNIjTFdhKwhU9qthlb5ISpDo2P4CKVexXeg2U4rybLl96Ae98qcwnNu1mdg+TVnBFlWP9fZK19EVKSZBO5AFdzQ3suCM50gWJlltRxYmQevIwhRoB7IwCVp4sZVMQxb6x2c6spAkcnIQZ5wtuHzHGYFDFwZxHsgfkZ2GQ2ej+M\/4\/zgQtckKZW5kc3RyZWFtCmVuZG9iagoyNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9HMSAyNyAwIFIKL1RUMSAyNCAwIFIKL1RjNCAyMCAwIFIKL1RUMiAyNSAwIFIKL1RjMyAyMSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNTcxID4+CnN0cmVhbQp4nM1b247juBF911fUYzuY0YoUSUmLIINsI5OdYJPdwRgZBNk8qGW6raws9erSbud\/8kPJD6VIXXxpi6LGxiAYoNst0acuLNapKml+hY\/wKxDmksBvf9EoAB76ruCMQCC6D6WEz5DDN\/cVgaQCz6Xci0KP4aeAEi5C4XhuSAPGCVRJu+7+06V1MKz7dI+fo5DBDigsS9QDl+NK9U99iNS3fS+AgOB3ROAkW\/huife8yBewTAD1Uou7X8stfLNM0ApYruHvcPe+WMBbAnflAny4gwUIuOsuNQvn\/E681n+0P9MFcLjL9M\/2c1zrG7JaIH73Ffms\/5DlwsFbe\/3HqhUQ7\/t1\/4Dln+APS+3mU\/Oo77te6NHePNDmOco85k+b99CgLrTXL5daYHupasU6l8WGKEEE\/FSsSRia4Sz\/edmIYY9EFLgk7NG0ERf3yDkx4qcG94DB3VPRan5sxbfayScu1GJVfCFS6ZzrQhh3AybomS68\/Vb3q7WMdZal+boot3GdFjnED0VTw75oyiN7jQGMilwMXBr4LvG56BVxbFwMg8hjI19h+55QHidn2CYjj7Bfo0Wz0UxwhM+F+5s6UqN4PkNfs+hGxjJ6S9cF4Q3RGObeG6Jxby7aX4qjCDQEvYOB+Uqc4G5E6HkSmIx35zTex3NLSN3AfJ6dFrYu47yKE3WeK4jzFciXJ1mmMk9MYYYR5hLBo17Qdc4\/qC1C15+LNuV7M1MKzs+y8GWmdOyZ8tWdM6Z0ZjEljDOlcO4eToS2CB2\/tZc61MrIqz3Bdc6Yl33HXcuIy73jIuQywcEMgnPGrSCYrCLfH+ROninHnkMORHmCfRKhzihR2sXqgRyds+3xQpdzKqwNO2yPM2UYJcT1BQo3GHaWMY5ZfzxBBLgZLDTiOjNIt6dwezQw0244F3CCdoOOdm9i7kC7N0ELZttqRbs3QRto1xrtmHbHafUWyh0SGUWS9gJiAXdfylVa74qy3qS5rCoAcyBSj6iUIAYZt2JSgrzsfVUm5RGSt\/d\/x6TtpQ6yvbTFP9TqFvkXqZY448tbvj0oNdJdXciBnsu47\/eesWoVJsIlDGdDWqTVeQpapFV7QLu0ehtz+7R6G7Rgtq02afU2aH1atUezSqs3Ue6QMELfjW6HJqKjatOE9mEN+3FATMIuC2g4A7BoIC4lxJDLHSRNVRdbWb6BnYQkzuFBPqY5VJu4TPPHtm46HqL4HqzifQXrstjajI24qtFHyOhEL+eu3kjErqXSpJJ5DUhKFeRFnSbShc8bmSt1tO55AVmRP8oSlH6nNhR5neaNtFKOeYp2bHQrtEvka4fEFaxklZTpg1zhjVOlvy928lkpphRX3lXaYftqpRwVRwRlUq7BVrjGbngPdbqVgLpm6TatTTQeuB4zirCvOyjxZoIpF3YB5ppqcoZ4XJwCO1cfPGwhIo3m3OAYsyiwPHUfG1npscU7Ay7hWAexcAbsX1MDIRHMCaGaU9rjpQY01SSJgM1AM8QgCXQM+jPQTI4LvbloeGqKPMOyVx2e086aXJpWUWyqfT+cI2K327nrNH+RZewmxfZC+36J9MOAzAksYwnB56IV5ZCj2rTy04\/wXfEClHM\/OohyBjcpt9BIeUWoqQxstQ2Bf7iSHV3hqj7HK4dv6StOBhtYj7vlcN6QhIlV3\/8Js+2fkU2KN3D\/e4iY51FTsvHCdqZ0IuDqZMNE2BHMTZINZzesZ5gfWdYzv1ma6g+sBL0wmgGHNP++PRRv4EOeuPDz3X+6C\/\/9eQFP8X6r2P+pLBJsSVUVUsnyGfkUkFnj1TbN06qW2LnCw96GSBnlU7Oijkjvy6KqyiJeVUrDOE\/SODN2wxjgoQhNEs6obymTTV5kxWMqqzfwww\/3gJUExFmGRcRDjYbWdSa1+aXMMHpXve2VO24pxz6GRVE0w1KrAEGmnDhrQBzbcPMxG0zUWs6sFn\/06dxBJJ7l04luFHjTI93Pm7Y77xvsSKtEKObzhdOOeMVwaaXXFvZtNuFYf5CQnGl37Wn2FdXTrzpBwcLCFfR4goLJfnKC8n2hZ+O7YWQRaSdS7cTWu74eoLP+7vv+kX3oqMcEuOZF321Xlu2kpZ+64PonvabsZzNUb6Lo1yf6Z71wRL9ezVeonpuwU4hjAa1CLVyrRCsy02q131Iq9nfXCwj69eUwxhm+1mrUfuEY9J1+1QD6oLMNKj8grlBvWpzsydX0pXg7YreiL5+GLmc2IbosVPavZdIN7p9kWRU55uLjxkt3oE0eN\/WmKNN\/YaqME0UY+rFgU0ndDeJvG4rw1ZsxzCZxVjJpyrTew1bGVVPKChs+rJKwunvK9rBLa6xj5AqpLIMs3rmw3EhUYVic5knWrKx0olGEvYCNTkp4g4wIVbyWj01crpBbtKLolHWaydYnD02arZBO8SaqUpdpUity7byGXePZqxHjmoVYCVtpNmycko+CigaZbdhEA7PyyCVRMIiyKVxzZQLGArpb4mYUe4l27zYF5BLdgPd+yYtdu1s2NgaeCn2bucVxUA7hoQw22IdEHQpKz8QYD+xTmT7HiWEURIXAIOZsAL2OWigyylw4XbOtVKQbam3fx24giIIv1PM60qI8ODpVlk9bx9FUGyMmKNA5LzC+nAKdgV\/MFJj0jwVoy1D9zwMFOh0F3YQClVo3okAHKbCzw5r81LzXC9jZblz7GI36xOWXX0r5EjQy+sraGdpnNcPMMiP5vdFtg3yJMdEpoutmo9+OJzZG0RohTHq8OnKjYMTrHiao54HGFmFJutP0b0MLSXzMB1RYoNHphoNQYanb0HD8+ITui\/OBoNC1j+mzKh7aHegHIhffkXj9aASTms95L\/\/KuVbvaYJE6Jnq+87TYOXpaTRqoVvv6Um0wdJPGwOcjx2MmIOGdI5blK6wXU7XadKdjKd4327bQ5plldpMZKVnXKUHWuc1CG6loa\/2XCbIoNJ1ffVhK0XYVdWGrXSst3ISjb7uq8e3cgptODRLmWXKo6rCSnX5WMpEqmOzLXK5N83aotANIz\/ohd3qhHB69BL51SdkEm3WCZlCO87+cVYV0xTQ9j9FvcF7WO03yUY9ikr0Cx2m1D2o5IcY3DYx\/YD1XNygkHiNzUQa12p0hcdKy9adT5ynExUfcxnBcrcTeuWODyZQpoa2X7N8JF7kipOCb2SkdDr06EZKe10RdZOjpK\/ahK58DG8KqpekOR2Ej77v+McuwH\/r+cz\/3bj\/sEwS6n+DnMApW7xwejqmnpVgffahf2elnYHo\/6eghmOqxAt1WUeHtWjj22FZ+xP6ElfVg+ict2xYVqa6DMzbi4\/txXftrxlVIeVE\/c8WdmbmtUOMCGvNMPC4Bdz7bg5gojwM4DD056Bm8U5XJ7o2AfXMvEwfN\/Xw1Fc91NobCkGfBq7nhXyQOY\/VPsL\/AIqxj\/sKZW5kc3RyZWFtCmVuZG9iagoyOCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCi9UVDIgMjUgMCBSCi9UVDEgMjQgMCBSCi9UYzMgMjEgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggMjgyOCA+PgpzdHJlYW0KeJy1W92O27gVvtdT8HIGSLTin0TlptimXWD3YtNFpgiKohcambaVyJJDyfF636cv1KLv00NSv54xRe3MIsBIlsTvHB6efzJf0S\/oK8IsxAm1F5ImiAsaxpxhlMTdjZLoE6rQd+8bjPIGReZfk8PYKCTM\/tY3OBIh4RRGRkmYiiTID+jPD4jbAd3l4YC+e3jACKOHLbr79z16+Iz++mA4uULDNEwSEnugkQ4NOdBI7Mlbzjq0j\/tMFdUObWuFsu22KIuslc3\/kPwm1WWTXdDjqSkq2TToeFLHupHNfXCLPE1pyOkwF7RM\/a0LDOYCV38w5AJLV4IVFUjkkLVFXaHssT61DvRB7LEWgAd8cHepTwrlSm6K9lyrdm9EfHthCWOhIIS4KATX0ritJr0Kx0kS8siBtkqFl9HWqPAi2jDT7we1RVtVH5BW2B0yEp6uYlujQ6a+yFbfwVvNQ\/AsD4xEIaNCuHjw171R2jEOGXGgddIO\/KS9iAbSDrylvYSWs+Cpw6jqavQZzwr4hjmyJIziiPVkPfyUYxJppOcAyxRrWC+0jy1wjMrs3ADLF7QrvknNMco2DhukIqQpXkEFjBsULyuRKnb71gioLA5FixorwxB9lBI9yrI+G3EeaghCtxVpnCclYexerE6RQO2NHXQMnKqNVKjpJx86hEo4zFbggdhrLREGYyAJXgenR0epAIWJwoRgHosY7gRJGMcBxGgTtN9\/dH6HPr6H+1QwdEYEPSgHjxGfLHAURmmaAHM5gixBf91dLLfUcvtPdPdpf484usvuUYzu2nuUmilggu7298Hw4mg+sn+leVKZe3D+yTDgfI\/MsOuPzOvg7ke4RMPHJVwwBCx7OcBl+DHjwlKYMqnug3T41lLYmRfdiK2lU5s3aoqVXTOlHwXwKDcv7F877mT+2k9n\/MxnYfmyQ8r7QHO0mcJ\/tlzaD2YsW9BOCpdrMQZzWeynmFYiFtLKTU4YrybihwH\/Ch5+WlBunpKQswSjUXMgG3pGcYKZ4siy1wDNwZ80LdTTsoYBKh49p7IYAlWKCR0ov5KV8kSEIn4tm+cxC5kX2j9MVrSvi9wRssD9phiLFbAQm85FWaLseCwv2gub5LauJOr9Y5bn9alqQ0cGmXCgRnlP1sP5esmGg5YsoS1F8RGN8jCOBwV0hXFP76pVz+0tOSGTZdA6D9NZdJZ\/AbuixsMkxpyFsTei7wNhjDXun9fmuX0LNsKsNfpaCAfuCE+v2HyluPOsZIacikPilwy5upHMTcEEvWC+35qpb3sBJMa1Jf19ZsTQ9q5pEMm7QSTBokiSNMSCiCv+PJXlCZoga9Hy+nDMqgKsUskSUpENerwgeHgAa6zPlVTNvjgiyIfyumpVXYboYS\/hi6wa+Qhu6iNLGSQufjm7RQscebE\/2qNE26LKqryAhC+rNjo5Hh8Mcw5dVSo4A54k\/lSdPgZDzWjnAN6cuqoYXXcES1UeS23dsYxGPLQmJp68DVrz4TRtUEBll5enjXRlsFC80SjmExrBwhqOmnku2j1q9xL9oMPDh+xLg6rsIN+g5pTvUda46r1hbjENU4\/qMbgbifwA86rV8Q36scpDx9xEAm6NcBeNFf2AQdthkf1q7peGj5EkhCwczcJH7JFs\/zyNClkfS4zjDIbIUZq\/9t5+Y+OKjT3XjvNpLAmueE7TkBLGep5f5mJIRNaijepZ1e2y87ytogxCgOAs9aYd3HWe2CMJ0d2T5CZmsFYlb6NdqeQQJPw98c1owiIKVCO6MBnfaDJ44oi5C\/d5v+357tToiRfRxn6bh7daQhtU4edZ1+fs9MGchnGUONGvllH3RqT1v7OI\/zRa0jjkgk\/lsOTfu6DhwEzikCWQzXSYL6uAKJjZSrRDrdpdtpPIUQExhuGS8BWwvc6\/8YnJVJuyF2xRNScFdiVHq3JRIIJCsROLFRQ2hZJ52\/UVddtxQqgz7aOqt4WzPT9MDGo44dc3Uzsg8ptpHDeuOEyTUKQpdUH\/jjhMb3dj\/6g4TGddTR2HSbochn+CMPzW9puYicZvbaeFGJ9j2ypvYxN99Rtl3nyxP+T06xnAzl5W1DQE6zSIsX4aL6tpCI7XomXIbDRAvNkpKQ+yaiEMtWcpq1mT3NFeZnqLB3NxtRK\/0\/UwAFmJNoZIjyBPX6MrPCqfN9qYArX7TG807CRk6arfeBjnAF5hc8rbRqdCjVTfitzuUFzqk6sE4zrwk3Rg6ZVKMAoaxdlrlWDLaGtKsEW0WQn2uS6qiTs+ZqrVSedQj9k9TQjdamMc9FHJY1Zs7ANHUjNwo9Nir4Lbq6QmoGKCp8Ib172evcLq+mtxH\/m6bfeyPht8pvsrEwft0Wb7YAuevSl4bNmj+oZ2ajYSEuujidmToKbbNnxkB9vKqZrUT8i00oeunam9gmQ+tgOdll1DO8\/C+ZZdhEHWkES8l8DLcvFRnnGke9weaH9vJKq3phswKpr+DD97PgQcbiyYD35nVufzOQTH9atUWQhKPVGYXi5PjwPwkOBkSmQp9XWFOyZmaB5u+Cwfm6J1JNLgQiHVE3wF5juEPu2lacijE4jcyBs9lfeVeuijHVor\/NfzWt7BorxZmkCtHq1Z1OdYN6qBKVRFqUnvDmYhIz4+KWdPMJh7ORsFT+CbPdqaaQs+xdJMknSKNX1isaajRqyb8x6NhcW3Nj2CZzXjjd1XKesdRIbZMYyigRy+LCGrlzZCNG2tbGL0fGigApwuZtzFxIpjRUJAbkf80ZwBgYKa+6MFYw06nFD58W8+6RaBbOTGNtGV\/LPNRskGqqNHVZ8h8UHt5QirsakPGSyE7mHqyinP9YmutoBfZg1gnebL5IqpI1c40dtNPg1Oa27arnXmVjQ9LYcHgVgbp1E8pxK4lt3o19bVjWAhpYnoIX0KZ2X80KGuClBTWLU3qD7CTExhCIK8HWgYodr4Ym8pmaB480gSjTTrfAXaxtH\/g7KVGY\/vvYLOWiNagWaM4OspK4v24qX6kJETP9Vv+m5EF62HvL\/ebiX4GL3dO48qT+w5ghkQyMs6qh4a4o6DFLQ4YWwFnqvHqosShiGb9Yd70HIAFs05p6xsautv0X\/yuv4CyfN\/fXIlLIRnbO031HVyfmrB\/ex13r9R+oAVVF97WR5NgAcbavTRqOI3aQfUVVlUEslf4U0hYRG9PBBonacTf2+nq3uKunn+eNG+aKN5UqdKV4s7lR1MtbiRJXCrHKsAtYqg6UD9hU3CmK9F+1Yo60jrubC92vM4NicOPMj0ItP92FNVfD3JElSoaYpdZSUHxG0XTjdqYQEvuvWuZGb2JDIEqYAxQanPYXqtJuOe3khbcRfSTB+gANPXPO11J1Jz3Zf6DrljrPP0georHXbBFHtaphca1OZ+2fMHaz8fZX5S4Fnf6T3zZ3LQJzsdehuKUyZ6Un9I\/kwjrXOC+BBZ7lzQiK5F67JSm38U1ebUtOriiGhEVy8Ezyk4c4+3LjQaJjyaoi1Va00LZtV3TK6qCLNi+v8yYG7Ozh6sePHwBLL66ROb509Hrcn8ceR7bsYRBVNI5TBJ2Qq0KleXoz23LfN9VesMVe826QpRyVwW3+xuQNWcDvpMq6xggXWU2WQtxA7dqmq0LYBX8PA8EN\/AJ0KBt+x6Oo\/WnI7HWrUNwkQ4Gkb6PzFQTpwEAm9NgtAfplALrIF7LFokB2lCJSCPsjL1R5cNgU0ovY336NBgysIoZfFA12MBXQZBISkSZBVcV844HDoTLMQRlLsrUCf29Qv6P\/gi4N0KZW5kc3RyZWFtCmVuZG9iagoyOSAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggNTQ3ID4+CnN0cmVhbQp4nJVUTW+cMBS88yvecXNxbGxjyLGrHnprKtSqRwdM1ynYG9sk2r\/ZKv+nZr+kVcquERIYJGbee\/NmXuARXoAwRAQ9PPJKAC8pKjgjIIrjwSn4AQbu155A4wHvL9\/EfzHK2eF9OlTxzikWIHCFikKQrBngUw388MfxUQ9wXzcMCNQdrOAO6mf4XO9LmYErKo7yQiSgrWWvO+uMlldwCeOIlWIJrlNet8oEfwU1gmFW8AWoD\/DTjjDIHci+t29gRwd+I502v8B2oE1sZZBBWwNvOmzgLrs9qhKjshBwizxbGWtk1+ley6BaCBvtWthKF7TyIE0LvR50iCXNd5xXDFFc8hNpyhzn+osneLbahL1u2Y0miwKxhCZhNUj3W4WJbz9AGzbKQaeNNI2WPTR22Epz6niqYZLgPBb\/DupVuV0bFUqZPc8RTpr90+i1Ud7DdnRb6yP\/0y7ST0sw1RqrjMPxwY3NNBwfX\/bf5qWg0bMVE+caEqRQpukjdQt\/vgxb64I0YR6fVRQJSukC\/CRjU5GaE1+dfpXN7or\/KEacxMMC0GshQeliuPXG6iaKOS3SOuo2Dsr5v2BsmD6jM1n2QT4sEME4P5MlrHaSUXI6RVEC2nflBhvd9+0UdA+wu8im+f3PS4Lyskpny1a3gu4ym1IWCZeJCXQZdEm2+49T4LiOKbHAY0ympFV2sT8fBHk\/7hG6FgM4urMqyIlzmQUe4R+blwYzCmVuZHN0cmVhbQplbmRvYmoKMTggMCBvYmoKWy9JQ0NCYXNlZCAzMCAwIFIKXQoKZW5kb2JqCjE5IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUxIC9CYXNlRm9udCAvTExWQ1lEK0FkZWxsZVNhbnMtUmVndWxhciAvRm9udERlc2NyaXB0b3IgMzEgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyMTQgXQo+PgplbmRvYmoKMjAgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHlwZTEgL0Jhc2VGb250IC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZvbnREZXNjcmlwdG9yIDMyIDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMjEzIC9XaWR0aHMgWzI1MCAwIDAgMCAwIDAgMCAwIDI4NyAyODcgNTMzIDAgMjIzIDIyNCAyMjMgMCA1MzMgNTMzIDUzMyA1MzMgNTMzIDUzMyAwIDAgNTMzIDUzMyAyMjMgMjIzIDAgMCAwIDQ3MSAwIDczMSA2MjkgNjcwIDAgMCA1ODYgMCA3NjIgMzI0IDAgMCA1ODMgOTE5IDc2MCA3MzAgNTg3IDcyMCA2NTUgNTUzIDYzMCA3MjcgNzAxIDk1MSAwIDYzOSAwIDAgMCAwIDAgMCAwIDU0MSA1OTMgNTE4IDU5MCA1MzAgMzIxIDU4OSA1ODEgMjYxIDI0OCA1NDAgMjU4IDg3OCA1ODcgNTQ1IDU4OSA1ODkgMzY4IDQ2MiAzNDAgNTgwIDU0MCA4NTUgNTY4IDU0MCA0NTQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMzY3IDM2NyAwIDIzMyBdCj4+CmVuZG9iagoyMSAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0FHS1hKRStBZGVsbGVTYW5zLVNlbWlCb2xkIC9Gb250RGVzY3JpcHRvciAzMyAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMzIgL0xhc3RDaGFyIDEyMSAvV2lkdGhzIFsxOTggMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyNDQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDI0NCAwIDAgMCAwIDUyNCAwIDY5NiAwIDY5MyA3MjYgNTc4IDU1MCAwIDczMCAyOTEgNTExIDAgNTU4IDkwNCA3NDUgNzYwIDYxOCAwIDYzOSA1OTkgNTcxIDcxMSAwIDkxOSA2MzUgNTgyIDAgMCAwIDAgMCAwIDAgNTUwIDU4NiA1NDEgNTgzIDU0NyAzNDIgNTU1IDU4MyAyNTcgMjU1IDU0NCAyNTcgODYxIDU4MyA1ODIgNTg1IDAgMzc2IDQ5MyAzOTIgNTgwIDUxNyA3ODEgNTA4IDUwMiBdCj4+CmVuZG9iagoyMiAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0lQRUpKRytBZGVsbGVTYW5zLVRoaW4gL0ZvbnREZXNjcmlwdG9yIDM0IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgODkgL1dpZHRocyBbMjQyIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyMDAgMCAyMDkgMzM0IDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCA2MzcgMCA3MTYgMCA1NzAgNTQzIDAgMCAyNzIgMCAwIDAgODg1IDc0NSAwIDYxMiAwIDYzNyA1NzggNTMyIDAgNjE0IDAgNjA3IDUzOCBdCj4+CmVuZG9iagoyMyAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UcnVlVHlwZSAvQmFzZUZvbnQgL1FRVEFRQStUaW1lcy1Sb21hbiAvRm9udERlc2NyaXB0b3IgMzUgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyNTAgXQo+PgplbmRvYmoKMjQgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHJ1ZVR5cGUgL0Jhc2VGb250IC9TUUtVRVQrU3ltYm9sIC9Gb250RGVzY3JpcHRvciAzNiAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMTY1IC9MYXN0Q2hhciAxNjUgL1dpZHRocyBbNDYwIF0KPj4KZW5kb2JqCjI1IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1RydWVUeXBlIC9CYXNlRm9udCAvSkZSWFFEK0FyaWFsTVQgL0ZvbnREZXNjcmlwdG9yIDM3IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMzIgL1dpZHRocyBbMjc4IF0KPj4KZW5kb2JqCjI3IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUwIC9FbmNvZGluZyAvSWRlbnRpdHktSCAvRGVzY2VuZGFudEZvbnRzIFszOCAwIFIKXQovQmFzZUZvbnQgL0pPVk9WVStNUy1NaW5jaG8gL1RvVW5pY29kZSAzOSAwIFIKPj4KZW5kb2JqCjMwIDAgb2JqCjw8L0xlbmd0aCA0MCAwIFIKL04gMyAvQWx0ZXJuYXRlIC9EZXZpY2VSR0IgL0ZpbHRlciAvRmxhdGVEZWNvZGUgPj5zdHJlYW0KeAGdlndUU9kWh8+9N73QEiIgJfQaegkg0jtIFQRRiUmAUAKGhCZ2RAVGFBEpVmRUwAFHhyJjRRQLg4Ji1wnyEFDGwVFEReXdjGsJ7601896a\/cdZ39nnt9fZZ+9917oAUPyCBMJ0WAGANKFYFO7rwVwSE8vE9wIYEAEOWAHA4WZmBEf4RALU\/L09mZmoSMaz9u4ugGS72yy\/UCZz1v9\/kSI3QyQGAApF1TY8fiYX5QKUU7PFGTL\/BMr0lSkyhjEyFqEJoqwi48SvbPan5iu7yZiXJuShGlnOGbw0noy7UN6aJeGjjAShXJgl4GejfAdlvVRJmgDl9yjT0\/icTAAwFJlfzOcmoWyJMkUUGe6J8gIACJTEObxyDov5OWieAHimZ+SKBIlJYqYR15hp5ejIZvrxs1P5YjErlMNN4Yh4TM\/0tAyOMBeAr2+WRQElWW2ZaJHtrRzt7VnW5mj5v9nfHn5T\/T3IevtV8Sbsz55BjJ5Z32zsrC+9FgD2JFqbHbO+lVUAtG0GQOXhrE\/vIADyBQC03pzzHoZsXpLE4gwnC4vs7GxzAZ9rLivoN\/ufgm\/Kv4Y595nL7vtWO6YXP4EjSRUzZUXlpqemS0TMzAwOl89k\/fcQ\/+PAOWnNycMsnJ\/AF\/GF6FVR6JQJhIlou4U8gViQLmQKhH\/V4X8YNicHGX6daxRodV8AfYU5ULhJB8hvPQBDIwMkbj96An3rWxAxCsi+vGitka9zjzJ6\/uf6Hwtcim7hTEEiU+b2DI9kciWiLBmj34RswQISkAd0oAo0gS4wAixgDRyAM3AD3iAAhIBIEAOWAy5IAmlABLJBPtgACkEx2AF2g2pwANSBetAEToI2cAZcBFfADXALDIBHQAqGwUswAd6BaQiC8BAVokGqkBakD5lC1hAbWgh5Q0FQOBQDxUOJkBCSQPnQJqgYKoOqoUNQPfQjdBq6CF2D+qAH0CA0Bv0BfYQRmALTYQ3YALaA2bA7HAhHwsvgRHgVnAcXwNvhSrgWPg63whfhG\/AALIVfwpMIQMgIA9FGWAgb8URCkFgkAREha5EipAKpRZqQDqQbuY1IkXHkAwaHoWGYGBbGGeOHWYzhYlZh1mJKMNWYY5hWTBfmNmYQM4H5gqVi1bGmWCesP3YJNhGbjS3EVmCPYFuwl7ED2GHsOxwOx8AZ4hxwfrgYXDJuNa4Etw\/XjLuA68MN4SbxeLwq3hTvgg\/Bc\/BifCG+Cn8cfx7fjx\/GvyeQCVoEa4IPIZYgJGwkVBAaCOcI\/YQRwjRRgahPdCKGEHnEXGIpsY7YQbxJHCZOkxRJhiQXUiQpmbSBVElqIl0mPSa9IZPJOmRHchhZQF5PriSfIF8lD5I\/UJQoJhRPShxFQtlOOUq5QHlAeUOlUg2obtRYqpi6nVpPvUR9Sn0vR5Mzl\/OX48mtk6uRa5Xrl3slT5TXl3eXXy6fJ18hf0r+pvy4AlHBQMFTgaOwVqFG4bTCPYVJRZqilWKIYppiiWKD4jXFUSW8koGStxJPqUDpsNIlpSEaQtOledK4tE20Otpl2jAdRzek+9OT6cX0H+i99AllJWVb5SjlHOUa5bPKUgbCMGD4M1IZpYyTjLuMj\/M05rnP48\/bNq9pXv+8KZX5Km4qfJUilWaVAZWPqkxVb9UU1Z2qbapP1DBqJmphatlq+9Uuq43Pp893ns+dXzT\/5PyH6rC6iXq4+mr1w+o96pMamhq+GhkaVRqXNMY1GZpumsma5ZrnNMe0aFoLtQRa5VrntV4wlZnuzFRmJbOLOaGtru2nLdE+pN2rPa1jqLNYZ6NOs84TXZIuWzdBt1y3U3dCT0svWC9fr1HvoT5Rn62fpL9Hv1t\/ysDQINpgi0GbwaihiqG\/YZ5ho+FjI6qRq9Eqo1qjO8Y4Y7ZxivE+41smsImdSZJJjclNU9jU3lRgus+0zwxr5mgmNKs1u8eisNxZWaxG1qA5wzzIfKN5m\/krCz2LWIudFt0WXyztLFMt6ywfWSlZBVhttOqw+sPaxJprXWN9x4Zq42Ozzqbd5rWtqS3fdr\/tfTuaXbDdFrtOu8\/2DvYi+yb7MQc9h3iHvQ732HR2KLuEfdUR6+jhuM7xjOMHJ3snsdNJp9+dWc4pzg3OowsMF\/AX1C0YctFx4bgccpEuZC6MX3hwodRV25XjWuv6zE3Xjed2xG3E3dg92f24+ysPSw+RR4vHlKeT5xrPC16Il69XkVevt5L3Yu9q76c+Oj6JPo0+E752vqt9L\/hh\/QL9dvrd89fw5\/rX+08EOASsCegKpARGBFYHPgsyCRIFdQTDwQHBu4IfL9JfJFzUFgJC\/EN2hTwJNQxdFfpzGC4sNKwm7Hm4VXh+eHcELWJFREPEu0iPyNLIR4uNFksWd0bJR8VF1UdNRXtFl0VLl1gsWbPkRoxajCCmPRYfGxV7JHZyqffS3UuH4+ziCuPuLjNclrPs2nK15anLz66QX8FZcSoeGx8d3xD\/iRPCqeVMrvRfuXflBNeTu4f7kufGK+eN8V34ZfyRBJeEsoTRRJfEXYljSa5JFUnjAk9BteB1sl\/ygeSplJCUoykzqdGpzWmEtPi000IlYYqwK10zPSe9L8M0ozBDuspp1e5VE6JA0ZFMKHNZZruYjv5M9UiMJJslg1kLs2qy3mdHZZ\/KUcwR5vTkmuRuyx3J88n7fjVmNXd1Z752\/ob8wTXuaw6thdauXNu5Tnddwbrh9b7rj20gbUjZ8MtGy41lG99uit7UUaBRsL5gaLPv5sZCuUJR4b0tzlsObMVsFWzt3WazrWrblyJe0fViy+KK4k8l3JLr31l9V\/ndzPaE7b2l9qX7d+B2CHfc3em681iZYlle2dCu4F2t5czyovK3u1fsvlZhW3FgD2mPZI+0MqiyvUqvakfVp+qk6oEaj5rmvep7t+2d2sfb17\/fbX\/TAY0DxQc+HhQcvH\/I91BrrUFtxWHc4azDz+ui6rq\/Z39ff0TtSPGRz0eFR6XHwo911TvU1zeoN5Q2wo2SxrHjccdv\/eD1Q3sTq+lQM6O5+AQ4ITnx4sf4H++eDDzZeYp9qukn\/Z\/2ttBailqh1tzWibakNml7THvf6YDTnR3OHS0\/m\/989Iz2mZqzymdLz5HOFZybOZ93fvJCxoXxi4kXhzpXdD66tOTSna6wrt7LgZevXvG5cqnbvfv8VZerZ645XTt9nX297Yb9jdYeu56WX+x+aem172296XCz\/ZbjrY6+BX3n+l37L972un3ljv+dGwOLBvruLr57\/17cPel93v3RB6kPXj\/Mejj9aP1j7OOiJwpPKp6qP6391fjXZqm99Oyg12DPs4hnj4a4Qy\/\/lfmvT8MFz6nPK0a0RupHrUfPjPmM3Xqx9MXwy4yX0+OFvyn+tveV0auffnf7vWdiycTwa9HrmT9K3qi+OfrW9m3nZOjk03dp76anit6rvj\/2gf2h+2P0x5Hp7E\/4T5WfjT93fAn88ngmbWbm3\/eE8\/sKZW5kc3RyZWFtCmVuZG9iagozMSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0xMVkNZRCtBZGVsbGVTYW5zLVJlZ3VsYXIgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE4MiAtMzIzIDExOTggMTA5OCBdCi9JdGFsaWNBbmdsZSAwIC9Bc2NlbnQgODgwIC9EZXNjZW50IC0zNzAgL0NhcEhlaWdodCA3MzcgL1N0ZW1WIDk0IC9YSGVpZ2h0IDUyNiAvU3RlbUggNzYgL0F2Z1dpZHRoIDU3MCAvTWF4V2lkdGggMTM4MCAvRm9udEZpbGUzIDQxIDAgUgo+PgplbmRvYmoKMzIgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE3NCAtMzA4IDEwMzUgOTQ3IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA2NjggL0Rlc2NlbnQgLTMzMiAvQ2FwSGVpZ2h0IDY3NyAvU3RlbVYgNTYgL0xlYWRpbmcgMjAwIC9YSGVpZ2h0IDQ3OSAvU3RlbUggNDMgL0F2Z1dpZHRoIDUwMCAvTWF4V2lkdGggMTIwOSAvRm9udEZpbGUzIDQyIDAgUgo+PgplbmRvYmoKMzMgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9BR0tYSkUrQWRlbGxlU2Fucy1TZW1pQm9sZCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTg2IC0zMjMgMTIyNyAxMTEzIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgMTE1IC9YSGVpZ2h0IDUyOSAvU3RlbUggMTAyIC9BdmdXaWR0aCA1NzAgL01heFdpZHRoIDE0MTMgL0ZvbnRGaWxlMyA0MyAwIFIKPj4KZW5kb2JqCjM0IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvSVBFSkpHK0FkZWxsZVNhbnMtVGhpbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTc1IC0zMjIgMTE0NyAxMDk0IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgNDkgL1hIZWlnaHQgNTIwIC9TdGVtSCA0NCAvQXZnV2lkdGggNTcwIC9NYXhXaWR0aCAxMzIyIC9Gb250RmlsZTMgNDQgMCBSCj4+CmVuZG9iagozNSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL1FRVEFRQStUaW1lcy1Sb21hbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMjAzIC00MjggMTcwMCAxMjcyIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA3NTAgL0Rlc2NlbnQgLTI1MCAvQ2FwSGVpZ2h0IDY3NiAvU3RlbVYgMTAyIC9YSGVpZ2h0IDQ2MSAvU3RlbUggNDQgL01heFdpZHRoIDE3MjEgL0ZvbnRGaWxlMiA0NSAwIFIKPj4KZW5kb2JqCjM2IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvU1FLVUVUK1N5bWJvbCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTY3IC0yOTkgMTA5NCA4MjcgXQovSXRhbGljQW5nbGUgMCAvQXNjZW50IDcwMSAvRGVzY2VudCAtMjk5IC9DYXBIZWlnaHQgNjIzIC9TdGVtViAxMDMgL1hIZWlnaHQgNDY3IC9TdGVtSCAzOCAvQXZnV2lkdGggNTcyIC9NYXhXaWR0aCAxMDQyIC9Gb250RmlsZTIgNDYgMCBSCj4+CmVuZG9iagozNyAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0pGUlhRRCtBcmlhbE1UIC9GbGFncyAzMiAvR</mes:base64EncodedContent><mes:contentType>contentType</mes:contentType><mes:documentName>names</mes:documentName>
        </mes:CreateEnrollmentDocumentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6fc9718f-f69d-46f7-9a41-dffda9a7c22f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="9c7d00ba-2f31-4166-b13a-3d560078b5a2" name="Not SOAP Fault"/><con:assertion type="SOAP Response" name="SOAP Response1" id="f8e27ea4-14cd-48d9-9451-c380987a6c7c"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="b0b879b3-dea4-41e2-b30c-784b8f27fcc1"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:commandStatus[1]/text()")
def documentId = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:documentId[1]/text()" )

assert commandStatus.getData() == '1'
assert documentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateEnrollmentDocumentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="fec487c9-afd4-46e5-acfc-67ee93106a09" name="CaptureDraft_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureDraft</con:operation><con:request name="CaptureDraft_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="7891d1d9-c5e5-4bd1-ad2d-b1157d94a5e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CaptureDraftRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:recurringType>MONTHLY</mes:recurringType>
                <mes:recurringStartDate>
                    <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
                </mes:recurringStartDate>
                <mes:recurringAmount1>10</mes:recurringAmount1>
                <mes:recurringDay1>10</mes:recurringDay1>
                <mes:recurringAmount2>12</mes:recurringAmount2>
                <mes:recurringDay2>10</mes:recurringDay2>
                <mes:lumpSumOnly>false</mes:lumpSumOnly>
            </mes:CaptureDraftRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2dbf5baf-25d6-4d0e-8c11-e30c4e4feda7" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="f2e5c6f8-d1f1-4c53-bb17-fcc353a37301" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="42f13961-d007-47da-80f9-9fcc62c0334c" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureDraftResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureDraftRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="bdcf51e1-1960-4c2d-967e-008a8c9cd592" name="CaptureDraft_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureDraft</con:operation><con:request name="CaptureDraft_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="7891d1d9-c5e5-4bd1-ad2d-b1157d94a5e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CaptureDraftRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:recurringType>MONTHLY</mes:recurringType>
                <mes:recurringStartDate>
                    <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
                </mes:recurringStartDate>
                <mes:recurringAmount1>10</mes:recurringAmount1>
                <mes:recurringDay1>10</mes:recurringDay1>
                <mes:recurringAmount2>12</mes:recurringAmount2>
                <mes:recurringDay2>10</mes:recurringDay2>
                <mes:lumpSumOnly>false</mes:lumpSumOnly>
            </mes:CaptureDraftRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2dbf5baf-25d6-4d0e-8c11-e30c4e4feda7" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="f2e5c6f8-d1f1-4c53-bb17-fcc353a37301" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="59cff742-02cd-4a2b-a6e3-1f577a455953"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureDraftResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureDraftRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="830a5cec-13d0-4e23-8738-fe8792c1a3a3" name="CaptureDraft_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureDraft</con:operation><con:request name="CaptureDraft_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="7891d1d9-c5e5-4bd1-ad2d-b1157d94a5e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CaptureDraftRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:recurringType>MONTHLY</mes:recurringType>
                <mes:recurringStartDate>
                    <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
                </mes:recurringStartDate>
                <mes:recurringAmount1>10</mes:recurringAmount1>
                <mes:recurringDay1>10</mes:recurringDay1>
                <mes:recurringAmount2>12</mes:recurringAmount2>
                <mes:recurringDay2>10</mes:recurringDay2>
                <mes:lumpSumOnly>false</mes:lumpSumOnly>
            </mes:CaptureDraftRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2dbf5baf-25d6-4d0e-8c11-e30c4e4feda7" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="f2e5c6f8-d1f1-4c53-bb17-fcc353a37301" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="ee4f26a4-ba23-4dfe-9cdf-b284c5864799"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureDraftResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureDraftRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CaptureEnrollmentAddress_TPB" id="7533260f-79c3-4e9c-9b7b-ebf641b25c9e" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureEnrollmentAddress</con:operation><con:request name="CaptureEnrollmentAddress_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="8109068b-3704-44fa-9500-8b98977bdb7f" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <CaptureEnrollmentAddressRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</clientId>
            <subscriberId>${#Project#subscriberId}</subscriberId>
            <address1>Finxera Headquarters</address1>
            <address2>1900 South Norfolk Street</address2>
            <city>San Mateo</city>
            <state>CA</state>
            <zip>94403</zip>
        </CaptureEnrollmentAddressRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="69ff674e-66f1-4a51-a492-4f025474ffa1"/><con:assertion type="Simple Contains" id="2bba8473-788a-4449-88ff-35b863cc3afa" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="848fe002-b6b3-4635-9a13-dd18d2625901" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureEnrollmentAddressResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureEnrollmentAddressRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CaptureEnrollmentAddress_WFB" id="58b1737b-0549-4d07-b7be-b6687ffb4e8e" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureEnrollmentAddress</con:operation><con:request name="CaptureEnrollmentAddress_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="8109068b-3704-44fa-9500-8b98977bdb7f" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <CaptureEnrollmentAddressRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</clientId>
            <subscriberId>${#Project#subscriberId}</subscriberId>
            <address1>Finxera Headquarters</address1>
            <address2>1900 South Norfolk Street</address2>
            <city>Jupiter</city>
            <state>FL</state>
            <zip>94403</zip>
        </CaptureEnrollmentAddressRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="69ff674e-66f1-4a51-a492-4f025474ffa1"/><con:assertion type="Simple Contains" id="2bba8473-788a-4449-88ff-35b863cc3afa" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="b62a96b6-9ca1-4d93-b4ec-5e94e3e0c3a0"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureEnrollmentAddressResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureEnrollmentAddressRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CaptureEnrollmentAddress_BOI" id="3198c5bf-4f71-49fb-b3d9-87aaccb57bf0" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureEnrollmentAddress</con:operation><con:request name="CaptureEnrollmentAddress_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="8109068b-3704-44fa-9500-8b98977bdb7f" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <CaptureEnrollmentAddressRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</clientId>
            <subscriberId>${#Project#subscriberId}</subscriberId>
            <address1>Finxera Headquarters</address1>
            <address2>1900 South Norfolk Street</address2>
            <city>Clio</city>
            <state>AL</state>
            <zip>94403</zip>
        </CaptureEnrollmentAddressRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="69ff674e-66f1-4a51-a492-4f025474ffa1"/><con:assertion type="Simple Contains" id="2bba8473-788a-4449-88ff-35b863cc3afa" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="e96fdd44-aa00-4fe9-a783-b2c80f20ea25"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureEnrollmentAddressResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureEnrollmentAddressRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="AdminUpdateActivateEnrollment_TPB" id="dfa86a52-190f-4612-83f6-f26cbd897743" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>AdminUpdateActivateEnrollment</con:operation><con:request name="AdminUpdateActivateEnrollment_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="9d950928-5c62-4063-883f-23631a056978" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <AdminUpdateActivateEnrollmentRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <enrollmentId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:enrollmentId[1]}</enrollmentId>
            <actionType>ACTIVATE</actionType>
        </AdminUpdateActivateEnrollmentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e8b2f94d-8e2b-4058-b7bc-8534d58f1dde"/><con:assertion type="Simple Contains" id="5e0bb77c-e4b1-40d2-b982-891114e6df45" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c0ebd301-0760-4f5b-ac30-d2b01dccc36b" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:commandStatus[1]/text()");

def enrollmentId = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:enrollmentId[1]/text()");

def cipStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:cipStatuses[1]/text()");

def ofacStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:ofacStatuses[1]/text()");

def spaStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:spaStatuses[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentId != null
assert cipStatuses.getData() == 'IGNORED'
assert ofacStatuses.getData() == 'IGNORED'
assert spaStatuses.getData() == 'PENDING'
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateActivateEnrollmentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="AdminUpdateActivateEnrollment_WFB" id="6dd8076e-ebd2-4f0f-9091-5dd59a1c600b" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>AdminUpdateActivateEnrollment</con:operation><con:request name="AdminUpdateActivateEnrollment_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="9d950928-5c62-4063-883f-23631a056978" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <AdminUpdateActivateEnrollmentRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <enrollmentId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:enrollmentId[1]}</enrollmentId>
            <actionType>ACTIVATE</actionType>
        </AdminUpdateActivateEnrollmentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e8b2f94d-8e2b-4058-b7bc-8534d58f1dde"/><con:assertion type="Simple Contains" id="5e0bb77c-e4b1-40d2-b982-891114e6df45" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="25358eb2-f5de-4ba4-90aa-375a9a2452a9"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:commandStatus[1]/text()");

def enrollmentId = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:enrollmentId[1]/text()");

def cipStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:cipStatuses[1]/text()");

def ofacStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:ofacStatuses[1]/text()");

def spaStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:spaStatuses[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentId != null
assert cipStatuses.getData() == 'IGNORED'
assert ofacStatuses.getData() == 'IGNORED'
assert spaStatuses.getData() == 'PENDING'
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateActivateEnrollmentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="AdminUpdateActivateEnrollment_BOI" id="884f7a58-86e2-4609-9bf5-05109ebcc741" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>AdminUpdateActivateEnrollment</con:operation><con:request name="AdminUpdateActivateEnrollment_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="9d950928-5c62-4063-883f-23631a056978" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <AdminUpdateActivateEnrollmentRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <enrollmentId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:enrollmentId[1]}</enrollmentId>
            <actionType>ACTIVATE</actionType>
        </AdminUpdateActivateEnrollmentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e8b2f94d-8e2b-4058-b7bc-8534d58f1dde"/><con:assertion type="Simple Contains" id="5e0bb77c-e4b1-40d2-b982-891114e6df45" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="bcb71e61-6bde-41b4-9dd1-e2fd61c5576f"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:commandStatus[1]/text()");

def enrollmentId = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:enrollmentId[1]/text()");

def cipStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:cipStatuses[1]/text()");

def ofacStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:ofacStatuses[1]/text()");

def spaStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:spaStatuses[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentId != null
assert cipStatuses.getData() == 'IGNORED'
assert ofacStatuses.getData() == 'IGNORED'
assert spaStatuses.getData() == 'PENDING'
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateActivateEnrollmentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="a38f7328-e973-4ee6-a5c5-00d00fd8eda8" name="GetClient_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClient</con:operation><con:request name="GetClient_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="97f62804-71d1-4e83-828f-866e9e5cbccb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientRequest>
            <!--You may enter the following 5 items in any order-->
            <!--Optional:-->
            <mes:status xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
                <!--Optional:-->
                <!--Optional:-->
                <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
                <!--Optional:-->
                <mes:returnSPAAImage>false</mes:returnSPAAImage>
            </mes:GetClientRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a3523fa7-7eec-4e9d-b082-ef80a12b22d9" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="40a18b0b-3325-4e7e-b7bb-4086ca79a2ec" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="e8b33528-2c49-46a0-b6bb-6c1bd78da2d3" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:GetClientResponse[1]/*:commandStatus[1]/text()");
def enrollmentStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");

def cipStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:cipStatuses[1]/text()");
def ofacStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:ofacStatuses[1]/text()");
def spaStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:spaStatuses[1]/text()");
def firstName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:firstName[1]/text()");
def lastName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:lastName[1]/text()");
def nextDraftAmount = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:nextDraftAmount[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentStatuses.getData() == 'ACTIVE';
assert cipStatuses.getData() == 'IGNORED';
assert ofacStatuses.getData() == 'IGNORED';
assert spaStatuses.getData() == 'PENDING';
assert firstName.getData() == 'CFT_FDR_TPB';
assert lastName.getData() == 'Automation';
assert nextDraftAmount.getData() == '100.0';
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="af456d51-41d5-476f-ac3a-5f1cc6c9ab33" name="GetClient_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClient</con:operation><con:request name="GetClient_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="97f62804-71d1-4e83-828f-866e9e5cbccb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientRequest>
            <!--You may enter the following 5 items in any order-->
            <!--Optional:-->
            <mes:status xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
                <!--Optional:-->
                <!--Optional:-->
                <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
                <!--Optional:-->
                <mes:returnSPAAImage>false</mes:returnSPAAImage>
            </mes:GetClientRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a3523fa7-7eec-4e9d-b082-ef80a12b22d9" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="40a18b0b-3325-4e7e-b7bb-4086ca79a2ec" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="fe05b188-f222-494f-9507-7e57e06e8011"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:GetClientResponse[1]/*:commandStatus[1]/text()");
def enrollmentStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");

def cipStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:cipStatuses[1]/text()");
def ofacStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:ofacStatuses[1]/text()");
def spaStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:spaStatuses[1]/text()");
def firstName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:firstName[1]/text()");
def lastName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:lastName[1]/text()");
def nextDraftAmount = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:nextDraftAmount[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentStatuses.getData() == 'ACTIVE';
assert cipStatuses.getData() == 'IGNORED';
assert ofacStatuses.getData() == 'IGNORED';
assert spaStatuses.getData() == 'PENDING';
assert firstName.getData() == 'CFT_FDR_WFB';
assert lastName.getData() == 'Automation';
assert nextDraftAmount.getData() == '100.0';
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="97dc24a3-cf5a-4831-8f8c-75b4187bd60c" name="GetClient_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClient</con:operation><con:request name="GetClient_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="97f62804-71d1-4e83-828f-866e9e5cbccb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientRequest>
            <!--You may enter the following 5 items in any order-->
            <!--Optional:-->
            <mes:status xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
                <!--Optional:-->
                <!--Optional:-->
                <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
                <!--Optional:-->
                <mes:returnSPAAImage>false</mes:returnSPAAImage>
            </mes:GetClientRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a3523fa7-7eec-4e9d-b082-ef80a12b22d9" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="40a18b0b-3325-4e7e-b7bb-4086ca79a2ec" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="a3f88efe-6bb7-4054-833d-bb37561587f1"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:GetClientResponse[1]/*:commandStatus[1]/text()");
def enrollmentStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");

def cipStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:cipStatuses[1]/text()");
def ofacStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:ofacStatuses[1]/text()");
def spaStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:spaStatuses[1]/text()");
def firstName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:firstName[1]/text()");
def lastName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:lastName[1]/text()");
def nextDraftAmount = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:nextDraftAmount[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentStatuses.getData() == 'ACTIVE';
assert cipStatuses.getData() == 'IGNORED';
assert ofacStatuses.getData() == 'IGNORED';
assert spaStatuses.getData() == 'PENDING';
assert firstName.getData() == 'CFT_FDR_BOI';
assert lastName.getData() == 'Automation';
assert nextDraftAmount.getData() == '100.0';
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="1c0210d4-c6ce-487f-98c1-36c65c2c9ade" name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="7641f367-b9c0-41e8-87db-1fc810437fc6" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="dcfc42b6-cb2f-42e1-ad1c-083c01f55d32" name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="8e5fde9f-a696-4737-a6f7-b098fb4cbe9f"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion1" id="5fdeb459-ccf4-48eb-9a18-ac81105173d5"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="a5970d79-4c52-4a4c-ac7f-a822d83a0853" name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="5928c7c6-8d76-452e-96db-c743877afa38"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion1" id="8941e0c3-250c-4b19-9652-3ba57c10530a"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="RunJob-NewScheduler" id="12fbbd2e-f2f4-4999-a3b2-afc04f800b93" disabled="true"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-NewScheduler";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

def minTimeOut=a.getPropertyValue('minTimeOut') as int;
def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	return(null);
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timeout"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
}</script></con:config></con:testStep><con:testStep type="request" id="df219017-2abc-43ae-b650-989032137e60" name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="7641f367-b9c0-41e8-87db-1fc810437fc6" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '100.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="47a54fd7-286e-442a-b895-e8666b4debfb" name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="8e5fde9f-a696-4737-a6f7-b098fb4cbe9f"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '100.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="77749154-acaa-4b9f-92c5-b4a5c4692729" name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="5928c7c6-8d76-452e-96db-c743877afa38"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '100.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="0134c678-382a-4f89-aa49-57973352b009" name="GetDraftSchedule_CheckDraftInProcess_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftInProcess_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:assertion type="XPath Match" id="6106ae37-dc95-4e16-949d-455b14e12ef0" name="Match content of [ns3:id]"><con:configuration><path>declare namespace ns3='http://nationalpayment.net/ws/schemas/types';
declare namespace ns4='http://nationalpayment.net/ws/schemas/messages';
//ns4:GetDraftScheduleResponse[1]/ns4:draft[1]/ns3:client[1]/ns3:id[1]/text()</path><content>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="31ab35b6-7a07-430a-992e-740910c58a3f" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
def scheduleId = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:scheduleId[1]/text()"); //not null
def type = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:type[1]/text()");  //MONTHLY
def amount = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:amount[1]/text()");   //100.0
def status = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:status[1]/text()");  //INPROCESS


assert scheduleId != null
assert type.getData() == 'MONTHLY';
assert amount.getData() == '100.0';
assert status.getData() == 'INPROCESS';</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="684d5991-1320-49c8-82d5-9d7dda2269d8" name="GetDraftSchedule_CheckDraftInProcess_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftInProcess_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="1162b5fa-e7b4-4c14-b4ba-7190d81f284a"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
def scheduleId = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:scheduleId[1]/text()"); //not null
def type = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:type[1]/text()");  //MONTHLY
def amount = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:amount[1]/text()");   //100.0
def status = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:status[1]/text()");  //INPROCESS


assert scheduleId != null
assert type.getData() == 'MONTHLY';
assert amount.getData() == '100.0';
assert status.getData() == 'INPROCESS';</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="e8986db7-57b2-411d-95a9-5799a457535f" name="GetDraftSchedule_CheckDraftInProcess_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftInProcess_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="eb64c7af-3eaf-417a-9df6-b2c9e8dcbe81"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
def scheduleId = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:scheduleId[1]/text()"); //not null
def type = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:type[1]/text()");  //MONTHLY
def amount = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:amount[1]/text()");   //100.0
def status = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:status[1]/text()");  //INPROCESS


assert scheduleId != null
assert type.getData() == 'MONTHLY';
assert amount.getData() == '100.0';
assert status.getData() == 'INPROCESS';</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="RunJob-TPBACHOutboundProcessor" id="efc1441a-a8b6-46bc-b303-184dbce63f10" disabled="true"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-TPBACHOutboundProcessor";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

def minTimeOut=a.getPropertyValue('minTimeOut') as int;
def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	return(null);
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timed out"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
}</script></con:config></con:testStep><con:testStep type="groovy" name="RunJob-WFBACHOutboundProcessor" id="0a1eab12-6781-494b-9759-8073bc9a7023" disabled="true"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-WFBACHOutboundProcessor";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

def minTimeOut=a.getPropertyValue('minTimeOut') as int;
def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	return(null);
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timed out"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
}</script></con:config></con:testStep><con:testStep type="groovy" name="RunJob-BOIACHOutboundProcessor" id="509bac1a-d3be-4e8d-999d-01f4f7f8f05b" disabled="true"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-BOIACHOutboundProcessor";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

def minTimeOut=a.getPropertyValue('minTimeOut') as int;
def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	return(null);
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timed out"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
}</script></con:config></con:testStep><con:testStep type="request" id="b5bf1533-f8b0-434e-b433-d96061f61efb" name="GetDraftSchedule_CheckDraftSubmitted_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftSubmitted_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="f8f1ff55-57d9-4393-857d-a4d1f387d386" name="GetDraftSchedule_CheckDraftSubmitted_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftSubmitted_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="2ddb5335-e237-4c6f-bc73-a97bdb22b004" name="GetDraftSchedule_CheckDraftSubmitted_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftSubmitted_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="8178d95c-6d07-465c-ac3a-c0e9773c04b6" name="GetClientsEnhanced_Current=0_Pending=100_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=100_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="f4932f86-9a07-4aaa-998b-0a2f2d9ea6c6" name="GetClientsEnhanced_Current=0_Pending=100_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=100_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="ece8c3c2-3c03-428b-99b0-49e6b7231ad9" name="GetClientsEnhanced_Current=0_Pending=100_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=100_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="RunJob-FundsRealization" id="152e5ea4-b237-4bd0-847f-2ae36d716d9b" disabled="true"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-FundsRealization";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

def minTimeOut=a.getPropertyValue('minTimeOut') as int;
def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	return(null);
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timed out"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
}</script></con:config></con:testStep><con:testStep type="request" id="ad60bdd4-6297-49b4-b4a1-03148a2b2de3" name="GetDraftSchedule_CheckDraftCompleted_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftCompleted_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="75c90211-ded4-4a6a-b038-bb9b5d036dd5" name="GetDraftSchedule_CheckDraftCompleted_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftCompleted_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="d67e7a61-3c1f-447f-94d9-b8aa46e9e239" name="GetDraftSchedule_CheckDraftCompleted_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftCompleted_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="0b34d346-ea46-4ac5-abd9-ce7063ddc7e8" name="GetClientsEnhanced_Current=100_Pending=100_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=100_Pending=100_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="99ebafa7-439d-4f6f-a4f3-f87661125dc8" name="GetClientsEnhanced_Current=100_Pending=100_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=100_Pending=100_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="8b1efbb7-112f-47fe-a340-ac1196bb4f2a" name="GetClientsEnhanced_Current=100_Pending=100_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=100_Pending=100_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:tearDownScript><![CDATA[import javax.mail.*;
import javax.mail.internet.*;
import java.util.Properties;

public class JavaEmailSender {

   def static log;
   def static context;
   def static testRunner;
   def static testStatus;
   
    private String emailAddressTo = new String();
    private String msgSubject = new String();
    private String msgText = new String();

    final String USER_NAME = "automationqa@finxera.com";   //User name of the Goole(gmail) account
    final String PASSSWORD = "Abcd1234+";  //Password of the Goole(gmail) account
    final String FROM_ADDRESS = "automationqa@finxera.com";  //From addresss
 
    public JavaEmailSender() {
    }

    public static void main(String[] args) {

    	testStatus = checkTestStatus();
    	log.info ("  >>  testStatus : "+testStatus);
	boolean emailOnPass=context.expand('${#Project#sendEmailOnPass}').toLowerCase().contains("y");
	log.info ("  >>  emailOnPass : "+emailOnPass);
	if(emailOnPass || (emailOnPass||testStatus.toLowerCase().contains("fail")))
	 //if(context.expand('${#Project#sendEmailOnPass}').toString().toLowerCase().contains('n'))
    	  	{
    	  	log.warn ("=========================");
		log.warn ("  >>  Email will be sent"); 
    	 
      JavaEmailSender email = new JavaEmailSender();
     //Sending test email
      def currentDate = new Date().format("dd-MM-yyyy hh:mm");
    	 String msg = createResults(); 
    	 log.info ("*******************"); 
    	 log.info (msg);
    	 def resultStep = testRunner.testCase.getTestStepByName("Results");
	resultStep.setPropertyValue("HTML",""+msg);
    	 log.info ("*******************"); 

     String emailRecipients = context.expand('${#Project#email}')
    // emailRecipients += ",raghav@finxera.com";
     log.info ("    >>>>    emailRecipients : "+emailRecipients);
    email.createAndSendEmail(emailRecipients, "CI Automation Report - "+testStatus+" | "+currentDate,
      ""+msg);
    	  	}else{
    	  	log.warn ("=========================");
    	  	log.warn ("  >>  Email will NOT be sent"); }

	if(testStatus.toLowerCase().contains("fail")){
		log.warn ("  >>  System Exit with -1");
		System.exit(-1);
	}
    	  	
    }

	public static String checkTestStatus(){
		def tsResults = testRunner.getResults()
		for(i in tsResults){
		String stepName1 = i.getTestStep().getName();
		String stepResult1 = i.getStatus();
		log.info ("=========================");
		log.info ("  >>  stepResult : "+stepName1+" - "+stepResult1);

		if((stepName1.toLowerCase().contains("runjob")) || (stepName1.toLowerCase().contains("serverstatus"))){
		if(i.getMessages().toString().toLowerCase().contains("pass")){
			stepResult1="OK";
		}/*else if(i.getMessages().toString().toLowerCase().contains("timeout")){
			stepResult1="TimeOut";
		}*/
		else{
			stepResult1="FAIL";
		}
	}

		
		if(stepResult1.toLowerCase().contains("fail")){
		return "Fail";
		}/*else if(stepResult1.toLowerCase().contains("timeout")){
		return "Job-TimeOut";
		}*/
		}
		return "Pass";
	}
	
    public void createAndSendEmail(String emailAddressTo, String msgSubject, String msgText) {
        this.emailAddressTo = emailAddressTo;
        this.msgSubject = msgSubject;
        this.msgText = msgText;
        sendEmailMessage();
    }
  
    private void sendEmailMessage() {
     
     //Create email sending properties
     Properties props = new Properties();
     props.put("mail.smtp.auth", "true");
     props.put("mail.smtp.starttls.enable", "true");
     props.put("mail.smtp.host", "smtp.gmail.com");
     props.put("mail.smtp.port", "587");
  
    Session session = Session.getInstance(props,
    new javax.mail.Authenticator() {
    protected PasswordAuthentication getPasswordAuthentication() {
    return new PasswordAuthentication(USER_NAME, PASSSWORD);
   }
    });

  try {

     Message message = new MimeMessage(session);
     message.setFrom(new InternetAddress(FROM_ADDRESS)); //Set from address of the email
     message.setContent(msgText,"text/html"); //set content type of the email
    //  message.setContent("<h3>sending html mail check</h3>","text/html" ); 
    message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(emailAddressTo)); //Set email recipient
    message.setRecipients(Message.RecipientType.BCC,InternetAddress.parse("raghav@finxera.com"));
    message.setSubject(msgSubject); //Set email message subject
    Transport.send(message); //Send email message

   System.out.println("sent email successfully!");

  } catch (MessagingException e) {
       throw new RuntimeException(e);
  }
    }

    public void setEmailAddressTo(String emailAddressTo) {
        this.emailAddressTo = emailAddressTo;
    }

    public void setSubject(String subject) {
        this.msgSubject = subject;
    }

    public void setMessageText(String msgText) {
        this.msgText = msgText;
    }

public static String createResults(){
String messageTitle="";
String message1="";
try {
    //Check a project level property to see if the reports should be produced.
    if(context.expand('${#Project#ProduceReports}') == 'Y') 
    //if((testRunner.testCase.testSuite.project.getPropertyValue("ProduceReports")).toLowerCase() == "y")
    {
        //The path and file to persist results
       
		log.info ("  >>  Creating Results");

/****************Title Message***********************/
messageTitle = '<h3>Note: This is auto-generated email. Do not reply.</h3><hr><hr><br>'
messageTitle += '<table border="2" style="width:80%">';
messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">Environment</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+context.expand('${#Project#Env}')+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">Endpoint</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+context.expand('${#Project#Endpoint}')+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">SubscriberId</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+context.expand('${#Project#subscriberId}')+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">TestCase Executed</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+testRunner.testCase.name+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">Executed by</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">CI Automation</th>';
messageTitle += '</tr>';

messageTitle += '</table>;'


/****************Title Message***********************/


 message1 = '<table border="2" style="width:80%">';
 message1 += '<tr>';
 message1 += '<th bgcolor="#e5eeff">Name</th>';
 //message1 += '<th>TimeStamp</th>';
  message1 += '<th bgcolor="#e5eeff">TimeTaken [ms]</th>';
   message1 += '<th bgcolor="#e5eeff">Size [bytes]</th>';
   message1 += '<th bgcolor="#e5eeff">Message</th>';
   message1 += '<th bgcolor="#e5eeff">Result</th>';
 message1 += '</tr>';
             //resultsFile2.write('"Name","TimeStamp","TimeTaken [ms]","Size [bytes]","Message","Result"');

def tsResults = testRunner.getResults()
for(i in tsResults){
	String stepName = i.getTestStep().getName();
	if(stepName.contains("Gen name") || stepName.contains("GetCurrentDate") || stepName.contains("Results")){
		continue;
	}
	
	//String stepClass = i.getClass();
	String stepTimeStamp = new Date(i.getTimeStamp());
	String stepTimeTaken = i.getTimeTaken();
	String stepSize = i.getSize();
	
	
	//String stepMessage = i.getMessages();
	String stepMessage = "";
            def msgCount = 0;
            for(message in i.getMessages()) {
                msgCount++;
                if(msgCount < 10) {
                    //resultsFile.append(message + ';\n');
					stepMessage=stepMessage+message+" | ";
                }
            }
	
	String stepResult = i.getStatus();
	if((stepName.toLowerCase().contains("runjob")) || (stepName.toLowerCase().contains("serverstatus"))){
		if(i.getMessages().toString().toLowerCase().contains("pass")){
			stepResult="OK";
		}else if(i.getMessages().toString().toLowerCase().contains("timeout")){
			stepResult="TimeOut";
		}
		else{
			stepResult="FAIL";
		}
	}

 message1 += '<tr>';
//message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';    
 if((stepName.toLowerCase().contains("runjob"))){
    message1 += '<td bgcolor="#F3F781">'+stepName+'</td>';
    stepName="wow1-"+stepName;
 }else if(stepName.toLowerCase().contains("serverstatus")){
 	 message1 += '<td bgcolor="#F7FE2E">'+stepName+'</td>';
 	 stepName="wow2-"+stepName;
 }
 else{
 	 message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';
 	 stepName="wow3-"+stepName;
 }
   // message1 += '<td>'+stepTimeStamp+'</td>';
    message1 += '<td>'+stepTimeTaken+'</td>';
    message1 += '<td  align="center">'+stepSize+'</td>';
    message1 += '<td>'+stepMessage+'</td>';
    if(stepResult.toLowerCase().contains("ok") || stepResult.toLowerCase().contains("pass")){
    message1 += '<td align="center" bgcolor="#00FF00">'+stepResult+'</td>';
    }
    else if(stepResult.toLowerCase().contains("timeout")){
    message1 += '<td align="center" bgcolor="#skyblue">'+stepResult+'</td>';
    }
    else{
    	 message1 += '<td align="center" bgcolor="red">'+stepResult+'</td>';
    }
  message1 += '</tr>';
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
  log.info (message1);
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
	//String resultToLog = stepName+","+stepClass+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	String resultToLog = stepName+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	log.info (resultToLog);
}
message1 += '</table><br><hr>End Of Report<hr><hr><br>';
    return messageTitle+""+message1;
} 
}catch(e) {
    log.error("An error occurred: " + e.toString());
}
}
}
]]></con:tearDownScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>c26798fd-2b72-4a0c-a5c1-a72d6644bc58</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ab382168-228a-4607-a6d5-c34702bbca33</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>19d63366-0c52-4145-a038-d85ac4fe8803</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e9d1ef3f-73ca-49ce-9d1d-bd7e1294eec7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>45f1aa99-092a-4b95-8f68-d42dc1425e7b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6ae7c6d3-43a8-40a0-ada0-4d73e37c4c8f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1913e0e1-e17d-41b5-8982-01ef27e46764</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf3c8c1f-6f7d-41ec-b2e9-137280a2cccb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d5f83aea-14fb-45c0-b128-ac782ad28711</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>50807989-d114-426b-a146-1a20b54611af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b65eccee-3ca7-48eb-843a-99dbe9291319</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c37ff707-c00e-449e-ab5a-9c7265d22f66</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>15c2c0a7-ad9c-4214-b80d-a6d84fd1414b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f1fbf360-ee95-4df4-b3d5-85896f094bbf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0d1d4844-09f1-43db-9118-01bae8d3cf9c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6a463e72-74c7-4c75-add5-454b38367492</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>edd4ca67-dd19-4142-b647-134d2d1f6ac4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7032aa7-e6e1-443e-8c35-e62dc0eef951</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76aaea4b-3651-427e-8216-9998adcf1496</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5e97f0d9-9f88-4a8e-a937-8074d59709a5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>735f1cf8-d028-4667-9e71-2227e9752cdd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f45b32de-b23e-4c6b-ae90-efce09f0d35d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1d021472-3c53-4b27-9115-e1a8fc5a8352</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f2d6368b-9365-4974-a75f-838f1ee72e62</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d5da2c04-14d4-45bb-8d1b-48a3b97ce2f5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5934230-0eb8-4f7b-9a95-ef0601b95a4e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>16241add-ddd0-4622-af38-e013b30cde43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4c8f3188-2d56-43ad-b43b-de967fca3aaa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc85c6d9-b9ad-4f6b-a686-b7bb8af2998f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0f649678-fa34-4a5d-95b5-5c3affa5784e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b936ff2e-68f6-47ea-8eba-227f2227f207</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>762cc6fc-1bab-4bc1-9300-06b323e6b6af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2b130f51-54b9-422d-b302-1c19c89bc215</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3f60561-7671-4b4f-a6d6-c181c64d7a01</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>79c19945-0fab-4d4e-9523-f435c8e589b3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dc70ddc3-bb9d-4ee0-ae05-b7f9ee621995</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>797127d4-7df9-402a-8e12-f400e09f2299</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b03c28c6-6333-4c58-962d-7cfa1b31d1ad</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e790e173-4360-41e0-a02b-bf20dcecaefc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8cc7f480-a7ae-46e7-9b22-8a1860e83554</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>192d6158-65aa-47e2-a7f1-b809e74e85d7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4b59bd9f-addb-444c-aab0-0b826a7d4d58</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>40af8e29-477e-49ec-afbb-cf80bded76fe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e50cddcc-0d02-4b47-8bd0-0534d3c97594</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e9dfb6e9-faf3-4ed5-9bc5-789bc1f77b52</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9b92659-b5ed-45dd-929e-f48e1a711a28</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>341b1e66-0398-405a-8bd7-f717b348ce46</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf4accb4-07b7-4230-b70d-46d17387fdb7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0683104a-0b5f-47aa-a4cd-bebe67a8d2ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1e487627-9030-4c1b-a6c6-1dec29ef9de7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5d8e6739-24c0-4806-8f06-caa89282b18f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>80c5a21b-f616-453c-8113-358c6d486e84</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5f7cd2c3-1a53-4e45-913f-ff687bddf399</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca9eeda8-9c0b-4799-96c5-301ee9289ead</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>80bc6ae0-0d69-4844-810b-1ea4b8ea9144</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3902228d-992c-47d3-9136-5078e4be2566</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5540e39f-8f63-407b-add8-4016036a55a6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>055f6f9d-18b5-4648-8ec8-2eefc659262a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9af053b7-7eca-4b2d-85c3-2e78acf1e4cd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fc8a1aee-aecb-405a-8b93-116d62784aec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8c3fcdf-d25f-4d5d-9f79-5cdded36993a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0dc0034-48e5-41ca-8f7b-f914e02d1a9a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>50f8ff3c-314f-47d7-a7e2-a82cda43009e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4117b210-9816-4eaa-86f0-767989e89773</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0a17c752-46d7-4184-8339-872151f38ee3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1532db97-706d-4881-abe5-12b76f69466c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>19b24d96-8e8d-465c-9624-8244bc719e4a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76d436bf-00ed-4259-8b85-2a17adc4f14a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b89c3f78-8127-4f84-8d98-d250d95fd3ce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>20cd096c-9269-457a-95e9-0732c970ff06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4b4d8744-4840-4721-bf48-5f2e160df2fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>69707753-5fef-4712-9349-7f7097b4cfde</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5077ccbd-a4f7-4d69-aa4a-7e2923a67aa1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PerformanceTest_CFT-APIs" searchProperties="true" id="4b167a2e-5605-419c-a9a6-e9d91474ca07" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">false</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="groovy" name="Gen name" id="10540e4e-6165-4828-8e5c-87d6e61eefd1"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}

generator( (('A'..'Z')).join(), 9 )
</script></con:config></con:testStep><con:testStep type="groovy" name="GetCurrentDate" id="db742342-5523-4114-bbfd-007454ea21d2"><con:settings/><con:config><script>
def currentTime = new Date().format("dd/MM/yyyy");
	log.info "    >>>>    TIME NOW IS : "+currentTime;
		return currentTime;
	

   
</script></con:config></con:testStep><con:testStep type="request" name="CreateClient_TPB" id="a502b519-68e5-4635-bccc-0bf2ea7f0f5c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClient</con:operation><con:request name="CreateClient_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="18d5e90d-6870-4130-97c8-f95dead90278" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            	<wsse:Username>${#Project#global_username}</wsse:Username>
            	<wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientRequest>
            <mes:clientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:channelId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:productId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:firstname>CFT_FDR_TPB</mes:firstname>
            <mes:lastname>Automation</mes:lastname>
            <mes:ssn>232-36-3333</mes:ssn>
            <mes:dob>
                <typ:date format="MM-dd-yyyy" value="09-09-1980"/>
            </mes:dob>
            <mes:address1>Finxera Headquarters</mes:address1>
            <mes:address2>1900 South Norfolk Street</mes:address2>
            <mes:city>San Mateo</mes:city>
            <mes:state>CA</mes:state>
            <mes:zip>94403</mes:zip>
            <mes:phone>9874563210</mes:phone>
            <mes:mobile>8996655000</mes:mobile>
            <mes:email xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:draftAmount>100</mes:draftAmount>
        </mes:CreateClientRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5b1cba04-966f-4b54-ab63-4bf2bb398213"/><con:assertion type="GroovyScriptAssertion" id="c0ea2155-427e-4545-9eea-7c8f0dc10ca9" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def enrollmentId = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert enrollmentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClientBankAccount_TPB" id="8a73e822-d7e7-4d33-ae5b-25f48292caba"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClientBankAccount</con:operation><con:request name="CreateClientBankAccount_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="253b5085-e099-40e3-ad27-918bd588eae1" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create client Bank account +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientBankAccountRequest>
            <!--You may enter the following 10 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:routingNumber>051000017</mes:routingNumber>
            <mes:accountType>CHECKING</mes:accountType>
            <mes:accountNumber>54364434</mes:accountNumber>
            <mes:holdersName>AutoAccount</mes:holdersName>
            <!--Optional:-->
        </mes:CreateClientBankAccountRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="GroovyScriptAssertion" id="dc66fa8c-a323-48dd-afcc-ba87cf4ebc82" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientId[1]/text()" )
def clientBankAccountId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientBankAccountId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert clientBankAccountId != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" id="b05b5e9a-c6c7-4088-bf18-1068907a473d" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientBankAccountRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateDraftSchedule_TPB" id="9fce195c-6522-4a51-acb6-ff0115e7b877"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateDraftSchedule</con:operation><con:request name="CreateDraftSchedule_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="b45939bc-67df-4797-9e67-eb91f5cf6946" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create draft schedule +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateDraftScheduleRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:clientBankAccountId>${CreateClientBankAccount_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientBankAccountResponse[1]/ns4:clientBankAccountId[1]}</mes:clientBankAccountId>
            <mes:amount>100</mes:amount>
            <mes:occurs>21</mes:occurs>
            <mes:startDate>
                <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
            </mes:startDate>
            <mes:type>MONTHLY</mes:type>
        </mes:CreateDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="177becab-36f5-46db-b0f2-aefbd008283f"/><con:assertion type="XPath Match" name="Check for existance of [ns3:scheduleId]" id="eb3e50d7-8cad-46ab-9d81-c6b4fd671ba8"><con:configuration><path>declare namespace ns3='http://nationalpayment.net/ws/schemas/messages';
exists( //ns3:CreateDraftScheduleResponse/ns3:scheduleList/ns3:schedule/ns3:scheduleId)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e34bba25-c3df-4532-b338-e803ce54084a" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="40362eb6-899e-4dd6-9cac-8b5da954560f" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:commandStatus[1]/text()")

def schedule1 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[1]/*:scheduleId[1]/text()" )
def schedule2 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[2]/*:scheduleId[1]/text()" )
def schedule3 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[3]/*:scheduleId[1]/text()" )
def schedule4 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[4]/*:scheduleId[1]/text()" )
def schedule5 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[5]/*:scheduleId[1]/text()" )
def schedule6 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[6]/*:scheduleId[1]/text()" )
def schedule7 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[7]/*:scheduleId[1]/text()" )
def schedule8 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[8]/*:scheduleId[1]/text()" )
def schedule9 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[9]/*:scheduleId[1]/text()" )
def schedule10 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[10]/*:scheduleId[1]/text()" )
def schedule11 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[11]/*:scheduleId[1]/text()" )
def schedule12 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[12]/*:scheduleId[1]/text()" )
def schedule13 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[13]/*:scheduleId[1]/text()" )
def schedule14 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[14]/*:scheduleId[1]/text()" )
def schedule15 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[15]/*:scheduleId[1]/text()" )
def schedule16 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[16]/*:scheduleId[1]/text()" )
def schedule17 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[17]/*:scheduleId[1]/text()" )
def schedule18 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[18]/*:scheduleId[1]/text()" )
def schedule19 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[19]/*:scheduleId[1]/text()" )
def schedule20 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[20]/*:scheduleId[1]/text()" )
def schedule21 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[21]/*:scheduleId[1]/text()" )

assert commandStatus.getData() == '1'
assert schedule1 != null
assert schedule2 != null
assert schedule3 != null
assert schedule4 != null
assert schedule5 != null
assert schedule6 != null
assert schedule7 != null
assert schedule8 != null
assert schedule9 != null
assert schedule10 != null
assert schedule11 != null
assert schedule12 != null
assert schedule13 != null
assert schedule14 != null
assert schedule15 != null
assert schedule16 != null
assert schedule17 != null
assert schedule18 != null
assert schedule19 != null
assert schedule20!= null
assert schedule21 != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="765b338e-9bc2-48ce-a181-fb29c8dddd37" name="GetDraftScheduleList_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftScheduleList</con:operation><con:request name="GetDraftScheduleList_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="311078f8-03f6-4621-95f9-30e4e34a935b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleListRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:order>scheduleDate</mes:order>
            <mes:ascending>false</mes:ascending>
            <mes:pageNumber>1</mes:pageNumber>
            <mes:numberOfRecordsPerPage>5</mes:numberOfRecordsPerPage>
        </mes:GetDraftScheduleListRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="4fa0357b-9cca-4f29-b0ba-e9a9db3e976a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e3329fbe-4933-47ad-a3e7-0b50c3a22fcb" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2fd84260-87e3-4517-a6d9-fb7396f582d6" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="dbcd0c8f-0aab-453e-9171-1dc0600d0daa" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def totalCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" )
def returnedCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:returnedCount[1]/text()" )
def pageNumber = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:pageNumber[1]/text()" )

log.info ("  >>  "+holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" ).getData());
assert totalCount.getData() == "21";
assert returnedCount.getData() == "5";
assert pageNumber.getData() == "1";
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleListRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="064ea087-fc77-430b-b21b-e0f797ae8bd4" name="CreateEnrollmentDocument_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateEnrollmentDocument</con:operation><con:request name="CreateEnrollmentDocument_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a2d6acb3-7045-4a9a-bcfb-42997ae5c540"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateEnrollmentDocumentRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:note>ref</mes:note>
            <mes:documentType>type</mes:documentType>
            <mes:base64EncodedContent>JVBERi0xLjQKMyAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQW5ub3RzIFs8PC9UeXBlIC9Bbm5vdCAvU3VidHlwZSAvTGluayAvUmVjdCBbNDE2LjkzIDM2My44NSA0NjAuNjEgMzU3Ljg1XSAvQm9yZGVyIFswIDAgMF0gL0EgPDwvUyAvVVJJIC9VUkkgKGh0dHA6Ly93d3cuY2Z0cGF5LmNvbSk+Pj4+PDwvVHlwZSAvQW5ub3QgL1N1YnR5cGUgL0xpbmsgL1JlY3QgWzE0My40OSAzMjEuMzMgMjE0LjE3IDMxNS4zM10gL0JvcmRlciBbMCAwIDBdIC9BIDw8L1MgL1VSSSAvVVJJIChodHRwOi8vd3d3LmZpbnhlcmEuY29tL2xpY2Vuc2luZyk+Pj4+XQovQ29udGVudHMgNCAwIFI+PgplbmRvYmoKNCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMjIzOT4+CnN0cmVhbQp4nI1Y23LayhJ93vmKfkjtSqrwWPdL3jDgCqdsICAnlaq8DGIAHQuJPZJM+JHzvadnRjeETDapGCFmVq9efZkWBvzng0ZsF04fHgK4f9TBIZoGwRYmgbijmy5xDfAMm5g2BBv4tDqyMKIxLAp+TDMGwzBMiySHWXFYM\/4FLNPQxEvH\/5Zj+7DKac4ODJcsGI\/SzRd4pjzcgz4AQ9NtuCs\/m9UNWNAdA\/0e7M8Q\/FcQ+Qe\/0AQv8Q8Z4ZXhmcRywHUdYlsQHuB+qsM4hW8fXI2YGriOSxwDTN8hHtrQiKsDZ\/AAwivXJLoJrm0TX5NOLTjNaJLvYfS9stkss1xiqWXPLInT6wWmRzxf4VD+CnIVyMvRsLX6\/tHoqGvaDnG0NpHxdDkZBTB8eoLhaDR\/mQUwnX17mS6nkxUE8y\/Qwqt2WxaxHbl7xNMs4yndZPAYJTSRgQpYuE\/SON1FLOvbbiIntX0xh4f0Nxi2bfp9Kw2X2GUS0ASjlrN0gC7e+ZalGT3rdZ9oav1inyYMZin8DzzPuzMt786yLbPaU4ZMl9tuhkxzxV1J4eX5ebj8CfNHVCqYfp8GP+FC7KtUNiyRyo5vioyRrJaT79P5ywpWwTCYPE9QbHgYPg1nownMZ6AZ94bXgqwAPIMYZbQmi\/lqGqzuR8vJGN\/bGhg68fT24o+GSOEePPTeUwH4MQ2+jpfDH8On1f3q5SFYCs\/ms0tcm2CNtDZ9NPphbZ\/YhpKqdq\/tnXlv6j2Em20fda+FrGLk2BYxrHdidJ3gKmqO6RPHk5jo0mylvGrCFnydrmAxWU7n4\/cjWNo3LYLJaSrzukV0V9hfQWMMBbJViozR7QpQx8wRuqn9uifbSQdA13zie22ENt3xZDVaThfiugI1vDaoY4tQdzANr4v5XtKYtiF6bAlmoWR6F8zERqFfgLUypsKxNJ34t0lZGqaI38apmk2ZIJ2gY+Yaxk3RdZ2YpkTCvGqaQaW6AritegOxZGHBeZTsYMzwjIly2PL0AKM9C1\/xbld9Bd7rqEhq3WljqyoE+eoqr4D6lccw6nob6BKiEv0GF8vELv9HLqXimiNa5w3Fbd8VnpWKm1pXcQVwU\/EWxHD0FQ+sszyl8xRCzjZRnnLAPr\/hFIbHY8x22O+70isr\/dJj0dta20i\/6AqiX3QXP15AyF7Xr\/wNKqXybRzZ2vqUt9Gm59YNrlPM+BHDa6MV3+ueQstJ8LKcTcYwxWYLj5PJqoPsaMTB1mPpxDUvkD8YOvpl1ivEOetc2cYpw3fBtmWbls1pHgyf4HG+7GugUn7\/NqSJxGzzGvLnZLi8C+Z37f5Z+mA54nTo8QHhUF5MbBvnM8dsob2vS+V2CXrNsfbi\/RVNQeiu6GnC7mweTL7A5Dc9RDh15Psog6weQkPK2baI4zNgbiPIMeU5Xp4h4pztipjyKMdJiXQcx5JxWmmhm6K51hQM\/IzMLJTAVxPP9HkxXwZDbKnNHIeheh62z4+avOU5Iv\/lxgQp4lydboFxnvIMsA7\/KViWR2mSAdB1WuRwTgveODUAFrMw52kShZBzmmRbxsU+eU1DtTVNrrbluO8oZ7MiA4q1v2eQyEEejtiAc7YRu67pup7ohoKu2IHdGYVFwh2pkcAJ1azA\/zidDqA9gQ7gYsocgBwzgaKFFEnhO3qDWiUDiLbyGs0nrz1sHV\/MlYLtpf+CIGchi445IPETurET90q4hKH7hxSDHCXblB+okLHUn7ZkTqRsfagEfjA4FFkOe0a5OsUkcgoxruZ9XHXR8pSy6D7y3tAzyrcVy09oRlhQzjJ4nC5XQdtyAqd9hM9S4kuZPUjm2gY2W1f1wb\/gL9AJBiGORZCkPAk9MFkbtHyyKxPi1yfUBQvl12fSA6kTo4E0CJ7cWcijNbugIj\/UwgkvsBihSLIC36SwA2mZ\/T7GNJIxDmNUThRrHW508Syv1yyO2BtGR0YPv6jNVCuaCF4zNg3i2jVj8WpFucdDnKqNZr3ZiCZ82qQxNg6gBymYrAQMVZHhs7KoIUmsBxP7n1\/OcQxOEeJFyZuodHHWqmiE6UFqkUth5JowxU4VqqalXD5iYh3z+ExguhVJktNXpvyWSYQJtS4y7IVZprIJj\/hNKqt1IJYrVHnmK6NV5K8Z4+BYPgtvy3CWPjf1h7GIylgMsFQFBfW1NLOnbyonCtXjxOUBG9AZNoUc+WSKRAcZVuFHJjVOlRAMZREEG5nawVKt2vQs0YSrVu3ZRLO6h4Xp1I+y2Ip+M04HME1CgvQyaVXkXhbtElVWWyXLez99DHecqQKUFf4o1s7pawYPFPX4GwIuWsAIHcCQDZpAoolC1BpeXilt2vXDM2fZEft3tI5ieTQJPh0bRbJhKhxXnAhA6aJ0jm7wUIwy7CaYl3\/+veDXp+Y3GDFKauVfXf7lOzle4XO7f8H4dDqRcJsf6Zlg2EqEZp1HLJz4THGg3smQYXS28K02oVDF5KK3UX99rmTqrq0k06qgYiNcsz2Ntz1adeJBYIEtBqOZpDkbCA15WRFrcQ9CrKCdOAJUZjJ+yOqEuE6Asigyxt+isPm95R3CliFyUxDGCn6LNhgSzHSEJjDM4Eh5c6oqGgNld1M+FlV1igXWcbJyIIwxUTcy5QSvNY0xysirasJcmaTYKk+Qlfl9m7RZ\/35yLOugptHOrfW5zrtq8ChDIho77uAbQQWZ5vtLad9L4xpPOnegifiZUALfJoxPuZoaSCsHu8TXhdRQFKJoPRns03ijoLdYWpkiuWVYZFRMjpE8sTZVHFIub+VRXshJC7kOEarKkgoCb3F2EOfa43g6qkDIH9hj0diK\/SMmV3ccwQ7LWA\/CdZXqWHCW38YTVbpVkooyvY8xY7HN1A\/YzRZb1C12V8e7UbCGGstbBvA4wlBv8FiRTFlSZqM4OqQyeIxhGmTy+MYGfzxX4V\/w6I2GZ1ikSEoc\/lmKgRNHqYzEvwi65lVBf6drk2b\/\/wGfn0ckCmVuZHN0cmVhbQplbmRvYmoKNSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgNiAwIFI+PgplbmRvYmoKNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk5Pj4Kc3RyZWFtCnicNY7dTsMwDIXv8xTnEiRIbWdp1t0N8SNNgDotL9BlodtE6Sit9vp4iFk6sj\/bso9gZcj6gLN5iCieGaUlQvzAUzTfIAVCC52xCzYI5uKt84g73GxOOR2aT9TTcOp\/MpYp9dPXiPep2+ZhgZkTugSrZqWvsBmbMXdZV+o8HPrdAm\/NkPbgOwixx\/0\/u2sDddNmSAF\/i3hUS1hfTGEFxlnzUfWiav+shqoMCnQtZW6d\/oUw2cqxIHWmiPUr47HXQ2vzC3XrPWwKZW5kc3RyZWFtCmVuZG9iago3IDAgb2JqCjw8L1R5cGUgL1BhZ2UKL1BhcmVudCAxIDAgUgovUmVzb3VyY2VzIDIgMCBSCi9Db250ZW50cyA4IDAgUj4+CmVuZG9iago4IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11HNJQ3pg2JqENFZEfKCEU0LpC14rfn0Fg6co+tmVfxlKRdh5X9RaQLQxyTYSwx0dQF5AAoYbMjPXaM6bstHUIO4w25xSP1Q\/KoTu3fwnzGNvht8dqaLapm2FimW5hRJPcFdj0VZ+aJCtl6o7tbobvqosHmBcwGYfXB9tnA2VVJ9gMboxwEktY30xhCYOr5JPoU1Tfrfoi9wL0LHmqrfwFG9KFNYzYqCyUX4z3Vg6t1T92TT1uCmVuZHN0cmVhbQplbmRvYmoKOSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgMTAgMCBSPj4KZW5kb2JqCjEwIDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11kqahvIHYkNCGipofKCEUEKWstOL3ZxBYurKPbdlXYyVIWoe7mHsk3wqZJILf48uLPxADoQbPlHHSaUy0lcbC7zAqrzEcqzOKobu2t4hZCO1w6bEemm3spkiNpkcoVprZHGVf9bGJvFLE7tjupvitunCA+oAmZfH5YvNuoKjqiDSBHcOf2BI2D1NYQeHO+cRasuqnVZdnjoHepZ5Iw3+hFcncKI3QiMQXPwaLlg9txD92rz1wCmVuZHN0cmVhbQplbmRvYmoKMTEgMCBvYmoKPDwvVHlwZSAvUGFnZQovUGFyZW50IDEgMCBSCi9SZXNvdXJjZXMgMiAwIFIKL0NvbnRlbnRzIDEyIDAgUj4+CmVuZG9iagoxMiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk4Pj4Kc3RyZWFtCnicNY7RbsIwDEXf8xX3EaQtdZKmobyB2JDQhoqaHyghFBClrLTi92cQWLqyj23ZV2MlSFqHu5h7JN8KmSSC3+PLiz8QA6EGz5Rx0mlMtJXGwu8wKq8xHKsziqG7treIWQjtcOmxHppt7KZIjaZHKFaa2RxlX\/WxibxSxO7Y7qb4rbpwgPqAJmXx+WLzbqCo6gibwI7hT2wJm4cprKBw53xiLVn106rLM8dA71JPpOG\/0IpkbpRGaETii58Ui5YPbcQ\/dxE9cgplbmRzdHJlYW0KZW5kb2JqCjEgMCBvYmoKPDwvVHlwZSAvUGFnZXMKL0tpZHMgWzMgMCBSIDUgMCBSIDcgMCBSIDkgMCBSIDExIDAgUiBdCi9Db3VudCA1Ci9NZWRpYUJveCBbMCAwIDU5NS4yOCA4NDEuODldCj4+CmVuZG9iagoxMyAwIG9iago8PC9UeXBlIC9Gb250Ci9CYXNlRm9udCAvSGVsdmV0aWNhCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTQgMCBvYmoKPDwvVHlwZSAvRm9udAovQmFzZUZvbnQgL0hlbHZldGljYS1Cb2xkCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTUgMCBvYmoKPDwvVHlwZSAvWE9iamVjdAovU3VidHlwZSAvSW1hZ2UKL1dpZHRoIDIwMAovSGVpZ2h0IDM3Ci9Db2xvclNwYWNlIFsvSW5kZXhlZCAvRGV2aWNlUkdCIDI1NCAxNiAwIFJdCi9CaXRzUGVyQ29tcG9uZW50IDgKL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0RlY29kZVBhcm1zIDw8L1ByZWRpY3RvciAxNSAvQ29sb3JzIDEgL0JpdHNQZXJDb21wb25lbnQgOCAvQ29sdW1ucyAyMDA+PgovTWFzayBbMCAwIF0KL0xlbmd0aCAxNjE2Pj4Kc3RyZWFtCliF7VcHeFRFEH4bOyiWWECsKPYuYldExYq994IdQknIu9frUiI19CYSCR3RxCASBDEixWCABEKNEA64AEmAnEAE7mNm37tLuZCEzxT9vvu\/u2\/fzsy+m392ZnaP4yKIIIII\/q\/I7XSw90q\/P7Ww68w1je3Lv8ENee+8Pvrtdu0e2z7mu0k5x6DC64R4Gtav40Rujr\/99o6v\/IbYseuOxOx7q7KSCSEGx5mEb2j\/agtf3tS9BU0X7sgH7Fi48MiGDP\/MKsxEYuJAidzA\/tUWm19MvKKge\/6X6xm6N83vuOeekv7hdhqxcPjvEjk4dfqeFq1SUo44SElJ33X1mNQzQnpbhJzSMLEIMZ1BlAixTMg04GQbKLEw57CCTKI5y1SU25CRAiE6hkAnvEUI5W0QmHbd8+jkH7140fr0VvsX9ezZZ1HPPi32p6fvWvxqaZKrl3TmaAUiFkdcSBxPXBE88MxdtkxDoQ58HDVkpUHKwax7IqvHPh3ti\/Z9eOYHb700LH\/TZ3828\/mi\/3ig5H5XT4nhhM90UouFGfwVOHRdcIxY\/VAichI6zzH\/mbXNTICVygn4IgiExjavznnE+d8cEjvk0qKipKS2yl2xbXO\/v\/vsHxVl\/ildY5hewqiHE6FsIqDbtqU7IbYIha\/IjAWXouUQQ94aSzoKlDACdU7ki6nXXNXjkY+Lug0qLj5x8EeDBv2aFPPP9Z+P3OiPY3o1dHZUIOJMIOfd1EMiHp1IBnG2j7qENCDHzM3yROR6INJ1+cWZLVs+fquiKLPmrHqqCEbl4cnLLsl832nBEDy5EhEpNIFsgS9UrsqSXiRWMPkN90EkusflVc9EsjP2ZGW1OmGzktumTVGX4sBsILL2vYLnshIvY3oIs86XJ6KzWLPmZGEhsCRzzhgoEHDTRl9BJSADmdWIiNGoZyIrx2Rt2PSNolwQKM4FDt0CM2JgaDbsrMQ8x8DpUyTUWAWWR6YjNdz2xJ5wHyD+Fssz0+1lWrCpwcJ6rZHUjIKTwPNTA4MVpcmhHjGxPwS6wDzmtMRS10JCXwT0khGxwUURkx5qQ4Oge4AZFZ2a1tAOigaT0aKsO3MqjCbuqRMI7F9YeHVPpPAWRYkvDiQpyhuTR2QeaqIUr8JCef6cvOqWuXlWCQJ62Ugo7Dw\/Nn5WYLOi9Fh2+4asEdcuVU6e001RPi05t7plVRKxnMpuHORduED5NgDl8XLm9K8Ar115ujJ7jm\/IPG8V160y0HAiEiFVblMD4bB33k0\/A4+Rv89tvQTQesvfS5XZMwZ29lf7Byt4ToQg6zahocQyq2QkE9c0TGNpld9Wflara+oa\/50LoE+9u3duv78Y+m25bm38zpsHrI53DODyF\/7D4bCp+yDVeJNCU9YLaUhUmYhdpuKMSiE7Fp75+pOdytKN53WY6KLDlotiB44dvi\/oF4TZQwyC3cnC5mtDf1VFg4gyXsPAb12CktEp07k+GJYFXc2CQ4eoMsXT0WMQg9eZwPFSpuwgUjkJdlc1wNoxhNs0lcGEjbAKWiOR4GwyPBIhWjVE4laW3PjsQyu27g7hQPMXHjx\/tasWWDzgSmsZEEYJnOYwg2DGwUFpolYULeqRqK1LoWAKqmpwPD7xhq3b8NHAUnIFQSIS9UAOUR63Hdq0Ywg\/aKEJG3kDVSC0IFu16mhwWCW3rZuQdqAMaUvum5IdFyTCLn\/U5jRIeyprEBkV9kDV4GILDpgePFYEDf1HHbvvEltTVSaCI535TW0qc+UFjAi74uNrOGYdMrQJPLIRd0RFITYSidbQ3XOihu\/tlzZ+3Ljk5ORxyeO3Tsjwpu4LKlXWiXSbE2FHsLsa8DJRg6T2wDaZlmpyoiXijnCOjrnpErF1D286\/pkmV17AiMgQH7gDWRWIQElYaMJGD3XC6DYPnoZ7X4HJgCntm09M6zV06NBeabt\/2uYdta9MiZd0GZIfgqPLkKbgDAiwOlWsajjHDQ3y2SBM5+aPaYEBZA7IKQogaSC2EAgUOC3JrRGgoxNIG5g7hhJWHpiwEWsKXizhalWoub0fHhWVsDxj2ooV06b9sm1KVOmjNdg3GES8ox3P4XR5zqQob9+EhIS+Xm\/vw9H15tjxAnYr+Ce0tljTf90ThaOySw8+6asfnyKIIIJGw1G2ZvkFCmVuZHN0cmVhbQplbmRvYmoKMTYgMCBvYmoKPDwvRmlsdGVyIC9GbGF0ZURlY29kZSAvTGVuZ3RoIDc3Nj4+CnN0cmVhbQp4nAH9AgL9\/\/\/\/AAAARE9x3OHs9PTy2uTo8vHwiI6P8fHxssXL9PX5pr\/O4+Xv4ePo7vP06\/DzaZKs+vn5ZW9\/9\/n6qK+9Y4mTPkxx9fX2ZoaYlrPEX2l9cIm1nam\/ZIiwYoGx\/\/34pKu56+zwn7jIaY2mfpC3cJaisrvZb5iwjZu5i5vChZay5uny3+Hm09K3+vfoxMOr4uvm7e\/1a3SCZIip7OzqZoWg\/\/7+dHuF\/v\/+\/Pv5YX+a1tjfYXWY0tXdy825qayhkKq9kqK1V2+O0tfm3+Lw5ujsbZGYiqS4navLf4id4OLn4+Pg5+rWmLbHqbC+\/f3yZZCp7+3TxMnHmJ6uuMvVvsTasMnWW26JXYGhUmiG29\/tvb+uzdrhgJuxUF98z9Tiy9biS1x63ufr8\/f34uTp9vX06+70sLGj2trB1ODl1tnqv8TOgoiN+fn4\/f39j5ep9vb1o7zMyM7j\/\/\/+6uzvkq\/C\/v7+qqqq7u7uVVVVd3d3zMzMu7u7\/\/\/\/mZmZZmZmERERMzMzREREiIiI3d3dIiIia5CGgImdk7DDSVZ5S1l8pL3LbpSdzdDYTVp39PLX8\/Py9fX1T2KA\/\/\/4ao6Co7zKR1Z7X3+pwcfaa3WNaYSdX3mVeYKJZ4uFb5Woao6GQU9xbI6e+vr5+\/v7a5CYaIuGZHCJhZa\/SVV3Tl19YX6PZouk6unmxcnT7Ozt7u7sS2B+\/Pz6nbfHX2uF6uroa5CM8vLw\/v784uLfYn6VZYycobrJtrmq6ens\/\/\/l6+jNWnGLscbT9vb2W3WRuc7ZlLDDYn6hfqK2bZOh6enxa4Sx\/P30Y4CrVWmK4+vubZWtY4OOY26K5OThcnuTrrTAm6K07\/Dz\/Pz78vP3pKq0pLzMc5mteYukxNPbk5qsbJGd+\/v8X4OXqsDPbJGSRVJ0UmOFdZOrrMPR9\/j5g6a7\/f3viqq+ao6SbXuR+Pj28PDudp60ZIKf2t3iVWF6WWaCfI+xmrXFaY2Ms7jEjJSm9Pb5qbTTyc3VnrjI5ubkjbkP+QplbmRzdHJlYW0KZW5kb2JqCjE3IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0Zvcm1UeXBlIDEKL0JCb3ggWzAuMDAgMC4wMCA2MTIuMDAgNzkyLjAwXQovUmVzb3VyY2VzIAo8PC9Qcm9jU2V0IFsvUERGIC9UZXh0IF0KL0NvbG9yU3BhY2UgPDwvQ3MxIDE4IDAgUgo+Pi9Gb250IDw8L1RjMiAxOSAwIFIKL1RjNCAyMCAwIFIKL1RjMyAyMSAwIFIKL1RjMSAyMiAwIFIKL1RUMyAyMyAwIFIKL1RUMSAyNCAwIFIKL1RUMiAyNSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNDU0ID4+CnN0cmVhbQp4nK1a3XbbNhK+x1PgUjrHyxAAf8DsRU\/WjU+zZ+OksXa7OW0vaAqy2KVIhaTs6oH2kfZ9dvBHUbZEQg7TU5MEwA+DwWDmm6G+4Z\/xN0wCj8RMX2gS45AzLwoDguPI3NQC\/4JL\/Oa6IThrsO8xnySRzw936NDWZIDpezTAvvxP3iTwN2R+jGMfJglinG3w3xY4DtUQc1ls8JtFRhDBixX+Fc9uPtzO8V98j+DZv+dYXd\/LK8WzL6oDbt7Zmyt7g+0NvI3029fmLQ\/6fseLv+P3C7XuYxmpn3gxI9GQjMjIiJWMszdv5njxxxk4Srw4DC9Aw+fBOv1FnHjMBQ309\/m5sj78y7R0WrOa+WoVbbSHZne2ZfFC1V2L3Y2P5mqfb3vv\/o7O6juKvTCIyNCacH9NqK8hBSNNjXOPE4ajGEw1igne4JDCbdJrKo6aCI9R0X8NGmDIGq8G1B5RL6JWxFBPri9G7fTlJsqX\/YT7AOjFlIQRj+CO0zgIiZRcnabru8M4dGLc3TXcJzzAT5jiRT0gYpB4gRURkPyERXiRYTi9crC5aGFZZyM3cle1IcjLQm47bNzbOQ7VWiI0+wWaIjz7CS5MW4EcKPvw7Efd+Elf3pu3dd\/NhzkOtDEweYKR7Hr\/RQ8xMKdQdJuZVWMsfup3fdVQZvg\/9eVLf+rP+sFOZsQyL9weLeQfeI66eUzXzacjzI9aFLtyPfQY7AftWJAxzRP7FMSwPTHhx\/s0sDunrf389lPwXsGQhQbGQm\/yMi2zPC1wVm22aZmLBmfrqmoEXldPuF2LPW7WKbj8fbWr8VbUTVXC6LxcVfUmbfOqxDdiKWpom6Nxj0XC3uk+Egz3BUOzIn3CD\/mjFKcqm90GJpbS4Dp\/WLe4rXCRb\/IWN9VG4Ptdi8uqxWlRKGHz8sHrpJJAadFUTuL5cLycxKvFt11eg3S7RgrTCpgaNKSU9iRA5qIQWWtUl5ZLvK2rVrYoNfa057nIFfIIvCM4r3HBPhcihc2rRboEfeWNVEyegUQgyGpXFHsp7q4E3TStlOtpnbZS4mXlnY84AUTDJOEHQdCYIG4BLIypDIdToYWxtHoHtAUYUrvfwvZVq9M23dtDqSW9j0uxFfAA3dISYUeXO+h32b+AOZp9VeNG1I9yx5Q5pY8CP+XtGuzMw1Lsg5DnNcIgwFGga3ZeB40MrriRSzbToaFlUu50fPCsr7+RJYMJ9zcmS0t4zordUrw9r\/kgimT0ZM4ioSELIz6XKyQ4JNTj0QDaAsgJkgv87wAaYV4c08gBjaJR6yc0cpQtCwzaXaUc\/p3IdnXe7nG529yLWu06aBYc6oBlEaBpJI7tbN93cju9BglsFx9AW1ha7KLXcbQT\/OysXkfRupW+y7JqV7b4Pi0gpmq339Zp2aSZMl0w5baq9+etlgUhZAmHOSey2oADlfSnstpxtEusdhSts9rrWiwh4BslKuVmuqnJKojEA8lXEno+hDA72UThRvoYNh1aSLzECe0dUI3VCdpWCrGUwV177mwHehowNRp6lFFu53UwNaBg\/2tOR0vJgHZ16bROBh7EaZ0QI\/Iai0dR75fpHkhek5eigZjw4VbF30boY3UviurpSsavAmxDk0TgQMAae2pyCNIBRE3ipIkeVYZopPWtpVVaP6+oqyPpXGSCMzxyPIxMQOT\/BL5ryHvTGcJfsWZ5AmauVYCVMmvyrPihJczn43sQEI+EPnOWxlg8Gl4bSwJ5fpzQxjXFIKVys2MXK2URuIzTKb5xcsy4zAtS\/OGUnYW0F2dkyh6wkZR99hWSiSGXHXhxAi8eQw8BDrlsCP2RH0WvEfRXPNsCq4D0GcSFDBmcNSTPcDpUWzFHur4Q41muag3lSqXVlR69gbQanvTgVvXoYYqVxvZV+xe9aHntX3TB+B91QaDSy9QL1D030ILswv5U3X1d6GXpofq1ddrr1kN\/6AZdItPY3+eaMnUfPb3R7V49gNtQT4VahV6L2Rb90M5RoGDOl1RDkoA5JtZ+hmoe4wTicGwCv+dFXonW0ZFp0CI6JVrCJ0SjLJgSLfYnRGP+lLvAgil3gcVT7kJATu4C+FIec\/+FM0XPnHTv38AcAfd8\/\/kcqhbs83F\/3a67402VYzIVWtY9rOfIuGVZ9Kz1wFK\/9dB3BDpsQgA8WQsNCfGoD6m6kXMgbXOIUge\/AEc6olOxcwZCDpaWTsk2xAfQKB+gcO6PTONMCR8dl\/ArXabWwUMXwMWjDjq6bW9DCfQs9eDUtsni971u2+lLo3pM8NJNorEhrsPZHr0j50G2rerjmFffDn55k2kVi4lVwGWsZdjWOn91jP1K6+j81QVoQyeWkfBSvK9DeS8DX89pkEy0WutPp0Gz\/nQStM6fToMWXmwlt5X7sX9Zqwy9hNDnJ37U4NGxwZ93JJyNZUYmYjW7bI1TlTtu6yqDZFt\/rugVsZqrATbAuZdwQuyME\/leGiWOFYOPaV628L+WOtXluN9mzW\/zK0i6m20lC3IDRRG5gIBEiZ1yomSShuF4YUElk9cj+Rz4G58HI4CoX0PBVS0\/9agiQCEeVDniUTRt\/pDq7Rxid5CgxyTqFjDVfgauVbhPNWzbtqrV9z5T7Lvf1SLdNf2PVeg5xY28mDFmJ3ItV4x83KA0ci5XjBc\/KHEru7kVP0gSj5crXnxG\/q5yBYEzzmm\/CuD0C4MT9ETmkcAu0nqOoO0\/olV9R5Tj4RzNwOdoBur\/bsGVilIKmWkch3ZxhjIPFikrXK1WosaDJ5dyCpyGPNfa9\/KOC9CceIc7nhvvmGa1lndMg2Z5xyRoHe+YBs3yDne0SXjHkbVPxzsgkPZ+2zLEO8yXYB2lzLdgxUIgjg\/8KoHKDDeJuZ1povhEQlX7nQoNgtDgTxymzxxhT3ux5dWZ4\/kUjRDfiwKQ6TATMuULnowHgT8q7fHzUl\/bo7meRXPCQkXFjhfllg2iF4IzYNgkCU+oiEcJ\/DsrfPc71E2qogpoiUOwUvfCVEBlC4Qt4qu4pasgOgABJ549mUwayX49eK1Gmf5KPfQ7hJ1pIFkGlxHSqFvQ95X4DxYk\/dpRcPfp+L6ucl047sr1si5knjJdLNIjTFdhKwhU9qthlb5ISpDo2P4CKVexXeg2U4rybLl96Ae98qcwnNu1mdg+TVnBFlWP9fZK19EVKSZBO5AFdzQ3suCM50gWJlltRxYmQevIwhRoB7IwCVp4sZVMQxb6x2c6spAkcnIQZ5wtuHzHGYFDFwZxHsgfkZ2GQ2ej+M\/4\/zgQtckKZW5kc3RyZWFtCmVuZG9iagoyNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9HMSAyNyAwIFIKL1RUMSAyNCAwIFIKL1RjNCAyMCAwIFIKL1RUMiAyNSAwIFIKL1RjMyAyMSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNTcxID4+CnN0cmVhbQp4nM1b247juBF911fUYzuY0YoUSUmLIINsI5OdYJPdwRgZBNk8qGW6raws9erSbud\/8kPJD6VIXXxpi6LGxiAYoNst0acuLNapKml+hY\/wKxDmksBvf9EoAB76ruCMQCC6D6WEz5DDN\/cVgaQCz6Xci0KP4aeAEi5C4XhuSAPGCVRJu+7+06V1MKz7dI+fo5DBDigsS9QDl+NK9U99iNS3fS+AgOB3ROAkW\/huife8yBewTAD1Uou7X8stfLNM0ApYruHvcPe+WMBbAnflAny4gwUIuOsuNQvn\/E681n+0P9MFcLjL9M\/2c1zrG7JaIH73Ffms\/5DlwsFbe\/3HqhUQ7\/t1\/4Dln+APS+3mU\/Oo77te6NHePNDmOco85k+b99CgLrTXL5daYHupasU6l8WGKEEE\/FSsSRia4Sz\/edmIYY9EFLgk7NG0ERf3yDkx4qcG94DB3VPRan5sxbfayScu1GJVfCFS6ZzrQhh3AybomS68\/Vb3q7WMdZal+boot3GdFjnED0VTw75oyiN7jQGMilwMXBr4LvG56BVxbFwMg8hjI19h+55QHidn2CYjj7Bfo0Wz0UxwhM+F+5s6UqN4PkNfs+hGxjJ6S9cF4Q3RGObeG6Jxby7aX4qjCDQEvYOB+Uqc4G5E6HkSmIx35zTex3NLSN3AfJ6dFrYu47yKE3WeK4jzFciXJ1mmMk9MYYYR5hLBo17Qdc4\/qC1C15+LNuV7M1MKzs+y8GWmdOyZ8tWdM6Z0ZjEljDOlcO4eToS2CB2\/tZc61MrIqz3Bdc6Yl33HXcuIy73jIuQywcEMgnPGrSCYrCLfH+ROninHnkMORHmCfRKhzihR2sXqgRyds+3xQpdzKqwNO2yPM2UYJcT1BQo3GHaWMY5ZfzxBBLgZLDTiOjNIt6dwezQw0244F3CCdoOOdm9i7kC7N0ELZttqRbs3QRto1xrtmHbHafUWyh0SGUWS9gJiAXdfylVa74qy3qS5rCoAcyBSj6iUIAYZt2JSgrzsfVUm5RGSt\/d\/x6TtpQ6yvbTFP9TqFvkXqZY448tbvj0oNdJdXciBnsu47\/eesWoVJsIlDGdDWqTVeQpapFV7QLu0ehtz+7R6G7Rgtq02afU2aH1atUezSqs3Ue6QMELfjW6HJqKjatOE9mEN+3FATMIuC2g4A7BoIC4lxJDLHSRNVRdbWb6BnYQkzuFBPqY5VJu4TPPHtm46HqL4HqzifQXrstjajI24qtFHyOhEL+eu3kjErqXSpJJ5DUhKFeRFnSbShc8bmSt1tO55AVmRP8oSlH6nNhR5neaNtFKOeYp2bHQrtEvka4fEFaxklZTpg1zhjVOlvy928lkpphRX3lXaYftqpRwVRwRlUq7BVrjGbngPdbqVgLpm6TatTTQeuB4zirCvOyjxZoIpF3YB5ppqcoZ4XJwCO1cfPGwhIo3m3OAYsyiwPHUfG1npscU7Ay7hWAexcAbsX1MDIRHMCaGaU9rjpQY01SSJgM1AM8QgCXQM+jPQTI4LvbloeGqKPMOyVx2e086aXJpWUWyqfT+cI2K327nrNH+RZewmxfZC+36J9MOAzAksYwnB56IV5ZCj2rTy04\/wXfEClHM\/OohyBjcpt9BIeUWoqQxstQ2Bf7iSHV3hqj7HK4dv6StOBhtYj7vlcN6QhIlV3\/8Js+2fkU2KN3D\/e4iY51FTsvHCdqZ0IuDqZMNE2BHMTZINZzesZ5gfWdYzv1ma6g+sBL0wmgGHNP++PRRv4EOeuPDz3X+6C\/\/9eQFP8X6r2P+pLBJsSVUVUsnyGfkUkFnj1TbN06qW2LnCw96GSBnlU7Oijkjvy6KqyiJeVUrDOE\/SODN2wxjgoQhNEs6obymTTV5kxWMqqzfwww\/3gJUExFmGRcRDjYbWdSa1+aXMMHpXve2VO24pxz6GRVE0w1KrAEGmnDhrQBzbcPMxG0zUWs6sFn\/06dxBJJ7l04luFHjTI93Pm7Y77xvsSKtEKObzhdOOeMVwaaXXFvZtNuFYf5CQnGl37Wn2FdXTrzpBwcLCFfR4goLJfnKC8n2hZ+O7YWQRaSdS7cTWu74eoLP+7vv+kX3oqMcEuOZF321Xlu2kpZ+64PonvabsZzNUb6Lo1yf6Z71wRL9ezVeonpuwU4hjAa1CLVyrRCsy02q131Iq9nfXCwj69eUwxhm+1mrUfuEY9J1+1QD6oLMNKj8grlBvWpzsydX0pXg7YreiL5+GLmc2IbosVPavZdIN7p9kWRU55uLjxkt3oE0eN\/WmKNN\/YaqME0UY+rFgU0ndDeJvG4rw1ZsxzCZxVjJpyrTew1bGVVPKChs+rJKwunvK9rBLa6xj5AqpLIMs3rmw3EhUYVic5knWrKx0olGEvYCNTkp4g4wIVbyWj01crpBbtKLolHWaydYnD02arZBO8SaqUpdpUity7byGXePZqxHjmoVYCVtpNmycko+CigaZbdhEA7PyyCVRMIiyKVxzZQLGArpb4mYUe4l27zYF5BLdgPd+yYtdu1s2NgaeCn2bucVxUA7hoQw22IdEHQpKz8QYD+xTmT7HiWEURIXAIOZsAL2OWigyylw4XbOtVKQbam3fx24giIIv1PM60qI8ODpVlk9bx9FUGyMmKNA5LzC+nAKdgV\/MFJj0jwVoy1D9zwMFOh0F3YQClVo3okAHKbCzw5r81LzXC9jZblz7GI36xOWXX0r5EjQy+sraGdpnNcPMMiP5vdFtg3yJMdEpoutmo9+OJzZG0RohTHq8OnKjYMTrHiao54HGFmFJutP0b0MLSXzMB1RYoNHphoNQYanb0HD8+ITui\/OBoNC1j+mzKh7aHegHIhffkXj9aASTms95L\/\/KuVbvaYJE6Jnq+87TYOXpaTRqoVvv6Um0wdJPGwOcjx2MmIOGdI5blK6wXU7XadKdjKd4327bQ5plldpMZKVnXKUHWuc1CG6loa\/2XCbIoNJ1ffVhK0XYVdWGrXSst3ISjb7uq8e3cgptODRLmWXKo6rCSnX5WMpEqmOzLXK5N83aotANIz\/ohd3qhHB69BL51SdkEm3WCZlCO87+cVYV0xTQ9j9FvcF7WO03yUY9ikr0Cx2m1D2o5IcY3DYx\/YD1XNygkHiNzUQa12p0hcdKy9adT5ynExUfcxnBcrcTeuWODyZQpoa2X7N8JF7kipOCb2SkdDr06EZKe10RdZOjpK\/ahK58DG8KqpekOR2Ej77v+McuwH\/r+cz\/3bj\/sEwS6n+DnMApW7xwejqmnpVgffahf2elnYHo\/6eghmOqxAt1WUeHtWjj22FZ+xP6ElfVg+ict2xYVqa6DMzbi4\/txXftrxlVIeVE\/c8WdmbmtUOMCGvNMPC4Bdz7bg5gojwM4DD056Bm8U5XJ7o2AfXMvEwfN\/Xw1Fc91NobCkGfBq7nhXyQOY\/VPsL\/AIqxj\/sKZW5kc3RyZWFtCmVuZG9iagoyOCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCi9UVDIgMjUgMCBSCi9UVDEgMjQgMCBSCi9UYzMgMjEgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggMjgyOCA+PgpzdHJlYW0KeJy1W92O27gVvtdT8HIGSLTin0TlptimXWD3YtNFpgiKohcambaVyJJDyfF636cv1KLv00NSv54xRe3MIsBIlsTvHB6efzJf0S\/oK8IsxAm1F5ImiAsaxpxhlMTdjZLoE6rQd+8bjPIGReZfk8PYKCTM\/tY3OBIh4RRGRkmYiiTID+jPD4jbAd3l4YC+e3jACKOHLbr79z16+Iz++mA4uULDNEwSEnugkQ4NOdBI7Mlbzjq0j\/tMFdUObWuFsu22KIuslc3\/kPwm1WWTXdDjqSkq2TToeFLHupHNfXCLPE1pyOkwF7RM\/a0LDOYCV38w5AJLV4IVFUjkkLVFXaHssT61DvRB7LEWgAd8cHepTwrlSm6K9lyrdm9EfHthCWOhIIS4KATX0ritJr0Kx0kS8siBtkqFl9HWqPAi2jDT7we1RVtVH5BW2B0yEp6uYlujQ6a+yFbfwVvNQ\/AsD4xEIaNCuHjw171R2jEOGXGgddIO\/KS9iAbSDrylvYSWs+Cpw6jqavQZzwr4hjmyJIziiPVkPfyUYxJppOcAyxRrWC+0jy1wjMrs3ADLF7QrvknNMco2DhukIqQpXkEFjBsULyuRKnb71gioLA5FixorwxB9lBI9yrI+G3EeaghCtxVpnCclYexerE6RQO2NHXQMnKqNVKjpJx86hEo4zFbggdhrLREGYyAJXgenR0epAIWJwoRgHosY7gRJGMcBxGgTtN9\/dH6HPr6H+1QwdEYEPSgHjxGfLHAURmmaAHM5gixBf91dLLfUcvtPdPdpf484usvuUYzu2nuUmilggu7298Hw4mg+sn+leVKZe3D+yTDgfI\/MsOuPzOvg7ke4RMPHJVwwBCx7OcBl+DHjwlKYMqnug3T41lLYmRfdiK2lU5s3aoqVXTOlHwXwKDcv7F877mT+2k9n\/MxnYfmyQ8r7QHO0mcJ\/tlzaD2YsW9BOCpdrMQZzWeynmFYiFtLKTU4YrybihwH\/Ch5+WlBunpKQswSjUXMgG3pGcYKZ4siy1wDNwZ80LdTTsoYBKh49p7IYAlWKCR0ov5KV8kSEIn4tm+cxC5kX2j9MVrSvi9wRssD9phiLFbAQm85FWaLseCwv2gub5LauJOr9Y5bn9alqQ0cGmXCgRnlP1sP5esmGg5YsoS1F8RGN8jCOBwV0hXFP76pVz+0tOSGTZdA6D9NZdJZ\/AbuixsMkxpyFsTei7wNhjDXun9fmuX0LNsKsNfpaCAfuCE+v2HyluPOsZIacikPilwy5upHMTcEEvWC+35qpb3sBJMa1Jf19ZsTQ9q5pEMm7QSTBokiSNMSCiCv+PJXlCZoga9Hy+nDMqgKsUskSUpENerwgeHgAa6zPlVTNvjgiyIfyumpVXYboYS\/hi6wa+Qhu6iNLGSQufjm7RQscebE\/2qNE26LKqryAhC+rNjo5Hh8Mcw5dVSo4A54k\/lSdPgZDzWjnAN6cuqoYXXcES1UeS23dsYxGPLQmJp68DVrz4TRtUEBll5enjXRlsFC80SjmExrBwhqOmnku2j1q9xL9oMPDh+xLg6rsIN+g5pTvUda46r1hbjENU4\/qMbgbifwA86rV8Q36scpDx9xEAm6NcBeNFf2AQdthkf1q7peGj5EkhCwczcJH7JFs\/zyNClkfS4zjDIbIUZq\/9t5+Y+OKjT3XjvNpLAmueE7TkBLGep5f5mJIRNaijepZ1e2y87ytogxCgOAs9aYd3HWe2CMJ0d2T5CZmsFYlb6NdqeQQJPw98c1owiIKVCO6MBnfaDJ44oi5C\/d5v+357tToiRfRxn6bh7daQhtU4edZ1+fs9MGchnGUONGvllH3RqT1v7OI\/zRa0jjkgk\/lsOTfu6DhwEzikCWQzXSYL6uAKJjZSrRDrdpdtpPIUQExhuGS8BWwvc6\/8YnJVJuyF2xRNScFdiVHq3JRIIJCsROLFRQ2hZJ52\/UVddtxQqgz7aOqt4WzPT9MDGo44dc3Uzsg8ptpHDeuOEyTUKQpdUH\/jjhMb3dj\/6g4TGddTR2HSbochn+CMPzW9puYicZvbaeFGJ9j2ypvYxN99Rtl3nyxP+T06xnAzl5W1DQE6zSIsX4aL6tpCI7XomXIbDRAvNkpKQ+yaiEMtWcpq1mT3NFeZnqLB3NxtRK\/0\/UwAFmJNoZIjyBPX6MrPCqfN9qYArX7TG807CRk6arfeBjnAF5hc8rbRqdCjVTfitzuUFzqk6sE4zrwk3Rg6ZVKMAoaxdlrlWDLaGtKsEW0WQn2uS6qiTs+ZqrVSedQj9k9TQjdamMc9FHJY1Zs7ANHUjNwo9Nir4Lbq6QmoGKCp8Ib172evcLq+mtxH\/m6bfeyPht8pvsrEwft0Wb7YAuevSl4bNmj+oZ2ajYSEuujidmToKbbNnxkB9vKqZrUT8i00oeunam9gmQ+tgOdll1DO8\/C+ZZdhEHWkES8l8DLcvFRnnGke9weaH9vJKq3phswKpr+DD97PgQcbiyYD35nVufzOQTH9atUWQhKPVGYXi5PjwPwkOBkSmQp9XWFOyZmaB5u+Cwfm6J1JNLgQiHVE3wF5juEPu2lacijE4jcyBs9lfeVeuijHVor\/NfzWt7BorxZmkCtHq1Z1OdYN6qBKVRFqUnvDmYhIz4+KWdPMJh7ORsFT+CbPdqaaQs+xdJMknSKNX1isaajRqyb8x6NhcW3Nj2CZzXjjd1XKesdRIbZMYyigRy+LCGrlzZCNG2tbGL0fGigApwuZtzFxIpjRUJAbkf80ZwBgYKa+6MFYw06nFD58W8+6RaBbOTGNtGV\/LPNRskGqqNHVZ8h8UHt5QirsakPGSyE7mHqyinP9YmutoBfZg1gnebL5IqpI1c40dtNPg1Oa27arnXmVjQ9LYcHgVgbp1E8pxK4lt3o19bVjWAhpYnoIX0KZ2X80KGuClBTWLU3qD7CTExhCIK8HWgYodr4Ym8pmaB480gSjTTrfAXaxtH\/g7KVGY\/vvYLOWiNagWaM4OspK4v24qX6kJETP9Vv+m5EF62HvL\/ebiX4GL3dO48qT+w5ghkQyMs6qh4a4o6DFLQ4YWwFnqvHqosShiGb9Yd70HIAFs05p6xsautv0X\/yuv4CyfN\/fXIlLIRnbO031HVyfmrB\/ex13r9R+oAVVF97WR5NgAcbavTRqOI3aQfUVVlUEslf4U0hYRG9PBBonacTf2+nq3uKunn+eNG+aKN5UqdKV4s7lR1MtbiRJXCrHKsAtYqg6UD9hU3CmK9F+1Yo60jrubC92vM4NicOPMj0ItP92FNVfD3JElSoaYpdZSUHxG0XTjdqYQEvuvWuZGb2JDIEqYAxQanPYXqtJuOe3khbcRfSTB+gANPXPO11J1Jz3Zf6DrljrPP0georHXbBFHtaphca1OZ+2fMHaz8fZX5S4Fnf6T3zZ3LQJzsdehuKUyZ6Un9I\/kwjrXOC+BBZ7lzQiK5F67JSm38U1ebUtOriiGhEVy8Ezyk4c4+3LjQaJjyaoi1Va00LZtV3TK6qCLNi+v8yYG7Ozh6sePHwBLL66ROb509Hrcn8ceR7bsYRBVNI5TBJ2Qq0KleXoz23LfN9VesMVe826QpRyVwW3+xuQNWcDvpMq6xggXWU2WQtxA7dqmq0LYBX8PA8EN\/AJ0KBt+x6Oo\/WnI7HWrUNwkQ4Gkb6PzFQTpwEAm9NgtAfplALrIF7LFokB2lCJSCPsjL1R5cNgU0ovY336NBgysIoZfFA12MBXQZBISkSZBVcV844HDoTLMQRlLsrUCf29Qv6P\/gi4N0KZW5kc3RyZWFtCmVuZG9iagoyOSAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggNTQ3ID4+CnN0cmVhbQp4nJVUTW+cMBS88yvecXNxbGxjyLGrHnprKtSqRwdM1ynYG9sk2r\/ZKv+nZr+kVcquERIYJGbee\/NmXuARXoAwRAQ9PPJKAC8pKjgjIIrjwSn4AQbu155A4wHvL9\/EfzHK2eF9OlTxzikWIHCFikKQrBngUw388MfxUQ9wXzcMCNQdrOAO6mf4XO9LmYErKo7yQiSgrWWvO+uMlldwCeOIlWIJrlNet8oEfwU1gmFW8AWoD\/DTjjDIHci+t29gRwd+I502v8B2oE1sZZBBWwNvOmzgLrs9qhKjshBwizxbGWtk1+ley6BaCBvtWthKF7TyIE0LvR50iCXNd5xXDFFc8hNpyhzn+osneLbahL1u2Y0miwKxhCZhNUj3W4WJbz9AGzbKQaeNNI2WPTR22Epz6niqYZLgPBb\/DupVuV0bFUqZPc8RTpr90+i1Ud7DdnRb6yP\/0y7ST0sw1RqrjMPxwY3NNBwfX\/bf5qWg0bMVE+caEqRQpukjdQt\/vgxb64I0YR6fVRQJSukC\/CRjU5GaE1+dfpXN7or\/KEacxMMC0GshQeliuPXG6iaKOS3SOuo2Dsr5v2BsmD6jM1n2QT4sEME4P5MlrHaSUXI6RVEC2nflBhvd9+0UdA+wu8im+f3PS4Lyskpny1a3gu4ym1IWCZeJCXQZdEm2+49T4LiOKbHAY0ympFV2sT8fBHk\/7hG6FgM4urMqyIlzmQUe4R+blwYzCmVuZHN0cmVhbQplbmRvYmoKMTggMCBvYmoKWy9JQ0NCYXNlZCAzMCAwIFIKXQoKZW5kb2JqCjE5IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUxIC9CYXNlRm9udCAvTExWQ1lEK0FkZWxsZVNhbnMtUmVndWxhciAvRm9udERlc2NyaXB0b3IgMzEgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyMTQgXQo+PgplbmRvYmoKMjAgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHlwZTEgL0Jhc2VGb250IC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZvbnREZXNjcmlwdG9yIDMyIDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMjEzIC9XaWR0aHMgWzI1MCAwIDAgMCAwIDAgMCAwIDI4NyAyODcgNTMzIDAgMjIzIDIyNCAyMjMgMCA1MzMgNTMzIDUzMyA1MzMgNTMzIDUzMyAwIDAgNTMzIDUzMyAyMjMgMjIzIDAgMCAwIDQ3MSAwIDczMSA2MjkgNjcwIDAgMCA1ODYgMCA3NjIgMzI0IDAgMCA1ODMgOTE5IDc2MCA3MzAgNTg3IDcyMCA2NTUgNTUzIDYzMCA3MjcgNzAxIDk1MSAwIDYzOSAwIDAgMCAwIDAgMCAwIDU0MSA1OTMgNTE4IDU5MCA1MzAgMzIxIDU4OSA1ODEgMjYxIDI0OCA1NDAgMjU4IDg3OCA1ODcgNTQ1IDU4OSA1ODkgMzY4IDQ2MiAzNDAgNTgwIDU0MCA4NTUgNTY4IDU0MCA0NTQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMzY3IDM2NyAwIDIzMyBdCj4+CmVuZG9iagoyMSAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0FHS1hKRStBZGVsbGVTYW5zLVNlbWlCb2xkIC9Gb250RGVzY3JpcHRvciAzMyAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMzIgL0xhc3RDaGFyIDEyMSAvV2lkdGhzIFsxOTggMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyNDQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDI0NCAwIDAgMCAwIDUyNCAwIDY5NiAwIDY5MyA3MjYgNTc4IDU1MCAwIDczMCAyOTEgNTExIDAgNTU4IDkwNCA3NDUgNzYwIDYxOCAwIDYzOSA1OTkgNTcxIDcxMSAwIDkxOSA2MzUgNTgyIDAgMCAwIDAgMCAwIDAgNTUwIDU4NiA1NDEgNTgzIDU0NyAzNDIgNTU1IDU4MyAyNTcgMjU1IDU0NCAyNTcgODYxIDU4MyA1ODIgNTg1IDAgMzc2IDQ5MyAzOTIgNTgwIDUxNyA3ODEgNTA4IDUwMiBdCj4+CmVuZG9iagoyMiAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0lQRUpKRytBZGVsbGVTYW5zLVRoaW4gL0ZvbnREZXNjcmlwdG9yIDM0IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgODkgL1dpZHRocyBbMjQyIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyMDAgMCAyMDkgMzM0IDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCA2MzcgMCA3MTYgMCA1NzAgNTQzIDAgMCAyNzIgMCAwIDAgODg1IDc0NSAwIDYxMiAwIDYzNyA1NzggNTMyIDAgNjE0IDAgNjA3IDUzOCBdCj4+CmVuZG9iagoyMyAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UcnVlVHlwZSAvQmFzZUZvbnQgL1FRVEFRQStUaW1lcy1Sb21hbiAvRm9udERlc2NyaXB0b3IgMzUgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyNTAgXQo+PgplbmRvYmoKMjQgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHJ1ZVR5cGUgL0Jhc2VGb250IC9TUUtVRVQrU3ltYm9sIC9Gb250RGVzY3JpcHRvciAzNiAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMTY1IC9MYXN0Q2hhciAxNjUgL1dpZHRocyBbNDYwIF0KPj4KZW5kb2JqCjI1IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1RydWVUeXBlIC9CYXNlRm9udCAvSkZSWFFEK0FyaWFsTVQgL0ZvbnREZXNjcmlwdG9yIDM3IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMzIgL1dpZHRocyBbMjc4IF0KPj4KZW5kb2JqCjI3IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUwIC9FbmNvZGluZyAvSWRlbnRpdHktSCAvRGVzY2VuZGFudEZvbnRzIFszOCAwIFIKXQovQmFzZUZvbnQgL0pPVk9WVStNUy1NaW5jaG8gL1RvVW5pY29kZSAzOSAwIFIKPj4KZW5kb2JqCjMwIDAgb2JqCjw8L0xlbmd0aCA0MCAwIFIKL04gMyAvQWx0ZXJuYXRlIC9EZXZpY2VSR0IgL0ZpbHRlciAvRmxhdGVEZWNvZGUgPj5zdHJlYW0KeAGdlndUU9kWh8+9N73QEiIgJfQaegkg0jtIFQRRiUmAUAKGhCZ2RAVGFBEpVmRUwAFHhyJjRRQLg4Ji1wnyEFDGwVFEReXdjGsJ7601896a\/cdZ39nnt9fZZ+9917oAUPyCBMJ0WAGANKFYFO7rwVwSE8vE9wIYEAEOWAHA4WZmBEf4RALU\/L09mZmoSMaz9u4ugGS72yy\/UCZz1v9\/kSI3QyQGAApF1TY8fiYX5QKUU7PFGTL\/BMr0lSkyhjEyFqEJoqwi48SvbPan5iu7yZiXJuShGlnOGbw0noy7UN6aJeGjjAShXJgl4GejfAdlvVRJmgDl9yjT0\/icTAAwFJlfzOcmoWyJMkUUGe6J8gIACJTEObxyDov5OWieAHimZ+SKBIlJYqYR15hp5ejIZvrxs1P5YjErlMNN4Yh4TM\/0tAyOMBeAr2+WRQElWW2ZaJHtrRzt7VnW5mj5v9nfHn5T\/T3IevtV8Sbsz55BjJ5Z32zsrC+9FgD2JFqbHbO+lVUAtG0GQOXhrE\/vIADyBQC03pzzHoZsXpLE4gwnC4vs7GxzAZ9rLivoN\/ufgm\/Kv4Y595nL7vtWO6YXP4EjSRUzZUXlpqemS0TMzAwOl89k\/fcQ\/+PAOWnNycMsnJ\/AF\/GF6FVR6JQJhIlou4U8gViQLmQKhH\/V4X8YNicHGX6daxRodV8AfYU5ULhJB8hvPQBDIwMkbj96An3rWxAxCsi+vGitka9zjzJ6\/uf6Hwtcim7hTEEiU+b2DI9kciWiLBmj34RswQISkAd0oAo0gS4wAixgDRyAM3AD3iAAhIBIEAOWAy5IAmlABLJBPtgACkEx2AF2g2pwANSBetAEToI2cAZcBFfADXALDIBHQAqGwUswAd6BaQiC8BAVokGqkBakD5lC1hAbWgh5Q0FQOBQDxUOJkBCSQPnQJqgYKoOqoUNQPfQjdBq6CF2D+qAH0CA0Bv0BfYQRmALTYQ3YALaA2bA7HAhHwsvgRHgVnAcXwNvhSrgWPg63whfhG\/AALIVfwpMIQMgIA9FGWAgb8URCkFgkAREha5EipAKpRZqQDqQbuY1IkXHkAwaHoWGYGBbGGeOHWYzhYlZh1mJKMNWYY5hWTBfmNmYQM4H5gqVi1bGmWCesP3YJNhGbjS3EVmCPYFuwl7ED2GHsOxwOx8AZ4hxwfrgYXDJuNa4Etw\/XjLuA68MN4SbxeLwq3hTvgg\/Bc\/BifCG+Cn8cfx7fjx\/GvyeQCVoEa4IPIZYgJGwkVBAaCOcI\/YQRwjRRgahPdCKGEHnEXGIpsY7YQbxJHCZOkxRJhiQXUiQpmbSBVElqIl0mPSa9IZPJOmRHchhZQF5PriSfIF8lD5I\/UJQoJhRPShxFQtlOOUq5QHlAeUOlUg2obtRYqpi6nVpPvUR9Sn0vR5Mzl\/OX48mtk6uRa5Xrl3slT5TXl3eXXy6fJ18hf0r+pvy4AlHBQMFTgaOwVqFG4bTCPYVJRZqilWKIYppiiWKD4jXFUSW8koGStxJPqUDpsNIlpSEaQtOledK4tE20Otpl2jAdRzek+9OT6cX0H+i99AllJWVb5SjlHOUa5bPKUgbCMGD4M1IZpYyTjLuMj\/M05rnP48\/bNq9pXv+8KZX5Km4qfJUilWaVAZWPqkxVb9UU1Z2qbapP1DBqJmphatlq+9Uuq43Pp893ns+dXzT\/5PyH6rC6iXq4+mr1w+o96pMamhq+GhkaVRqXNMY1GZpumsma5ZrnNMe0aFoLtQRa5VrntV4wlZnuzFRmJbOLOaGtru2nLdE+pN2rPa1jqLNYZ6NOs84TXZIuWzdBt1y3U3dCT0svWC9fr1HvoT5Rn62fpL9Hv1t\/ysDQINpgi0GbwaihiqG\/YZ5ho+FjI6qRq9Eqo1qjO8Y4Y7ZxivE+41smsImdSZJJjclNU9jU3lRgus+0zwxr5mgmNKs1u8eisNxZWaxG1qA5wzzIfKN5m\/krCz2LWIudFt0WXyztLFMt6ywfWSlZBVhttOqw+sPaxJprXWN9x4Zq42Ozzqbd5rWtqS3fdr\/tfTuaXbDdFrtOu8\/2DvYi+yb7MQc9h3iHvQ732HR2KLuEfdUR6+jhuM7xjOMHJ3snsdNJp9+dWc4pzg3OowsMF\/AX1C0YctFx4bgccpEuZC6MX3hwodRV25XjWuv6zE3Xjed2xG3E3dg92f24+ysPSw+RR4vHlKeT5xrPC16Il69XkVevt5L3Yu9q76c+Oj6JPo0+E752vqt9L\/hh\/QL9dvrd89fw5\/rX+08EOASsCegKpARGBFYHPgsyCRIFdQTDwQHBu4IfL9JfJFzUFgJC\/EN2hTwJNQxdFfpzGC4sNKwm7Hm4VXh+eHcELWJFREPEu0iPyNLIR4uNFksWd0bJR8VF1UdNRXtFl0VLl1gsWbPkRoxajCCmPRYfGxV7JHZyqffS3UuH4+ziCuPuLjNclrPs2nK15anLz66QX8FZcSoeGx8d3xD\/iRPCqeVMrvRfuXflBNeTu4f7kufGK+eN8V34ZfyRBJeEsoTRRJfEXYljSa5JFUnjAk9BteB1sl\/ygeSplJCUoykzqdGpzWmEtPi000IlYYqwK10zPSe9L8M0ozBDuspp1e5VE6JA0ZFMKHNZZruYjv5M9UiMJJslg1kLs2qy3mdHZZ\/KUcwR5vTkmuRuyx3J88n7fjVmNXd1Z752\/ob8wTXuaw6thdauXNu5Tnddwbrh9b7rj20gbUjZ8MtGy41lG99uit7UUaBRsL5gaLPv5sZCuUJR4b0tzlsObMVsFWzt3WazrWrblyJe0fViy+KK4k8l3JLr31l9V\/ndzPaE7b2l9qX7d+B2CHfc3em681iZYlle2dCu4F2t5czyovK3u1fsvlZhW3FgD2mPZI+0MqiyvUqvakfVp+qk6oEaj5rmvep7t+2d2sfb17\/fbX\/TAY0DxQc+HhQcvH\/I91BrrUFtxWHc4azDz+ui6rq\/Z39ff0TtSPGRz0eFR6XHwo911TvU1zeoN5Q2wo2SxrHjccdv\/eD1Q3sTq+lQM6O5+AQ4ITnx4sf4H++eDDzZeYp9qukn\/Z\/2ttBailqh1tzWibakNml7THvf6YDTnR3OHS0\/m\/989Iz2mZqzymdLz5HOFZybOZ93fvJCxoXxi4kXhzpXdD66tOTSna6wrt7LgZevXvG5cqnbvfv8VZerZ645XTt9nX297Yb9jdYeu56WX+x+aem172296XCz\/ZbjrY6+BX3n+l37L972un3ljv+dGwOLBvruLr57\/17cPel93v3RB6kPXj\/Mejj9aP1j7OOiJwpPKp6qP6391fjXZqm99Oyg12DPs4hnj4a4Qy\/\/lfmvT8MFz6nPK0a0RupHrUfPjPmM3Xqx9MXwy4yX0+OFvyn+tveV0auffnf7vWdiycTwa9HrmT9K3qi+OfrW9m3nZOjk03dp76anit6rvj\/2gf2h+2P0x5Hp7E\/4T5WfjT93fAn88ngmbWbm3\/eE8\/sKZW5kc3RyZWFtCmVuZG9iagozMSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0xMVkNZRCtBZGVsbGVTYW5zLVJlZ3VsYXIgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE4MiAtMzIzIDExOTggMTA5OCBdCi9JdGFsaWNBbmdsZSAwIC9Bc2NlbnQgODgwIC9EZXNjZW50IC0zNzAgL0NhcEhlaWdodCA3MzcgL1N0ZW1WIDk0IC9YSGVpZ2h0IDUyNiAvU3RlbUggNzYgL0F2Z1dpZHRoIDU3MCAvTWF4V2lkdGggMTM4MCAvRm9udEZpbGUzIDQxIDAgUgo+PgplbmRvYmoKMzIgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE3NCAtMzA4IDEwMzUgOTQ3IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA2NjggL0Rlc2NlbnQgLTMzMiAvQ2FwSGVpZ2h0IDY3NyAvU3RlbVYgNTYgL0xlYWRpbmcgMjAwIC9YSGVpZ2h0IDQ3OSAvU3RlbUggNDMgL0F2Z1dpZHRoIDUwMCAvTWF4V2lkdGggMTIwOSAvRm9udEZpbGUzIDQyIDAgUgo+PgplbmRvYmoKMzMgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9BR0tYSkUrQWRlbGxlU2Fucy1TZW1pQm9sZCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTg2IC0zMjMgMTIyNyAxMTEzIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgMTE1IC9YSGVpZ2h0IDUyOSAvU3RlbUggMTAyIC9BdmdXaWR0aCA1NzAgL01heFdpZHRoIDE0MTMgL0ZvbnRGaWxlMyA0MyAwIFIKPj4KZW5kb2JqCjM0IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvSVBFSkpHK0FkZWxsZVNhbnMtVGhpbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTc1IC0zMjIgMTE0NyAxMDk0IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgNDkgL1hIZWlnaHQgNTIwIC9TdGVtSCA0NCAvQXZnV2lkdGggNTcwIC9NYXhXaWR0aCAxMzIyIC9Gb250RmlsZTMgNDQgMCBSCj4+CmVuZG9iagozNSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL1FRVEFRQStUaW1lcy1Sb21hbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMjAzIC00MjggMTcwMCAxMjcyIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA3NTAgL0Rlc2NlbnQgLTI1MCAvQ2FwSGVpZ2h0IDY3NiAvU3RlbVYgMTAyIC9YSGVpZ2h0IDQ2MSAvU3RlbUggNDQgL01heFdpZHRoIDE3MjEgL0ZvbnRGaWxlMiA0NSAwIFIKPj4KZW5kb2JqCjM2IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvU1FLVUVUK1N5bWJvbCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTY3IC0yOTkgMTA5NCA4MjcgXQovSXRhbGljQW5nbGUgMCAvQXNjZW50IDcwMSAvRGVzY2VudCAtMjk5IC9DYXBIZWlnaHQgNjIzIC9TdGVtViAxMDMgL1hIZWlnaHQgNDY3IC9TdGVtSCAzOCAvQXZnV2lkdGggNTcyIC9NYXhXaWR0aCAxMDQyIC9Gb250RmlsZTIgNDYgMCBSCj4+CmVuZG9iagozNyAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0pGUlhRRCtBcmlhbE1UIC9GbGFncyAzMiAvR</mes:base64EncodedContent><mes:contentType>contentType</mes:contentType><mes:documentName>names</mes:documentName>
        </mes:CreateEnrollmentDocumentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6fc9718f-f69d-46f7-9a41-dffda9a7c22f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="9c7d00ba-2f31-4166-b13a-3d560078b5a2" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="8e097316-b0d3-41e1-af4b-18225c6792c4" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:commandStatus[1]/text()")
def documentId = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:documentId[1]/text()" )

assert commandStatus.getData() == '1'
assert documentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateEnrollmentDocumentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="00ff3c0b-594e-43b2-87eb-3c460f25a35f" name="CaptureDraft_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureDraft</con:operation><con:request name="CaptureDraft_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="7891d1d9-c5e5-4bd1-ad2d-b1157d94a5e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CaptureDraftRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:recurringType>MONTHLY</mes:recurringType>
                <mes:recurringStartDate>
                    <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
                </mes:recurringStartDate>
                <mes:recurringAmount1>10</mes:recurringAmount1>
                <mes:recurringDay1>10</mes:recurringDay1>
                <mes:recurringAmount2>12</mes:recurringAmount2>
                <mes:recurringDay2>10</mes:recurringDay2>
                <mes:lumpSumOnly>false</mes:lumpSumOnly>
            </mes:CaptureDraftRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2dbf5baf-25d6-4d0e-8c11-e30c4e4feda7" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="f2e5c6f8-d1f1-4c53-bb17-fcc353a37301" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="42f13961-d007-47da-80f9-9fcc62c0334c" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureDraftResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureDraftRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CaptureEnrollmentAddress_TPB" id="defd72f1-634f-4ee8-8fbe-11d88b69f906"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureEnrollmentAddress</con:operation><con:request name="CaptureEnrollmentAddress_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="8109068b-3704-44fa-9500-8b98977bdb7f" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <CaptureEnrollmentAddressRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</clientId>
            <subscriberId>${#Project#subscriberId}</subscriberId>
            <address1>Finxera Headquarters</address1>
            <address2>1900 South Norfolk Street</address2>
            <city>San Mateo</city>
            <state>CA</state>
            <zip>94403</zip>
        </CaptureEnrollmentAddressRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="69ff674e-66f1-4a51-a492-4f025474ffa1"/><con:assertion type="Simple Contains" id="2bba8473-788a-4449-88ff-35b863cc3afa" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="848fe002-b6b3-4635-9a13-dd18d2625901" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureEnrollmentAddressResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureEnrollmentAddressRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="AdminUpdateActivateEnrollment_TPB" id="f78aa721-332e-42be-9781-c166ed5efc93"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>AdminUpdateActivateEnrollment</con:operation><con:request name="AdminUpdateActivateEnrollment_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="9d950928-5c62-4063-883f-23631a056978" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <AdminUpdateActivateEnrollmentRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <enrollmentId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:enrollmentId[1]}</enrollmentId>
            <actionType>ACTIVATE</actionType>
        </AdminUpdateActivateEnrollmentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e8b2f94d-8e2b-4058-b7bc-8534d58f1dde"/><con:assertion type="Simple Contains" id="5e0bb77c-e4b1-40d2-b982-891114e6df45" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c0ebd301-0760-4f5b-ac30-d2b01dccc36b" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:commandStatus[1]/text()");

def enrollmentId = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:enrollmentId[1]/text()");

def cipStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:cipStatuses[1]/text()");

def ofacStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:ofacStatuses[1]/text()");

def spaStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:spaStatuses[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentId != null
assert cipStatuses.getData() == 'IGNORED'
assert ofacStatuses.getData() == 'IGNORED'
assert spaStatuses.getData() == 'PENDING'
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateActivateEnrollmentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="5091e58c-97b4-46df-822d-8dd9eae5a3ce" name="GetClient_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClient</con:operation><con:request name="GetClient_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="97f62804-71d1-4e83-828f-866e9e5cbccb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientRequest>
            <!--You may enter the following 5 items in any order-->
            <!--Optional:-->
            <mes:status xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
                <!--Optional:-->
                <!--Optional:-->
                <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
                <!--Optional:-->
                <mes:returnSPAAImage>false</mes:returnSPAAImage>
            </mes:GetClientRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a3523fa7-7eec-4e9d-b082-ef80a12b22d9" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="40a18b0b-3325-4e7e-b7bb-4086ca79a2ec" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="e8b33528-2c49-46a0-b6bb-6c1bd78da2d3" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:GetClientResponse[1]/*:commandStatus[1]/text()");
def enrollmentStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");

def cipStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:cipStatuses[1]/text()");
def ofacStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:ofacStatuses[1]/text()");
def spaStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:spaStatuses[1]/text()");
def firstName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:firstName[1]/text()");
def lastName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:lastName[1]/text()");
def nextDraftAmount = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:nextDraftAmount[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentStatuses.getData() == 'ACTIVE';
assert cipStatuses.getData() == 'IGNORED';
assert ofacStatuses.getData() == 'IGNORED';
assert spaStatuses.getData() == 'PENDING';
assert firstName.getData() == 'CFT_FDR_TPB';
assert lastName.getData() == 'Automation';
assert nextDraftAmount.getData() == '100.0';
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ef9614c1-cdcb-4ab2-bc73-647090802f87" name="Contains"><con:configuration><token>abcd
</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="1c6b952f-9a3b-4c03-8a6d-7a1cfb2526c9" name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="7641f367-b9c0-41e8-87db-1fc810437fc6" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="RunJob-NewScheduler" id="ea9cb259-8012-440f-93e5-d179884eb168"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-NewScheduler";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

def minTimeOut=a.getPropertyValue('minTimeOut') as int;
def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	return(null);
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timeout"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
}</script></con:config></con:testStep><con:testStep type="request" id="80f96b99-b328-4e4d-95a7-7544fd31e714" name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="7641f367-b9c0-41e8-87db-1fc810437fc6" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '100.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="0aa2b719-0f8c-44f1-8e4f-ba2c53ec43cb" name="GetDraftSchedule_CheckDraftInProcess_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftInProcess_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:assertion type="XPath Match" id="6106ae37-dc95-4e16-949d-455b14e12ef0" name="Match content of [ns3:id]"><con:configuration><path>declare namespace ns3='http://nationalpayment.net/ws/schemas/types';
declare namespace ns4='http://nationalpayment.net/ws/schemas/messages';
//ns4:GetDraftScheduleResponse[1]/ns4:draft[1]/ns3:client[1]/ns3:id[1]/text()</path><content>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="31ab35b6-7a07-430a-992e-740910c58a3f" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
def scheduleId = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:scheduleId[1]/text()"); //not null
def type = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:type[1]/text()");  //MONTHLY
def amount = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:amount[1]/text()");   //100.0
def status = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:status[1]/text()");  //INPROCESS


assert scheduleId != null
assert type.getData() == 'MONTHLY';
assert amount.getData() == '100.0';
assert status.getData() == 'INPROCESS';</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="RunJob-TPBACHOutboundProcessor" id="5281731c-aede-4aef-b01d-dc42d3a23249"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-TPBACHOutboundProcessor";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

def minTimeOut=a.getPropertyValue('minTimeOut') as int;
def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	return(null);
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timed out"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
}</script></con:config></con:testStep><con:testStep type="request" id="67d96c70-077a-4ff2-bbbd-26cd5b5deddf" name="GetDraftSchedule_CheckDraftSubmitted_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftSubmitted_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="3dc5b6de-162b-4327-810a-d80b8651ff29" name="GetClientsEnhanced_Current=0_Pending=100_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=100_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="RunJob-FundsRealization" id="09ee4628-3d1c-454e-9c96-af1f70749c9c"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-FundsRealization";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

def minTimeOut=a.getPropertyValue('minTimeOut') as int;
def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	return(null);
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timed out"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
}</script></con:config></con:testStep><con:testStep type="request" id="ec2c9a55-9aa2-439b-8453-5abd959505a6" name="GetDraftSchedule_CheckDraftCompleted_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftCompleted_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="6f90dba6-ff9f-41ae-b471-f3359ccbdf33" name="GetClientsEnhanced_Current=100_Pending=100_TPB"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=100_Pending=100_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:tearDownScript>try {
    //Check a project level property to see if the reports should be produced.
    if(context.expand('${#Project#ProduceReports}') == 'Y') {
        //The path and file to persist results
        def resultDir = new File("C:\\Users\\Raghav\\Desktop\\ToSend\\Nov-14\\SoapUIResults");
        if(!resultDir.exists()) {
            resultDir.mkdirs();
        }
        def resultsFile = new File(resultDir, "CSVReport.csv");

        //If the file does not already exist, we want to create it, otherwise we want to append
        if(!resultsFile.exists()) {
            resultsFile.createNewFile();
            //Header values
            resultsFile.write('"NAME","RESULT","MESSAGES","DATE"');
        }

        //Write the result values
        resultsFile.append('\n');    //Newline
        resultsFile.append('"' + testRunner.testCase.name + '",');    //Test Case Name
        resultsFile.append('"' + testRunner.status + '",');    //Overall Test Case result

        //There can be multiple messages, so set up a loop
        resultsFile.append('"');    //Start of messages.
        for(result in testRunner.getResults()) {
            //There can be lots of messages, so limit amount recorded to avoid going over
            //the buffer size for a CSV field
            msgCount = 0;
            for(message in result.getMessages()) {
                msgCount++;
                if(msgCount &lt; 10) {
                    resultsFile.append(message + ';\n');
                }
            }
        }

        resultsFile.append('",');    //End of messages.

        def currentDate = new Date().format("yyyy-MM-dd hh:mm");
        resultsFile.append('"' + currentDate + '"');
    }
} catch(e) {
    log.error("An error occurred: " + e.toString());
}</con:tearDownScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>c26798fd-2b72-4a0c-a5c1-a72d6644bc58</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ab382168-228a-4607-a6d5-c34702bbca33</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>19d63366-0c52-4145-a038-d85ac4fe8803</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e9d1ef3f-73ca-49ce-9d1d-bd7e1294eec7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>45f1aa99-092a-4b95-8f68-d42dc1425e7b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6ae7c6d3-43a8-40a0-ada0-4d73e37c4c8f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1913e0e1-e17d-41b5-8982-01ef27e46764</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf3c8c1f-6f7d-41ec-b2e9-137280a2cccb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d5f83aea-14fb-45c0-b128-ac782ad28711</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>50807989-d114-426b-a146-1a20b54611af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b65eccee-3ca7-48eb-843a-99dbe9291319</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c37ff707-c00e-449e-ab5a-9c7265d22f66</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>15c2c0a7-ad9c-4214-b80d-a6d84fd1414b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f1fbf360-ee95-4df4-b3d5-85896f094bbf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0d1d4844-09f1-43db-9118-01bae8d3cf9c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6a463e72-74c7-4c75-add5-454b38367492</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>edd4ca67-dd19-4142-b647-134d2d1f6ac4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7032aa7-e6e1-443e-8c35-e62dc0eef951</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76aaea4b-3651-427e-8216-9998adcf1496</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5e97f0d9-9f88-4a8e-a937-8074d59709a5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>735f1cf8-d028-4667-9e71-2227e9752cdd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f45b32de-b23e-4c6b-ae90-efce09f0d35d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1d021472-3c53-4b27-9115-e1a8fc5a8352</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f2d6368b-9365-4974-a75f-838f1ee72e62</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d5da2c04-14d4-45bb-8d1b-48a3b97ce2f5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5934230-0eb8-4f7b-9a95-ef0601b95a4e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>16241add-ddd0-4622-af38-e013b30cde43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4c8f3188-2d56-43ad-b43b-de967fca3aaa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc85c6d9-b9ad-4f6b-a686-b7bb8af2998f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0f649678-fa34-4a5d-95b5-5c3affa5784e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b936ff2e-68f6-47ea-8eba-227f2227f207</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>762cc6fc-1bab-4bc1-9300-06b323e6b6af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2b130f51-54b9-422d-b302-1c19c89bc215</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3f60561-7671-4b4f-a6d6-c181c64d7a01</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>79c19945-0fab-4d4e-9523-f435c8e589b3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dc70ddc3-bb9d-4ee0-ae05-b7f9ee621995</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>797127d4-7df9-402a-8e12-f400e09f2299</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b03c28c6-6333-4c58-962d-7cfa1b31d1ad</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e790e173-4360-41e0-a02b-bf20dcecaefc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8cc7f480-a7ae-46e7-9b22-8a1860e83554</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>192d6158-65aa-47e2-a7f1-b809e74e85d7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4b59bd9f-addb-444c-aab0-0b826a7d4d58</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>40af8e29-477e-49ec-afbb-cf80bded76fe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e50cddcc-0d02-4b47-8bd0-0534d3c97594</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e9dfb6e9-faf3-4ed5-9bc5-789bc1f77b52</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9b92659-b5ed-45dd-929e-f48e1a711a28</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>341b1e66-0398-405a-8bd7-f717b348ce46</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf4accb4-07b7-4230-b70d-46d17387fdb7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0683104a-0b5f-47aa-a4cd-bebe67a8d2ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1e487627-9030-4c1b-a6c6-1dec29ef9de7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5d8e6739-24c0-4806-8f06-caa89282b18f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>80c5a21b-f616-453c-8113-358c6d486e84</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5f7cd2c3-1a53-4e45-913f-ff687bddf399</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca9eeda8-9c0b-4799-96c5-301ee9289ead</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>80bc6ae0-0d69-4844-810b-1ea4b8ea9144</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3902228d-992c-47d3-9136-5078e4be2566</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5540e39f-8f63-407b-add8-4016036a55a6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>055f6f9d-18b5-4648-8ec8-2eefc659262a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9af053b7-7eca-4b2d-85c3-2e78acf1e4cd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fc8a1aee-aecb-405a-8b93-116d62784aec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8c3fcdf-d25f-4d5d-9f79-5cdded36993a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0dc0034-48e5-41ca-8f7b-f914e02d1a9a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>50f8ff3c-314f-47d7-a7e2-a82cda43009e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4117b210-9816-4eaa-86f0-767989e89773</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0a17c752-46d7-4184-8339-872151f38ee3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1532db97-706d-4881-abe5-12b76f69466c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>19b24d96-8e8d-465c-9624-8244bc719e4a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76d436bf-00ed-4259-8b85-2a17adc4f14a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b89c3f78-8127-4f84-8d98-d250d95fd3ce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>20cd096c-9269-457a-95e9-0732c970ff06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4b4d8744-4840-4721-bf48-5f2e160df2fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>69707753-5fef-4712-9349-7f7097b4cfde</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5077ccbd-a4f7-4d69-aa4a-7e2923a67aa1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Test1" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="34cbbbc1-79ab-4ae4-bce1-c41e897e888c" disabled="true"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">false</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="groovy" name="Gen name" id="211fd38a-98b3-4e18-977f-dc4d9ff52366"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}

generator( (('A'..'Z')).join(), 9 )
</script></con:config></con:testStep><con:testStep type="groovy" name="GetCurrentDate" id="040a8e27-e5c3-414b-aa0a-7e6ddb42cd90"><con:settings/><con:config><script>
def currentTime = new Date().format("dd/MM/yyyy");
	log.info "    >>>>    TIME NOW IS : "+currentTime;
		return currentTime;
	

   
</script></con:config></con:testStep><con:testStep type="request" name="CreateClient_TPB" id="669b3097-99de-4b4b-84b7-59ca60a3f1d9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClient</con:operation><con:request name="CreateClient_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="18d5e90d-6870-4130-97c8-f95dead90278" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            	<wsse:Username>${#Project#global_username}</wsse:Username>
            	<wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientRequest>
            <mes:clientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:channelId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:productId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:firstname>CFT_FDR_TPB</mes:firstname>
            <mes:lastname>Automation</mes:lastname>
            <mes:ssn>232-36-3333</mes:ssn>
            <mes:dob>
                <typ:date format="MM-dd-yyyy" value="09-09-1980"/>
            </mes:dob>
            <mes:address1>Finxera Headquarters</mes:address1>
            <mes:address2>1900 South Norfolk Street</mes:address2>
            <mes:city>San Mateo</mes:city>
            <mes:state>CA</mes:state>
            <mes:zip>94403</mes:zip>
            <mes:phone>9874563210</mes:phone>
            <mes:mobile>8996655000</mes:mobile>
            <mes:email xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:draftAmount>100</mes:draftAmount>
        </mes:CreateClientRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5b1cba04-966f-4b54-ab63-4bf2bb398213"/><con:assertion type="GroovyScriptAssertion" id="c0ea2155-427e-4545-9eea-7c8f0dc10ca9" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def enrollmentId = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert enrollmentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClient_WFB" id="c2ea9b17-5acd-4026-8b1e-42bd2df18bb4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClient</con:operation><con:request name="CreateClient_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="18d5e90d-6870-4130-97c8-f95dead90278" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            	<wsse:Username>${#Project#global_username}</wsse:Username>
            	<wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientRequest>
            <mes:clientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:channelId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:productId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:firstname>CFT_FDR_WFB</mes:firstname>
            <mes:lastname>Automation</mes:lastname>
            <mes:ssn>232-36-4545</mes:ssn>
            <mes:dob>
                <typ:date format="MM-dd-yyyy" value="09-09-1980"/>
            </mes:dob>
            <mes:address1>Finxera Headquarters</mes:address1>
            <mes:address2>1900 South Norfolk Street</mes:address2>
            <mes:city>Jupiter</mes:city>
            <mes:state>FL</mes:state>
            <mes:zip>94403</mes:zip>
            <mes:phone>9874563210</mes:phone>
            <mes:mobile>8996655000</mes:mobile>
            <mes:email xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:draftAmount>100</mes:draftAmount>
        </mes:CreateClientRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5b1cba04-966f-4b54-ab63-4bf2bb398213"/><con:assertion type="SOAP Response" name="SOAP Response1" id="45796fc5-1ad7-4bc5-aaf1-32f6688af019"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="8dec95da-4bd2-48dc-9c70-9d840ae05f12"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def node1 = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def node2 = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def node3 = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

log.info (" >> >> "+node1.getData())
assert node1.getData() == '1'
assert node2 != null
assert node3 != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" name="SOAP Response1" id="f2455ddc-2bc7-4b4a-9855-f35a97dd446a"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion1" id="ecfff8e1-87b3-43d7-a71f-89b69a3b9091"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def enrollmentId = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert enrollmentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClient_BOI" id="148a497e-b676-4129-8c7b-8eae15f6fbbd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClient</con:operation><con:request name="CreateClient_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="18d5e90d-6870-4130-97c8-f95dead90278" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
            	<wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
       	 </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientRequest>
            <mes:clientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:channelId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:productId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:firstname>CFT_FDR_BOI</mes:firstname>
            <mes:lastname>Automation</mes:lastname>
            <mes:ssn>232-36-4544</mes:ssn>
            <mes:dob>
                <typ:date format="MM-dd-yyyy" value="09-09-1980"/>
            </mes:dob>
            <mes:address1>Finxera Headquarters</mes:address1>
            <mes:address2>1900 South Norfolk Street</mes:address2>
            <mes:city>Clio</mes:city>
            <mes:state>AL</mes:state>
            <mes:zip>94403</mes:zip>
            <mes:phone>9874563210</mes:phone>
            <mes:mobile>8996655000</mes:mobile>
            <mes:email xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:draftAmount>100</mes:draftAmount>
        </mes:CreateClientRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5b1cba04-966f-4b54-ab63-4bf2bb398213"/><con:assertion type="SOAP Response" name="SOAP Response1" id="2f17e1d0-40db-45aa-acd9-b1a17d407496"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="a4119d0a-7888-4b44-ba9b-dddc1d538eca"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def node1 = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def node2 = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def node3 = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

log.info (" >> >> "+node1.getData())
assert node1.getData() == '1'
assert node2 != null
assert node3 != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" name="SOAP Response1" id="52a90438-d0b7-4cf0-a18b-bdac383e5cb7"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion1" id="a27ee8f6-b04b-49e2-9985-d560a0663645"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def enrollmentId = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert enrollmentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClientBankAccount_TPB" id="64243388-2f43-494f-94a3-ed1648d2a0b0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClientBankAccount</con:operation><con:request name="CreateClientBankAccount_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="253b5085-e099-40e3-ad27-918bd588eae1" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create client Bank account +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientBankAccountRequest>
            <!--You may enter the following 10 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:routingNumber>051000017</mes:routingNumber>
            <mes:accountType>CHECKING</mes:accountType>
            <mes:accountNumber>54364434</mes:accountNumber>
            <mes:holdersName>AutoAccount</mes:holdersName>
            <!--Optional:-->
        </mes:CreateClientBankAccountRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="GroovyScriptAssertion" id="dc66fa8c-a323-48dd-afcc-ba87cf4ebc82" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientId[1]/text()" )
def clientBankAccountId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientBankAccountId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert clientBankAccountId != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" id="b05b5e9a-c6c7-4088-bf18-1068907a473d" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientBankAccountRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClientBankAccount_WFB" id="32f24ed0-6f7b-4801-a4ab-9932fd4dd450"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClientBankAccount</con:operation><con:request name="CreateClientBankAccount_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="253b5085-e099-40e3-ad27-918bd588eae1" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create client Bank account +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientBankAccountRequest>
            <!--You may enter the following 10 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:routingNumber>051000017</mes:routingNumber>
            <mes:accountType>CHECKING</mes:accountType>
            <mes:accountNumber>54364434</mes:accountNumber>
            <mes:holdersName>AutoAccount</mes:holdersName>
            <!--Optional:-->
        </mes:CreateClientBankAccountRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f904f6d-c595-43e8-b788-151c067931fb"/><con:assertion type="Simple Contains" id="d6cc1093-8684-4c0b-9e1c-9872241599fe" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="84e771e7-604c-4596-ac34-7f9f96374efc"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientId[1]/text()" )
def clientBankAccountId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientBankAccountId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert clientBankAccountId != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" name="SOAP Response1" id="0c027a37-6367-4f0b-bddf-ec486e33ecc2"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientBankAccountRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClientBankAccount_BOI" id="767c35fa-9389-400a-aa66-3a1ed64647ba"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClientBankAccount</con:operation><con:request name="CreateClientBankAccount_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="253b5085-e099-40e3-ad27-918bd588eae1" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create client Bank account +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientBankAccountRequest>
            <!--You may enter the following 10 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:routingNumber>051000017</mes:routingNumber>
            <mes:accountType>CHECKING</mes:accountType>
            <mes:accountNumber>54364434</mes:accountNumber>
            <mes:holdersName>AutoAccount</mes:holdersName>
            <!--Optional:-->
        </mes:CreateClientBankAccountRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f904f6d-c595-43e8-b788-151c067931fb"/><con:assertion type="Simple Contains" id="d6cc1093-8684-4c0b-9e1c-9872241599fe" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="3bf4b402-0b5d-4e59-b05d-668537629ceb"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientId[1]/text()" )
def clientBankAccountId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientBankAccountId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert clientBankAccountId != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" name="SOAP Response1" id="e02f32d4-884d-4025-a4db-3a33399ff84b"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientBankAccountRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateDraftSchedule_TPB" id="ec9bf4c8-37ea-4040-aa19-e717aa4d82a8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateDraftSchedule</con:operation><con:request name="CreateDraftSchedule_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="b45939bc-67df-4797-9e67-eb91f5cf6946" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create draft schedule +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateDraftScheduleRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:clientBankAccountId>${CreateClientBankAccount_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientBankAccountResponse[1]/ns4:clientBankAccountId[1]}</mes:clientBankAccountId>
            <mes:amount>100</mes:amount>
            <mes:occurs>21</mes:occurs>
            <mes:startDate>
                <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
            </mes:startDate>
            <mes:type>MONTHLY</mes:type>
        </mes:CreateDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="177becab-36f5-46db-b0f2-aefbd008283f"/><con:assertion type="XPath Match" name="Check for existance of [ns3:scheduleId]" id="eb3e50d7-8cad-46ab-9d81-c6b4fd671ba8"><con:configuration><path>declare namespace ns3='http://nationalpayment.net/ws/schemas/messages';
exists( //ns3:CreateDraftScheduleResponse/ns3:scheduleList/ns3:schedule/ns3:scheduleId)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e34bba25-c3df-4532-b338-e803ce54084a" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="40362eb6-899e-4dd6-9cac-8b5da954560f" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:commandStatus[1]/text()")

def schedule1 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[1]/*:scheduleId[1]/text()" )
def schedule2 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[2]/*:scheduleId[1]/text()" )
def schedule3 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[3]/*:scheduleId[1]/text()" )
def schedule4 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[4]/*:scheduleId[1]/text()" )
def schedule5 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[5]/*:scheduleId[1]/text()" )
def schedule6 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[6]/*:scheduleId[1]/text()" )
def schedule7 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[7]/*:scheduleId[1]/text()" )
def schedule8 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[8]/*:scheduleId[1]/text()" )
def schedule9 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[9]/*:scheduleId[1]/text()" )
def schedule10 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[10]/*:scheduleId[1]/text()" )
def schedule11 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[11]/*:scheduleId[1]/text()" )
def schedule12 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[12]/*:scheduleId[1]/text()" )
def schedule13 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[13]/*:scheduleId[1]/text()" )
def schedule14 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[14]/*:scheduleId[1]/text()" )
def schedule15 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[15]/*:scheduleId[1]/text()" )
def schedule16 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[16]/*:scheduleId[1]/text()" )
def schedule17 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[17]/*:scheduleId[1]/text()" )
def schedule18 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[18]/*:scheduleId[1]/text()" )
def schedule19 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[19]/*:scheduleId[1]/text()" )
def schedule20 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[20]/*:scheduleId[1]/text()" )
def schedule21 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[21]/*:scheduleId[1]/text()" )

assert commandStatus.getData() == '1'
assert schedule1 != null
assert schedule2 != null
assert schedule3 != null
assert schedule4 != null
assert schedule5 != null
assert schedule6 != null
assert schedule7 != null
assert schedule8 != null
assert schedule9 != null
assert schedule10 != null
assert schedule11 != null
assert schedule12 != null
assert schedule13 != null
assert schedule14 != null
assert schedule15 != null
assert schedule16 != null
assert schedule17 != null
assert schedule18 != null
assert schedule19 != null
assert schedule20!= null
assert schedule21 != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateDraftSchedule_WFB" id="3e445411-02d9-4d76-979a-420f8cea11b9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateDraftSchedule</con:operation><con:request name="CreateDraftSchedule_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="b45939bc-67df-4797-9e67-eb91f5cf6946" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create draft schedule +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateDraftScheduleRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:clientBankAccountId>${CreateClientBankAccount_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientBankAccountResponse[1]/ns4:clientBankAccountId[1]}</mes:clientBankAccountId>
            <mes:amount>100</mes:amount>
            <mes:occurs>21</mes:occurs>
            <mes:startDate>
                <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
            </mes:startDate>
            <mes:type>MONTHLY</mes:type>
        </mes:CreateDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="177becab-36f5-46db-b0f2-aefbd008283f"/><con:assertion type="XPath Match" name="Check for existance of [ns3:scheduleId]" id="eb3e50d7-8cad-46ab-9d81-c6b4fd671ba8"><con:configuration><path>declare namespace ns3='http://nationalpayment.net/ws/schemas/messages';
exists( //ns3:CreateDraftScheduleResponse/ns3:scheduleList/ns3:schedule/ns3:scheduleId)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e34bba25-c3df-4532-b338-e803ce54084a" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="d40550f4-f5b3-4dc4-acc8-9297022a35ef"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:commandStatus[1]/text()")

def schedule1 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[1]/*:scheduleId[1]/text()" )
def schedule2 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[2]/*:scheduleId[1]/text()" )
def schedule3 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[3]/*:scheduleId[1]/text()" )
def schedule4 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[4]/*:scheduleId[1]/text()" )
def schedule5 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[5]/*:scheduleId[1]/text()" )
def schedule6 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[6]/*:scheduleId[1]/text()" )
def schedule7 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[7]/*:scheduleId[1]/text()" )
def schedule8 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[8]/*:scheduleId[1]/text()" )
def schedule9 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[9]/*:scheduleId[1]/text()" )
def schedule10 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[10]/*:scheduleId[1]/text()" )
def schedule11 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[11]/*:scheduleId[1]/text()" )
def schedule12 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[12]/*:scheduleId[1]/text()" )
def schedule13 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[13]/*:scheduleId[1]/text()" )
def schedule14 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[14]/*:scheduleId[1]/text()" )
def schedule15 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[15]/*:scheduleId[1]/text()" )
def schedule16 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[16]/*:scheduleId[1]/text()" )
def schedule17 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[17]/*:scheduleId[1]/text()" )
def schedule18 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[18]/*:scheduleId[1]/text()" )
def schedule19 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[19]/*:scheduleId[1]/text()" )
def schedule20 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[20]/*:scheduleId[1]/text()" )
def schedule21 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[21]/*:scheduleId[1]/text()" )

assert commandStatus.getData() == '1'
assert schedule1 != null
assert schedule2 != null
assert schedule3 != null
assert schedule4 != null
assert schedule5 != null
assert schedule6 != null
assert schedule7 != null
assert schedule8 != null
assert schedule9 != null
assert schedule10 != null
assert schedule11 != null
assert schedule12 != null
assert schedule13 != null
assert schedule14 != null
assert schedule15 != null
assert schedule16 != null
assert schedule17 != null
assert schedule18 != null
assert schedule19 != null
assert schedule20!= null
assert schedule21 != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateDraftSchedule_BOI" id="58554047-8b40-4f2d-812a-fe1d50c2179f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateDraftSchedule</con:operation><con:request name="CreateDraftSchedule_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="b45939bc-67df-4797-9e67-eb91f5cf6946" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create draft schedule +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateDraftScheduleRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:clientBankAccountId>${CreateClientBankAccount_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientBankAccountResponse[1]/ns4:clientBankAccountId[1]}</mes:clientBankAccountId>
            <mes:amount>100</mes:amount>
            <mes:occurs>21</mes:occurs>
            <mes:startDate>
                <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
            </mes:startDate>
            <mes:type>MONTHLY</mes:type>
        </mes:CreateDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="177becab-36f5-46db-b0f2-aefbd008283f"/><con:assertion type="XPath Match" name="Check for existance of [ns3:scheduleId]" id="eb3e50d7-8cad-46ab-9d81-c6b4fd671ba8"><con:configuration><path>declare namespace ns3='http://nationalpayment.net/ws/schemas/messages';
exists( //ns3:CreateDraftScheduleResponse/ns3:scheduleList/ns3:schedule/ns3:scheduleId)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e34bba25-c3df-4532-b338-e803ce54084a" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="6a7bcdd3-5662-4b99-9196-03adabec8dce"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:commandStatus[1]/text()")

def schedule1 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[1]/*:scheduleId[1]/text()" )
def schedule2 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[2]/*:scheduleId[1]/text()" )
def schedule3 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[3]/*:scheduleId[1]/text()" )
def schedule4 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[4]/*:scheduleId[1]/text()" )
def schedule5 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[5]/*:scheduleId[1]/text()" )
def schedule6 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[6]/*:scheduleId[1]/text()" )
def schedule7 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[7]/*:scheduleId[1]/text()" )
def schedule8 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[8]/*:scheduleId[1]/text()" )
def schedule9 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[9]/*:scheduleId[1]/text()" )
def schedule10 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[10]/*:scheduleId[1]/text()" )
def schedule11 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[11]/*:scheduleId[1]/text()" )
def schedule12 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[12]/*:scheduleId[1]/text()" )
def schedule13 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[13]/*:scheduleId[1]/text()" )
def schedule14 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[14]/*:scheduleId[1]/text()" )
def schedule15 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[15]/*:scheduleId[1]/text()" )
def schedule16 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[16]/*:scheduleId[1]/text()" )
def schedule17 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[17]/*:scheduleId[1]/text()" )
def schedule18 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[18]/*:scheduleId[1]/text()" )
def schedule19 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[19]/*:scheduleId[1]/text()" )
def schedule20 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[20]/*:scheduleId[1]/text()" )
def schedule21 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[21]/*:scheduleId[1]/text()" )

assert commandStatus.getData() == '1'
assert schedule1 != null
assert schedule2 != null
assert schedule3 != null
assert schedule4 != null
assert schedule5 != null
assert schedule6 != null
assert schedule7 != null
assert schedule8 != null
assert schedule9 != null
assert schedule10 != null
assert schedule11 != null
assert schedule12 != null
assert schedule13 != null
assert schedule14 != null
assert schedule15 != null
assert schedule16 != null
assert schedule17 != null
assert schedule18 != null
assert schedule19 != null
assert schedule20!= null
assert schedule21 != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetDraftScheduleList_TPB" id="3ecfbe77-d08c-4a96-9904-11c536fd3a6f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftScheduleList</con:operation><con:request name="GetDraftScheduleList_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="311078f8-03f6-4621-95f9-30e4e34a935b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleListRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:order>scheduleDate</mes:order>
            <mes:ascending>false</mes:ascending>
            <mes:pageNumber>1</mes:pageNumber>
            <mes:numberOfRecordsPerPage>5</mes:numberOfRecordsPerPage>
        </mes:GetDraftScheduleListRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="4fa0357b-9cca-4f29-b0ba-e9a9db3e976a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e3329fbe-4933-47ad-a3e7-0b50c3a22fcb" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2fd84260-87e3-4517-a6d9-fb7396f582d6" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="dbcd0c8f-0aab-453e-9171-1dc0600d0daa" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def totalCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" )
def returnedCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:returnedCount[1]/text()" )
def pageNumber = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:pageNumber[1]/text()" )

log.info ("  >>  "+holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" ).getData());
assert totalCount.getData() == "21";
assert returnedCount.getData() == "5";
assert pageNumber.getData() == "1";
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleListRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetDraftScheduleList_WFB" id="6ac881c1-03ae-4a09-bb72-c474a87f1bf4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftScheduleList</con:operation><con:request name="GetDraftScheduleList_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="311078f8-03f6-4621-95f9-30e4e34a935b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleListRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:order>scheduleDate</mes:order>
            <mes:ascending>false</mes:ascending>
            <mes:pageNumber>1</mes:pageNumber>
            <mes:numberOfRecordsPerPage>5</mes:numberOfRecordsPerPage>
        </mes:GetDraftScheduleListRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="4fa0357b-9cca-4f29-b0ba-e9a9db3e976a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e3329fbe-4933-47ad-a3e7-0b50c3a22fcb" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2fd84260-87e3-4517-a6d9-fb7396f582d6" name="Not SOAP Fault"/><con:assertion type="SOAP Response" name="SOAP Response1" id="963db3c8-3783-4b77-9ca9-212d41238fc1"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="1baaf347-bd84-44fa-9f51-110f878089c4"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def totalCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" )
def returnedCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:returnedCount[1]/text()" )
def pageNumber = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:pageNumber[1]/text()" )

log.info ("  >>  "+holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" ).getData());
assert totalCount.getData() == "21";
assert returnedCount.getData() == "5";
assert pageNumber.getData() == "1";
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleListRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetDraftScheduleList_BOI" id="1f526495-b5f0-4182-bd6e-9b8aac9a0ec1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftScheduleList</con:operation><con:request name="GetDraftScheduleList_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="311078f8-03f6-4621-95f9-30e4e34a935b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleListRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:order>scheduleDate</mes:order>
            <mes:ascending>false</mes:ascending>
            <mes:pageNumber>1</mes:pageNumber>
            <mes:numberOfRecordsPerPage>5</mes:numberOfRecordsPerPage>
        </mes:GetDraftScheduleListRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="4fa0357b-9cca-4f29-b0ba-e9a9db3e976a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e3329fbe-4933-47ad-a3e7-0b50c3a22fcb" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2fd84260-87e3-4517-a6d9-fb7396f582d6" name="Not SOAP Fault"/><con:assertion type="SOAP Response" name="SOAP Response1" id="64a8b78c-fde8-4d29-a4f9-4edb82d6bfcb"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="2e7a32fd-fc09-4679-ae58-3c45ba678aee"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def totalCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" )
def returnedCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:returnedCount[1]/text()" )
def pageNumber = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:pageNumber[1]/text()" )

log.info ("  >>  "+holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" ).getData());
assert totalCount.getData() == "21";
assert returnedCount.getData() == "5";
assert pageNumber.getData() == "1";
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleListRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateEnrollmentDocument_TPB" id="0a4b3aaa-7918-4f85-8e41-04f8968e6de4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateEnrollmentDocument</con:operation><con:request name="CreateEnrollmentDocument_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a2d6acb3-7045-4a9a-bcfb-42997ae5c540"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateEnrollmentDocumentRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:note>ref</mes:note>
            <mes:documentType>type</mes:documentType>
            <mes:base64EncodedContent>JVBERi0xLjQKMyAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQW5ub3RzIFs8PC9UeXBlIC9Bbm5vdCAvU3VidHlwZSAvTGluayAvUmVjdCBbNDE2LjkzIDM2My44NSA0NjAuNjEgMzU3Ljg1XSAvQm9yZGVyIFswIDAgMF0gL0EgPDwvUyAvVVJJIC9VUkkgKGh0dHA6Ly93d3cuY2Z0cGF5LmNvbSk+Pj4+PDwvVHlwZSAvQW5ub3QgL1N1YnR5cGUgL0xpbmsgL1JlY3QgWzE0My40OSAzMjEuMzMgMjE0LjE3IDMxNS4zM10gL0JvcmRlciBbMCAwIDBdIC9BIDw8L1MgL1VSSSAvVVJJIChodHRwOi8vd3d3LmZpbnhlcmEuY29tL2xpY2Vuc2luZyk+Pj4+XQovQ29udGVudHMgNCAwIFI+PgplbmRvYmoKNCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMjIzOT4+CnN0cmVhbQp4nI1Y23LayhJ93vmKfkjtSqrwWPdL3jDgCqdsICAnlaq8DGIAHQuJPZJM+JHzvadnRjeETDapGCFmVq9efZkWBvzng0ZsF04fHgK4f9TBIZoGwRYmgbijmy5xDfAMm5g2BBv4tDqyMKIxLAp+TDMGwzBMiySHWXFYM\/4FLNPQxEvH\/5Zj+7DKac4ODJcsGI\/SzRd4pjzcgz4AQ9NtuCs\/m9UNWNAdA\/0e7M8Q\/FcQ+Qe\/0AQv8Q8Z4ZXhmcRywHUdYlsQHuB+qsM4hW8fXI2YGriOSxwDTN8hHtrQiKsDZ\/AAwivXJLoJrm0TX5NOLTjNaJLvYfS9stkss1xiqWXPLInT6wWmRzxf4VD+CnIVyMvRsLX6\/tHoqGvaDnG0NpHxdDkZBTB8eoLhaDR\/mQUwnX17mS6nkxUE8y\/Qwqt2WxaxHbl7xNMs4yndZPAYJTSRgQpYuE\/SON1FLOvbbiIntX0xh4f0Nxi2bfp9Kw2X2GUS0ASjlrN0gC7e+ZalGT3rdZ9oav1inyYMZin8DzzPuzMt786yLbPaU4ZMl9tuhkxzxV1J4eX5ebj8CfNHVCqYfp8GP+FC7KtUNiyRyo5vioyRrJaT79P5ywpWwTCYPE9QbHgYPg1nownMZ6AZ94bXgqwAPIMYZbQmi\/lqGqzuR8vJGN\/bGhg68fT24o+GSOEePPTeUwH4MQ2+jpfDH8On1f3q5SFYCs\/ms0tcm2CNtDZ9NPphbZ\/YhpKqdq\/tnXlv6j2Em20fda+FrGLk2BYxrHdidJ3gKmqO6RPHk5jo0mylvGrCFnydrmAxWU7n4\/cjWNo3LYLJaSrzukV0V9hfQWMMBbJViozR7QpQx8wRuqn9uifbSQdA13zie22ENt3xZDVaThfiugI1vDaoY4tQdzANr4v5XtKYtiF6bAlmoWR6F8zERqFfgLUypsKxNJ34t0lZGqaI38apmk2ZIJ2gY+Yaxk3RdZ2YpkTCvGqaQaW6AritegOxZGHBeZTsYMzwjIly2PL0AKM9C1\/xbld9Bd7rqEhq3WljqyoE+eoqr4D6lccw6nob6BKiEv0GF8vELv9HLqXimiNa5w3Fbd8VnpWKm1pXcQVwU\/EWxHD0FQ+sszyl8xRCzjZRnnLAPr\/hFIbHY8x22O+70isr\/dJj0dta20i\/6AqiX3QXP15AyF7Xr\/wNKqXybRzZ2vqUt9Gm59YNrlPM+BHDa6MV3+ueQstJ8LKcTcYwxWYLj5PJqoPsaMTB1mPpxDUvkD8YOvpl1ivEOetc2cYpw3fBtmWbls1pHgyf4HG+7GugUn7\/NqSJxGzzGvLnZLi8C+Z37f5Z+mA54nTo8QHhUF5MbBvnM8dsob2vS+V2CXrNsfbi\/RVNQeiu6GnC7mweTL7A5Dc9RDh15Psog6weQkPK2baI4zNgbiPIMeU5Xp4h4pztipjyKMdJiXQcx5JxWmmhm6K51hQM\/IzMLJTAVxPP9HkxXwZDbKnNHIeheh62z4+avOU5Iv\/lxgQp4lydboFxnvIMsA7\/KViWR2mSAdB1WuRwTgveODUAFrMw52kShZBzmmRbxsU+eU1DtTVNrrbluO8oZ7MiA4q1v2eQyEEejtiAc7YRu67pup7ohoKu2IHdGYVFwh2pkcAJ1azA\/zidDqA9gQ7gYsocgBwzgaKFFEnhO3qDWiUDiLbyGs0nrz1sHV\/MlYLtpf+CIGchi445IPETurET90q4hKH7hxSDHCXblB+okLHUn7ZkTqRsfagEfjA4FFkOe0a5OsUkcgoxruZ9XHXR8pSy6D7y3tAzyrcVy09oRlhQzjJ4nC5XQdtyAqd9hM9S4kuZPUjm2gY2W1f1wb\/gL9AJBiGORZCkPAk9MFkbtHyyKxPi1yfUBQvl12fSA6kTo4E0CJ7cWcijNbugIj\/UwgkvsBihSLIC36SwA2mZ\/T7GNJIxDmNUThRrHW508Syv1yyO2BtGR0YPv6jNVCuaCF4zNg3i2jVj8WpFucdDnKqNZr3ZiCZ82qQxNg6gBymYrAQMVZHhs7KoIUmsBxP7n1\/OcQxOEeJFyZuodHHWqmiE6UFqkUth5JowxU4VqqalXD5iYh3z+ExguhVJktNXpvyWSYQJtS4y7IVZprIJj\/hNKqt1IJYrVHnmK6NV5K8Z4+BYPgtvy3CWPjf1h7GIylgMsFQFBfW1NLOnbyonCtXjxOUBG9AZNoUc+WSKRAcZVuFHJjVOlRAMZREEG5nawVKt2vQs0YSrVu3ZRLO6h4Xp1I+y2Ip+M04HME1CgvQyaVXkXhbtElVWWyXLez99DHecqQKUFf4o1s7pawYPFPX4GwIuWsAIHcCQDZpAoolC1BpeXilt2vXDM2fZEft3tI5ieTQJPh0bRbJhKhxXnAhA6aJ0jm7wUIwy7CaYl3\/+veDXp+Y3GDFKauVfXf7lOzle4XO7f8H4dDqRcJsf6Zlg2EqEZp1HLJz4THGg3smQYXS28K02oVDF5KK3UX99rmTqrq0k06qgYiNcsz2Ntz1adeJBYIEtBqOZpDkbCA15WRFrcQ9CrKCdOAJUZjJ+yOqEuE6Asigyxt+isPm95R3CliFyUxDGCn6LNhgSzHSEJjDM4Eh5c6oqGgNld1M+FlV1igXWcbJyIIwxUTcy5QSvNY0xysirasJcmaTYKk+Qlfl9m7RZ\/35yLOugptHOrfW5zrtq8ChDIho77uAbQQWZ5vtLad9L4xpPOnegifiZUALfJoxPuZoaSCsHu8TXhdRQFKJoPRns03ijoLdYWpkiuWVYZFRMjpE8sTZVHFIub+VRXshJC7kOEarKkgoCb3F2EOfa43g6qkDIH9hj0diK\/SMmV3ccwQ7LWA\/CdZXqWHCW38YTVbpVkooyvY8xY7HN1A\/YzRZb1C12V8e7UbCGGstbBvA4wlBv8FiRTFlSZqM4OqQyeIxhGmTy+MYGfzxX4V\/w6I2GZ1ikSEoc\/lmKgRNHqYzEvwi65lVBf6drk2b\/\/wGfn0ckCmVuZHN0cmVhbQplbmRvYmoKNSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgNiAwIFI+PgplbmRvYmoKNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk5Pj4Kc3RyZWFtCnicNY7dTsMwDIXv8xTnEiRIbWdp1t0N8SNNgDotL9BlodtE6Sit9vp4iFk6sj\/bso9gZcj6gLN5iCieGaUlQvzAUzTfIAVCC52xCzYI5uKt84g73GxOOR2aT9TTcOp\/MpYp9dPXiPep2+ZhgZkTugSrZqWvsBmbMXdZV+o8HPrdAm\/NkPbgOwixx\/0\/u2sDddNmSAF\/i3hUS1hfTGEFxlnzUfWiav+shqoMCnQtZW6d\/oUw2cqxIHWmiPUr47HXQ2vzC3XrPWwKZW5kc3RyZWFtCmVuZG9iago3IDAgb2JqCjw8L1R5cGUgL1BhZ2UKL1BhcmVudCAxIDAgUgovUmVzb3VyY2VzIDIgMCBSCi9Db250ZW50cyA4IDAgUj4+CmVuZG9iago4IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11HNJQ3pg2JqENFZEfKCEU0LpC14rfn0Fg6co+tmVfxlKRdh5X9RaQLQxyTYSwx0dQF5AAoYbMjPXaM6bstHUIO4w25xSP1Q\/KoTu3fwnzGNvht8dqaLapm2FimW5hRJPcFdj0VZ+aJCtl6o7tbobvqosHmBcwGYfXB9tnA2VVJ9gMboxwEktY30xhCYOr5JPoU1Tfrfoi9wL0LHmqrfwFG9KFNYzYqCyUX4z3Vg6t1T92TT1uCmVuZHN0cmVhbQplbmRvYmoKOSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgMTAgMCBSPj4KZW5kb2JqCjEwIDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11kqahvIHYkNCGipofKCEUEKWstOL3ZxBYurKPbdlXYyVIWoe7mHsk3wqZJILf48uLPxADoQbPlHHSaUy0lcbC7zAqrzEcqzOKobu2t4hZCO1w6bEemm3spkiNpkcoVprZHGVf9bGJvFLE7tjupvitunCA+oAmZfH5YvNuoKjqiDSBHcOf2BI2D1NYQeHO+cRasuqnVZdnjoHepZ5Iw3+hFcncKI3QiMQXPwaLlg9txD92rz1wCmVuZHN0cmVhbQplbmRvYmoKMTEgMCBvYmoKPDwvVHlwZSAvUGFnZQovUGFyZW50IDEgMCBSCi9SZXNvdXJjZXMgMiAwIFIKL0NvbnRlbnRzIDEyIDAgUj4+CmVuZG9iagoxMiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk4Pj4Kc3RyZWFtCnicNY7RbsIwDEXf8xX3EaQtdZKmobyB2JDQhoqaHyghFBClrLTi92cQWLqyj23ZV2MlSFqHu5h7JN8KmSSC3+PLiz8QA6EGz5Rx0mlMtJXGwu8wKq8xHKsziqG7treIWQjtcOmxHppt7KZIjaZHKFaa2RxlX\/WxibxSxO7Y7qb4rbpwgPqAJmXx+WLzbqCo6gibwI7hT2wJm4cprKBw53xiLVn106rLM8dA71JPpOG\/0IpkbpRGaETii58Ui5YPbcQ\/dxE9cgplbmRzdHJlYW0KZW5kb2JqCjEgMCBvYmoKPDwvVHlwZSAvUGFnZXMKL0tpZHMgWzMgMCBSIDUgMCBSIDcgMCBSIDkgMCBSIDExIDAgUiBdCi9Db3VudCA1Ci9NZWRpYUJveCBbMCAwIDU5NS4yOCA4NDEuODldCj4+CmVuZG9iagoxMyAwIG9iago8PC9UeXBlIC9Gb250Ci9CYXNlRm9udCAvSGVsdmV0aWNhCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTQgMCBvYmoKPDwvVHlwZSAvRm9udAovQmFzZUZvbnQgL0hlbHZldGljYS1Cb2xkCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTUgMCBvYmoKPDwvVHlwZSAvWE9iamVjdAovU3VidHlwZSAvSW1hZ2UKL1dpZHRoIDIwMAovSGVpZ2h0IDM3Ci9Db2xvclNwYWNlIFsvSW5kZXhlZCAvRGV2aWNlUkdCIDI1NCAxNiAwIFJdCi9CaXRzUGVyQ29tcG9uZW50IDgKL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0RlY29kZVBhcm1zIDw8L1ByZWRpY3RvciAxNSAvQ29sb3JzIDEgL0JpdHNQZXJDb21wb25lbnQgOCAvQ29sdW1ucyAyMDA+PgovTWFzayBbMCAwIF0KL0xlbmd0aCAxNjE2Pj4Kc3RyZWFtCliF7VcHeFRFEH4bOyiWWECsKPYuYldExYq994IdQknIu9frUiI19CYSCR3RxCASBDEixWCABEKNEA64AEmAnEAE7mNm37tLuZCEzxT9vvu\/u2\/fzsy+m392ZnaP4yKIIIII\/q\/I7XSw90q\/P7Ww68w1je3Lv8ENee+8Pvrtdu0e2z7mu0k5x6DC64R4Gtav40Rujr\/99o6v\/IbYseuOxOx7q7KSCSEGx5mEb2j\/agtf3tS9BU0X7sgH7Fi48MiGDP\/MKsxEYuJAidzA\/tUWm19MvKKge\/6X6xm6N83vuOeekv7hdhqxcPjvEjk4dfqeFq1SUo44SElJ33X1mNQzQnpbhJzSMLEIMZ1BlAixTMg04GQbKLEw57CCTKI5y1SU25CRAiE6hkAnvEUI5W0QmHbd8+jkH7140fr0VvsX9ezZZ1HPPi32p6fvWvxqaZKrl3TmaAUiFkdcSBxPXBE88MxdtkxDoQ58HDVkpUHKwax7IqvHPh3ti\/Z9eOYHb700LH\/TZ3828\/mi\/3ig5H5XT4nhhM90UouFGfwVOHRdcIxY\/VAichI6zzH\/mbXNTICVygn4IgiExjavznnE+d8cEjvk0qKipKS2yl2xbXO\/v\/vsHxVl\/ildY5hewqiHE6FsIqDbtqU7IbYIha\/IjAWXouUQQ94aSzoKlDACdU7ki6nXXNXjkY+Lug0qLj5x8EeDBv2aFPPP9Z+P3OiPY3o1dHZUIOJMIOfd1EMiHp1IBnG2j7qENCDHzM3yROR6INJ1+cWZLVs+fquiKLPmrHqqCEbl4cnLLsl832nBEDy5EhEpNIFsgS9UrsqSXiRWMPkN90EkusflVc9EsjP2ZGW1OmGzktumTVGX4sBsILL2vYLnshIvY3oIs86XJ6KzWLPmZGEhsCRzzhgoEHDTRl9BJSADmdWIiNGoZyIrx2Rt2PSNolwQKM4FDt0CM2JgaDbsrMQ8x8DpUyTUWAWWR6YjNdz2xJ5wHyD+Fssz0+1lWrCpwcJ6rZHUjIKTwPNTA4MVpcmhHjGxPwS6wDzmtMRS10JCXwT0khGxwUURkx5qQ4Oge4AZFZ2a1tAOigaT0aKsO3MqjCbuqRMI7F9YeHVPpPAWRYkvDiQpyhuTR2QeaqIUr8JCef6cvOqWuXlWCQJ62Ugo7Dw\/Nn5WYLOi9Fh2+4asEdcuVU6e001RPi05t7plVRKxnMpuHORduED5NgDl8XLm9K8Ar115ujJ7jm\/IPG8V160y0HAiEiFVblMD4bB33k0\/A4+Rv89tvQTQesvfS5XZMwZ29lf7Byt4ToQg6zahocQyq2QkE9c0TGNpld9Wflara+oa\/50LoE+9u3duv78Y+m25bm38zpsHrI53DODyF\/7D4bCp+yDVeJNCU9YLaUhUmYhdpuKMSiE7Fp75+pOdytKN53WY6KLDlotiB44dvi\/oF4TZQwyC3cnC5mtDf1VFg4gyXsPAb12CktEp07k+GJYFXc2CQ4eoMsXT0WMQg9eZwPFSpuwgUjkJdlc1wNoxhNs0lcGEjbAKWiOR4GwyPBIhWjVE4laW3PjsQyu27g7hQPMXHjx\/tasWWDzgSmsZEEYJnOYwg2DGwUFpolYULeqRqK1LoWAKqmpwPD7xhq3b8NHAUnIFQSIS9UAOUR63Hdq0Ywg\/aKEJG3kDVSC0IFu16mhwWCW3rZuQdqAMaUvum5IdFyTCLn\/U5jRIeyprEBkV9kDV4GILDpgePFYEDf1HHbvvEltTVSaCI535TW0qc+UFjAi74uNrOGYdMrQJPLIRd0RFITYSidbQ3XOihu\/tlzZ+3Ljk5ORxyeO3Tsjwpu4LKlXWiXSbE2FHsLsa8DJRg6T2wDaZlmpyoiXijnCOjrnpErF1D286\/pkmV17AiMgQH7gDWRWIQElYaMJGD3XC6DYPnoZ7X4HJgCntm09M6zV06NBeabt\/2uYdta9MiZd0GZIfgqPLkKbgDAiwOlWsajjHDQ3y2SBM5+aPaYEBZA7IKQogaSC2EAgUOC3JrRGgoxNIG5g7hhJWHpiwEWsKXizhalWoub0fHhWVsDxj2ooV06b9sm1KVOmjNdg3GES8ox3P4XR5zqQob9+EhIS+Xm\/vw9H15tjxAnYr+Ce0tljTf90ThaOySw8+6asfnyKIIIJGw1G2ZvkFCmVuZHN0cmVhbQplbmRvYmoKMTYgMCBvYmoKPDwvRmlsdGVyIC9GbGF0ZURlY29kZSAvTGVuZ3RoIDc3Nj4+CnN0cmVhbQp4nAH9AgL9\/\/\/\/AAAARE9x3OHs9PTy2uTo8vHwiI6P8fHxssXL9PX5pr\/O4+Xv4ePo7vP06\/DzaZKs+vn5ZW9\/9\/n6qK+9Y4mTPkxx9fX2ZoaYlrPEX2l9cIm1nam\/ZIiwYoGx\/\/34pKu56+zwn7jIaY2mfpC3cJaisrvZb5iwjZu5i5vChZay5uny3+Hm09K3+vfoxMOr4uvm7e\/1a3SCZIip7OzqZoWg\/\/7+dHuF\/v\/+\/Pv5YX+a1tjfYXWY0tXdy825qayhkKq9kqK1V2+O0tfm3+Lw5ujsbZGYiqS4navLf4id4OLn4+Pg5+rWmLbHqbC+\/f3yZZCp7+3TxMnHmJ6uuMvVvsTasMnWW26JXYGhUmiG29\/tvb+uzdrhgJuxUF98z9Tiy9biS1x63ufr8\/f34uTp9vX06+70sLGj2trB1ODl1tnqv8TOgoiN+fn4\/f39j5ep9vb1o7zMyM7j\/\/\/+6uzvkq\/C\/v7+qqqq7u7uVVVVd3d3zMzMu7u7\/\/\/\/mZmZZmZmERERMzMzREREiIiI3d3dIiIia5CGgImdk7DDSVZ5S1l8pL3LbpSdzdDYTVp39PLX8\/Py9fX1T2KA\/\/\/4ao6Co7zKR1Z7X3+pwcfaa3WNaYSdX3mVeYKJZ4uFb5Woao6GQU9xbI6e+vr5+\/v7a5CYaIuGZHCJhZa\/SVV3Tl19YX6PZouk6unmxcnT7Ozt7u7sS2B+\/Pz6nbfHX2uF6uroa5CM8vLw\/v784uLfYn6VZYycobrJtrmq6ens\/\/\/l6+jNWnGLscbT9vb2W3WRuc7ZlLDDYn6hfqK2bZOh6enxa4Sx\/P30Y4CrVWmK4+vubZWtY4OOY26K5OThcnuTrrTAm6K07\/Dz\/Pz78vP3pKq0pLzMc5mteYukxNPbk5qsbJGd+\/v8X4OXqsDPbJGSRVJ0UmOFdZOrrMPR9\/j5g6a7\/f3viqq+ao6SbXuR+Pj28PDudp60ZIKf2t3iVWF6WWaCfI+xmrXFaY2Ms7jEjJSm9Pb5qbTTyc3VnrjI5ubkjbkP+QplbmRzdHJlYW0KZW5kb2JqCjE3IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0Zvcm1UeXBlIDEKL0JCb3ggWzAuMDAgMC4wMCA2MTIuMDAgNzkyLjAwXQovUmVzb3VyY2VzIAo8PC9Qcm9jU2V0IFsvUERGIC9UZXh0IF0KL0NvbG9yU3BhY2UgPDwvQ3MxIDE4IDAgUgo+Pi9Gb250IDw8L1RjMiAxOSAwIFIKL1RjNCAyMCAwIFIKL1RjMyAyMSAwIFIKL1RjMSAyMiAwIFIKL1RUMyAyMyAwIFIKL1RUMSAyNCAwIFIKL1RUMiAyNSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNDU0ID4+CnN0cmVhbQp4nK1a3XbbNhK+x1PgUjrHyxAAf8DsRU\/WjU+zZ+OksXa7OW0vaAqy2KVIhaTs6oH2kfZ9dvBHUbZEQg7TU5MEwA+DwWDmm6G+4Z\/xN0wCj8RMX2gS45AzLwoDguPI3NQC\/4JL\/Oa6IThrsO8xnySRzw936NDWZIDpezTAvvxP3iTwN2R+jGMfJglinG3w3xY4DtUQc1ls8JtFRhDBixX+Fc9uPtzO8V98j+DZv+dYXd\/LK8WzL6oDbt7Zmyt7g+0NvI3029fmLQ\/6fseLv+P3C7XuYxmpn3gxI9GQjMjIiJWMszdv5njxxxk4Srw4DC9Aw+fBOv1FnHjMBQ309\/m5sj78y7R0WrOa+WoVbbSHZne2ZfFC1V2L3Y2P5mqfb3vv\/o7O6juKvTCIyNCacH9NqK8hBSNNjXOPE4ajGEw1igne4JDCbdJrKo6aCI9R0X8NGmDIGq8G1B5RL6JWxFBPri9G7fTlJsqX\/YT7AOjFlIQRj+CO0zgIiZRcnabru8M4dGLc3TXcJzzAT5jiRT0gYpB4gRURkPyERXiRYTi9crC5aGFZZyM3cle1IcjLQm47bNzbOQ7VWiI0+wWaIjz7CS5MW4EcKPvw7Efd+Elf3pu3dd\/NhzkOtDEweYKR7Hr\/RQ8xMKdQdJuZVWMsfup3fdVQZvg\/9eVLf+rP+sFOZsQyL9weLeQfeI66eUzXzacjzI9aFLtyPfQY7AftWJAxzRP7FMSwPTHhx\/s0sDunrf389lPwXsGQhQbGQm\/yMi2zPC1wVm22aZmLBmfrqmoEXldPuF2LPW7WKbj8fbWr8VbUTVXC6LxcVfUmbfOqxDdiKWpom6Nxj0XC3uk+Egz3BUOzIn3CD\/mjFKcqm90GJpbS4Dp\/WLe4rXCRb\/IWN9VG4Ptdi8uqxWlRKGHz8sHrpJJAadFUTuL5cLycxKvFt11eg3S7RgrTCpgaNKSU9iRA5qIQWWtUl5ZLvK2rVrYoNfa057nIFfIIvCM4r3HBPhcihc2rRboEfeWNVEyegUQgyGpXFHsp7q4E3TStlOtpnbZS4mXlnY84AUTDJOEHQdCYIG4BLIypDIdToYWxtHoHtAUYUrvfwvZVq9M23dtDqSW9j0uxFfAA3dISYUeXO+h32b+AOZp9VeNG1I9yx5Q5pY8CP+XtGuzMw1Lsg5DnNcIgwFGga3ZeB40MrriRSzbToaFlUu50fPCsr7+RJYMJ9zcmS0t4zordUrw9r\/kgimT0ZM4ioSELIz6XKyQ4JNTj0QDaAsgJkgv87wAaYV4c08gBjaJR6yc0cpQtCwzaXaUc\/p3IdnXe7nG529yLWu06aBYc6oBlEaBpJI7tbN93cju9BglsFx9AW1ha7KLXcbQT\/OysXkfRupW+y7JqV7b4Pi0gpmq339Zp2aSZMl0w5baq9+etlgUhZAmHOSey2oADlfSnstpxtEusdhSts9rrWiwh4BslKuVmuqnJKojEA8lXEno+hDA72UThRvoYNh1aSLzECe0dUI3VCdpWCrGUwV177mwHehowNRp6lFFu53UwNaBg\/2tOR0vJgHZ16bROBh7EaZ0QI\/Iai0dR75fpHkhek5eigZjw4VbF30boY3UviurpSsavAmxDk0TgQMAae2pyCNIBRE3ipIkeVYZopPWtpVVaP6+oqyPpXGSCMzxyPIxMQOT\/BL5ryHvTGcJfsWZ5AmauVYCVMmvyrPihJczn43sQEI+EPnOWxlg8Gl4bSwJ5fpzQxjXFIKVys2MXK2URuIzTKb5xcsy4zAtS\/OGUnYW0F2dkyh6wkZR99hWSiSGXHXhxAi8eQw8BDrlsCP2RH0WvEfRXPNsCq4D0GcSFDBmcNSTPcDpUWzFHur4Q41muag3lSqXVlR69gbQanvTgVvXoYYqVxvZV+xe9aHntX3TB+B91QaDSy9QL1D030ILswv5U3X1d6GXpofq1ddrr1kN\/6AZdItPY3+eaMnUfPb3R7V49gNtQT4VahV6L2Rb90M5RoGDOl1RDkoA5JtZ+hmoe4wTicGwCv+dFXonW0ZFp0CI6JVrCJ0SjLJgSLfYnRGP+lLvAgil3gcVT7kJATu4C+FIec\/+FM0XPnHTv38AcAfd8\/\/kcqhbs83F\/3a67402VYzIVWtY9rOfIuGVZ9Kz1wFK\/9dB3BDpsQgA8WQsNCfGoD6m6kXMgbXOIUge\/AEc6olOxcwZCDpaWTsk2xAfQKB+gcO6PTONMCR8dl\/ArXabWwUMXwMWjDjq6bW9DCfQs9eDUtsni971u2+lLo3pM8NJNorEhrsPZHr0j50G2rerjmFffDn55k2kVi4lVwGWsZdjWOn91jP1K6+j81QVoQyeWkfBSvK9DeS8DX89pkEy0WutPp0Gz\/nQStM6fToMWXmwlt5X7sX9Zqwy9hNDnJ37U4NGxwZ93JJyNZUYmYjW7bI1TlTtu6yqDZFt\/rugVsZqrATbAuZdwQuyME\/leGiWOFYOPaV628L+WOtXluN9mzW\/zK0i6m20lC3IDRRG5gIBEiZ1yomSShuF4YUElk9cj+Rz4G58HI4CoX0PBVS0\/9agiQCEeVDniUTRt\/pDq7Rxid5CgxyTqFjDVfgauVbhPNWzbtqrV9z5T7Lvf1SLdNf2PVeg5xY28mDFmJ3ItV4x83KA0ci5XjBc\/KHEru7kVP0gSj5crXnxG\/q5yBYEzzmm\/CuD0C4MT9ETmkcAu0nqOoO0\/olV9R5Tj4RzNwOdoBur\/bsGVilIKmWkch3ZxhjIPFikrXK1WosaDJ5dyCpyGPNfa9\/KOC9CceIc7nhvvmGa1lndMg2Z5xyRoHe+YBs3yDne0SXjHkbVPxzsgkPZ+2zLEO8yXYB2lzLdgxUIgjg\/8KoHKDDeJuZ1povhEQlX7nQoNgtDgTxymzxxhT3ux5dWZ4\/kUjRDfiwKQ6TATMuULnowHgT8q7fHzUl\/bo7meRXPCQkXFjhfllg2iF4IzYNgkCU+oiEcJ\/DsrfPc71E2qogpoiUOwUvfCVEBlC4Qt4qu4pasgOgABJ549mUwayX49eK1Gmf5KPfQ7hJ1pIFkGlxHSqFvQ95X4DxYk\/dpRcPfp+L6ucl047sr1si5knjJdLNIjTFdhKwhU9qthlb5ISpDo2P4CKVexXeg2U4rybLl96Ae98qcwnNu1mdg+TVnBFlWP9fZK19EVKSZBO5AFdzQ3suCM50gWJlltRxYmQevIwhRoB7IwCVp4sZVMQxb6x2c6spAkcnIQZ5wtuHzHGYFDFwZxHsgfkZ2GQ2ej+M\/4\/zgQtckKZW5kc3RyZWFtCmVuZG9iagoyNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9HMSAyNyAwIFIKL1RUMSAyNCAwIFIKL1RjNCAyMCAwIFIKL1RUMiAyNSAwIFIKL1RjMyAyMSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNTcxID4+CnN0cmVhbQp4nM1b247juBF911fUYzuY0YoUSUmLIINsI5OdYJPdwRgZBNk8qGW6raws9erSbud\/8kPJD6VIXXxpi6LGxiAYoNst0acuLNapKml+hY\/wKxDmksBvf9EoAB76ruCMQCC6D6WEz5DDN\/cVgaQCz6Xci0KP4aeAEi5C4XhuSAPGCVRJu+7+06V1MKz7dI+fo5DBDigsS9QDl+NK9U99iNS3fS+AgOB3ROAkW\/huife8yBewTAD1Uou7X8stfLNM0ApYruHvcPe+WMBbAnflAny4gwUIuOsuNQvn\/E681n+0P9MFcLjL9M\/2c1zrG7JaIH73Ffms\/5DlwsFbe\/3HqhUQ7\/t1\/4Dln+APS+3mU\/Oo77te6NHePNDmOco85k+b99CgLrTXL5daYHupasU6l8WGKEEE\/FSsSRia4Sz\/edmIYY9EFLgk7NG0ERf3yDkx4qcG94DB3VPRan5sxbfayScu1GJVfCFS6ZzrQhh3AybomS68\/Vb3q7WMdZal+boot3GdFjnED0VTw75oyiN7jQGMilwMXBr4LvG56BVxbFwMg8hjI19h+55QHidn2CYjj7Bfo0Wz0UxwhM+F+5s6UqN4PkNfs+hGxjJ6S9cF4Q3RGObeG6Jxby7aX4qjCDQEvYOB+Uqc4G5E6HkSmIx35zTex3NLSN3AfJ6dFrYu47yKE3WeK4jzFciXJ1mmMk9MYYYR5hLBo17Qdc4\/qC1C15+LNuV7M1MKzs+y8GWmdOyZ8tWdM6Z0ZjEljDOlcO4eToS2CB2\/tZc61MrIqz3Bdc6Yl33HXcuIy73jIuQywcEMgnPGrSCYrCLfH+ROninHnkMORHmCfRKhzihR2sXqgRyds+3xQpdzKqwNO2yPM2UYJcT1BQo3GHaWMY5ZfzxBBLgZLDTiOjNIt6dwezQw0244F3CCdoOOdm9i7kC7N0ELZttqRbs3QRto1xrtmHbHafUWyh0SGUWS9gJiAXdfylVa74qy3qS5rCoAcyBSj6iUIAYZt2JSgrzsfVUm5RGSt\/d\/x6TtpQ6yvbTFP9TqFvkXqZY448tbvj0oNdJdXciBnsu47\/eesWoVJsIlDGdDWqTVeQpapFV7QLu0ehtz+7R6G7Rgtq02afU2aH1atUezSqs3Ue6QMELfjW6HJqKjatOE9mEN+3FATMIuC2g4A7BoIC4lxJDLHSRNVRdbWb6BnYQkzuFBPqY5VJu4TPPHtm46HqL4HqzifQXrstjajI24qtFHyOhEL+eu3kjErqXSpJJ5DUhKFeRFnSbShc8bmSt1tO55AVmRP8oSlH6nNhR5neaNtFKOeYp2bHQrtEvka4fEFaxklZTpg1zhjVOlvy928lkpphRX3lXaYftqpRwVRwRlUq7BVrjGbngPdbqVgLpm6TatTTQeuB4zirCvOyjxZoIpF3YB5ppqcoZ4XJwCO1cfPGwhIo3m3OAYsyiwPHUfG1npscU7Ay7hWAexcAbsX1MDIRHMCaGaU9rjpQY01SSJgM1AM8QgCXQM+jPQTI4LvbloeGqKPMOyVx2e086aXJpWUWyqfT+cI2K327nrNH+RZewmxfZC+36J9MOAzAksYwnB56IV5ZCj2rTy04\/wXfEClHM\/OohyBjcpt9BIeUWoqQxstQ2Bf7iSHV3hqj7HK4dv6StOBhtYj7vlcN6QhIlV3\/8Js+2fkU2KN3D\/e4iY51FTsvHCdqZ0IuDqZMNE2BHMTZINZzesZ5gfWdYzv1ma6g+sBL0wmgGHNP++PRRv4EOeuPDz3X+6C\/\/9eQFP8X6r2P+pLBJsSVUVUsnyGfkUkFnj1TbN06qW2LnCw96GSBnlU7Oijkjvy6KqyiJeVUrDOE\/SODN2wxjgoQhNEs6obymTTV5kxWMqqzfwww\/3gJUExFmGRcRDjYbWdSa1+aXMMHpXve2VO24pxz6GRVE0w1KrAEGmnDhrQBzbcPMxG0zUWs6sFn\/06dxBJJ7l04luFHjTI93Pm7Y77xvsSKtEKObzhdOOeMVwaaXXFvZtNuFYf5CQnGl37Wn2FdXTrzpBwcLCFfR4goLJfnKC8n2hZ+O7YWQRaSdS7cTWu74eoLP+7vv+kX3oqMcEuOZF321Xlu2kpZ+64PonvabsZzNUb6Lo1yf6Z71wRL9ezVeonpuwU4hjAa1CLVyrRCsy02q131Iq9nfXCwj69eUwxhm+1mrUfuEY9J1+1QD6oLMNKj8grlBvWpzsydX0pXg7YreiL5+GLmc2IbosVPavZdIN7p9kWRU55uLjxkt3oE0eN\/WmKNN\/YaqME0UY+rFgU0ndDeJvG4rw1ZsxzCZxVjJpyrTew1bGVVPKChs+rJKwunvK9rBLa6xj5AqpLIMs3rmw3EhUYVic5knWrKx0olGEvYCNTkp4g4wIVbyWj01crpBbtKLolHWaydYnD02arZBO8SaqUpdpUity7byGXePZqxHjmoVYCVtpNmycko+CigaZbdhEA7PyyCVRMIiyKVxzZQLGArpb4mYUe4l27zYF5BLdgPd+yYtdu1s2NgaeCn2bucVxUA7hoQw22IdEHQpKz8QYD+xTmT7HiWEURIXAIOZsAL2OWigyylw4XbOtVKQbam3fx24giIIv1PM60qI8ODpVlk9bx9FUGyMmKNA5LzC+nAKdgV\/MFJj0jwVoy1D9zwMFOh0F3YQClVo3okAHKbCzw5r81LzXC9jZblz7GI36xOWXX0r5EjQy+sraGdpnNcPMMiP5vdFtg3yJMdEpoutmo9+OJzZG0RohTHq8OnKjYMTrHiao54HGFmFJutP0b0MLSXzMB1RYoNHphoNQYanb0HD8+ITui\/OBoNC1j+mzKh7aHegHIhffkXj9aASTms95L\/\/KuVbvaYJE6Jnq+87TYOXpaTRqoVvv6Um0wdJPGwOcjx2MmIOGdI5blK6wXU7XadKdjKd4327bQ5plldpMZKVnXKUHWuc1CG6loa\/2XCbIoNJ1ffVhK0XYVdWGrXSst3ISjb7uq8e3cgptODRLmWXKo6rCSnX5WMpEqmOzLXK5N83aotANIz\/ohd3qhHB69BL51SdkEm3WCZlCO87+cVYV0xTQ9j9FvcF7WO03yUY9ikr0Cx2m1D2o5IcY3DYx\/YD1XNygkHiNzUQa12p0hcdKy9adT5ynExUfcxnBcrcTeuWODyZQpoa2X7N8JF7kipOCb2SkdDr06EZKe10RdZOjpK\/ahK58DG8KqpekOR2Ej77v+McuwH\/r+cz\/3bj\/sEwS6n+DnMApW7xwejqmnpVgffahf2elnYHo\/6eghmOqxAt1WUeHtWjj22FZ+xP6ElfVg+ict2xYVqa6DMzbi4\/txXftrxlVIeVE\/c8WdmbmtUOMCGvNMPC4Bdz7bg5gojwM4DD056Bm8U5XJ7o2AfXMvEwfN\/Xw1Fc91NobCkGfBq7nhXyQOY\/VPsL\/AIqxj\/sKZW5kc3RyZWFtCmVuZG9iagoyOCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCi9UVDIgMjUgMCBSCi9UVDEgMjQgMCBSCi9UYzMgMjEgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggMjgyOCA+PgpzdHJlYW0KeJy1W92O27gVvtdT8HIGSLTin0TlptimXWD3YtNFpgiKohcambaVyJJDyfF636cv1KLv00NSv54xRe3MIsBIlsTvHB6efzJf0S\/oK8IsxAm1F5ImiAsaxpxhlMTdjZLoE6rQd+8bjPIGReZfk8PYKCTM\/tY3OBIh4RRGRkmYiiTID+jPD4jbAd3l4YC+e3jACKOHLbr79z16+Iz++mA4uULDNEwSEnugkQ4NOdBI7Mlbzjq0j\/tMFdUObWuFsu22KIuslc3\/kPwm1WWTXdDjqSkq2TToeFLHupHNfXCLPE1pyOkwF7RM\/a0LDOYCV38w5AJLV4IVFUjkkLVFXaHssT61DvRB7LEWgAd8cHepTwrlSm6K9lyrdm9EfHthCWOhIIS4KATX0ritJr0Kx0kS8siBtkqFl9HWqPAi2jDT7we1RVtVH5BW2B0yEp6uYlujQ6a+yFbfwVvNQ\/AsD4xEIaNCuHjw171R2jEOGXGgddIO\/KS9iAbSDrylvYSWs+Cpw6jqavQZzwr4hjmyJIziiPVkPfyUYxJppOcAyxRrWC+0jy1wjMrs3ADLF7QrvknNMco2DhukIqQpXkEFjBsULyuRKnb71gioLA5FixorwxB9lBI9yrI+G3EeaghCtxVpnCclYexerE6RQO2NHXQMnKqNVKjpJx86hEo4zFbggdhrLREGYyAJXgenR0epAIWJwoRgHosY7gRJGMcBxGgTtN9\/dH6HPr6H+1QwdEYEPSgHjxGfLHAURmmaAHM5gixBf91dLLfUcvtPdPdpf484usvuUYzu2nuUmilggu7298Hw4mg+sn+leVKZe3D+yTDgfI\/MsOuPzOvg7ke4RMPHJVwwBCx7OcBl+DHjwlKYMqnug3T41lLYmRfdiK2lU5s3aoqVXTOlHwXwKDcv7F877mT+2k9n\/MxnYfmyQ8r7QHO0mcJ\/tlzaD2YsW9BOCpdrMQZzWeynmFYiFtLKTU4YrybihwH\/Ch5+WlBunpKQswSjUXMgG3pGcYKZ4siy1wDNwZ80LdTTsoYBKh49p7IYAlWKCR0ov5KV8kSEIn4tm+cxC5kX2j9MVrSvi9wRssD9phiLFbAQm85FWaLseCwv2gub5LauJOr9Y5bn9alqQ0cGmXCgRnlP1sP5esmGg5YsoS1F8RGN8jCOBwV0hXFP76pVz+0tOSGTZdA6D9NZdJZ\/AbuixsMkxpyFsTei7wNhjDXun9fmuX0LNsKsNfpaCAfuCE+v2HyluPOsZIacikPilwy5upHMTcEEvWC+35qpb3sBJMa1Jf19ZsTQ9q5pEMm7QSTBokiSNMSCiCv+PJXlCZoga9Hy+nDMqgKsUskSUpENerwgeHgAa6zPlVTNvjgiyIfyumpVXYboYS\/hi6wa+Qhu6iNLGSQufjm7RQscebE\/2qNE26LKqryAhC+rNjo5Hh8Mcw5dVSo4A54k\/lSdPgZDzWjnAN6cuqoYXXcES1UeS23dsYxGPLQmJp68DVrz4TRtUEBll5enjXRlsFC80SjmExrBwhqOmnku2j1q9xL9oMPDh+xLg6rsIN+g5pTvUda46r1hbjENU4\/qMbgbifwA86rV8Q36scpDx9xEAm6NcBeNFf2AQdthkf1q7peGj5EkhCwczcJH7JFs\/zyNClkfS4zjDIbIUZq\/9t5+Y+OKjT3XjvNpLAmueE7TkBLGep5f5mJIRNaijepZ1e2y87ytogxCgOAs9aYd3HWe2CMJ0d2T5CZmsFYlb6NdqeQQJPw98c1owiIKVCO6MBnfaDJ44oi5C\/d5v+357tToiRfRxn6bh7daQhtU4edZ1+fs9MGchnGUONGvllH3RqT1v7OI\/zRa0jjkgk\/lsOTfu6DhwEzikCWQzXSYL6uAKJjZSrRDrdpdtpPIUQExhuGS8BWwvc6\/8YnJVJuyF2xRNScFdiVHq3JRIIJCsROLFRQ2hZJ52\/UVddtxQqgz7aOqt4WzPT9MDGo44dc3Uzsg8ptpHDeuOEyTUKQpdUH\/jjhMb3dj\/6g4TGddTR2HSbochn+CMPzW9puYicZvbaeFGJ9j2ypvYxN99Rtl3nyxP+T06xnAzl5W1DQE6zSIsX4aL6tpCI7XomXIbDRAvNkpKQ+yaiEMtWcpq1mT3NFeZnqLB3NxtRK\/0\/UwAFmJNoZIjyBPX6MrPCqfN9qYArX7TG807CRk6arfeBjnAF5hc8rbRqdCjVTfitzuUFzqk6sE4zrwk3Rg6ZVKMAoaxdlrlWDLaGtKsEW0WQn2uS6qiTs+ZqrVSedQj9k9TQjdamMc9FHJY1Zs7ANHUjNwo9Nir4Lbq6QmoGKCp8Ib172evcLq+mtxH\/m6bfeyPht8pvsrEwft0Wb7YAuevSl4bNmj+oZ2ajYSEuujidmToKbbNnxkB9vKqZrUT8i00oeunam9gmQ+tgOdll1DO8\/C+ZZdhEHWkES8l8DLcvFRnnGke9weaH9vJKq3phswKpr+DD97PgQcbiyYD35nVufzOQTH9atUWQhKPVGYXi5PjwPwkOBkSmQp9XWFOyZmaB5u+Cwfm6J1JNLgQiHVE3wF5juEPu2lacijE4jcyBs9lfeVeuijHVor\/NfzWt7BorxZmkCtHq1Z1OdYN6qBKVRFqUnvDmYhIz4+KWdPMJh7ORsFT+CbPdqaaQs+xdJMknSKNX1isaajRqyb8x6NhcW3Nj2CZzXjjd1XKesdRIbZMYyigRy+LCGrlzZCNG2tbGL0fGigApwuZtzFxIpjRUJAbkf80ZwBgYKa+6MFYw06nFD58W8+6RaBbOTGNtGV\/LPNRskGqqNHVZ8h8UHt5QirsakPGSyE7mHqyinP9YmutoBfZg1gnebL5IqpI1c40dtNPg1Oa27arnXmVjQ9LYcHgVgbp1E8pxK4lt3o19bVjWAhpYnoIX0KZ2X80KGuClBTWLU3qD7CTExhCIK8HWgYodr4Ym8pmaB480gSjTTrfAXaxtH\/g7KVGY\/vvYLOWiNagWaM4OspK4v24qX6kJETP9Vv+m5EF62HvL\/ebiX4GL3dO48qT+w5ghkQyMs6qh4a4o6DFLQ4YWwFnqvHqosShiGb9Yd70HIAFs05p6xsautv0X\/yuv4CyfN\/fXIlLIRnbO031HVyfmrB\/ex13r9R+oAVVF97WR5NgAcbavTRqOI3aQfUVVlUEslf4U0hYRG9PBBonacTf2+nq3uKunn+eNG+aKN5UqdKV4s7lR1MtbiRJXCrHKsAtYqg6UD9hU3CmK9F+1Yo60jrubC92vM4NicOPMj0ItP92FNVfD3JElSoaYpdZSUHxG0XTjdqYQEvuvWuZGb2JDIEqYAxQanPYXqtJuOe3khbcRfSTB+gANPXPO11J1Jz3Zf6DrljrPP0georHXbBFHtaphca1OZ+2fMHaz8fZX5S4Fnf6T3zZ3LQJzsdehuKUyZ6Un9I\/kwjrXOC+BBZ7lzQiK5F67JSm38U1ebUtOriiGhEVy8Ezyk4c4+3LjQaJjyaoi1Va00LZtV3TK6qCLNi+v8yYG7Ozh6sePHwBLL66ROb509Hrcn8ceR7bsYRBVNI5TBJ2Qq0KleXoz23LfN9VesMVe826QpRyVwW3+xuQNWcDvpMq6xggXWU2WQtxA7dqmq0LYBX8PA8EN\/AJ0KBt+x6Oo\/WnI7HWrUNwkQ4Gkb6PzFQTpwEAm9NgtAfplALrIF7LFokB2lCJSCPsjL1R5cNgU0ovY336NBgysIoZfFA12MBXQZBISkSZBVcV844HDoTLMQRlLsrUCf29Qv6P\/gi4N0KZW5kc3RyZWFtCmVuZG9iagoyOSAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggNTQ3ID4+CnN0cmVhbQp4nJVUTW+cMBS88yvecXNxbGxjyLGrHnprKtSqRwdM1ynYG9sk2r\/ZKv+nZr+kVcquERIYJGbee\/NmXuARXoAwRAQ9PPJKAC8pKjgjIIrjwSn4AQbu155A4wHvL9\/EfzHK2eF9OlTxzikWIHCFikKQrBngUw388MfxUQ9wXzcMCNQdrOAO6mf4XO9LmYErKo7yQiSgrWWvO+uMlldwCeOIlWIJrlNet8oEfwU1gmFW8AWoD\/DTjjDIHci+t29gRwd+I502v8B2oE1sZZBBWwNvOmzgLrs9qhKjshBwizxbGWtk1+ley6BaCBvtWthKF7TyIE0LvR50iCXNd5xXDFFc8hNpyhzn+osneLbahL1u2Y0miwKxhCZhNUj3W4WJbz9AGzbKQaeNNI2WPTR22Epz6niqYZLgPBb\/DupVuV0bFUqZPc8RTpr90+i1Ud7DdnRb6yP\/0y7ST0sw1RqrjMPxwY3NNBwfX\/bf5qWg0bMVE+caEqRQpukjdQt\/vgxb64I0YR6fVRQJSukC\/CRjU5GaE1+dfpXN7or\/KEacxMMC0GshQeliuPXG6iaKOS3SOuo2Dsr5v2BsmD6jM1n2QT4sEME4P5MlrHaSUXI6RVEC2nflBhvd9+0UdA+wu8im+f3PS4Lyskpny1a3gu4ym1IWCZeJCXQZdEm2+49T4LiOKbHAY0ympFV2sT8fBHk\/7hG6FgM4urMqyIlzmQUe4R+blwYzCmVuZHN0cmVhbQplbmRvYmoKMTggMCBvYmoKWy9JQ0NCYXNlZCAzMCAwIFIKXQoKZW5kb2JqCjE5IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUxIC9CYXNlRm9udCAvTExWQ1lEK0FkZWxsZVNhbnMtUmVndWxhciAvRm9udERlc2NyaXB0b3IgMzEgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyMTQgXQo+PgplbmRvYmoKMjAgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHlwZTEgL0Jhc2VGb250IC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZvbnREZXNjcmlwdG9yIDMyIDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMjEzIC9XaWR0aHMgWzI1MCAwIDAgMCAwIDAgMCAwIDI4NyAyODcgNTMzIDAgMjIzIDIyNCAyMjMgMCA1MzMgNTMzIDUzMyA1MzMgNTMzIDUzMyAwIDAgNTMzIDUzMyAyMjMgMjIzIDAgMCAwIDQ3MSAwIDczMSA2MjkgNjcwIDAgMCA1ODYgMCA3NjIgMzI0IDAgMCA1ODMgOTE5IDc2MCA3MzAgNTg3IDcyMCA2NTUgNTUzIDYzMCA3MjcgNzAxIDk1MSAwIDYzOSAwIDAgMCAwIDAgMCAwIDU0MSA1OTMgNTE4IDU5MCA1MzAgMzIxIDU4OSA1ODEgMjYxIDI0OCA1NDAgMjU4IDg3OCA1ODcgNTQ1IDU4OSA1ODkgMzY4IDQ2MiAzNDAgNTgwIDU0MCA4NTUgNTY4IDU0MCA0NTQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMzY3IDM2NyAwIDIzMyBdCj4+CmVuZG9iagoyMSAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0FHS1hKRStBZGVsbGVTYW5zLVNlbWlCb2xkIC9Gb250RGVzY3JpcHRvciAzMyAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMzIgL0xhc3RDaGFyIDEyMSAvV2lkdGhzIFsxOTggMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyNDQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDI0NCAwIDAgMCAwIDUyNCAwIDY5NiAwIDY5MyA3MjYgNTc4IDU1MCAwIDczMCAyOTEgNTExIDAgNTU4IDkwNCA3NDUgNzYwIDYxOCAwIDYzOSA1OTkgNTcxIDcxMSAwIDkxOSA2MzUgNTgyIDAgMCAwIDAgMCAwIDAgNTUwIDU4NiA1NDEgNTgzIDU0NyAzNDIgNTU1IDU4MyAyNTcgMjU1IDU0NCAyNTcgODYxIDU4MyA1ODIgNTg1IDAgMzc2IDQ5MyAzOTIgNTgwIDUxNyA3ODEgNTA4IDUwMiBdCj4+CmVuZG9iagoyMiAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0lQRUpKRytBZGVsbGVTYW5zLVRoaW4gL0ZvbnREZXNjcmlwdG9yIDM0IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgODkgL1dpZHRocyBbMjQyIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyMDAgMCAyMDkgMzM0IDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCA2MzcgMCA3MTYgMCA1NzAgNTQzIDAgMCAyNzIgMCAwIDAgODg1IDc0NSAwIDYxMiAwIDYzNyA1NzggNTMyIDAgNjE0IDAgNjA3IDUzOCBdCj4+CmVuZG9iagoyMyAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UcnVlVHlwZSAvQmFzZUZvbnQgL1FRVEFRQStUaW1lcy1Sb21hbiAvRm9udERlc2NyaXB0b3IgMzUgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyNTAgXQo+PgplbmRvYmoKMjQgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHJ1ZVR5cGUgL0Jhc2VGb250IC9TUUtVRVQrU3ltYm9sIC9Gb250RGVzY3JpcHRvciAzNiAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMTY1IC9MYXN0Q2hhciAxNjUgL1dpZHRocyBbNDYwIF0KPj4KZW5kb2JqCjI1IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1RydWVUeXBlIC9CYXNlRm9udCAvSkZSWFFEK0FyaWFsTVQgL0ZvbnREZXNjcmlwdG9yIDM3IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMzIgL1dpZHRocyBbMjc4IF0KPj4KZW5kb2JqCjI3IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUwIC9FbmNvZGluZyAvSWRlbnRpdHktSCAvRGVzY2VuZGFudEZvbnRzIFszOCAwIFIKXQovQmFzZUZvbnQgL0pPVk9WVStNUy1NaW5jaG8gL1RvVW5pY29kZSAzOSAwIFIKPj4KZW5kb2JqCjMwIDAgb2JqCjw8L0xlbmd0aCA0MCAwIFIKL04gMyAvQWx0ZXJuYXRlIC9EZXZpY2VSR0IgL0ZpbHRlciAvRmxhdGVEZWNvZGUgPj5zdHJlYW0KeAGdlndUU9kWh8+9N73QEiIgJfQaegkg0jtIFQRRiUmAUAKGhCZ2RAVGFBEpVmRUwAFHhyJjRRQLg4Ji1wnyEFDGwVFEReXdjGsJ7601896a\/cdZ39nnt9fZZ+9917oAUPyCBMJ0WAGANKFYFO7rwVwSE8vE9wIYEAEOWAHA4WZmBEf4RALU\/L09mZmoSMaz9u4ugGS72yy\/UCZz1v9\/kSI3QyQGAApF1TY8fiYX5QKUU7PFGTL\/BMr0lSkyhjEyFqEJoqwi48SvbPan5iu7yZiXJuShGlnOGbw0noy7UN6aJeGjjAShXJgl4GejfAdlvVRJmgDl9yjT0\/icTAAwFJlfzOcmoWyJMkUUGe6J8gIACJTEObxyDov5OWieAHimZ+SKBIlJYqYR15hp5ejIZvrxs1P5YjErlMNN4Yh4TM\/0tAyOMBeAr2+WRQElWW2ZaJHtrRzt7VnW5mj5v9nfHn5T\/T3IevtV8Sbsz55BjJ5Z32zsrC+9FgD2JFqbHbO+lVUAtG0GQOXhrE\/vIADyBQC03pzzHoZsXpLE4gwnC4vs7GxzAZ9rLivoN\/ufgm\/Kv4Y595nL7vtWO6YXP4EjSRUzZUXlpqemS0TMzAwOl89k\/fcQ\/+PAOWnNycMsnJ\/AF\/GF6FVR6JQJhIlou4U8gViQLmQKhH\/V4X8YNicHGX6daxRodV8AfYU5ULhJB8hvPQBDIwMkbj96An3rWxAxCsi+vGitka9zjzJ6\/uf6Hwtcim7hTEEiU+b2DI9kciWiLBmj34RswQISkAd0oAo0gS4wAixgDRyAM3AD3iAAhIBIEAOWAy5IAmlABLJBPtgACkEx2AF2g2pwANSBetAEToI2cAZcBFfADXALDIBHQAqGwUswAd6BaQiC8BAVokGqkBakD5lC1hAbWgh5Q0FQOBQDxUOJkBCSQPnQJqgYKoOqoUNQPfQjdBq6CF2D+qAH0CA0Bv0BfYQRmALTYQ3YALaA2bA7HAhHwsvgRHgVnAcXwNvhSrgWPg63whfhG\/AALIVfwpMIQMgIA9FGWAgb8URCkFgkAREha5EipAKpRZqQDqQbuY1IkXHkAwaHoWGYGBbGGeOHWYzhYlZh1mJKMNWYY5hWTBfmNmYQM4H5gqVi1bGmWCesP3YJNhGbjS3EVmCPYFuwl7ED2GHsOxwOx8AZ4hxwfrgYXDJuNa4Etw\/XjLuA68MN4SbxeLwq3hTvgg\/Bc\/BifCG+Cn8cfx7fjx\/GvyeQCVoEa4IPIZYgJGwkVBAaCOcI\/YQRwjRRgahPdCKGEHnEXGIpsY7YQbxJHCZOkxRJhiQXUiQpmbSBVElqIl0mPSa9IZPJOmRHchhZQF5PriSfIF8lD5I\/UJQoJhRPShxFQtlOOUq5QHlAeUOlUg2obtRYqpi6nVpPvUR9Sn0vR5Mzl\/OX48mtk6uRa5Xrl3slT5TXl3eXXy6fJ18hf0r+pvy4AlHBQMFTgaOwVqFG4bTCPYVJRZqilWKIYppiiWKD4jXFUSW8koGStxJPqUDpsNIlpSEaQtOledK4tE20Otpl2jAdRzek+9OT6cX0H+i99AllJWVb5SjlHOUa5bPKUgbCMGD4M1IZpYyTjLuMj\/M05rnP48\/bNq9pXv+8KZX5Km4qfJUilWaVAZWPqkxVb9UU1Z2qbapP1DBqJmphatlq+9Uuq43Pp893ns+dXzT\/5PyH6rC6iXq4+mr1w+o96pMamhq+GhkaVRqXNMY1GZpumsma5ZrnNMe0aFoLtQRa5VrntV4wlZnuzFRmJbOLOaGtru2nLdE+pN2rPa1jqLNYZ6NOs84TXZIuWzdBt1y3U3dCT0svWC9fr1HvoT5Rn62fpL9Hv1t\/ysDQINpgi0GbwaihiqG\/YZ5ho+FjI6qRq9Eqo1qjO8Y4Y7ZxivE+41smsImdSZJJjclNU9jU3lRgus+0zwxr5mgmNKs1u8eisNxZWaxG1qA5wzzIfKN5m\/krCz2LWIudFt0WXyztLFMt6ywfWSlZBVhttOqw+sPaxJprXWN9x4Zq42Ozzqbd5rWtqS3fdr\/tfTuaXbDdFrtOu8\/2DvYi+yb7MQc9h3iHvQ732HR2KLuEfdUR6+jhuM7xjOMHJ3snsdNJp9+dWc4pzg3OowsMF\/AX1C0YctFx4bgccpEuZC6MX3hwodRV25XjWuv6zE3Xjed2xG3E3dg92f24+ysPSw+RR4vHlKeT5xrPC16Il69XkVevt5L3Yu9q76c+Oj6JPo0+E752vqt9L\/hh\/QL9dvrd89fw5\/rX+08EOASsCegKpARGBFYHPgsyCRIFdQTDwQHBu4IfL9JfJFzUFgJC\/EN2hTwJNQxdFfpzGC4sNKwm7Hm4VXh+eHcELWJFREPEu0iPyNLIR4uNFksWd0bJR8VF1UdNRXtFl0VLl1gsWbPkRoxajCCmPRYfGxV7JHZyqffS3UuH4+ziCuPuLjNclrPs2nK15anLz66QX8FZcSoeGx8d3xD\/iRPCqeVMrvRfuXflBNeTu4f7kufGK+eN8V34ZfyRBJeEsoTRRJfEXYljSa5JFUnjAk9BteB1sl\/ygeSplJCUoykzqdGpzWmEtPi000IlYYqwK10zPSe9L8M0ozBDuspp1e5VE6JA0ZFMKHNZZruYjv5M9UiMJJslg1kLs2qy3mdHZZ\/KUcwR5vTkmuRuyx3J88n7fjVmNXd1Z752\/ob8wTXuaw6thdauXNu5Tnddwbrh9b7rj20gbUjZ8MtGy41lG99uit7UUaBRsL5gaLPv5sZCuUJR4b0tzlsObMVsFWzt3WazrWrblyJe0fViy+KK4k8l3JLr31l9V\/ndzPaE7b2l9qX7d+B2CHfc3em681iZYlle2dCu4F2t5czyovK3u1fsvlZhW3FgD2mPZI+0MqiyvUqvakfVp+qk6oEaj5rmvep7t+2d2sfb17\/fbX\/TAY0DxQc+HhQcvH\/I91BrrUFtxWHc4azDz+ui6rq\/Z39ff0TtSPGRz0eFR6XHwo911TvU1zeoN5Q2wo2SxrHjccdv\/eD1Q3sTq+lQM6O5+AQ4ITnx4sf4H++eDDzZeYp9qukn\/Z\/2ttBailqh1tzWibakNml7THvf6YDTnR3OHS0\/m\/989Iz2mZqzymdLz5HOFZybOZ93fvJCxoXxi4kXhzpXdD66tOTSna6wrt7LgZevXvG5cqnbvfv8VZerZ645XTt9nX297Yb9jdYeu56WX+x+aem172296XCz\/ZbjrY6+BX3n+l37L972un3ljv+dGwOLBvruLr57\/17cPel93v3RB6kPXj\/Mejj9aP1j7OOiJwpPKp6qP6391fjXZqm99Oyg12DPs4hnj4a4Qy\/\/lfmvT8MFz6nPK0a0RupHrUfPjPmM3Xqx9MXwy4yX0+OFvyn+tveV0auffnf7vWdiycTwa9HrmT9K3qi+OfrW9m3nZOjk03dp76anit6rvj\/2gf2h+2P0x5Hp7E\/4T5WfjT93fAn88ngmbWbm3\/eE8\/sKZW5kc3RyZWFtCmVuZG9iagozMSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0xMVkNZRCtBZGVsbGVTYW5zLVJlZ3VsYXIgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE4MiAtMzIzIDExOTggMTA5OCBdCi9JdGFsaWNBbmdsZSAwIC9Bc2NlbnQgODgwIC9EZXNjZW50IC0zNzAgL0NhcEhlaWdodCA3MzcgL1N0ZW1WIDk0IC9YSGVpZ2h0IDUyNiAvU3RlbUggNzYgL0F2Z1dpZHRoIDU3MCAvTWF4V2lkdGggMTM4MCAvRm9udEZpbGUzIDQxIDAgUgo+PgplbmRvYmoKMzIgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE3NCAtMzA4IDEwMzUgOTQ3IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA2NjggL0Rlc2NlbnQgLTMzMiAvQ2FwSGVpZ2h0IDY3NyAvU3RlbVYgNTYgL0xlYWRpbmcgMjAwIC9YSGVpZ2h0IDQ3OSAvU3RlbUggNDMgL0F2Z1dpZHRoIDUwMCAvTWF4V2lkdGggMTIwOSAvRm9udEZpbGUzIDQyIDAgUgo+PgplbmRvYmoKMzMgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9BR0tYSkUrQWRlbGxlU2Fucy1TZW1pQm9sZCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTg2IC0zMjMgMTIyNyAxMTEzIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgMTE1IC9YSGVpZ2h0IDUyOSAvU3RlbUggMTAyIC9BdmdXaWR0aCA1NzAgL01heFdpZHRoIDE0MTMgL0ZvbnRGaWxlMyA0MyAwIFIKPj4KZW5kb2JqCjM0IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvSVBFSkpHK0FkZWxsZVNhbnMtVGhpbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTc1IC0zMjIgMTE0NyAxMDk0IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgNDkgL1hIZWlnaHQgNTIwIC9TdGVtSCA0NCAvQXZnV2lkdGggNTcwIC9NYXhXaWR0aCAxMzIyIC9Gb250RmlsZTMgNDQgMCBSCj4+CmVuZG9iagozNSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL1FRVEFRQStUaW1lcy1Sb21hbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMjAzIC00MjggMTcwMCAxMjcyIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA3NTAgL0Rlc2NlbnQgLTI1MCAvQ2FwSGVpZ2h0IDY3NiAvU3RlbVYgMTAyIC9YSGVpZ2h0IDQ2MSAvU3RlbUggNDQgL01heFdpZHRoIDE3MjEgL0ZvbnRGaWxlMiA0NSAwIFIKPj4KZW5kb2JqCjM2IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvU1FLVUVUK1N5bWJvbCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTY3IC0yOTkgMTA5NCA4MjcgXQovSXRhbGljQW5nbGUgMCAvQXNjZW50IDcwMSAvRGVzY2VudCAtMjk5IC9DYXBIZWlnaHQgNjIzIC9TdGVtViAxMDMgL1hIZWlnaHQgNDY3IC9TdGVtSCAzOCAvQXZnV2lkdGggNTcyIC9NYXhXaWR0aCAxMDQyIC9Gb250RmlsZTIgNDYgMCBSCj4+CmVuZG9iagozNyAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0pGUlhRRCtBcmlhbE1UIC9GbGFncyAzMiAvR</mes:base64EncodedContent><mes:contentType>contentType</mes:contentType><mes:documentName>names</mes:documentName>
        </mes:CreateEnrollmentDocumentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6fc9718f-f69d-46f7-9a41-dffda9a7c22f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="9c7d00ba-2f31-4166-b13a-3d560078b5a2" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="8e097316-b0d3-41e1-af4b-18225c6792c4" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:commandStatus[1]/text()")
def documentId = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:documentId[1]/text()" )

assert commandStatus.getData() == '1'
assert documentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateEnrollmentDocumentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateEnrollmentDocument_WFB" id="a2e7debf-fd0b-42f7-ac34-ac96c42838b5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateEnrollmentDocument</con:operation><con:request name="CreateEnrollmentDocument_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a2d6acb3-7045-4a9a-bcfb-42997ae5c540"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateEnrollmentDocumentRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:note>ref</mes:note>
            <mes:documentType>type</mes:documentType>
            <mes:base64EncodedContent>JVBERi0xLjQKMyAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQW5ub3RzIFs8PC9UeXBlIC9Bbm5vdCAvU3VidHlwZSAvTGluayAvUmVjdCBbNDE2LjkzIDM2My44NSA0NjAuNjEgMzU3Ljg1XSAvQm9yZGVyIFswIDAgMF0gL0EgPDwvUyAvVVJJIC9VUkkgKGh0dHA6Ly93d3cuY2Z0cGF5LmNvbSk+Pj4+PDwvVHlwZSAvQW5ub3QgL1N1YnR5cGUgL0xpbmsgL1JlY3QgWzE0My40OSAzMjEuMzMgMjE0LjE3IDMxNS4zM10gL0JvcmRlciBbMCAwIDBdIC9BIDw8L1MgL1VSSSAvVVJJIChodHRwOi8vd3d3LmZpbnhlcmEuY29tL2xpY2Vuc2luZyk+Pj4+XQovQ29udGVudHMgNCAwIFI+PgplbmRvYmoKNCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMjIzOT4+CnN0cmVhbQp4nI1Y23LayhJ93vmKfkjtSqrwWPdL3jDgCqdsICAnlaq8DGIAHQuJPZJM+JHzvadnRjeETDapGCFmVq9efZkWBvzng0ZsF04fHgK4f9TBIZoGwRYmgbijmy5xDfAMm5g2BBv4tDqyMKIxLAp+TDMGwzBMiySHWXFYM\/4FLNPQxEvH\/5Zj+7DKac4ODJcsGI\/SzRd4pjzcgz4AQ9NtuCs\/m9UNWNAdA\/0e7M8Q\/FcQ+Qe\/0AQv8Q8Z4ZXhmcRywHUdYlsQHuB+qsM4hW8fXI2YGriOSxwDTN8hHtrQiKsDZ\/AAwivXJLoJrm0TX5NOLTjNaJLvYfS9stkss1xiqWXPLInT6wWmRzxf4VD+CnIVyMvRsLX6\/tHoqGvaDnG0NpHxdDkZBTB8eoLhaDR\/mQUwnX17mS6nkxUE8y\/Qwqt2WxaxHbl7xNMs4yndZPAYJTSRgQpYuE\/SON1FLOvbbiIntX0xh4f0Nxi2bfp9Kw2X2GUS0ASjlrN0gC7e+ZalGT3rdZ9oav1inyYMZin8DzzPuzMt786yLbPaU4ZMl9tuhkxzxV1J4eX5ebj8CfNHVCqYfp8GP+FC7KtUNiyRyo5vioyRrJaT79P5ywpWwTCYPE9QbHgYPg1nownMZ6AZ94bXgqwAPIMYZbQmi\/lqGqzuR8vJGN\/bGhg68fT24o+GSOEePPTeUwH4MQ2+jpfDH8On1f3q5SFYCs\/ms0tcm2CNtDZ9NPphbZ\/YhpKqdq\/tnXlv6j2Em20fda+FrGLk2BYxrHdidJ3gKmqO6RPHk5jo0mylvGrCFnydrmAxWU7n4\/cjWNo3LYLJaSrzukV0V9hfQWMMBbJViozR7QpQx8wRuqn9uifbSQdA13zie22ENt3xZDVaThfiugI1vDaoY4tQdzANr4v5XtKYtiF6bAlmoWR6F8zERqFfgLUypsKxNJ34t0lZGqaI38apmk2ZIJ2gY+Yaxk3RdZ2YpkTCvGqaQaW6AritegOxZGHBeZTsYMzwjIly2PL0AKM9C1\/xbld9Bd7rqEhq3WljqyoE+eoqr4D6lccw6nob6BKiEv0GF8vELv9HLqXimiNa5w3Fbd8VnpWKm1pXcQVwU\/EWxHD0FQ+sszyl8xRCzjZRnnLAPr\/hFIbHY8x22O+70isr\/dJj0dta20i\/6AqiX3QXP15AyF7Xr\/wNKqXybRzZ2vqUt9Gm59YNrlPM+BHDa6MV3+ueQstJ8LKcTcYwxWYLj5PJqoPsaMTB1mPpxDUvkD8YOvpl1ivEOetc2cYpw3fBtmWbls1pHgyf4HG+7GugUn7\/NqSJxGzzGvLnZLi8C+Z37f5Z+mA54nTo8QHhUF5MbBvnM8dsob2vS+V2CXrNsfbi\/RVNQeiu6GnC7mweTL7A5Dc9RDh15Psog6weQkPK2baI4zNgbiPIMeU5Xp4h4pztipjyKMdJiXQcx5JxWmmhm6K51hQM\/IzMLJTAVxPP9HkxXwZDbKnNHIeheh62z4+avOU5Iv\/lxgQp4lydboFxnvIMsA7\/KViWR2mSAdB1WuRwTgveODUAFrMw52kShZBzmmRbxsU+eU1DtTVNrrbluO8oZ7MiA4q1v2eQyEEejtiAc7YRu67pup7ohoKu2IHdGYVFwh2pkcAJ1azA\/zidDqA9gQ7gYsocgBwzgaKFFEnhO3qDWiUDiLbyGs0nrz1sHV\/MlYLtpf+CIGchi445IPETurET90q4hKH7hxSDHCXblB+okLHUn7ZkTqRsfagEfjA4FFkOe0a5OsUkcgoxruZ9XHXR8pSy6D7y3tAzyrcVy09oRlhQzjJ4nC5XQdtyAqd9hM9S4kuZPUjm2gY2W1f1wb\/gL9AJBiGORZCkPAk9MFkbtHyyKxPi1yfUBQvl12fSA6kTo4E0CJ7cWcijNbugIj\/UwgkvsBihSLIC36SwA2mZ\/T7GNJIxDmNUThRrHW508Syv1yyO2BtGR0YPv6jNVCuaCF4zNg3i2jVj8WpFucdDnKqNZr3ZiCZ82qQxNg6gBymYrAQMVZHhs7KoIUmsBxP7n1\/OcQxOEeJFyZuodHHWqmiE6UFqkUth5JowxU4VqqalXD5iYh3z+ExguhVJktNXpvyWSYQJtS4y7IVZprIJj\/hNKqt1IJYrVHnmK6NV5K8Z4+BYPgtvy3CWPjf1h7GIylgMsFQFBfW1NLOnbyonCtXjxOUBG9AZNoUc+WSKRAcZVuFHJjVOlRAMZREEG5nawVKt2vQs0YSrVu3ZRLO6h4Xp1I+y2Ip+M04HME1CgvQyaVXkXhbtElVWWyXLez99DHecqQKUFf4o1s7pawYPFPX4GwIuWsAIHcCQDZpAoolC1BpeXilt2vXDM2fZEft3tI5ieTQJPh0bRbJhKhxXnAhA6aJ0jm7wUIwy7CaYl3\/+veDXp+Y3GDFKauVfXf7lOzle4XO7f8H4dDqRcJsf6Zlg2EqEZp1HLJz4THGg3smQYXS28K02oVDF5KK3UX99rmTqrq0k06qgYiNcsz2Ntz1adeJBYIEtBqOZpDkbCA15WRFrcQ9CrKCdOAJUZjJ+yOqEuE6Asigyxt+isPm95R3CliFyUxDGCn6LNhgSzHSEJjDM4Eh5c6oqGgNld1M+FlV1igXWcbJyIIwxUTcy5QSvNY0xysirasJcmaTYKk+Qlfl9m7RZ\/35yLOugptHOrfW5zrtq8ChDIho77uAbQQWZ5vtLad9L4xpPOnegifiZUALfJoxPuZoaSCsHu8TXhdRQFKJoPRns03ijoLdYWpkiuWVYZFRMjpE8sTZVHFIub+VRXshJC7kOEarKkgoCb3F2EOfa43g6qkDIH9hj0diK\/SMmV3ccwQ7LWA\/CdZXqWHCW38YTVbpVkooyvY8xY7HN1A\/YzRZb1C12V8e7UbCGGstbBvA4wlBv8FiRTFlSZqM4OqQyeIxhGmTy+MYGfzxX4V\/w6I2GZ1ikSEoc\/lmKgRNHqYzEvwi65lVBf6drk2b\/\/wGfn0ckCmVuZHN0cmVhbQplbmRvYmoKNSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgNiAwIFI+PgplbmRvYmoKNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk5Pj4Kc3RyZWFtCnicNY7dTsMwDIXv8xTnEiRIbWdp1t0N8SNNgDotL9BlodtE6Sit9vp4iFk6sj\/bso9gZcj6gLN5iCieGaUlQvzAUzTfIAVCC52xCzYI5uKt84g73GxOOR2aT9TTcOp\/MpYp9dPXiPep2+ZhgZkTugSrZqWvsBmbMXdZV+o8HPrdAm\/NkPbgOwixx\/0\/u2sDddNmSAF\/i3hUS1hfTGEFxlnzUfWiav+shqoMCnQtZW6d\/oUw2cqxIHWmiPUr47HXQ2vzC3XrPWwKZW5kc3RyZWFtCmVuZG9iago3IDAgb2JqCjw8L1R5cGUgL1BhZ2UKL1BhcmVudCAxIDAgUgovUmVzb3VyY2VzIDIgMCBSCi9Db250ZW50cyA4IDAgUj4+CmVuZG9iago4IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11HNJQ3pg2JqENFZEfKCEU0LpC14rfn0Fg6co+tmVfxlKRdh5X9RaQLQxyTYSwx0dQF5AAoYbMjPXaM6bstHUIO4w25xSP1Q\/KoTu3fwnzGNvht8dqaLapm2FimW5hRJPcFdj0VZ+aJCtl6o7tbobvqosHmBcwGYfXB9tnA2VVJ9gMboxwEktY30xhCYOr5JPoU1Tfrfoi9wL0LHmqrfwFG9KFNYzYqCyUX4z3Vg6t1T92TT1uCmVuZHN0cmVhbQplbmRvYmoKOSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgMTAgMCBSPj4KZW5kb2JqCjEwIDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11kqahvIHYkNCGipofKCEUEKWstOL3ZxBYurKPbdlXYyVIWoe7mHsk3wqZJILf48uLPxADoQbPlHHSaUy0lcbC7zAqrzEcqzOKobu2t4hZCO1w6bEemm3spkiNpkcoVprZHGVf9bGJvFLE7tjupvitunCA+oAmZfH5YvNuoKjqiDSBHcOf2BI2D1NYQeHO+cRasuqnVZdnjoHepZ5Iw3+hFcncKI3QiMQXPwaLlg9txD92rz1wCmVuZHN0cmVhbQplbmRvYmoKMTEgMCBvYmoKPDwvVHlwZSAvUGFnZQovUGFyZW50IDEgMCBSCi9SZXNvdXJjZXMgMiAwIFIKL0NvbnRlbnRzIDEyIDAgUj4+CmVuZG9iagoxMiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk4Pj4Kc3RyZWFtCnicNY7RbsIwDEXf8xX3EaQtdZKmobyB2JDQhoqaHyghFBClrLTi92cQWLqyj23ZV2MlSFqHu5h7JN8KmSSC3+PLiz8QA6EGz5Rx0mlMtJXGwu8wKq8xHKsziqG7treIWQjtcOmxHppt7KZIjaZHKFaa2RxlX\/WxibxSxO7Y7qb4rbpwgPqAJmXx+WLzbqCo6gibwI7hT2wJm4cprKBw53xiLVn106rLM8dA71JPpOG\/0IpkbpRGaETii58Ui5YPbcQ\/dxE9cgplbmRzdHJlYW0KZW5kb2JqCjEgMCBvYmoKPDwvVHlwZSAvUGFnZXMKL0tpZHMgWzMgMCBSIDUgMCBSIDcgMCBSIDkgMCBSIDExIDAgUiBdCi9Db3VudCA1Ci9NZWRpYUJveCBbMCAwIDU5NS4yOCA4NDEuODldCj4+CmVuZG9iagoxMyAwIG9iago8PC9UeXBlIC9Gb250Ci9CYXNlRm9udCAvSGVsdmV0aWNhCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTQgMCBvYmoKPDwvVHlwZSAvRm9udAovQmFzZUZvbnQgL0hlbHZldGljYS1Cb2xkCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTUgMCBvYmoKPDwvVHlwZSAvWE9iamVjdAovU3VidHlwZSAvSW1hZ2UKL1dpZHRoIDIwMAovSGVpZ2h0IDM3Ci9Db2xvclNwYWNlIFsvSW5kZXhlZCAvRGV2aWNlUkdCIDI1NCAxNiAwIFJdCi9CaXRzUGVyQ29tcG9uZW50IDgKL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0RlY29kZVBhcm1zIDw8L1ByZWRpY3RvciAxNSAvQ29sb3JzIDEgL0JpdHNQZXJDb21wb25lbnQgOCAvQ29sdW1ucyAyMDA+PgovTWFzayBbMCAwIF0KL0xlbmd0aCAxNjE2Pj4Kc3RyZWFtCliF7VcHeFRFEH4bOyiWWECsKPYuYldExYq994IdQknIu9frUiI19CYSCR3RxCASBDEixWCABEKNEA64AEmAnEAE7mNm37tLuZCEzxT9vvu\/u2\/fzsy+m392ZnaP4yKIIIII\/q\/I7XSw90q\/P7Ww68w1je3Lv8ENee+8Pvrtdu0e2z7mu0k5x6DC64R4Gtav40Rujr\/99o6v\/IbYseuOxOx7q7KSCSEGx5mEb2j\/agtf3tS9BU0X7sgH7Fi48MiGDP\/MKsxEYuJAidzA\/tUWm19MvKKge\/6X6xm6N83vuOeekv7hdhqxcPjvEjk4dfqeFq1SUo44SElJ33X1mNQzQnpbhJzSMLEIMZ1BlAixTMg04GQbKLEw57CCTKI5y1SU25CRAiE6hkAnvEUI5W0QmHbd8+jkH7140fr0VvsX9ezZZ1HPPi32p6fvWvxqaZKrl3TmaAUiFkdcSBxPXBE88MxdtkxDoQ58HDVkpUHKwax7IqvHPh3ti\/Z9eOYHb700LH\/TZ3828\/mi\/3ig5H5XT4nhhM90UouFGfwVOHRdcIxY\/VAichI6zzH\/mbXNTICVygn4IgiExjavznnE+d8cEjvk0qKipKS2yl2xbXO\/v\/vsHxVl\/ildY5hewqiHE6FsIqDbtqU7IbYIha\/IjAWXouUQQ94aSzoKlDACdU7ki6nXXNXjkY+Lug0qLj5x8EeDBv2aFPPP9Z+P3OiPY3o1dHZUIOJMIOfd1EMiHp1IBnG2j7qENCDHzM3yROR6INJ1+cWZLVs+fquiKLPmrHqqCEbl4cnLLsl832nBEDy5EhEpNIFsgS9UrsqSXiRWMPkN90EkusflVc9EsjP2ZGW1OmGzktumTVGX4sBsILL2vYLnshIvY3oIs86XJ6KzWLPmZGEhsCRzzhgoEHDTRl9BJSADmdWIiNGoZyIrx2Rt2PSNolwQKM4FDt0CM2JgaDbsrMQ8x8DpUyTUWAWWR6YjNdz2xJ5wHyD+Fssz0+1lWrCpwcJ6rZHUjIKTwPNTA4MVpcmhHjGxPwS6wDzmtMRS10JCXwT0khGxwUURkx5qQ4Oge4AZFZ2a1tAOigaT0aKsO3MqjCbuqRMI7F9YeHVPpPAWRYkvDiQpyhuTR2QeaqIUr8JCef6cvOqWuXlWCQJ62Ugo7Dw\/Nn5WYLOi9Fh2+4asEdcuVU6e001RPi05t7plVRKxnMpuHORduED5NgDl8XLm9K8Ar115ujJ7jm\/IPG8V160y0HAiEiFVblMD4bB33k0\/A4+Rv89tvQTQesvfS5XZMwZ29lf7Byt4ToQg6zahocQyq2QkE9c0TGNpld9Wflara+oa\/50LoE+9u3duv78Y+m25bm38zpsHrI53DODyF\/7D4bCp+yDVeJNCU9YLaUhUmYhdpuKMSiE7Fp75+pOdytKN53WY6KLDlotiB44dvi\/oF4TZQwyC3cnC5mtDf1VFg4gyXsPAb12CktEp07k+GJYFXc2CQ4eoMsXT0WMQg9eZwPFSpuwgUjkJdlc1wNoxhNs0lcGEjbAKWiOR4GwyPBIhWjVE4laW3PjsQyu27g7hQPMXHjx\/tasWWDzgSmsZEEYJnOYwg2DGwUFpolYULeqRqK1LoWAKqmpwPD7xhq3b8NHAUnIFQSIS9UAOUR63Hdq0Ywg\/aKEJG3kDVSC0IFu16mhwWCW3rZuQdqAMaUvum5IdFyTCLn\/U5jRIeyprEBkV9kDV4GILDpgePFYEDf1HHbvvEltTVSaCI535TW0qc+UFjAi74uNrOGYdMrQJPLIRd0RFITYSidbQ3XOihu\/tlzZ+3Ljk5ORxyeO3Tsjwpu4LKlXWiXSbE2FHsLsa8DJRg6T2wDaZlmpyoiXijnCOjrnpErF1D286\/pkmV17AiMgQH7gDWRWIQElYaMJGD3XC6DYPnoZ7X4HJgCntm09M6zV06NBeabt\/2uYdta9MiZd0GZIfgqPLkKbgDAiwOlWsajjHDQ3y2SBM5+aPaYEBZA7IKQogaSC2EAgUOC3JrRGgoxNIG5g7hhJWHpiwEWsKXizhalWoub0fHhWVsDxj2ooV06b9sm1KVOmjNdg3GES8ox3P4XR5zqQob9+EhIS+Xm\/vw9H15tjxAnYr+Ce0tljTf90ThaOySw8+6asfnyKIIIJGw1G2ZvkFCmVuZHN0cmVhbQplbmRvYmoKMTYgMCBvYmoKPDwvRmlsdGVyIC9GbGF0ZURlY29kZSAvTGVuZ3RoIDc3Nj4+CnN0cmVhbQp4nAH9AgL9\/\/\/\/AAAARE9x3OHs9PTy2uTo8vHwiI6P8fHxssXL9PX5pr\/O4+Xv4ePo7vP06\/DzaZKs+vn5ZW9\/9\/n6qK+9Y4mTPkxx9fX2ZoaYlrPEX2l9cIm1nam\/ZIiwYoGx\/\/34pKu56+zwn7jIaY2mfpC3cJaisrvZb5iwjZu5i5vChZay5uny3+Hm09K3+vfoxMOr4uvm7e\/1a3SCZIip7OzqZoWg\/\/7+dHuF\/v\/+\/Pv5YX+a1tjfYXWY0tXdy825qayhkKq9kqK1V2+O0tfm3+Lw5ujsbZGYiqS4navLf4id4OLn4+Pg5+rWmLbHqbC+\/f3yZZCp7+3TxMnHmJ6uuMvVvsTasMnWW26JXYGhUmiG29\/tvb+uzdrhgJuxUF98z9Tiy9biS1x63ufr8\/f34uTp9vX06+70sLGj2trB1ODl1tnqv8TOgoiN+fn4\/f39j5ep9vb1o7zMyM7j\/\/\/+6uzvkq\/C\/v7+qqqq7u7uVVVVd3d3zMzMu7u7\/\/\/\/mZmZZmZmERERMzMzREREiIiI3d3dIiIia5CGgImdk7DDSVZ5S1l8pL3LbpSdzdDYTVp39PLX8\/Py9fX1T2KA\/\/\/4ao6Co7zKR1Z7X3+pwcfaa3WNaYSdX3mVeYKJZ4uFb5Woao6GQU9xbI6e+vr5+\/v7a5CYaIuGZHCJhZa\/SVV3Tl19YX6PZouk6unmxcnT7Ozt7u7sS2B+\/Pz6nbfHX2uF6uroa5CM8vLw\/v784uLfYn6VZYycobrJtrmq6ens\/\/\/l6+jNWnGLscbT9vb2W3WRuc7ZlLDDYn6hfqK2bZOh6enxa4Sx\/P30Y4CrVWmK4+vubZWtY4OOY26K5OThcnuTrrTAm6K07\/Dz\/Pz78vP3pKq0pLzMc5mteYukxNPbk5qsbJGd+\/v8X4OXqsDPbJGSRVJ0UmOFdZOrrMPR9\/j5g6a7\/f3viqq+ao6SbXuR+Pj28PDudp60ZIKf2t3iVWF6WWaCfI+xmrXFaY2Ms7jEjJSm9Pb5qbTTyc3VnrjI5ubkjbkP+QplbmRzdHJlYW0KZW5kb2JqCjE3IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0Zvcm1UeXBlIDEKL0JCb3ggWzAuMDAgMC4wMCA2MTIuMDAgNzkyLjAwXQovUmVzb3VyY2VzIAo8PC9Qcm9jU2V0IFsvUERGIC9UZXh0IF0KL0NvbG9yU3BhY2UgPDwvQ3MxIDE4IDAgUgo+Pi9Gb250IDw8L1RjMiAxOSAwIFIKL1RjNCAyMCAwIFIKL1RjMyAyMSAwIFIKL1RjMSAyMiAwIFIKL1RUMyAyMyAwIFIKL1RUMSAyNCAwIFIKL1RUMiAyNSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNDU0ID4+CnN0cmVhbQp4nK1a3XbbNhK+x1PgUjrHyxAAf8DsRU\/WjU+zZ+OksXa7OW0vaAqy2KVIhaTs6oH2kfZ9dvBHUbZEQg7TU5MEwA+DwWDmm6G+4Z\/xN0wCj8RMX2gS45AzLwoDguPI3NQC\/4JL\/Oa6IThrsO8xnySRzw936NDWZIDpezTAvvxP3iTwN2R+jGMfJglinG3w3xY4DtUQc1ls8JtFRhDBixX+Fc9uPtzO8V98j+DZv+dYXd\/LK8WzL6oDbt7Zmyt7g+0NvI3029fmLQ\/6fseLv+P3C7XuYxmpn3gxI9GQjMjIiJWMszdv5njxxxk4Srw4DC9Aw+fBOv1FnHjMBQ309\/m5sj78y7R0WrOa+WoVbbSHZne2ZfFC1V2L3Y2P5mqfb3vv\/o7O6juKvTCIyNCacH9NqK8hBSNNjXOPE4ajGEw1igne4JDCbdJrKo6aCI9R0X8NGmDIGq8G1B5RL6JWxFBPri9G7fTlJsqX\/YT7AOjFlIQRj+CO0zgIiZRcnabru8M4dGLc3TXcJzzAT5jiRT0gYpB4gRURkPyERXiRYTi9crC5aGFZZyM3cle1IcjLQm47bNzbOQ7VWiI0+wWaIjz7CS5MW4EcKPvw7Efd+Elf3pu3dd\/NhzkOtDEweYKR7Hr\/RQ8xMKdQdJuZVWMsfup3fdVQZvg\/9eVLf+rP+sFOZsQyL9weLeQfeI66eUzXzacjzI9aFLtyPfQY7AftWJAxzRP7FMSwPTHhx\/s0sDunrf389lPwXsGQhQbGQm\/yMi2zPC1wVm22aZmLBmfrqmoEXldPuF2LPW7WKbj8fbWr8VbUTVXC6LxcVfUmbfOqxDdiKWpom6Nxj0XC3uk+Egz3BUOzIn3CD\/mjFKcqm90GJpbS4Dp\/WLe4rXCRb\/IWN9VG4Ptdi8uqxWlRKGHz8sHrpJJAadFUTuL5cLycxKvFt11eg3S7RgrTCpgaNKSU9iRA5qIQWWtUl5ZLvK2rVrYoNfa057nIFfIIvCM4r3HBPhcihc2rRboEfeWNVEyegUQgyGpXFHsp7q4E3TStlOtpnbZS4mXlnY84AUTDJOEHQdCYIG4BLIypDIdToYWxtHoHtAUYUrvfwvZVq9M23dtDqSW9j0uxFfAA3dISYUeXO+h32b+AOZp9VeNG1I9yx5Q5pY8CP+XtGuzMw1Lsg5DnNcIgwFGga3ZeB40MrriRSzbToaFlUu50fPCsr7+RJYMJ9zcmS0t4zordUrw9r\/kgimT0ZM4ioSELIz6XKyQ4JNTj0QDaAsgJkgv87wAaYV4c08gBjaJR6yc0cpQtCwzaXaUc\/p3IdnXe7nG529yLWu06aBYc6oBlEaBpJI7tbN93cju9BglsFx9AW1ha7KLXcbQT\/OysXkfRupW+y7JqV7b4Pi0gpmq339Zp2aSZMl0w5baq9+etlgUhZAmHOSey2oADlfSnstpxtEusdhSts9rrWiwh4BslKuVmuqnJKojEA8lXEno+hDA72UThRvoYNh1aSLzECe0dUI3VCdpWCrGUwV177mwHehowNRp6lFFu53UwNaBg\/2tOR0vJgHZ16bROBh7EaZ0QI\/Iai0dR75fpHkhek5eigZjw4VbF30boY3UviurpSsavAmxDk0TgQMAae2pyCNIBRE3ipIkeVYZopPWtpVVaP6+oqyPpXGSCMzxyPIxMQOT\/BL5ryHvTGcJfsWZ5AmauVYCVMmvyrPihJczn43sQEI+EPnOWxlg8Gl4bSwJ5fpzQxjXFIKVys2MXK2URuIzTKb5xcsy4zAtS\/OGUnYW0F2dkyh6wkZR99hWSiSGXHXhxAi8eQw8BDrlsCP2RH0WvEfRXPNsCq4D0GcSFDBmcNSTPcDpUWzFHur4Q41muag3lSqXVlR69gbQanvTgVvXoYYqVxvZV+xe9aHntX3TB+B91QaDSy9QL1D030ILswv5U3X1d6GXpofq1ddrr1kN\/6AZdItPY3+eaMnUfPb3R7V49gNtQT4VahV6L2Rb90M5RoGDOl1RDkoA5JtZ+hmoe4wTicGwCv+dFXonW0ZFp0CI6JVrCJ0SjLJgSLfYnRGP+lLvAgil3gcVT7kJATu4C+FIec\/+FM0XPnHTv38AcAfd8\/\/kcqhbs83F\/3a67402VYzIVWtY9rOfIuGVZ9Kz1wFK\/9dB3BDpsQgA8WQsNCfGoD6m6kXMgbXOIUge\/AEc6olOxcwZCDpaWTsk2xAfQKB+gcO6PTONMCR8dl\/ArXabWwUMXwMWjDjq6bW9DCfQs9eDUtsni971u2+lLo3pM8NJNorEhrsPZHr0j50G2rerjmFffDn55k2kVi4lVwGWsZdjWOn91jP1K6+j81QVoQyeWkfBSvK9DeS8DX89pkEy0WutPp0Gz\/nQStM6fToMWXmwlt5X7sX9Zqwy9hNDnJ37U4NGxwZ93JJyNZUYmYjW7bI1TlTtu6yqDZFt\/rugVsZqrATbAuZdwQuyME\/leGiWOFYOPaV628L+WOtXluN9mzW\/zK0i6m20lC3IDRRG5gIBEiZ1yomSShuF4YUElk9cj+Rz4G58HI4CoX0PBVS0\/9agiQCEeVDniUTRt\/pDq7Rxid5CgxyTqFjDVfgauVbhPNWzbtqrV9z5T7Lvf1SLdNf2PVeg5xY28mDFmJ3ItV4x83KA0ci5XjBc\/KHEru7kVP0gSj5crXnxG\/q5yBYEzzmm\/CuD0C4MT9ETmkcAu0nqOoO0\/olV9R5Tj4RzNwOdoBur\/bsGVilIKmWkch3ZxhjIPFikrXK1WosaDJ5dyCpyGPNfa9\/KOC9CceIc7nhvvmGa1lndMg2Z5xyRoHe+YBs3yDne0SXjHkbVPxzsgkPZ+2zLEO8yXYB2lzLdgxUIgjg\/8KoHKDDeJuZ1povhEQlX7nQoNgtDgTxymzxxhT3ux5dWZ4\/kUjRDfiwKQ6TATMuULnowHgT8q7fHzUl\/bo7meRXPCQkXFjhfllg2iF4IzYNgkCU+oiEcJ\/DsrfPc71E2qogpoiUOwUvfCVEBlC4Qt4qu4pasgOgABJ549mUwayX49eK1Gmf5KPfQ7hJ1pIFkGlxHSqFvQ95X4DxYk\/dpRcPfp+L6ucl047sr1si5knjJdLNIjTFdhKwhU9qthlb5ISpDo2P4CKVexXeg2U4rybLl96Ae98qcwnNu1mdg+TVnBFlWP9fZK19EVKSZBO5AFdzQ3suCM50gWJlltRxYmQevIwhRoB7IwCVp4sZVMQxb6x2c6spAkcnIQZ5wtuHzHGYFDFwZxHsgfkZ2GQ2ej+M\/4\/zgQtckKZW5kc3RyZWFtCmVuZG9iagoyNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9HMSAyNyAwIFIKL1RUMSAyNCAwIFIKL1RjNCAyMCAwIFIKL1RUMiAyNSAwIFIKL1RjMyAyMSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNTcxID4+CnN0cmVhbQp4nM1b247juBF911fUYzuY0YoUSUmLIINsI5OdYJPdwRgZBNk8qGW6raws9erSbud\/8kPJD6VIXXxpi6LGxiAYoNst0acuLNapKml+hY\/wKxDmksBvf9EoAB76ruCMQCC6D6WEz5DDN\/cVgaQCz6Xci0KP4aeAEi5C4XhuSAPGCVRJu+7+06V1MKz7dI+fo5DBDigsS9QDl+NK9U99iNS3fS+AgOB3ROAkW\/huife8yBewTAD1Uou7X8stfLNM0ApYruHvcPe+WMBbAnflAny4gwUIuOsuNQvn\/E681n+0P9MFcLjL9M\/2c1zrG7JaIH73Ffms\/5DlwsFbe\/3HqhUQ7\/t1\/4Dln+APS+3mU\/Oo77te6NHePNDmOco85k+b99CgLrTXL5daYHupasU6l8WGKEEE\/FSsSRia4Sz\/edmIYY9EFLgk7NG0ERf3yDkx4qcG94DB3VPRan5sxbfayScu1GJVfCFS6ZzrQhh3AybomS68\/Vb3q7WMdZal+boot3GdFjnED0VTw75oyiN7jQGMilwMXBr4LvG56BVxbFwMg8hjI19h+55QHidn2CYjj7Bfo0Wz0UxwhM+F+5s6UqN4PkNfs+hGxjJ6S9cF4Q3RGObeG6Jxby7aX4qjCDQEvYOB+Uqc4G5E6HkSmIx35zTex3NLSN3AfJ6dFrYu47yKE3WeK4jzFciXJ1mmMk9MYYYR5hLBo17Qdc4\/qC1C15+LNuV7M1MKzs+y8GWmdOyZ8tWdM6Z0ZjEljDOlcO4eToS2CB2\/tZc61MrIqz3Bdc6Yl33HXcuIy73jIuQywcEMgnPGrSCYrCLfH+ROninHnkMORHmCfRKhzihR2sXqgRyds+3xQpdzKqwNO2yPM2UYJcT1BQo3GHaWMY5ZfzxBBLgZLDTiOjNIt6dwezQw0244F3CCdoOOdm9i7kC7N0ELZttqRbs3QRto1xrtmHbHafUWyh0SGUWS9gJiAXdfylVa74qy3qS5rCoAcyBSj6iUIAYZt2JSgrzsfVUm5RGSt\/d\/x6TtpQ6yvbTFP9TqFvkXqZY448tbvj0oNdJdXciBnsu47\/eesWoVJsIlDGdDWqTVeQpapFV7QLu0ehtz+7R6G7Rgtq02afU2aH1atUezSqs3Ue6QMELfjW6HJqKjatOE9mEN+3FATMIuC2g4A7BoIC4lxJDLHSRNVRdbWb6BnYQkzuFBPqY5VJu4TPPHtm46HqL4HqzifQXrstjajI24qtFHyOhEL+eu3kjErqXSpJJ5DUhKFeRFnSbShc8bmSt1tO55AVmRP8oSlH6nNhR5neaNtFKOeYp2bHQrtEvka4fEFaxklZTpg1zhjVOlvy928lkpphRX3lXaYftqpRwVRwRlUq7BVrjGbngPdbqVgLpm6TatTTQeuB4zirCvOyjxZoIpF3YB5ppqcoZ4XJwCO1cfPGwhIo3m3OAYsyiwPHUfG1npscU7Ay7hWAexcAbsX1MDIRHMCaGaU9rjpQY01SSJgM1AM8QgCXQM+jPQTI4LvbloeGqKPMOyVx2e086aXJpWUWyqfT+cI2K327nrNH+RZewmxfZC+36J9MOAzAksYwnB56IV5ZCj2rTy04\/wXfEClHM\/OohyBjcpt9BIeUWoqQxstQ2Bf7iSHV3hqj7HK4dv6StOBhtYj7vlcN6QhIlV3\/8Js+2fkU2KN3D\/e4iY51FTsvHCdqZ0IuDqZMNE2BHMTZINZzesZ5gfWdYzv1ma6g+sBL0wmgGHNP++PRRv4EOeuPDz3X+6C\/\/9eQFP8X6r2P+pLBJsSVUVUsnyGfkUkFnj1TbN06qW2LnCw96GSBnlU7Oijkjvy6KqyiJeVUrDOE\/SODN2wxjgoQhNEs6obymTTV5kxWMqqzfwww\/3gJUExFmGRcRDjYbWdSa1+aXMMHpXve2VO24pxz6GRVE0w1KrAEGmnDhrQBzbcPMxG0zUWs6sFn\/06dxBJJ7l04luFHjTI93Pm7Y77xvsSKtEKObzhdOOeMVwaaXXFvZtNuFYf5CQnGl37Wn2FdXTrzpBwcLCFfR4goLJfnKC8n2hZ+O7YWQRaSdS7cTWu74eoLP+7vv+kX3oqMcEuOZF321Xlu2kpZ+64PonvabsZzNUb6Lo1yf6Z71wRL9ezVeonpuwU4hjAa1CLVyrRCsy02q131Iq9nfXCwj69eUwxhm+1mrUfuEY9J1+1QD6oLMNKj8grlBvWpzsydX0pXg7YreiL5+GLmc2IbosVPavZdIN7p9kWRU55uLjxkt3oE0eN\/WmKNN\/YaqME0UY+rFgU0ndDeJvG4rw1ZsxzCZxVjJpyrTew1bGVVPKChs+rJKwunvK9rBLa6xj5AqpLIMs3rmw3EhUYVic5knWrKx0olGEvYCNTkp4g4wIVbyWj01crpBbtKLolHWaydYnD02arZBO8SaqUpdpUity7byGXePZqxHjmoVYCVtpNmycko+CigaZbdhEA7PyyCVRMIiyKVxzZQLGArpb4mYUe4l27zYF5BLdgPd+yYtdu1s2NgaeCn2bucVxUA7hoQw22IdEHQpKz8QYD+xTmT7HiWEURIXAIOZsAL2OWigyylw4XbOtVKQbam3fx24giIIv1PM60qI8ODpVlk9bx9FUGyMmKNA5LzC+nAKdgV\/MFJj0jwVoy1D9zwMFOh0F3YQClVo3okAHKbCzw5r81LzXC9jZblz7GI36xOWXX0r5EjQy+sraGdpnNcPMMiP5vdFtg3yJMdEpoutmo9+OJzZG0RohTHq8OnKjYMTrHiao54HGFmFJutP0b0MLSXzMB1RYoNHphoNQYanb0HD8+ITui\/OBoNC1j+mzKh7aHegHIhffkXj9aASTms95L\/\/KuVbvaYJE6Jnq+87TYOXpaTRqoVvv6Um0wdJPGwOcjx2MmIOGdI5blK6wXU7XadKdjKd4327bQ5plldpMZKVnXKUHWuc1CG6loa\/2XCbIoNJ1ffVhK0XYVdWGrXSst3ISjb7uq8e3cgptODRLmWXKo6rCSnX5WMpEqmOzLXK5N83aotANIz\/ohd3qhHB69BL51SdkEm3WCZlCO87+cVYV0xTQ9j9FvcF7WO03yUY9ikr0Cx2m1D2o5IcY3DYx\/YD1XNygkHiNzUQa12p0hcdKy9adT5ynExUfcxnBcrcTeuWODyZQpoa2X7N8JF7kipOCb2SkdDr06EZKe10RdZOjpK\/ahK58DG8KqpekOR2Ej77v+McuwH\/r+cz\/3bj\/sEwS6n+DnMApW7xwejqmnpVgffahf2elnYHo\/6eghmOqxAt1WUeHtWjj22FZ+xP6ElfVg+ict2xYVqa6DMzbi4\/txXftrxlVIeVE\/c8WdmbmtUOMCGvNMPC4Bdz7bg5gojwM4DD056Bm8U5XJ7o2AfXMvEwfN\/Xw1Fc91NobCkGfBq7nhXyQOY\/VPsL\/AIqxj\/sKZW5kc3RyZWFtCmVuZG9iagoyOCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCi9UVDIgMjUgMCBSCi9UVDEgMjQgMCBSCi9UYzMgMjEgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggMjgyOCA+PgpzdHJlYW0KeJy1W92O27gVvtdT8HIGSLTin0TlptimXWD3YtNFpgiKohcambaVyJJDyfF636cv1KLv00NSv54xRe3MIsBIlsTvHB6efzJf0S\/oK8IsxAm1F5ImiAsaxpxhlMTdjZLoE6rQd+8bjPIGReZfk8PYKCTM\/tY3OBIh4RRGRkmYiiTID+jPD4jbAd3l4YC+e3jACKOHLbr79z16+Iz++mA4uULDNEwSEnugkQ4NOdBI7Mlbzjq0j\/tMFdUObWuFsu22KIuslc3\/kPwm1WWTXdDjqSkq2TToeFLHupHNfXCLPE1pyOkwF7RM\/a0LDOYCV38w5AJLV4IVFUjkkLVFXaHssT61DvRB7LEWgAd8cHepTwrlSm6K9lyrdm9EfHthCWOhIIS4KATX0ritJr0Kx0kS8siBtkqFl9HWqPAi2jDT7we1RVtVH5BW2B0yEp6uYlujQ6a+yFbfwVvNQ\/AsD4xEIaNCuHjw171R2jEOGXGgddIO\/KS9iAbSDrylvYSWs+Cpw6jqavQZzwr4hjmyJIziiPVkPfyUYxJppOcAyxRrWC+0jy1wjMrs3ADLF7QrvknNMco2DhukIqQpXkEFjBsULyuRKnb71gioLA5FixorwxB9lBI9yrI+G3EeaghCtxVpnCclYexerE6RQO2NHXQMnKqNVKjpJx86hEo4zFbggdhrLREGYyAJXgenR0epAIWJwoRgHosY7gRJGMcBxGgTtN9\/dH6HPr6H+1QwdEYEPSgHjxGfLHAURmmaAHM5gixBf91dLLfUcvtPdPdpf484usvuUYzu2nuUmilggu7298Hw4mg+sn+leVKZe3D+yTDgfI\/MsOuPzOvg7ke4RMPHJVwwBCx7OcBl+DHjwlKYMqnug3T41lLYmRfdiK2lU5s3aoqVXTOlHwXwKDcv7F877mT+2k9n\/MxnYfmyQ8r7QHO0mcJ\/tlzaD2YsW9BOCpdrMQZzWeynmFYiFtLKTU4YrybihwH\/Ch5+WlBunpKQswSjUXMgG3pGcYKZ4siy1wDNwZ80LdTTsoYBKh49p7IYAlWKCR0ov5KV8kSEIn4tm+cxC5kX2j9MVrSvi9wRssD9phiLFbAQm85FWaLseCwv2gub5LauJOr9Y5bn9alqQ0cGmXCgRnlP1sP5esmGg5YsoS1F8RGN8jCOBwV0hXFP76pVz+0tOSGTZdA6D9NZdJZ\/AbuixsMkxpyFsTei7wNhjDXun9fmuX0LNsKsNfpaCAfuCE+v2HyluPOsZIacikPilwy5upHMTcEEvWC+35qpb3sBJMa1Jf19ZsTQ9q5pEMm7QSTBokiSNMSCiCv+PJXlCZoga9Hy+nDMqgKsUskSUpENerwgeHgAa6zPlVTNvjgiyIfyumpVXYboYS\/hi6wa+Qhu6iNLGSQufjm7RQscebE\/2qNE26LKqryAhC+rNjo5Hh8Mcw5dVSo4A54k\/lSdPgZDzWjnAN6cuqoYXXcES1UeS23dsYxGPLQmJp68DVrz4TRtUEBll5enjXRlsFC80SjmExrBwhqOmnku2j1q9xL9oMPDh+xLg6rsIN+g5pTvUda46r1hbjENU4\/qMbgbifwA86rV8Q36scpDx9xEAm6NcBeNFf2AQdthkf1q7peGj5EkhCwczcJH7JFs\/zyNClkfS4zjDIbIUZq\/9t5+Y+OKjT3XjvNpLAmueE7TkBLGep5f5mJIRNaijepZ1e2y87ytogxCgOAs9aYd3HWe2CMJ0d2T5CZmsFYlb6NdqeQQJPw98c1owiIKVCO6MBnfaDJ44oi5C\/d5v+357tToiRfRxn6bh7daQhtU4edZ1+fs9MGchnGUONGvllH3RqT1v7OI\/zRa0jjkgk\/lsOTfu6DhwEzikCWQzXSYL6uAKJjZSrRDrdpdtpPIUQExhuGS8BWwvc6\/8YnJVJuyF2xRNScFdiVHq3JRIIJCsROLFRQ2hZJ52\/UVddtxQqgz7aOqt4WzPT9MDGo44dc3Uzsg8ptpHDeuOEyTUKQpdUH\/jjhMb3dj\/6g4TGddTR2HSbochn+CMPzW9puYicZvbaeFGJ9j2ypvYxN99Rtl3nyxP+T06xnAzl5W1DQE6zSIsX4aL6tpCI7XomXIbDRAvNkpKQ+yaiEMtWcpq1mT3NFeZnqLB3NxtRK\/0\/UwAFmJNoZIjyBPX6MrPCqfN9qYArX7TG807CRk6arfeBjnAF5hc8rbRqdCjVTfitzuUFzqk6sE4zrwk3Rg6ZVKMAoaxdlrlWDLaGtKsEW0WQn2uS6qiTs+ZqrVSedQj9k9TQjdamMc9FHJY1Zs7ANHUjNwo9Nir4Lbq6QmoGKCp8Ib172evcLq+mtxH\/m6bfeyPht8pvsrEwft0Wb7YAuevSl4bNmj+oZ2ajYSEuujidmToKbbNnxkB9vKqZrUT8i00oeunam9gmQ+tgOdll1DO8\/C+ZZdhEHWkES8l8DLcvFRnnGke9weaH9vJKq3phswKpr+DD97PgQcbiyYD35nVufzOQTH9atUWQhKPVGYXi5PjwPwkOBkSmQp9XWFOyZmaB5u+Cwfm6J1JNLgQiHVE3wF5juEPu2lacijE4jcyBs9lfeVeuijHVor\/NfzWt7BorxZmkCtHq1Z1OdYN6qBKVRFqUnvDmYhIz4+KWdPMJh7ORsFT+CbPdqaaQs+xdJMknSKNX1isaajRqyb8x6NhcW3Nj2CZzXjjd1XKesdRIbZMYyigRy+LCGrlzZCNG2tbGL0fGigApwuZtzFxIpjRUJAbkf80ZwBgYKa+6MFYw06nFD58W8+6RaBbOTGNtGV\/LPNRskGqqNHVZ8h8UHt5QirsakPGSyE7mHqyinP9YmutoBfZg1gnebL5IqpI1c40dtNPg1Oa27arnXmVjQ9LYcHgVgbp1E8pxK4lt3o19bVjWAhpYnoIX0KZ2X80KGuClBTWLU3qD7CTExhCIK8HWgYodr4Ym8pmaB480gSjTTrfAXaxtH\/g7KVGY\/vvYLOWiNagWaM4OspK4v24qX6kJETP9Vv+m5EF62HvL\/ebiX4GL3dO48qT+w5ghkQyMs6qh4a4o6DFLQ4YWwFnqvHqosShiGb9Yd70HIAFs05p6xsautv0X\/yuv4CyfN\/fXIlLIRnbO031HVyfmrB\/ex13r9R+oAVVF97WR5NgAcbavTRqOI3aQfUVVlUEslf4U0hYRG9PBBonacTf2+nq3uKunn+eNG+aKN5UqdKV4s7lR1MtbiRJXCrHKsAtYqg6UD9hU3CmK9F+1Yo60jrubC92vM4NicOPMj0ItP92FNVfD3JElSoaYpdZSUHxG0XTjdqYQEvuvWuZGb2JDIEqYAxQanPYXqtJuOe3khbcRfSTB+gANPXPO11J1Jz3Zf6DrljrPP0georHXbBFHtaphca1OZ+2fMHaz8fZX5S4Fnf6T3zZ3LQJzsdehuKUyZ6Un9I\/kwjrXOC+BBZ7lzQiK5F67JSm38U1ebUtOriiGhEVy8Ezyk4c4+3LjQaJjyaoi1Va00LZtV3TK6qCLNi+v8yYG7Ozh6sePHwBLL66ROb509Hrcn8ceR7bsYRBVNI5TBJ2Qq0KleXoz23LfN9VesMVe826QpRyVwW3+xuQNWcDvpMq6xggXWU2WQtxA7dqmq0LYBX8PA8EN\/AJ0KBt+x6Oo\/WnI7HWrUNwkQ4Gkb6PzFQTpwEAm9NgtAfplALrIF7LFokB2lCJSCPsjL1R5cNgU0ovY336NBgysIoZfFA12MBXQZBISkSZBVcV844HDoTLMQRlLsrUCf29Qv6P\/gi4N0KZW5kc3RyZWFtCmVuZG9iagoyOSAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggNTQ3ID4+CnN0cmVhbQp4nJVUTW+cMBS88yvecXNxbGxjyLGrHnprKtSqRwdM1ynYG9sk2r\/ZKv+nZr+kVcquERIYJGbee\/NmXuARXoAwRAQ9PPJKAC8pKjgjIIrjwSn4AQbu155A4wHvL9\/EfzHK2eF9OlTxzikWIHCFikKQrBngUw388MfxUQ9wXzcMCNQdrOAO6mf4XO9LmYErKo7yQiSgrWWvO+uMlldwCeOIlWIJrlNet8oEfwU1gmFW8AWoD\/DTjjDIHci+t29gRwd+I502v8B2oE1sZZBBWwNvOmzgLrs9qhKjshBwizxbGWtk1+ley6BaCBvtWthKF7TyIE0LvR50iCXNd5xXDFFc8hNpyhzn+osneLbahL1u2Y0miwKxhCZhNUj3W4WJbz9AGzbKQaeNNI2WPTR22Epz6niqYZLgPBb\/DupVuV0bFUqZPc8RTpr90+i1Ud7DdnRb6yP\/0y7ST0sw1RqrjMPxwY3NNBwfX\/bf5qWg0bMVE+caEqRQpukjdQt\/vgxb64I0YR6fVRQJSukC\/CRjU5GaE1+dfpXN7or\/KEacxMMC0GshQeliuPXG6iaKOS3SOuo2Dsr5v2BsmD6jM1n2QT4sEME4P5MlrHaSUXI6RVEC2nflBhvd9+0UdA+wu8im+f3PS4Lyskpny1a3gu4ym1IWCZeJCXQZdEm2+49T4LiOKbHAY0ympFV2sT8fBHk\/7hG6FgM4urMqyIlzmQUe4R+blwYzCmVuZHN0cmVhbQplbmRvYmoKMTggMCBvYmoKWy9JQ0NCYXNlZCAzMCAwIFIKXQoKZW5kb2JqCjE5IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUxIC9CYXNlRm9udCAvTExWQ1lEK0FkZWxsZVNhbnMtUmVndWxhciAvRm9udERlc2NyaXB0b3IgMzEgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyMTQgXQo+PgplbmRvYmoKMjAgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHlwZTEgL0Jhc2VGb250IC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZvbnREZXNjcmlwdG9yIDMyIDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMjEzIC9XaWR0aHMgWzI1MCAwIDAgMCAwIDAgMCAwIDI4NyAyODcgNTMzIDAgMjIzIDIyNCAyMjMgMCA1MzMgNTMzIDUzMyA1MzMgNTMzIDUzMyAwIDAgNTMzIDUzMyAyMjMgMjIzIDAgMCAwIDQ3MSAwIDczMSA2MjkgNjcwIDAgMCA1ODYgMCA3NjIgMzI0IDAgMCA1ODMgOTE5IDc2MCA3MzAgNTg3IDcyMCA2NTUgNTUzIDYzMCA3MjcgNzAxIDk1MSAwIDYzOSAwIDAgMCAwIDAgMCAwIDU0MSA1OTMgNTE4IDU5MCA1MzAgMzIxIDU4OSA1ODEgMjYxIDI0OCA1NDAgMjU4IDg3OCA1ODcgNTQ1IDU4OSA1ODkgMzY4IDQ2MiAzNDAgNTgwIDU0MCA4NTUgNTY4IDU0MCA0NTQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMzY3IDM2NyAwIDIzMyBdCj4+CmVuZG9iagoyMSAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0FHS1hKRStBZGVsbGVTYW5zLVNlbWlCb2xkIC9Gb250RGVzY3JpcHRvciAzMyAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMzIgL0xhc3RDaGFyIDEyMSAvV2lkdGhzIFsxOTggMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyNDQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDI0NCAwIDAgMCAwIDUyNCAwIDY5NiAwIDY5MyA3MjYgNTc4IDU1MCAwIDczMCAyOTEgNTExIDAgNTU4IDkwNCA3NDUgNzYwIDYxOCAwIDYzOSA1OTkgNTcxIDcxMSAwIDkxOSA2MzUgNTgyIDAgMCAwIDAgMCAwIDAgNTUwIDU4NiA1NDEgNTgzIDU0NyAzNDIgNTU1IDU4MyAyNTcgMjU1IDU0NCAyNTcgODYxIDU4MyA1ODIgNTg1IDAgMzc2IDQ5MyAzOTIgNTgwIDUxNyA3ODEgNTA4IDUwMiBdCj4+CmVuZG9iagoyMiAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0lQRUpKRytBZGVsbGVTYW5zLVRoaW4gL0ZvbnREZXNjcmlwdG9yIDM0IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgODkgL1dpZHRocyBbMjQyIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyMDAgMCAyMDkgMzM0IDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCA2MzcgMCA3MTYgMCA1NzAgNTQzIDAgMCAyNzIgMCAwIDAgODg1IDc0NSAwIDYxMiAwIDYzNyA1NzggNTMyIDAgNjE0IDAgNjA3IDUzOCBdCj4+CmVuZG9iagoyMyAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UcnVlVHlwZSAvQmFzZUZvbnQgL1FRVEFRQStUaW1lcy1Sb21hbiAvRm9udERlc2NyaXB0b3IgMzUgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyNTAgXQo+PgplbmRvYmoKMjQgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHJ1ZVR5cGUgL0Jhc2VGb250IC9TUUtVRVQrU3ltYm9sIC9Gb250RGVzY3JpcHRvciAzNiAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMTY1IC9MYXN0Q2hhciAxNjUgL1dpZHRocyBbNDYwIF0KPj4KZW5kb2JqCjI1IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1RydWVUeXBlIC9CYXNlRm9udCAvSkZSWFFEK0FyaWFsTVQgL0ZvbnREZXNjcmlwdG9yIDM3IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMzIgL1dpZHRocyBbMjc4IF0KPj4KZW5kb2JqCjI3IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUwIC9FbmNvZGluZyAvSWRlbnRpdHktSCAvRGVzY2VuZGFudEZvbnRzIFszOCAwIFIKXQovQmFzZUZvbnQgL0pPVk9WVStNUy1NaW5jaG8gL1RvVW5pY29kZSAzOSAwIFIKPj4KZW5kb2JqCjMwIDAgb2JqCjw8L0xlbmd0aCA0MCAwIFIKL04gMyAvQWx0ZXJuYXRlIC9EZXZpY2VSR0IgL0ZpbHRlciAvRmxhdGVEZWNvZGUgPj5zdHJlYW0KeAGdlndUU9kWh8+9N73QEiIgJfQaegkg0jtIFQRRiUmAUAKGhCZ2RAVGFBEpVmRUwAFHhyJjRRQLg4Ji1wnyEFDGwVFEReXdjGsJ7601896a\/cdZ39nnt9fZZ+9917oAUPyCBMJ0WAGANKFYFO7rwVwSE8vE9wIYEAEOWAHA4WZmBEf4RALU\/L09mZmoSMaz9u4ugGS72yy\/UCZz1v9\/kSI3QyQGAApF1TY8fiYX5QKUU7PFGTL\/BMr0lSkyhjEyFqEJoqwi48SvbPan5iu7yZiXJuShGlnOGbw0noy7UN6aJeGjjAShXJgl4GejfAdlvVRJmgDl9yjT0\/icTAAwFJlfzOcmoWyJMkUUGe6J8gIACJTEObxyDov5OWieAHimZ+SKBIlJYqYR15hp5ejIZvrxs1P5YjErlMNN4Yh4TM\/0tAyOMBeAr2+WRQElWW2ZaJHtrRzt7VnW5mj5v9nfHn5T\/T3IevtV8Sbsz55BjJ5Z32zsrC+9FgD2JFqbHbO+lVUAtG0GQOXhrE\/vIADyBQC03pzzHoZsXpLE4gwnC4vs7GxzAZ9rLivoN\/ufgm\/Kv4Y595nL7vtWO6YXP4EjSRUzZUXlpqemS0TMzAwOl89k\/fcQ\/+PAOWnNycMsnJ\/AF\/GF6FVR6JQJhIlou4U8gViQLmQKhH\/V4X8YNicHGX6daxRodV8AfYU5ULhJB8hvPQBDIwMkbj96An3rWxAxCsi+vGitka9zjzJ6\/uf6Hwtcim7hTEEiU+b2DI9kciWiLBmj34RswQISkAd0oAo0gS4wAixgDRyAM3AD3iAAhIBIEAOWAy5IAmlABLJBPtgACkEx2AF2g2pwANSBetAEToI2cAZcBFfADXALDIBHQAqGwUswAd6BaQiC8BAVokGqkBakD5lC1hAbWgh5Q0FQOBQDxUOJkBCSQPnQJqgYKoOqoUNQPfQjdBq6CF2D+qAH0CA0Bv0BfYQRmALTYQ3YALaA2bA7HAhHwsvgRHgVnAcXwNvhSrgWPg63whfhG\/AALIVfwpMIQMgIA9FGWAgb8URCkFgkAREha5EipAKpRZqQDqQbuY1IkXHkAwaHoWGYGBbGGeOHWYzhYlZh1mJKMNWYY5hWTBfmNmYQM4H5gqVi1bGmWCesP3YJNhGbjS3EVmCPYFuwl7ED2GHsOxwOx8AZ4hxwfrgYXDJuNa4Etw\/XjLuA68MN4SbxeLwq3hTvgg\/Bc\/BifCG+Cn8cfx7fjx\/GvyeQCVoEa4IPIZYgJGwkVBAaCOcI\/YQRwjRRgahPdCKGEHnEXGIpsY7YQbxJHCZOkxRJhiQXUiQpmbSBVElqIl0mPSa9IZPJOmRHchhZQF5PriSfIF8lD5I\/UJQoJhRPShxFQtlOOUq5QHlAeUOlUg2obtRYqpi6nVpPvUR9Sn0vR5Mzl\/OX48mtk6uRa5Xrl3slT5TXl3eXXy6fJ18hf0r+pvy4AlHBQMFTgaOwVqFG4bTCPYVJRZqilWKIYppiiWKD4jXFUSW8koGStxJPqUDpsNIlpSEaQtOledK4tE20Otpl2jAdRzek+9OT6cX0H+i99AllJWVb5SjlHOUa5bPKUgbCMGD4M1IZpYyTjLuMj\/M05rnP48\/bNq9pXv+8KZX5Km4qfJUilWaVAZWPqkxVb9UU1Z2qbapP1DBqJmphatlq+9Uuq43Pp893ns+dXzT\/5PyH6rC6iXq4+mr1w+o96pMamhq+GhkaVRqXNMY1GZpumsma5ZrnNMe0aFoLtQRa5VrntV4wlZnuzFRmJbOLOaGtru2nLdE+pN2rPa1jqLNYZ6NOs84TXZIuWzdBt1y3U3dCT0svWC9fr1HvoT5Rn62fpL9Hv1t\/ysDQINpgi0GbwaihiqG\/YZ5ho+FjI6qRq9Eqo1qjO8Y4Y7ZxivE+41smsImdSZJJjclNU9jU3lRgus+0zwxr5mgmNKs1u8eisNxZWaxG1qA5wzzIfKN5m\/krCz2LWIudFt0WXyztLFMt6ywfWSlZBVhttOqw+sPaxJprXWN9x4Zq42Ozzqbd5rWtqS3fdr\/tfTuaXbDdFrtOu8\/2DvYi+yb7MQc9h3iHvQ732HR2KLuEfdUR6+jhuM7xjOMHJ3snsdNJp9+dWc4pzg3OowsMF\/AX1C0YctFx4bgccpEuZC6MX3hwodRV25XjWuv6zE3Xjed2xG3E3dg92f24+ysPSw+RR4vHlKeT5xrPC16Il69XkVevt5L3Yu9q76c+Oj6JPo0+E752vqt9L\/hh\/QL9dvrd89fw5\/rX+08EOASsCegKpARGBFYHPgsyCRIFdQTDwQHBu4IfL9JfJFzUFgJC\/EN2hTwJNQxdFfpzGC4sNKwm7Hm4VXh+eHcELWJFREPEu0iPyNLIR4uNFksWd0bJR8VF1UdNRXtFl0VLl1gsWbPkRoxajCCmPRYfGxV7JHZyqffS3UuH4+ziCuPuLjNclrPs2nK15anLz66QX8FZcSoeGx8d3xD\/iRPCqeVMrvRfuXflBNeTu4f7kufGK+eN8V34ZfyRBJeEsoTRRJfEXYljSa5JFUnjAk9BteB1sl\/ygeSplJCUoykzqdGpzWmEtPi000IlYYqwK10zPSe9L8M0ozBDuspp1e5VE6JA0ZFMKHNZZruYjv5M9UiMJJslg1kLs2qy3mdHZZ\/KUcwR5vTkmuRuyx3J88n7fjVmNXd1Z752\/ob8wTXuaw6thdauXNu5Tnddwbrh9b7rj20gbUjZ8MtGy41lG99uit7UUaBRsL5gaLPv5sZCuUJR4b0tzlsObMVsFWzt3WazrWrblyJe0fViy+KK4k8l3JLr31l9V\/ndzPaE7b2l9qX7d+B2CHfc3em681iZYlle2dCu4F2t5czyovK3u1fsvlZhW3FgD2mPZI+0MqiyvUqvakfVp+qk6oEaj5rmvep7t+2d2sfb17\/fbX\/TAY0DxQc+HhQcvH\/I91BrrUFtxWHc4azDz+ui6rq\/Z39ff0TtSPGRz0eFR6XHwo911TvU1zeoN5Q2wo2SxrHjccdv\/eD1Q3sTq+lQM6O5+AQ4ITnx4sf4H++eDDzZeYp9qukn\/Z\/2ttBailqh1tzWibakNml7THvf6YDTnR3OHS0\/m\/989Iz2mZqzymdLz5HOFZybOZ93fvJCxoXxi4kXhzpXdD66tOTSna6wrt7LgZevXvG5cqnbvfv8VZerZ645XTt9nX297Yb9jdYeu56WX+x+aem172296XCz\/ZbjrY6+BX3n+l37L972un3ljv+dGwOLBvruLr57\/17cPel93v3RB6kPXj\/Mejj9aP1j7OOiJwpPKp6qP6391fjXZqm99Oyg12DPs4hnj4a4Qy\/\/lfmvT8MFz6nPK0a0RupHrUfPjPmM3Xqx9MXwy4yX0+OFvyn+tveV0auffnf7vWdiycTwa9HrmT9K3qi+OfrW9m3nZOjk03dp76anit6rvj\/2gf2h+2P0x5Hp7E\/4T5WfjT93fAn88ngmbWbm3\/eE8\/sKZW5kc3RyZWFtCmVuZG9iagozMSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0xMVkNZRCtBZGVsbGVTYW5zLVJlZ3VsYXIgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE4MiAtMzIzIDExOTggMTA5OCBdCi9JdGFsaWNBbmdsZSAwIC9Bc2NlbnQgODgwIC9EZXNjZW50IC0zNzAgL0NhcEhlaWdodCA3MzcgL1N0ZW1WIDk0IC9YSGVpZ2h0IDUyNiAvU3RlbUggNzYgL0F2Z1dpZHRoIDU3MCAvTWF4V2lkdGggMTM4MCAvRm9udEZpbGUzIDQxIDAgUgo+PgplbmRvYmoKMzIgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE3NCAtMzA4IDEwMzUgOTQ3IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA2NjggL0Rlc2NlbnQgLTMzMiAvQ2FwSGVpZ2h0IDY3NyAvU3RlbVYgNTYgL0xlYWRpbmcgMjAwIC9YSGVpZ2h0IDQ3OSAvU3RlbUggNDMgL0F2Z1dpZHRoIDUwMCAvTWF4V2lkdGggMTIwOSAvRm9udEZpbGUzIDQyIDAgUgo+PgplbmRvYmoKMzMgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9BR0tYSkUrQWRlbGxlU2Fucy1TZW1pQm9sZCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTg2IC0zMjMgMTIyNyAxMTEzIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgMTE1IC9YSGVpZ2h0IDUyOSAvU3RlbUggMTAyIC9BdmdXaWR0aCA1NzAgL01heFdpZHRoIDE0MTMgL0ZvbnRGaWxlMyA0MyAwIFIKPj4KZW5kb2JqCjM0IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvSVBFSkpHK0FkZWxsZVNhbnMtVGhpbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTc1IC0zMjIgMTE0NyAxMDk0IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgNDkgL1hIZWlnaHQgNTIwIC9TdGVtSCA0NCAvQXZnV2lkdGggNTcwIC9NYXhXaWR0aCAxMzIyIC9Gb250RmlsZTMgNDQgMCBSCj4+CmVuZG9iagozNSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL1FRVEFRQStUaW1lcy1Sb21hbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMjAzIC00MjggMTcwMCAxMjcyIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA3NTAgL0Rlc2NlbnQgLTI1MCAvQ2FwSGVpZ2h0IDY3NiAvU3RlbVYgMTAyIC9YSGVpZ2h0IDQ2MSAvU3RlbUggNDQgL01heFdpZHRoIDE3MjEgL0ZvbnRGaWxlMiA0NSAwIFIKPj4KZW5kb2JqCjM2IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvU1FLVUVUK1N5bWJvbCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTY3IC0yOTkgMTA5NCA4MjcgXQovSXRhbGljQW5nbGUgMCAvQXNjZW50IDcwMSAvRGVzY2VudCAtMjk5IC9DYXBIZWlnaHQgNjIzIC9TdGVtViAxMDMgL1hIZWlnaHQgNDY3IC9TdGVtSCAzOCAvQXZnV2lkdGggNTcyIC9NYXhXaWR0aCAxMDQyIC9Gb250RmlsZTIgNDYgMCBSCj4+CmVuZG9iagozNyAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0pGUlhRRCtBcmlhbE1UIC9GbGFncyAzMiAvR</mes:base64EncodedContent><mes:contentType>contentType</mes:contentType><mes:documentName>names</mes:documentName>
        </mes:CreateEnrollmentDocumentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6fc9718f-f69d-46f7-9a41-dffda9a7c22f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="9c7d00ba-2f31-4166-b13a-3d560078b5a2" name="Not SOAP Fault"/><con:assertion type="SOAP Response" name="SOAP Response1" id="3358cc26-bd03-4a0b-9105-4da9779a1d57"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="87c82d3c-e4c6-4bd1-aa6c-4eb7f59047c4"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:commandStatus[1]/text()")
def documentId = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:documentId[1]/text()" )

assert commandStatus.getData() == '1'
assert documentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateEnrollmentDocumentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateEnrollmentDocument_BOI" id="c204b09e-b374-43bf-8b61-fd775e8e1fa3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateEnrollmentDocument</con:operation><con:request name="CreateEnrollmentDocument_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a2d6acb3-7045-4a9a-bcfb-42997ae5c540"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateEnrollmentDocumentRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:note>ref</mes:note>
            <mes:documentType>type</mes:documentType>
            <mes:base64EncodedContent>JVBERi0xLjQKMyAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQW5ub3RzIFs8PC9UeXBlIC9Bbm5vdCAvU3VidHlwZSAvTGluayAvUmVjdCBbNDE2LjkzIDM2My44NSA0NjAuNjEgMzU3Ljg1XSAvQm9yZGVyIFswIDAgMF0gL0EgPDwvUyAvVVJJIC9VUkkgKGh0dHA6Ly93d3cuY2Z0cGF5LmNvbSk+Pj4+PDwvVHlwZSAvQW5ub3QgL1N1YnR5cGUgL0xpbmsgL1JlY3QgWzE0My40OSAzMjEuMzMgMjE0LjE3IDMxNS4zM10gL0JvcmRlciBbMCAwIDBdIC9BIDw8L1MgL1VSSSAvVVJJIChodHRwOi8vd3d3LmZpbnhlcmEuY29tL2xpY2Vuc2luZyk+Pj4+XQovQ29udGVudHMgNCAwIFI+PgplbmRvYmoKNCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMjIzOT4+CnN0cmVhbQp4nI1Y23LayhJ93vmKfkjtSqrwWPdL3jDgCqdsICAnlaq8DGIAHQuJPZJM+JHzvadnRjeETDapGCFmVq9efZkWBvzng0ZsF04fHgK4f9TBIZoGwRYmgbijmy5xDfAMm5g2BBv4tDqyMKIxLAp+TDMGwzBMiySHWXFYM\/4FLNPQxEvH\/5Zj+7DKac4ODJcsGI\/SzRd4pjzcgz4AQ9NtuCs\/m9UNWNAdA\/0e7M8Q\/FcQ+Qe\/0AQv8Q8Z4ZXhmcRywHUdYlsQHuB+qsM4hW8fXI2YGriOSxwDTN8hHtrQiKsDZ\/AAwivXJLoJrm0TX5NOLTjNaJLvYfS9stkss1xiqWXPLInT6wWmRzxf4VD+CnIVyMvRsLX6\/tHoqGvaDnG0NpHxdDkZBTB8eoLhaDR\/mQUwnX17mS6nkxUE8y\/Qwqt2WxaxHbl7xNMs4yndZPAYJTSRgQpYuE\/SON1FLOvbbiIntX0xh4f0Nxi2bfp9Kw2X2GUS0ASjlrN0gC7e+ZalGT3rdZ9oav1inyYMZin8DzzPuzMt786yLbPaU4ZMl9tuhkxzxV1J4eX5ebj8CfNHVCqYfp8GP+FC7KtUNiyRyo5vioyRrJaT79P5ywpWwTCYPE9QbHgYPg1nownMZ6AZ94bXgqwAPIMYZbQmi\/lqGqzuR8vJGN\/bGhg68fT24o+GSOEePPTeUwH4MQ2+jpfDH8On1f3q5SFYCs\/ms0tcm2CNtDZ9NPphbZ\/YhpKqdq\/tnXlv6j2Em20fda+FrGLk2BYxrHdidJ3gKmqO6RPHk5jo0mylvGrCFnydrmAxWU7n4\/cjWNo3LYLJaSrzukV0V9hfQWMMBbJViozR7QpQx8wRuqn9uifbSQdA13zie22ENt3xZDVaThfiugI1vDaoY4tQdzANr4v5XtKYtiF6bAlmoWR6F8zERqFfgLUypsKxNJ34t0lZGqaI38apmk2ZIJ2gY+Yaxk3RdZ2YpkTCvGqaQaW6AritegOxZGHBeZTsYMzwjIly2PL0AKM9C1\/xbld9Bd7rqEhq3WljqyoE+eoqr4D6lccw6nob6BKiEv0GF8vELv9HLqXimiNa5w3Fbd8VnpWKm1pXcQVwU\/EWxHD0FQ+sszyl8xRCzjZRnnLAPr\/hFIbHY8x22O+70isr\/dJj0dta20i\/6AqiX3QXP15AyF7Xr\/wNKqXybRzZ2vqUt9Gm59YNrlPM+BHDa6MV3+ueQstJ8LKcTcYwxWYLj5PJqoPsaMTB1mPpxDUvkD8YOvpl1ivEOetc2cYpw3fBtmWbls1pHgyf4HG+7GugUn7\/NqSJxGzzGvLnZLi8C+Z37f5Z+mA54nTo8QHhUF5MbBvnM8dsob2vS+V2CXrNsfbi\/RVNQeiu6GnC7mweTL7A5Dc9RDh15Psog6weQkPK2baI4zNgbiPIMeU5Xp4h4pztipjyKMdJiXQcx5JxWmmhm6K51hQM\/IzMLJTAVxPP9HkxXwZDbKnNHIeheh62z4+avOU5Iv\/lxgQp4lydboFxnvIMsA7\/KViWR2mSAdB1WuRwTgveODUAFrMw52kShZBzmmRbxsU+eU1DtTVNrrbluO8oZ7MiA4q1v2eQyEEejtiAc7YRu67pup7ohoKu2IHdGYVFwh2pkcAJ1azA\/zidDqA9gQ7gYsocgBwzgaKFFEnhO3qDWiUDiLbyGs0nrz1sHV\/MlYLtpf+CIGchi445IPETurET90q4hKH7hxSDHCXblB+okLHUn7ZkTqRsfagEfjA4FFkOe0a5OsUkcgoxruZ9XHXR8pSy6D7y3tAzyrcVy09oRlhQzjJ4nC5XQdtyAqd9hM9S4kuZPUjm2gY2W1f1wb\/gL9AJBiGORZCkPAk9MFkbtHyyKxPi1yfUBQvl12fSA6kTo4E0CJ7cWcijNbugIj\/UwgkvsBihSLIC36SwA2mZ\/T7GNJIxDmNUThRrHW508Syv1yyO2BtGR0YPv6jNVCuaCF4zNg3i2jVj8WpFucdDnKqNZr3ZiCZ82qQxNg6gBymYrAQMVZHhs7KoIUmsBxP7n1\/OcQxOEeJFyZuodHHWqmiE6UFqkUth5JowxU4VqqalXD5iYh3z+ExguhVJktNXpvyWSYQJtS4y7IVZprIJj\/hNKqt1IJYrVHnmK6NV5K8Z4+BYPgtvy3CWPjf1h7GIylgMsFQFBfW1NLOnbyonCtXjxOUBG9AZNoUc+WSKRAcZVuFHJjVOlRAMZREEG5nawVKt2vQs0YSrVu3ZRLO6h4Xp1I+y2Ip+M04HME1CgvQyaVXkXhbtElVWWyXLez99DHecqQKUFf4o1s7pawYPFPX4GwIuWsAIHcCQDZpAoolC1BpeXilt2vXDM2fZEft3tI5ieTQJPh0bRbJhKhxXnAhA6aJ0jm7wUIwy7CaYl3\/+veDXp+Y3GDFKauVfXf7lOzle4XO7f8H4dDqRcJsf6Zlg2EqEZp1HLJz4THGg3smQYXS28K02oVDF5KK3UX99rmTqrq0k06qgYiNcsz2Ntz1adeJBYIEtBqOZpDkbCA15WRFrcQ9CrKCdOAJUZjJ+yOqEuE6Asigyxt+isPm95R3CliFyUxDGCn6LNhgSzHSEJjDM4Eh5c6oqGgNld1M+FlV1igXWcbJyIIwxUTcy5QSvNY0xysirasJcmaTYKk+Qlfl9m7RZ\/35yLOugptHOrfW5zrtq8ChDIho77uAbQQWZ5vtLad9L4xpPOnegifiZUALfJoxPuZoaSCsHu8TXhdRQFKJoPRns03ijoLdYWpkiuWVYZFRMjpE8sTZVHFIub+VRXshJC7kOEarKkgoCb3F2EOfa43g6qkDIH9hj0diK\/SMmV3ccwQ7LWA\/CdZXqWHCW38YTVbpVkooyvY8xY7HN1A\/YzRZb1C12V8e7UbCGGstbBvA4wlBv8FiRTFlSZqM4OqQyeIxhGmTy+MYGfzxX4V\/w6I2GZ1ikSEoc\/lmKgRNHqYzEvwi65lVBf6drk2b\/\/wGfn0ckCmVuZHN0cmVhbQplbmRvYmoKNSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgNiAwIFI+PgplbmRvYmoKNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk5Pj4Kc3RyZWFtCnicNY7dTsMwDIXv8xTnEiRIbWdp1t0N8SNNgDotL9BlodtE6Sit9vp4iFk6sj\/bso9gZcj6gLN5iCieGaUlQvzAUzTfIAVCC52xCzYI5uKt84g73GxOOR2aT9TTcOp\/MpYp9dPXiPep2+ZhgZkTugSrZqWvsBmbMXdZV+o8HPrdAm\/NkPbgOwixx\/0\/u2sDddNmSAF\/i3hUS1hfTGEFxlnzUfWiav+shqoMCnQtZW6d\/oUw2cqxIHWmiPUr47HXQ2vzC3XrPWwKZW5kc3RyZWFtCmVuZG9iago3IDAgb2JqCjw8L1R5cGUgL1BhZ2UKL1BhcmVudCAxIDAgUgovUmVzb3VyY2VzIDIgMCBSCi9Db250ZW50cyA4IDAgUj4+CmVuZG9iago4IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11HNJQ3pg2JqENFZEfKCEU0LpC14rfn0Fg6co+tmVfxlKRdh5X9RaQLQxyTYSwx0dQF5AAoYbMjPXaM6bstHUIO4w25xSP1Q\/KoTu3fwnzGNvht8dqaLapm2FimW5hRJPcFdj0VZ+aJCtl6o7tbobvqosHmBcwGYfXB9tnA2VVJ9gMboxwEktY30xhCYOr5JPoU1Tfrfoi9wL0LHmqrfwFG9KFNYzYqCyUX4z3Vg6t1T92TT1uCmVuZHN0cmVhbQplbmRvYmoKOSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgMTAgMCBSPj4KZW5kb2JqCjEwIDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11kqahvIHYkNCGipofKCEUEKWstOL3ZxBYurKPbdlXYyVIWoe7mHsk3wqZJILf48uLPxADoQbPlHHSaUy0lcbC7zAqrzEcqzOKobu2t4hZCO1w6bEemm3spkiNpkcoVprZHGVf9bGJvFLE7tjupvitunCA+oAmZfH5YvNuoKjqiDSBHcOf2BI2D1NYQeHO+cRasuqnVZdnjoHepZ5Iw3+hFcncKI3QiMQXPwaLlg9txD92rz1wCmVuZHN0cmVhbQplbmRvYmoKMTEgMCBvYmoKPDwvVHlwZSAvUGFnZQovUGFyZW50IDEgMCBSCi9SZXNvdXJjZXMgMiAwIFIKL0NvbnRlbnRzIDEyIDAgUj4+CmVuZG9iagoxMiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk4Pj4Kc3RyZWFtCnicNY7RbsIwDEXf8xX3EaQtdZKmobyB2JDQhoqaHyghFBClrLTi92cQWLqyj23ZV2MlSFqHu5h7JN8KmSSC3+PLiz8QA6EGz5Rx0mlMtJXGwu8wKq8xHKsziqG7treIWQjtcOmxHppt7KZIjaZHKFaa2RxlX\/WxibxSxO7Y7qb4rbpwgPqAJmXx+WLzbqCo6gibwI7hT2wJm4cprKBw53xiLVn106rLM8dA71JPpOG\/0IpkbpRGaETii58Ui5YPbcQ\/dxE9cgplbmRzdHJlYW0KZW5kb2JqCjEgMCBvYmoKPDwvVHlwZSAvUGFnZXMKL0tpZHMgWzMgMCBSIDUgMCBSIDcgMCBSIDkgMCBSIDExIDAgUiBdCi9Db3VudCA1Ci9NZWRpYUJveCBbMCAwIDU5NS4yOCA4NDEuODldCj4+CmVuZG9iagoxMyAwIG9iago8PC9UeXBlIC9Gb250Ci9CYXNlRm9udCAvSGVsdmV0aWNhCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTQgMCBvYmoKPDwvVHlwZSAvRm9udAovQmFzZUZvbnQgL0hlbHZldGljYS1Cb2xkCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTUgMCBvYmoKPDwvVHlwZSAvWE9iamVjdAovU3VidHlwZSAvSW1hZ2UKL1dpZHRoIDIwMAovSGVpZ2h0IDM3Ci9Db2xvclNwYWNlIFsvSW5kZXhlZCAvRGV2aWNlUkdCIDI1NCAxNiAwIFJdCi9CaXRzUGVyQ29tcG9uZW50IDgKL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0RlY29kZVBhcm1zIDw8L1ByZWRpY3RvciAxNSAvQ29sb3JzIDEgL0JpdHNQZXJDb21wb25lbnQgOCAvQ29sdW1ucyAyMDA+PgovTWFzayBbMCAwIF0KL0xlbmd0aCAxNjE2Pj4Kc3RyZWFtCliF7VcHeFRFEH4bOyiWWECsKPYuYldExYq994IdQknIu9frUiI19CYSCR3RxCASBDEixWCABEKNEA64AEmAnEAE7mNm37tLuZCEzxT9vvu\/u2\/fzsy+m392ZnaP4yKIIIII\/q\/I7XSw90q\/P7Ww68w1je3Lv8ENee+8Pvrtdu0e2z7mu0k5x6DC64R4Gtav40Rujr\/99o6v\/IbYseuOxOx7q7KSCSEGx5mEb2j\/agtf3tS9BU0X7sgH7Fi48MiGDP\/MKsxEYuJAidzA\/tUWm19MvKKge\/6X6xm6N83vuOeekv7hdhqxcPjvEjk4dfqeFq1SUo44SElJ33X1mNQzQnpbhJzSMLEIMZ1BlAixTMg04GQbKLEw57CCTKI5y1SU25CRAiE6hkAnvEUI5W0QmHbd8+jkH7140fr0VvsX9ezZZ1HPPi32p6fvWvxqaZKrl3TmaAUiFkdcSBxPXBE88MxdtkxDoQ58HDVkpUHKwax7IqvHPh3ti\/Z9eOYHb700LH\/TZ3828\/mi\/3ig5H5XT4nhhM90UouFGfwVOHRdcIxY\/VAichI6zzH\/mbXNTICVygn4IgiExjavznnE+d8cEjvk0qKipKS2yl2xbXO\/v\/vsHxVl\/ildY5hewqiHE6FsIqDbtqU7IbYIha\/IjAWXouUQQ94aSzoKlDACdU7ki6nXXNXjkY+Lug0qLj5x8EeDBv2aFPPP9Z+P3OiPY3o1dHZUIOJMIOfd1EMiHp1IBnG2j7qENCDHzM3yROR6INJ1+cWZLVs+fquiKLPmrHqqCEbl4cnLLsl832nBEDy5EhEpNIFsgS9UrsqSXiRWMPkN90EkusflVc9EsjP2ZGW1OmGzktumTVGX4sBsILL2vYLnshIvY3oIs86XJ6KzWLPmZGEhsCRzzhgoEHDTRl9BJSADmdWIiNGoZyIrx2Rt2PSNolwQKM4FDt0CM2JgaDbsrMQ8x8DpUyTUWAWWR6YjNdz2xJ5wHyD+Fssz0+1lWrCpwcJ6rZHUjIKTwPNTA4MVpcmhHjGxPwS6wDzmtMRS10JCXwT0khGxwUURkx5qQ4Oge4AZFZ2a1tAOigaT0aKsO3MqjCbuqRMI7F9YeHVPpPAWRYkvDiQpyhuTR2QeaqIUr8JCef6cvOqWuXlWCQJ62Ugo7Dw\/Nn5WYLOi9Fh2+4asEdcuVU6e001RPi05t7plVRKxnMpuHORduED5NgDl8XLm9K8Ar115ujJ7jm\/IPG8V160y0HAiEiFVblMD4bB33k0\/A4+Rv89tvQTQesvfS5XZMwZ29lf7Byt4ToQg6zahocQyq2QkE9c0TGNpld9Wflara+oa\/50LoE+9u3duv78Y+m25bm38zpsHrI53DODyF\/7D4bCp+yDVeJNCU9YLaUhUmYhdpuKMSiE7Fp75+pOdytKN53WY6KLDlotiB44dvi\/oF4TZQwyC3cnC5mtDf1VFg4gyXsPAb12CktEp07k+GJYFXc2CQ4eoMsXT0WMQg9eZwPFSpuwgUjkJdlc1wNoxhNs0lcGEjbAKWiOR4GwyPBIhWjVE4laW3PjsQyu27g7hQPMXHjx\/tasWWDzgSmsZEEYJnOYwg2DGwUFpolYULeqRqK1LoWAKqmpwPD7xhq3b8NHAUnIFQSIS9UAOUR63Hdq0Ywg\/aKEJG3kDVSC0IFu16mhwWCW3rZuQdqAMaUvum5IdFyTCLn\/U5jRIeyprEBkV9kDV4GILDpgePFYEDf1HHbvvEltTVSaCI535TW0qc+UFjAi74uNrOGYdMrQJPLIRd0RFITYSidbQ3XOihu\/tlzZ+3Ljk5ORxyeO3Tsjwpu4LKlXWiXSbE2FHsLsa8DJRg6T2wDaZlmpyoiXijnCOjrnpErF1D286\/pkmV17AiMgQH7gDWRWIQElYaMJGD3XC6DYPnoZ7X4HJgCntm09M6zV06NBeabt\/2uYdta9MiZd0GZIfgqPLkKbgDAiwOlWsajjHDQ3y2SBM5+aPaYEBZA7IKQogaSC2EAgUOC3JrRGgoxNIG5g7hhJWHpiwEWsKXizhalWoub0fHhWVsDxj2ooV06b9sm1KVOmjNdg3GES8ox3P4XR5zqQob9+EhIS+Xm\/vw9H15tjxAnYr+Ce0tljTf90ThaOySw8+6asfnyKIIIJGw1G2ZvkFCmVuZHN0cmVhbQplbmRvYmoKMTYgMCBvYmoKPDwvRmlsdGVyIC9GbGF0ZURlY29kZSAvTGVuZ3RoIDc3Nj4+CnN0cmVhbQp4nAH9AgL9\/\/\/\/AAAARE9x3OHs9PTy2uTo8vHwiI6P8fHxssXL9PX5pr\/O4+Xv4ePo7vP06\/DzaZKs+vn5ZW9\/9\/n6qK+9Y4mTPkxx9fX2ZoaYlrPEX2l9cIm1nam\/ZIiwYoGx\/\/34pKu56+zwn7jIaY2mfpC3cJaisrvZb5iwjZu5i5vChZay5uny3+Hm09K3+vfoxMOr4uvm7e\/1a3SCZIip7OzqZoWg\/\/7+dHuF\/v\/+\/Pv5YX+a1tjfYXWY0tXdy825qayhkKq9kqK1V2+O0tfm3+Lw5ujsbZGYiqS4navLf4id4OLn4+Pg5+rWmLbHqbC+\/f3yZZCp7+3TxMnHmJ6uuMvVvsTasMnWW26JXYGhUmiG29\/tvb+uzdrhgJuxUF98z9Tiy9biS1x63ufr8\/f34uTp9vX06+70sLGj2trB1ODl1tnqv8TOgoiN+fn4\/f39j5ep9vb1o7zMyM7j\/\/\/+6uzvkq\/C\/v7+qqqq7u7uVVVVd3d3zMzMu7u7\/\/\/\/mZmZZmZmERERMzMzREREiIiI3d3dIiIia5CGgImdk7DDSVZ5S1l8pL3LbpSdzdDYTVp39PLX8\/Py9fX1T2KA\/\/\/4ao6Co7zKR1Z7X3+pwcfaa3WNaYSdX3mVeYKJZ4uFb5Woao6GQU9xbI6e+vr5+\/v7a5CYaIuGZHCJhZa\/SVV3Tl19YX6PZouk6unmxcnT7Ozt7u7sS2B+\/Pz6nbfHX2uF6uroa5CM8vLw\/v784uLfYn6VZYycobrJtrmq6ens\/\/\/l6+jNWnGLscbT9vb2W3WRuc7ZlLDDYn6hfqK2bZOh6enxa4Sx\/P30Y4CrVWmK4+vubZWtY4OOY26K5OThcnuTrrTAm6K07\/Dz\/Pz78vP3pKq0pLzMc5mteYukxNPbk5qsbJGd+\/v8X4OXqsDPbJGSRVJ0UmOFdZOrrMPR9\/j5g6a7\/f3viqq+ao6SbXuR+Pj28PDudp60ZIKf2t3iVWF6WWaCfI+xmrXFaY2Ms7jEjJSm9Pb5qbTTyc3VnrjI5ubkjbkP+QplbmRzdHJlYW0KZW5kb2JqCjE3IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0Zvcm1UeXBlIDEKL0JCb3ggWzAuMDAgMC4wMCA2MTIuMDAgNzkyLjAwXQovUmVzb3VyY2VzIAo8PC9Qcm9jU2V0IFsvUERGIC9UZXh0IF0KL0NvbG9yU3BhY2UgPDwvQ3MxIDE4IDAgUgo+Pi9Gb250IDw8L1RjMiAxOSAwIFIKL1RjNCAyMCAwIFIKL1RjMyAyMSAwIFIKL1RjMSAyMiAwIFIKL1RUMyAyMyAwIFIKL1RUMSAyNCAwIFIKL1RUMiAyNSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNDU0ID4+CnN0cmVhbQp4nK1a3XbbNhK+x1PgUjrHyxAAf8DsRU\/WjU+zZ+OksXa7OW0vaAqy2KVIhaTs6oH2kfZ9dvBHUbZEQg7TU5MEwA+DwWDmm6G+4Z\/xN0wCj8RMX2gS45AzLwoDguPI3NQC\/4JL\/Oa6IThrsO8xnySRzw936NDWZIDpezTAvvxP3iTwN2R+jGMfJglinG3w3xY4DtUQc1ls8JtFRhDBixX+Fc9uPtzO8V98j+DZv+dYXd\/LK8WzL6oDbt7Zmyt7g+0NvI3029fmLQ\/6fseLv+P3C7XuYxmpn3gxI9GQjMjIiJWMszdv5njxxxk4Srw4DC9Aw+fBOv1FnHjMBQ309\/m5sj78y7R0WrOa+WoVbbSHZne2ZfFC1V2L3Y2P5mqfb3vv\/o7O6juKvTCIyNCacH9NqK8hBSNNjXOPE4ajGEw1igne4JDCbdJrKo6aCI9R0X8NGmDIGq8G1B5RL6JWxFBPri9G7fTlJsqX\/YT7AOjFlIQRj+CO0zgIiZRcnabru8M4dGLc3TXcJzzAT5jiRT0gYpB4gRURkPyERXiRYTi9crC5aGFZZyM3cle1IcjLQm47bNzbOQ7VWiI0+wWaIjz7CS5MW4EcKPvw7Efd+Elf3pu3dd\/NhzkOtDEweYKR7Hr\/RQ8xMKdQdJuZVWMsfup3fdVQZvg\/9eVLf+rP+sFOZsQyL9weLeQfeI66eUzXzacjzI9aFLtyPfQY7AftWJAxzRP7FMSwPTHhx\/s0sDunrf389lPwXsGQhQbGQm\/yMi2zPC1wVm22aZmLBmfrqmoEXldPuF2LPW7WKbj8fbWr8VbUTVXC6LxcVfUmbfOqxDdiKWpom6Nxj0XC3uk+Egz3BUOzIn3CD\/mjFKcqm90GJpbS4Dp\/WLe4rXCRb\/IWN9VG4Ptdi8uqxWlRKGHz8sHrpJJAadFUTuL5cLycxKvFt11eg3S7RgrTCpgaNKSU9iRA5qIQWWtUl5ZLvK2rVrYoNfa057nIFfIIvCM4r3HBPhcihc2rRboEfeWNVEyegUQgyGpXFHsp7q4E3TStlOtpnbZS4mXlnY84AUTDJOEHQdCYIG4BLIypDIdToYWxtHoHtAUYUrvfwvZVq9M23dtDqSW9j0uxFfAA3dISYUeXO+h32b+AOZp9VeNG1I9yx5Q5pY8CP+XtGuzMw1Lsg5DnNcIgwFGga3ZeB40MrriRSzbToaFlUu50fPCsr7+RJYMJ9zcmS0t4zordUrw9r\/kgimT0ZM4ioSELIz6XKyQ4JNTj0QDaAsgJkgv87wAaYV4c08gBjaJR6yc0cpQtCwzaXaUc\/p3IdnXe7nG529yLWu06aBYc6oBlEaBpJI7tbN93cju9BglsFx9AW1ha7KLXcbQT\/OysXkfRupW+y7JqV7b4Pi0gpmq339Zp2aSZMl0w5baq9+etlgUhZAmHOSey2oADlfSnstpxtEusdhSts9rrWiwh4BslKuVmuqnJKojEA8lXEno+hDA72UThRvoYNh1aSLzECe0dUI3VCdpWCrGUwV177mwHehowNRp6lFFu53UwNaBg\/2tOR0vJgHZ16bROBh7EaZ0QI\/Iai0dR75fpHkhek5eigZjw4VbF30boY3UviurpSsavAmxDk0TgQMAae2pyCNIBRE3ipIkeVYZopPWtpVVaP6+oqyPpXGSCMzxyPIxMQOT\/BL5ryHvTGcJfsWZ5AmauVYCVMmvyrPihJczn43sQEI+EPnOWxlg8Gl4bSwJ5fpzQxjXFIKVys2MXK2URuIzTKb5xcsy4zAtS\/OGUnYW0F2dkyh6wkZR99hWSiSGXHXhxAi8eQw8BDrlsCP2RH0WvEfRXPNsCq4D0GcSFDBmcNSTPcDpUWzFHur4Q41muag3lSqXVlR69gbQanvTgVvXoYYqVxvZV+xe9aHntX3TB+B91QaDSy9QL1D030ILswv5U3X1d6GXpofq1ddrr1kN\/6AZdItPY3+eaMnUfPb3R7V49gNtQT4VahV6L2Rb90M5RoGDOl1RDkoA5JtZ+hmoe4wTicGwCv+dFXonW0ZFp0CI6JVrCJ0SjLJgSLfYnRGP+lLvAgil3gcVT7kJATu4C+FIec\/+FM0XPnHTv38AcAfd8\/\/kcqhbs83F\/3a67402VYzIVWtY9rOfIuGVZ9Kz1wFK\/9dB3BDpsQgA8WQsNCfGoD6m6kXMgbXOIUge\/AEc6olOxcwZCDpaWTsk2xAfQKB+gcO6PTONMCR8dl\/ArXabWwUMXwMWjDjq6bW9DCfQs9eDUtsni971u2+lLo3pM8NJNorEhrsPZHr0j50G2rerjmFffDn55k2kVi4lVwGWsZdjWOn91jP1K6+j81QVoQyeWkfBSvK9DeS8DX89pkEy0WutPp0Gz\/nQStM6fToMWXmwlt5X7sX9Zqwy9hNDnJ37U4NGxwZ93JJyNZUYmYjW7bI1TlTtu6yqDZFt\/rugVsZqrATbAuZdwQuyME\/leGiWOFYOPaV628L+WOtXluN9mzW\/zK0i6m20lC3IDRRG5gIBEiZ1yomSShuF4YUElk9cj+Rz4G58HI4CoX0PBVS0\/9agiQCEeVDniUTRt\/pDq7Rxid5CgxyTqFjDVfgauVbhPNWzbtqrV9z5T7Lvf1SLdNf2PVeg5xY28mDFmJ3ItV4x83KA0ci5XjBc\/KHEru7kVP0gSj5crXnxG\/q5yBYEzzmm\/CuD0C4MT9ETmkcAu0nqOoO0\/olV9R5Tj4RzNwOdoBur\/bsGVilIKmWkch3ZxhjIPFikrXK1WosaDJ5dyCpyGPNfa9\/KOC9CceIc7nhvvmGa1lndMg2Z5xyRoHe+YBs3yDne0SXjHkbVPxzsgkPZ+2zLEO8yXYB2lzLdgxUIgjg\/8KoHKDDeJuZ1povhEQlX7nQoNgtDgTxymzxxhT3ux5dWZ4\/kUjRDfiwKQ6TATMuULnowHgT8q7fHzUl\/bo7meRXPCQkXFjhfllg2iF4IzYNgkCU+oiEcJ\/DsrfPc71E2qogpoiUOwUvfCVEBlC4Qt4qu4pasgOgABJ549mUwayX49eK1Gmf5KPfQ7hJ1pIFkGlxHSqFvQ95X4DxYk\/dpRcPfp+L6ucl047sr1si5knjJdLNIjTFdhKwhU9qthlb5ISpDo2P4CKVexXeg2U4rybLl96Ae98qcwnNu1mdg+TVnBFlWP9fZK19EVKSZBO5AFdzQ3suCM50gWJlltRxYmQevIwhRoB7IwCVp4sZVMQxb6x2c6spAkcnIQZ5wtuHzHGYFDFwZxHsgfkZ2GQ2ej+M\/4\/zgQtckKZW5kc3RyZWFtCmVuZG9iagoyNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9HMSAyNyAwIFIKL1RUMSAyNCAwIFIKL1RjNCAyMCAwIFIKL1RUMiAyNSAwIFIKL1RjMyAyMSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNTcxID4+CnN0cmVhbQp4nM1b247juBF911fUYzuY0YoUSUmLIINsI5OdYJPdwRgZBNk8qGW6raws9erSbud\/8kPJD6VIXXxpi6LGxiAYoNst0acuLNapKml+hY\/wKxDmksBvf9EoAB76ruCMQCC6D6WEz5DDN\/cVgaQCz6Xci0KP4aeAEi5C4XhuSAPGCVRJu+7+06V1MKz7dI+fo5DBDigsS9QDl+NK9U99iNS3fS+AgOB3ROAkW\/huife8yBewTAD1Uou7X8stfLNM0ApYruHvcPe+WMBbAnflAny4gwUIuOsuNQvn\/E681n+0P9MFcLjL9M\/2c1zrG7JaIH73Ffms\/5DlwsFbe\/3HqhUQ7\/t1\/4Dln+APS+3mU\/Oo77te6NHePNDmOco85k+b99CgLrTXL5daYHupasU6l8WGKEEE\/FSsSRia4Sz\/edmIYY9EFLgk7NG0ERf3yDkx4qcG94DB3VPRan5sxbfayScu1GJVfCFS6ZzrQhh3AybomS68\/Vb3q7WMdZal+boot3GdFjnED0VTw75oyiN7jQGMilwMXBr4LvG56BVxbFwMg8hjI19h+55QHidn2CYjj7Bfo0Wz0UxwhM+F+5s6UqN4PkNfs+hGxjJ6S9cF4Q3RGObeG6Jxby7aX4qjCDQEvYOB+Uqc4G5E6HkSmIx35zTex3NLSN3AfJ6dFrYu47yKE3WeK4jzFciXJ1mmMk9MYYYR5hLBo17Qdc4\/qC1C15+LNuV7M1MKzs+y8GWmdOyZ8tWdM6Z0ZjEljDOlcO4eToS2CB2\/tZc61MrIqz3Bdc6Yl33HXcuIy73jIuQywcEMgnPGrSCYrCLfH+ROninHnkMORHmCfRKhzihR2sXqgRyds+3xQpdzKqwNO2yPM2UYJcT1BQo3GHaWMY5ZfzxBBLgZLDTiOjNIt6dwezQw0244F3CCdoOOdm9i7kC7N0ELZttqRbs3QRto1xrtmHbHafUWyh0SGUWS9gJiAXdfylVa74qy3qS5rCoAcyBSj6iUIAYZt2JSgrzsfVUm5RGSt\/d\/x6TtpQ6yvbTFP9TqFvkXqZY448tbvj0oNdJdXciBnsu47\/eesWoVJsIlDGdDWqTVeQpapFV7QLu0ehtz+7R6G7Rgtq02afU2aH1atUezSqs3Ue6QMELfjW6HJqKjatOE9mEN+3FATMIuC2g4A7BoIC4lxJDLHSRNVRdbWb6BnYQkzuFBPqY5VJu4TPPHtm46HqL4HqzifQXrstjajI24qtFHyOhEL+eu3kjErqXSpJJ5DUhKFeRFnSbShc8bmSt1tO55AVmRP8oSlH6nNhR5neaNtFKOeYp2bHQrtEvka4fEFaxklZTpg1zhjVOlvy928lkpphRX3lXaYftqpRwVRwRlUq7BVrjGbngPdbqVgLpm6TatTTQeuB4zirCvOyjxZoIpF3YB5ppqcoZ4XJwCO1cfPGwhIo3m3OAYsyiwPHUfG1npscU7Ay7hWAexcAbsX1MDIRHMCaGaU9rjpQY01SSJgM1AM8QgCXQM+jPQTI4LvbloeGqKPMOyVx2e086aXJpWUWyqfT+cI2K327nrNH+RZewmxfZC+36J9MOAzAksYwnB56IV5ZCj2rTy04\/wXfEClHM\/OohyBjcpt9BIeUWoqQxstQ2Bf7iSHV3hqj7HK4dv6StOBhtYj7vlcN6QhIlV3\/8Js+2fkU2KN3D\/e4iY51FTsvHCdqZ0IuDqZMNE2BHMTZINZzesZ5gfWdYzv1ma6g+sBL0wmgGHNP++PRRv4EOeuPDz3X+6C\/\/9eQFP8X6r2P+pLBJsSVUVUsnyGfkUkFnj1TbN06qW2LnCw96GSBnlU7Oijkjvy6KqyiJeVUrDOE\/SODN2wxjgoQhNEs6obymTTV5kxWMqqzfwww\/3gJUExFmGRcRDjYbWdSa1+aXMMHpXve2VO24pxz6GRVE0w1KrAEGmnDhrQBzbcPMxG0zUWs6sFn\/06dxBJJ7l04luFHjTI93Pm7Y77xvsSKtEKObzhdOOeMVwaaXXFvZtNuFYf5CQnGl37Wn2FdXTrzpBwcLCFfR4goLJfnKC8n2hZ+O7YWQRaSdS7cTWu74eoLP+7vv+kX3oqMcEuOZF321Xlu2kpZ+64PonvabsZzNUb6Lo1yf6Z71wRL9ezVeonpuwU4hjAa1CLVyrRCsy02q131Iq9nfXCwj69eUwxhm+1mrUfuEY9J1+1QD6oLMNKj8grlBvWpzsydX0pXg7YreiL5+GLmc2IbosVPavZdIN7p9kWRU55uLjxkt3oE0eN\/WmKNN\/YaqME0UY+rFgU0ndDeJvG4rw1ZsxzCZxVjJpyrTew1bGVVPKChs+rJKwunvK9rBLa6xj5AqpLIMs3rmw3EhUYVic5knWrKx0olGEvYCNTkp4g4wIVbyWj01crpBbtKLolHWaydYnD02arZBO8SaqUpdpUity7byGXePZqxHjmoVYCVtpNmycko+CigaZbdhEA7PyyCVRMIiyKVxzZQLGArpb4mYUe4l27zYF5BLdgPd+yYtdu1s2NgaeCn2bucVxUA7hoQw22IdEHQpKz8QYD+xTmT7HiWEURIXAIOZsAL2OWigyylw4XbOtVKQbam3fx24giIIv1PM60qI8ODpVlk9bx9FUGyMmKNA5LzC+nAKdgV\/MFJj0jwVoy1D9zwMFOh0F3YQClVo3okAHKbCzw5r81LzXC9jZblz7GI36xOWXX0r5EjQy+sraGdpnNcPMMiP5vdFtg3yJMdEpoutmo9+OJzZG0RohTHq8OnKjYMTrHiao54HGFmFJutP0b0MLSXzMB1RYoNHphoNQYanb0HD8+ITui\/OBoNC1j+mzKh7aHegHIhffkXj9aASTms95L\/\/KuVbvaYJE6Jnq+87TYOXpaTRqoVvv6Um0wdJPGwOcjx2MmIOGdI5blK6wXU7XadKdjKd4327bQ5plldpMZKVnXKUHWuc1CG6loa\/2XCbIoNJ1ffVhK0XYVdWGrXSst3ISjb7uq8e3cgptODRLmWXKo6rCSnX5WMpEqmOzLXK5N83aotANIz\/ohd3qhHB69BL51SdkEm3WCZlCO87+cVYV0xTQ9j9FvcF7WO03yUY9ikr0Cx2m1D2o5IcY3DYx\/YD1XNygkHiNzUQa12p0hcdKy9adT5ynExUfcxnBcrcTeuWODyZQpoa2X7N8JF7kipOCb2SkdDr06EZKe10RdZOjpK\/ahK58DG8KqpekOR2Ej77v+McuwH\/r+cz\/3bj\/sEwS6n+DnMApW7xwejqmnpVgffahf2elnYHo\/6eghmOqxAt1WUeHtWjj22FZ+xP6ElfVg+ict2xYVqa6DMzbi4\/txXftrxlVIeVE\/c8WdmbmtUOMCGvNMPC4Bdz7bg5gojwM4DD056Bm8U5XJ7o2AfXMvEwfN\/Xw1Fc91NobCkGfBq7nhXyQOY\/VPsL\/AIqxj\/sKZW5kc3RyZWFtCmVuZG9iagoyOCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCi9UVDIgMjUgMCBSCi9UVDEgMjQgMCBSCi9UYzMgMjEgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggMjgyOCA+PgpzdHJlYW0KeJy1W92O27gVvtdT8HIGSLTin0TlptimXWD3YtNFpgiKohcambaVyJJDyfF636cv1KLv00NSv54xRe3MIsBIlsTvHB6efzJf0S\/oK8IsxAm1F5ImiAsaxpxhlMTdjZLoE6rQd+8bjPIGReZfk8PYKCTM\/tY3OBIh4RRGRkmYiiTID+jPD4jbAd3l4YC+e3jACKOHLbr79z16+Iz++mA4uULDNEwSEnugkQ4NOdBI7Mlbzjq0j\/tMFdUObWuFsu22KIuslc3\/kPwm1WWTXdDjqSkq2TToeFLHupHNfXCLPE1pyOkwF7RM\/a0LDOYCV38w5AJLV4IVFUjkkLVFXaHssT61DvRB7LEWgAd8cHepTwrlSm6K9lyrdm9EfHthCWOhIIS4KATX0ritJr0Kx0kS8siBtkqFl9HWqPAi2jDT7we1RVtVH5BW2B0yEp6uYlujQ6a+yFbfwVvNQ\/AsD4xEIaNCuHjw171R2jEOGXGgddIO\/KS9iAbSDrylvYSWs+Cpw6jqavQZzwr4hjmyJIziiPVkPfyUYxJppOcAyxRrWC+0jy1wjMrs3ADLF7QrvknNMco2DhukIqQpXkEFjBsULyuRKnb71gioLA5FixorwxB9lBI9yrI+G3EeaghCtxVpnCclYexerE6RQO2NHXQMnKqNVKjpJx86hEo4zFbggdhrLREGYyAJXgenR0epAIWJwoRgHosY7gRJGMcBxGgTtN9\/dH6HPr6H+1QwdEYEPSgHjxGfLHAURmmaAHM5gixBf91dLLfUcvtPdPdpf484usvuUYzu2nuUmilggu7298Hw4mg+sn+leVKZe3D+yTDgfI\/MsOuPzOvg7ke4RMPHJVwwBCx7OcBl+DHjwlKYMqnug3T41lLYmRfdiK2lU5s3aoqVXTOlHwXwKDcv7F877mT+2k9n\/MxnYfmyQ8r7QHO0mcJ\/tlzaD2YsW9BOCpdrMQZzWeynmFYiFtLKTU4YrybihwH\/Ch5+WlBunpKQswSjUXMgG3pGcYKZ4siy1wDNwZ80LdTTsoYBKh49p7IYAlWKCR0ov5KV8kSEIn4tm+cxC5kX2j9MVrSvi9wRssD9phiLFbAQm85FWaLseCwv2gub5LauJOr9Y5bn9alqQ0cGmXCgRnlP1sP5esmGg5YsoS1F8RGN8jCOBwV0hXFP76pVz+0tOSGTZdA6D9NZdJZ\/AbuixsMkxpyFsTei7wNhjDXun9fmuX0LNsKsNfpaCAfuCE+v2HyluPOsZIacikPilwy5upHMTcEEvWC+35qpb3sBJMa1Jf19ZsTQ9q5pEMm7QSTBokiSNMSCiCv+PJXlCZoga9Hy+nDMqgKsUskSUpENerwgeHgAa6zPlVTNvjgiyIfyumpVXYboYS\/hi6wa+Qhu6iNLGSQufjm7RQscebE\/2qNE26LKqryAhC+rNjo5Hh8Mcw5dVSo4A54k\/lSdPgZDzWjnAN6cuqoYXXcES1UeS23dsYxGPLQmJp68DVrz4TRtUEBll5enjXRlsFC80SjmExrBwhqOmnku2j1q9xL9oMPDh+xLg6rsIN+g5pTvUda46r1hbjENU4\/qMbgbifwA86rV8Q36scpDx9xEAm6NcBeNFf2AQdthkf1q7peGj5EkhCwczcJH7JFs\/zyNClkfS4zjDIbIUZq\/9t5+Y+OKjT3XjvNpLAmueE7TkBLGep5f5mJIRNaijepZ1e2y87ytogxCgOAs9aYd3HWe2CMJ0d2T5CZmsFYlb6NdqeQQJPw98c1owiIKVCO6MBnfaDJ44oi5C\/d5v+357tToiRfRxn6bh7daQhtU4edZ1+fs9MGchnGUONGvllH3RqT1v7OI\/zRa0jjkgk\/lsOTfu6DhwEzikCWQzXSYL6uAKJjZSrRDrdpdtpPIUQExhuGS8BWwvc6\/8YnJVJuyF2xRNScFdiVHq3JRIIJCsROLFRQ2hZJ52\/UVddtxQqgz7aOqt4WzPT9MDGo44dc3Uzsg8ptpHDeuOEyTUKQpdUH\/jjhMb3dj\/6g4TGddTR2HSbochn+CMPzW9puYicZvbaeFGJ9j2ypvYxN99Rtl3nyxP+T06xnAzl5W1DQE6zSIsX4aL6tpCI7XomXIbDRAvNkpKQ+yaiEMtWcpq1mT3NFeZnqLB3NxtRK\/0\/UwAFmJNoZIjyBPX6MrPCqfN9qYArX7TG807CRk6arfeBjnAF5hc8rbRqdCjVTfitzuUFzqk6sE4zrwk3Rg6ZVKMAoaxdlrlWDLaGtKsEW0WQn2uS6qiTs+ZqrVSedQj9k9TQjdamMc9FHJY1Zs7ANHUjNwo9Nir4Lbq6QmoGKCp8Ib172evcLq+mtxH\/m6bfeyPht8pvsrEwft0Wb7YAuevSl4bNmj+oZ2ajYSEuujidmToKbbNnxkB9vKqZrUT8i00oeunam9gmQ+tgOdll1DO8\/C+ZZdhEHWkES8l8DLcvFRnnGke9weaH9vJKq3phswKpr+DD97PgQcbiyYD35nVufzOQTH9atUWQhKPVGYXi5PjwPwkOBkSmQp9XWFOyZmaB5u+Cwfm6J1JNLgQiHVE3wF5juEPu2lacijE4jcyBs9lfeVeuijHVor\/NfzWt7BorxZmkCtHq1Z1OdYN6qBKVRFqUnvDmYhIz4+KWdPMJh7ORsFT+CbPdqaaQs+xdJMknSKNX1isaajRqyb8x6NhcW3Nj2CZzXjjd1XKesdRIbZMYyigRy+LCGrlzZCNG2tbGL0fGigApwuZtzFxIpjRUJAbkf80ZwBgYKa+6MFYw06nFD58W8+6RaBbOTGNtGV\/LPNRskGqqNHVZ8h8UHt5QirsakPGSyE7mHqyinP9YmutoBfZg1gnebL5IqpI1c40dtNPg1Oa27arnXmVjQ9LYcHgVgbp1E8pxK4lt3o19bVjWAhpYnoIX0KZ2X80KGuClBTWLU3qD7CTExhCIK8HWgYodr4Ym8pmaB480gSjTTrfAXaxtH\/g7KVGY\/vvYLOWiNagWaM4OspK4v24qX6kJETP9Vv+m5EF62HvL\/ebiX4GL3dO48qT+w5ghkQyMs6qh4a4o6DFLQ4YWwFnqvHqosShiGb9Yd70HIAFs05p6xsautv0X\/yuv4CyfN\/fXIlLIRnbO031HVyfmrB\/ex13r9R+oAVVF97WR5NgAcbavTRqOI3aQfUVVlUEslf4U0hYRG9PBBonacTf2+nq3uKunn+eNG+aKN5UqdKV4s7lR1MtbiRJXCrHKsAtYqg6UD9hU3CmK9F+1Yo60jrubC92vM4NicOPMj0ItP92FNVfD3JElSoaYpdZSUHxG0XTjdqYQEvuvWuZGb2JDIEqYAxQanPYXqtJuOe3khbcRfSTB+gANPXPO11J1Jz3Zf6DrljrPP0georHXbBFHtaphca1OZ+2fMHaz8fZX5S4Fnf6T3zZ3LQJzsdehuKUyZ6Un9I\/kwjrXOC+BBZ7lzQiK5F67JSm38U1ebUtOriiGhEVy8Ezyk4c4+3LjQaJjyaoi1Va00LZtV3TK6qCLNi+v8yYG7Ozh6sePHwBLL66ROb509Hrcn8ceR7bsYRBVNI5TBJ2Qq0KleXoz23LfN9VesMVe826QpRyVwW3+xuQNWcDvpMq6xggXWU2WQtxA7dqmq0LYBX8PA8EN\/AJ0KBt+x6Oo\/WnI7HWrUNwkQ4Gkb6PzFQTpwEAm9NgtAfplALrIF7LFokB2lCJSCPsjL1R5cNgU0ovY336NBgysIoZfFA12MBXQZBISkSZBVcV844HDoTLMQRlLsrUCf29Qv6P\/gi4N0KZW5kc3RyZWFtCmVuZG9iagoyOSAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggNTQ3ID4+CnN0cmVhbQp4nJVUTW+cMBS88yvecXNxbGxjyLGrHnprKtSqRwdM1ynYG9sk2r\/ZKv+nZr+kVcquERIYJGbee\/NmXuARXoAwRAQ9PPJKAC8pKjgjIIrjwSn4AQbu155A4wHvL9\/EfzHK2eF9OlTxzikWIHCFikKQrBngUw388MfxUQ9wXzcMCNQdrOAO6mf4XO9LmYErKo7yQiSgrWWvO+uMlldwCeOIlWIJrlNet8oEfwU1gmFW8AWoD\/DTjjDIHci+t29gRwd+I502v8B2oE1sZZBBWwNvOmzgLrs9qhKjshBwizxbGWtk1+ley6BaCBvtWthKF7TyIE0LvR50iCXNd5xXDFFc8hNpyhzn+osneLbahL1u2Y0miwKxhCZhNUj3W4WJbz9AGzbKQaeNNI2WPTR22Epz6niqYZLgPBb\/DupVuV0bFUqZPc8RTpr90+i1Ud7DdnRb6yP\/0y7ST0sw1RqrjMPxwY3NNBwfX\/bf5qWg0bMVE+caEqRQpukjdQt\/vgxb64I0YR6fVRQJSukC\/CRjU5GaE1+dfpXN7or\/KEacxMMC0GshQeliuPXG6iaKOS3SOuo2Dsr5v2BsmD6jM1n2QT4sEME4P5MlrHaSUXI6RVEC2nflBhvd9+0UdA+wu8im+f3PS4Lyskpny1a3gu4ym1IWCZeJCXQZdEm2+49T4LiOKbHAY0ympFV2sT8fBHk\/7hG6FgM4urMqyIlzmQUe4R+blwYzCmVuZHN0cmVhbQplbmRvYmoKMTggMCBvYmoKWy9JQ0NCYXNlZCAzMCAwIFIKXQoKZW5kb2JqCjE5IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUxIC9CYXNlRm9udCAvTExWQ1lEK0FkZWxsZVNhbnMtUmVndWxhciAvRm9udERlc2NyaXB0b3IgMzEgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyMTQgXQo+PgplbmRvYmoKMjAgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHlwZTEgL0Jhc2VGb250IC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZvbnREZXNjcmlwdG9yIDMyIDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMjEzIC9XaWR0aHMgWzI1MCAwIDAgMCAwIDAgMCAwIDI4NyAyODcgNTMzIDAgMjIzIDIyNCAyMjMgMCA1MzMgNTMzIDUzMyA1MzMgNTMzIDUzMyAwIDAgNTMzIDUzMyAyMjMgMjIzIDAgMCAwIDQ3MSAwIDczMSA2MjkgNjcwIDAgMCA1ODYgMCA3NjIgMzI0IDAgMCA1ODMgOTE5IDc2MCA3MzAgNTg3IDcyMCA2NTUgNTUzIDYzMCA3MjcgNzAxIDk1MSAwIDYzOSAwIDAgMCAwIDAgMCAwIDU0MSA1OTMgNTE4IDU5MCA1MzAgMzIxIDU4OSA1ODEgMjYxIDI0OCA1NDAgMjU4IDg3OCA1ODcgNTQ1IDU4OSA1ODkgMzY4IDQ2MiAzNDAgNTgwIDU0MCA4NTUgNTY4IDU0MCA0NTQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMzY3IDM2NyAwIDIzMyBdCj4+CmVuZG9iagoyMSAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0FHS1hKRStBZGVsbGVTYW5zLVNlbWlCb2xkIC9Gb250RGVzY3JpcHRvciAzMyAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMzIgL0xhc3RDaGFyIDEyMSAvV2lkdGhzIFsxOTggMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyNDQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDI0NCAwIDAgMCAwIDUyNCAwIDY5NiAwIDY5MyA3MjYgNTc4IDU1MCAwIDczMCAyOTEgNTExIDAgNTU4IDkwNCA3NDUgNzYwIDYxOCAwIDYzOSA1OTkgNTcxIDcxMSAwIDkxOSA2MzUgNTgyIDAgMCAwIDAgMCAwIDAgNTUwIDU4NiA1NDEgNTgzIDU0NyAzNDIgNTU1IDU4MyAyNTcgMjU1IDU0NCAyNTcgODYxIDU4MyA1ODIgNTg1IDAgMzc2IDQ5MyAzOTIgNTgwIDUxNyA3ODEgNTA4IDUwMiBdCj4+CmVuZG9iagoyMiAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0lQRUpKRytBZGVsbGVTYW5zLVRoaW4gL0ZvbnREZXNjcmlwdG9yIDM0IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgODkgL1dpZHRocyBbMjQyIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyMDAgMCAyMDkgMzM0IDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCA2MzcgMCA3MTYgMCA1NzAgNTQzIDAgMCAyNzIgMCAwIDAgODg1IDc0NSAwIDYxMiAwIDYzNyA1NzggNTMyIDAgNjE0IDAgNjA3IDUzOCBdCj4+CmVuZG9iagoyMyAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UcnVlVHlwZSAvQmFzZUZvbnQgL1FRVEFRQStUaW1lcy1Sb21hbiAvRm9udERlc2NyaXB0b3IgMzUgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyNTAgXQo+PgplbmRvYmoKMjQgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHJ1ZVR5cGUgL0Jhc2VGb250IC9TUUtVRVQrU3ltYm9sIC9Gb250RGVzY3JpcHRvciAzNiAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMTY1IC9MYXN0Q2hhciAxNjUgL1dpZHRocyBbNDYwIF0KPj4KZW5kb2JqCjI1IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1RydWVUeXBlIC9CYXNlRm9udCAvSkZSWFFEK0FyaWFsTVQgL0ZvbnREZXNjcmlwdG9yIDM3IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMzIgL1dpZHRocyBbMjc4IF0KPj4KZW5kb2JqCjI3IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUwIC9FbmNvZGluZyAvSWRlbnRpdHktSCAvRGVzY2VuZGFudEZvbnRzIFszOCAwIFIKXQovQmFzZUZvbnQgL0pPVk9WVStNUy1NaW5jaG8gL1RvVW5pY29kZSAzOSAwIFIKPj4KZW5kb2JqCjMwIDAgb2JqCjw8L0xlbmd0aCA0MCAwIFIKL04gMyAvQWx0ZXJuYXRlIC9EZXZpY2VSR0IgL0ZpbHRlciAvRmxhdGVEZWNvZGUgPj5zdHJlYW0KeAGdlndUU9kWh8+9N73QEiIgJfQaegkg0jtIFQRRiUmAUAKGhCZ2RAVGFBEpVmRUwAFHhyJjRRQLg4Ji1wnyEFDGwVFEReXdjGsJ7601896a\/cdZ39nnt9fZZ+9917oAUPyCBMJ0WAGANKFYFO7rwVwSE8vE9wIYEAEOWAHA4WZmBEf4RALU\/L09mZmoSMaz9u4ugGS72yy\/UCZz1v9\/kSI3QyQGAApF1TY8fiYX5QKUU7PFGTL\/BMr0lSkyhjEyFqEJoqwi48SvbPan5iu7yZiXJuShGlnOGbw0noy7UN6aJeGjjAShXJgl4GejfAdlvVRJmgDl9yjT0\/icTAAwFJlfzOcmoWyJMkUUGe6J8gIACJTEObxyDov5OWieAHimZ+SKBIlJYqYR15hp5ejIZvrxs1P5YjErlMNN4Yh4TM\/0tAyOMBeAr2+WRQElWW2ZaJHtrRzt7VnW5mj5v9nfHn5T\/T3IevtV8Sbsz55BjJ5Z32zsrC+9FgD2JFqbHbO+lVUAtG0GQOXhrE\/vIADyBQC03pzzHoZsXpLE4gwnC4vs7GxzAZ9rLivoN\/ufgm\/Kv4Y595nL7vtWO6YXP4EjSRUzZUXlpqemS0TMzAwOl89k\/fcQ\/+PAOWnNycMsnJ\/AF\/GF6FVR6JQJhIlou4U8gViQLmQKhH\/V4X8YNicHGX6daxRodV8AfYU5ULhJB8hvPQBDIwMkbj96An3rWxAxCsi+vGitka9zjzJ6\/uf6Hwtcim7hTEEiU+b2DI9kciWiLBmj34RswQISkAd0oAo0gS4wAixgDRyAM3AD3iAAhIBIEAOWAy5IAmlABLJBPtgACkEx2AF2g2pwANSBetAEToI2cAZcBFfADXALDIBHQAqGwUswAd6BaQiC8BAVokGqkBakD5lC1hAbWgh5Q0FQOBQDxUOJkBCSQPnQJqgYKoOqoUNQPfQjdBq6CF2D+qAH0CA0Bv0BfYQRmALTYQ3YALaA2bA7HAhHwsvgRHgVnAcXwNvhSrgWPg63whfhG\/AALIVfwpMIQMgIA9FGWAgb8URCkFgkAREha5EipAKpRZqQDqQbuY1IkXHkAwaHoWGYGBbGGeOHWYzhYlZh1mJKMNWYY5hWTBfmNmYQM4H5gqVi1bGmWCesP3YJNhGbjS3EVmCPYFuwl7ED2GHsOxwOx8AZ4hxwfrgYXDJuNa4Etw\/XjLuA68MN4SbxeLwq3hTvgg\/Bc\/BifCG+Cn8cfx7fjx\/GvyeQCVoEa4IPIZYgJGwkVBAaCOcI\/YQRwjRRgahPdCKGEHnEXGIpsY7YQbxJHCZOkxRJhiQXUiQpmbSBVElqIl0mPSa9IZPJOmRHchhZQF5PriSfIF8lD5I\/UJQoJhRPShxFQtlOOUq5QHlAeUOlUg2obtRYqpi6nVpPvUR9Sn0vR5Mzl\/OX48mtk6uRa5Xrl3slT5TXl3eXXy6fJ18hf0r+pvy4AlHBQMFTgaOwVqFG4bTCPYVJRZqilWKIYppiiWKD4jXFUSW8koGStxJPqUDpsNIlpSEaQtOledK4tE20Otpl2jAdRzek+9OT6cX0H+i99AllJWVb5SjlHOUa5bPKUgbCMGD4M1IZpYyTjLuMj\/M05rnP48\/bNq9pXv+8KZX5Km4qfJUilWaVAZWPqkxVb9UU1Z2qbapP1DBqJmphatlq+9Uuq43Pp893ns+dXzT\/5PyH6rC6iXq4+mr1w+o96pMamhq+GhkaVRqXNMY1GZpumsma5ZrnNMe0aFoLtQRa5VrntV4wlZnuzFRmJbOLOaGtru2nLdE+pN2rPa1jqLNYZ6NOs84TXZIuWzdBt1y3U3dCT0svWC9fr1HvoT5Rn62fpL9Hv1t\/ysDQINpgi0GbwaihiqG\/YZ5ho+FjI6qRq9Eqo1qjO8Y4Y7ZxivE+41smsImdSZJJjclNU9jU3lRgus+0zwxr5mgmNKs1u8eisNxZWaxG1qA5wzzIfKN5m\/krCz2LWIudFt0WXyztLFMt6ywfWSlZBVhttOqw+sPaxJprXWN9x4Zq42Ozzqbd5rWtqS3fdr\/tfTuaXbDdFrtOu8\/2DvYi+yb7MQc9h3iHvQ732HR2KLuEfdUR6+jhuM7xjOMHJ3snsdNJp9+dWc4pzg3OowsMF\/AX1C0YctFx4bgccpEuZC6MX3hwodRV25XjWuv6zE3Xjed2xG3E3dg92f24+ysPSw+RR4vHlKeT5xrPC16Il69XkVevt5L3Yu9q76c+Oj6JPo0+E752vqt9L\/hh\/QL9dvrd89fw5\/rX+08EOASsCegKpARGBFYHPgsyCRIFdQTDwQHBu4IfL9JfJFzUFgJC\/EN2hTwJNQxdFfpzGC4sNKwm7Hm4VXh+eHcELWJFREPEu0iPyNLIR4uNFksWd0bJR8VF1UdNRXtFl0VLl1gsWbPkRoxajCCmPRYfGxV7JHZyqffS3UuH4+ziCuPuLjNclrPs2nK15anLz66QX8FZcSoeGx8d3xD\/iRPCqeVMrvRfuXflBNeTu4f7kufGK+eN8V34ZfyRBJeEsoTRRJfEXYljSa5JFUnjAk9BteB1sl\/ygeSplJCUoykzqdGpzWmEtPi000IlYYqwK10zPSe9L8M0ozBDuspp1e5VE6JA0ZFMKHNZZruYjv5M9UiMJJslg1kLs2qy3mdHZZ\/KUcwR5vTkmuRuyx3J88n7fjVmNXd1Z752\/ob8wTXuaw6thdauXNu5Tnddwbrh9b7rj20gbUjZ8MtGy41lG99uit7UUaBRsL5gaLPv5sZCuUJR4b0tzlsObMVsFWzt3WazrWrblyJe0fViy+KK4k8l3JLr31l9V\/ndzPaE7b2l9qX7d+B2CHfc3em681iZYlle2dCu4F2t5czyovK3u1fsvlZhW3FgD2mPZI+0MqiyvUqvakfVp+qk6oEaj5rmvep7t+2d2sfb17\/fbX\/TAY0DxQc+HhQcvH\/I91BrrUFtxWHc4azDz+ui6rq\/Z39ff0TtSPGRz0eFR6XHwo911TvU1zeoN5Q2wo2SxrHjccdv\/eD1Q3sTq+lQM6O5+AQ4ITnx4sf4H++eDDzZeYp9qukn\/Z\/2ttBailqh1tzWibakNml7THvf6YDTnR3OHS0\/m\/989Iz2mZqzymdLz5HOFZybOZ93fvJCxoXxi4kXhzpXdD66tOTSna6wrt7LgZevXvG5cqnbvfv8VZerZ645XTt9nX297Yb9jdYeu56WX+x+aem172296XCz\/ZbjrY6+BX3n+l37L972un3ljv+dGwOLBvruLr57\/17cPel93v3RB6kPXj\/Mejj9aP1j7OOiJwpPKp6qP6391fjXZqm99Oyg12DPs4hnj4a4Qy\/\/lfmvT8MFz6nPK0a0RupHrUfPjPmM3Xqx9MXwy4yX0+OFvyn+tveV0auffnf7vWdiycTwa9HrmT9K3qi+OfrW9m3nZOjk03dp76anit6rvj\/2gf2h+2P0x5Hp7E\/4T5WfjT93fAn88ngmbWbm3\/eE8\/sKZW5kc3RyZWFtCmVuZG9iagozMSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0xMVkNZRCtBZGVsbGVTYW5zLVJlZ3VsYXIgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE4MiAtMzIzIDExOTggMTA5OCBdCi9JdGFsaWNBbmdsZSAwIC9Bc2NlbnQgODgwIC9EZXNjZW50IC0zNzAgL0NhcEhlaWdodCA3MzcgL1N0ZW1WIDk0IC9YSGVpZ2h0IDUyNiAvU3RlbUggNzYgL0F2Z1dpZHRoIDU3MCAvTWF4V2lkdGggMTM4MCAvRm9udEZpbGUzIDQxIDAgUgo+PgplbmRvYmoKMzIgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE3NCAtMzA4IDEwMzUgOTQ3IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA2NjggL0Rlc2NlbnQgLTMzMiAvQ2FwSGVpZ2h0IDY3NyAvU3RlbVYgNTYgL0xlYWRpbmcgMjAwIC9YSGVpZ2h0IDQ3OSAvU3RlbUggNDMgL0F2Z1dpZHRoIDUwMCAvTWF4V2lkdGggMTIwOSAvRm9udEZpbGUzIDQyIDAgUgo+PgplbmRvYmoKMzMgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9BR0tYSkUrQWRlbGxlU2Fucy1TZW1pQm9sZCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTg2IC0zMjMgMTIyNyAxMTEzIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgMTE1IC9YSGVpZ2h0IDUyOSAvU3RlbUggMTAyIC9BdmdXaWR0aCA1NzAgL01heFdpZHRoIDE0MTMgL0ZvbnRGaWxlMyA0MyAwIFIKPj4KZW5kb2JqCjM0IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvSVBFSkpHK0FkZWxsZVNhbnMtVGhpbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTc1IC0zMjIgMTE0NyAxMDk0IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgNDkgL1hIZWlnaHQgNTIwIC9TdGVtSCA0NCAvQXZnV2lkdGggNTcwIC9NYXhXaWR0aCAxMzIyIC9Gb250RmlsZTMgNDQgMCBSCj4+CmVuZG9iagozNSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL1FRVEFRQStUaW1lcy1Sb21hbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMjAzIC00MjggMTcwMCAxMjcyIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA3NTAgL0Rlc2NlbnQgLTI1MCAvQ2FwSGVpZ2h0IDY3NiAvU3RlbVYgMTAyIC9YSGVpZ2h0IDQ2MSAvU3RlbUggNDQgL01heFdpZHRoIDE3MjEgL0ZvbnRGaWxlMiA0NSAwIFIKPj4KZW5kb2JqCjM2IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvU1FLVUVUK1N5bWJvbCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTY3IC0yOTkgMTA5NCA4MjcgXQovSXRhbGljQW5nbGUgMCAvQXNjZW50IDcwMSAvRGVzY2VudCAtMjk5IC9DYXBIZWlnaHQgNjIzIC9TdGVtViAxMDMgL1hIZWlnaHQgNDY3IC9TdGVtSCAzOCAvQXZnV2lkdGggNTcyIC9NYXhXaWR0aCAxMDQyIC9Gb250RmlsZTIgNDYgMCBSCj4+CmVuZG9iagozNyAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0pGUlhRRCtBcmlhbE1UIC9GbGFncyAzMiAvR</mes:base64EncodedContent><mes:contentType>contentType</mes:contentType><mes:documentName>names</mes:documentName>
        </mes:CreateEnrollmentDocumentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6fc9718f-f69d-46f7-9a41-dffda9a7c22f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="9c7d00ba-2f31-4166-b13a-3d560078b5a2" name="Not SOAP Fault"/><con:assertion type="SOAP Response" name="SOAP Response1" id="f8e27ea4-14cd-48d9-9451-c380987a6c7c"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="b0b879b3-dea4-41e2-b30c-784b8f27fcc1"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:commandStatus[1]/text()")
def documentId = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:documentId[1]/text()" )

assert commandStatus.getData() == '1'
assert documentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateEnrollmentDocumentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CaptureDraft_TPB" id="c538da3b-a273-47dc-a69e-16a360cc2a48"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureDraft</con:operation><con:request name="CaptureDraft_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="7891d1d9-c5e5-4bd1-ad2d-b1157d94a5e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CaptureDraftRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:recurringType>MONTHLY</mes:recurringType>
                <mes:recurringStartDate>
                    <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
                </mes:recurringStartDate>
                <mes:recurringAmount1>10</mes:recurringAmount1>
                <mes:recurringDay1>10</mes:recurringDay1>
                <mes:recurringAmount2>12</mes:recurringAmount2>
                <mes:recurringDay2>10</mes:recurringDay2>
                <mes:lumpSumOnly>false</mes:lumpSumOnly>
            </mes:CaptureDraftRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2dbf5baf-25d6-4d0e-8c11-e30c4e4feda7" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="f2e5c6f8-d1f1-4c53-bb17-fcc353a37301" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="42f13961-d007-47da-80f9-9fcc62c0334c" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureDraftResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureDraftRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CaptureDraft_WFB" id="6db242b1-719d-4f05-a840-b532dc74f328"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureDraft</con:operation><con:request name="CaptureDraft_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="7891d1d9-c5e5-4bd1-ad2d-b1157d94a5e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CaptureDraftRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:recurringType>MONTHLY</mes:recurringType>
                <mes:recurringStartDate>
                    <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
                </mes:recurringStartDate>
                <mes:recurringAmount1>10</mes:recurringAmount1>
                <mes:recurringDay1>10</mes:recurringDay1>
                <mes:recurringAmount2>12</mes:recurringAmount2>
                <mes:recurringDay2>10</mes:recurringDay2>
                <mes:lumpSumOnly>false</mes:lumpSumOnly>
            </mes:CaptureDraftRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2dbf5baf-25d6-4d0e-8c11-e30c4e4feda7" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="f2e5c6f8-d1f1-4c53-bb17-fcc353a37301" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="59cff742-02cd-4a2b-a6e3-1f577a455953"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureDraftResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureDraftRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CaptureDraft_BOI" id="e8c4c523-493f-48eb-9a45-355775a96223"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureDraft</con:operation><con:request name="CaptureDraft_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="7891d1d9-c5e5-4bd1-ad2d-b1157d94a5e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CaptureDraftRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:recurringType>MONTHLY</mes:recurringType>
                <mes:recurringStartDate>
                    <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
                </mes:recurringStartDate>
                <mes:recurringAmount1>10</mes:recurringAmount1>
                <mes:recurringDay1>10</mes:recurringDay1>
                <mes:recurringAmount2>12</mes:recurringAmount2>
                <mes:recurringDay2>10</mes:recurringDay2>
                <mes:lumpSumOnly>false</mes:lumpSumOnly>
            </mes:CaptureDraftRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2dbf5baf-25d6-4d0e-8c11-e30c4e4feda7" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="f2e5c6f8-d1f1-4c53-bb17-fcc353a37301" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="ee4f26a4-ba23-4dfe-9cdf-b284c5864799"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureDraftResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureDraftRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CaptureEnrollmentAddress_TPB" id="172e761f-0768-4227-846f-b7ecf738e1f5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureEnrollmentAddress</con:operation><con:request name="CaptureEnrollmentAddress_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="8109068b-3704-44fa-9500-8b98977bdb7f" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <CaptureEnrollmentAddressRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</clientId>
            <subscriberId>${#Project#subscriberId}</subscriberId>
            <address1>Finxera Headquarters</address1>
            <address2>1900 South Norfolk Street</address2>
            <city>San Mateo</city>
            <state>CA</state>
            <zip>94403</zip>
        </CaptureEnrollmentAddressRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="69ff674e-66f1-4a51-a492-4f025474ffa1"/><con:assertion type="Simple Contains" id="2bba8473-788a-4449-88ff-35b863cc3afa" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="848fe002-b6b3-4635-9a13-dd18d2625901" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureEnrollmentAddressResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureEnrollmentAddressRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CaptureEnrollmentAddress_WFB" id="746c745d-4c0b-4af3-a027-2fd1213ecec1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureEnrollmentAddress</con:operation><con:request name="CaptureEnrollmentAddress_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="8109068b-3704-44fa-9500-8b98977bdb7f" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <CaptureEnrollmentAddressRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</clientId>
            <subscriberId>${#Project#subscriberId}</subscriberId>
            <address1>Finxera Headquarters</address1>
            <address2>1900 South Norfolk Street</address2>
            <city>Jupiter</city>
            <state>FL</state>
            <zip>94403</zip>
        </CaptureEnrollmentAddressRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="69ff674e-66f1-4a51-a492-4f025474ffa1"/><con:assertion type="Simple Contains" id="2bba8473-788a-4449-88ff-35b863cc3afa" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="b62a96b6-9ca1-4d93-b4ec-5e94e3e0c3a0"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureEnrollmentAddressResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureEnrollmentAddressRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CaptureEnrollmentAddress_BOI" id="75b88c29-0dee-4cb6-8b49-5b5378c09f76"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureEnrollmentAddress</con:operation><con:request name="CaptureEnrollmentAddress_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="8109068b-3704-44fa-9500-8b98977bdb7f" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <CaptureEnrollmentAddressRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</clientId>
            <subscriberId>${#Project#subscriberId}</subscriberId>
            <address1>Finxera Headquarters</address1>
            <address2>1900 South Norfolk Street</address2>
            <city>Clio</city>
            <state>AL</state>
            <zip>94403</zip>
        </CaptureEnrollmentAddressRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="69ff674e-66f1-4a51-a492-4f025474ffa1"/><con:assertion type="Simple Contains" id="2bba8473-788a-4449-88ff-35b863cc3afa" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="e96fdd44-aa00-4fe9-a783-b2c80f20ea25"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureEnrollmentAddressResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureEnrollmentAddressRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="AdminUpdateActivateEnrollment_TPB" id="61123a03-ee37-440c-815d-358952d389e7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>AdminUpdateActivateEnrollment</con:operation><con:request name="AdminUpdateActivateEnrollment_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="9d950928-5c62-4063-883f-23631a056978" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <AdminUpdateActivateEnrollmentRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <enrollmentId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:enrollmentId[1]}</enrollmentId>
            <actionType>ACTIVATE</actionType>
        </AdminUpdateActivateEnrollmentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e8b2f94d-8e2b-4058-b7bc-8534d58f1dde"/><con:assertion type="Simple Contains" id="5e0bb77c-e4b1-40d2-b982-891114e6df45" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c0ebd301-0760-4f5b-ac30-d2b01dccc36b" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:commandStatus[1]/text()");

def enrollmentId = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:enrollmentId[1]/text()");

def cipStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:cipStatuses[1]/text()");

def ofacStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:ofacStatuses[1]/text()");

def spaStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:spaStatuses[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentId != null
assert cipStatuses.getData() == 'IGNORED'
assert ofacStatuses.getData() == 'IGNORED'
assert spaStatuses.getData() == 'PENDING'
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateActivateEnrollmentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="AdminUpdateActivateEnrollment_WFB" id="2613f211-0b6c-401e-af55-323b3645a785"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>AdminUpdateActivateEnrollment</con:operation><con:request name="AdminUpdateActivateEnrollment_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="9d950928-5c62-4063-883f-23631a056978" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <AdminUpdateActivateEnrollmentRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <enrollmentId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:enrollmentId[1]}</enrollmentId>
            <actionType>ACTIVATE</actionType>
        </AdminUpdateActivateEnrollmentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e8b2f94d-8e2b-4058-b7bc-8534d58f1dde"/><con:assertion type="Simple Contains" id="5e0bb77c-e4b1-40d2-b982-891114e6df45" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="25358eb2-f5de-4ba4-90aa-375a9a2452a9"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:commandStatus[1]/text()");

def enrollmentId = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:enrollmentId[1]/text()");

def cipStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:cipStatuses[1]/text()");

def ofacStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:ofacStatuses[1]/text()");

def spaStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:spaStatuses[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentId != null
assert cipStatuses.getData() == 'IGNORED'
assert ofacStatuses.getData() == 'IGNORED'
assert spaStatuses.getData() == 'PENDING'
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateActivateEnrollmentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="AdminUpdateActivateEnrollment_BOI" id="3bed7bd4-6ffd-4042-bef1-e85b44371656"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>AdminUpdateActivateEnrollment</con:operation><con:request name="AdminUpdateActivateEnrollment_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="9d950928-5c62-4063-883f-23631a056978" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <AdminUpdateActivateEnrollmentRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <enrollmentId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:enrollmentId[1]}</enrollmentId>
            <actionType>ACTIVATE</actionType>
        </AdminUpdateActivateEnrollmentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e8b2f94d-8e2b-4058-b7bc-8534d58f1dde"/><con:assertion type="Simple Contains" id="5e0bb77c-e4b1-40d2-b982-891114e6df45" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="bcb71e61-6bde-41b4-9dd1-e2fd61c5576f"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:commandStatus[1]/text()");

def enrollmentId = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:enrollmentId[1]/text()");

def cipStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:cipStatuses[1]/text()");

def ofacStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:ofacStatuses[1]/text()");

def spaStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:spaStatuses[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentId != null
assert cipStatuses.getData() == 'IGNORED'
assert ofacStatuses.getData() == 'IGNORED'
assert spaStatuses.getData() == 'PENDING'
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateActivateEnrollmentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetClient_TPB" id="24f3b043-350d-4bc6-9142-0e6b1b034e73"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClient</con:operation><con:request name="GetClient_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="97f62804-71d1-4e83-828f-866e9e5cbccb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientRequest>
            <!--You may enter the following 5 items in any order-->
            <!--Optional:-->
            <mes:status xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
                <!--Optional:-->
                <!--Optional:-->
                <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
                <!--Optional:-->
                <mes:returnSPAAImage>false</mes:returnSPAAImage>
            </mes:GetClientRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a3523fa7-7eec-4e9d-b082-ef80a12b22d9" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="40a18b0b-3325-4e7e-b7bb-4086ca79a2ec" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="e8b33528-2c49-46a0-b6bb-6c1bd78da2d3" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:GetClientResponse[1]/*:commandStatus[1]/text()");
def enrollmentStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");

def cipStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:cipStatuses[1]/text()");
def ofacStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:ofacStatuses[1]/text()");
def spaStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:spaStatuses[1]/text()");
def firstName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:firstName[1]/text()");
def lastName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:lastName[1]/text()");
def nextDraftAmount = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:nextDraftAmount[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentStatuses.getData() == 'ACTIVE';
assert cipStatuses.getData() == 'IGNORED';
assert ofacStatuses.getData() == 'IGNORED';
assert spaStatuses.getData() == 'PENDING';
assert firstName.getData() == 'CFT_FDR_TPB';
assert lastName.getData() == 'Automation';
assert nextDraftAmount.getData() == '100.0';
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetClient_WFB" id="4da079e9-4ab0-4554-80bc-d770ddb4e0e7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClient</con:operation><con:request name="GetClient_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="97f62804-71d1-4e83-828f-866e9e5cbccb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientRequest>
            <!--You may enter the following 5 items in any order-->
            <!--Optional:-->
            <mes:status xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
                <!--Optional:-->
                <!--Optional:-->
                <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
                <!--Optional:-->
                <mes:returnSPAAImage>false</mes:returnSPAAImage>
            </mes:GetClientRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a3523fa7-7eec-4e9d-b082-ef80a12b22d9" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="40a18b0b-3325-4e7e-b7bb-4086ca79a2ec" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="fe05b188-f222-494f-9507-7e57e06e8011"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:GetClientResponse[1]/*:commandStatus[1]/text()");
def enrollmentStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");

def cipStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:cipStatuses[1]/text()");
def ofacStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:ofacStatuses[1]/text()");
def spaStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:spaStatuses[1]/text()");
def firstName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:firstName[1]/text()");
def lastName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:lastName[1]/text()");
def nextDraftAmount = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:nextDraftAmount[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentStatuses.getData() == 'ACTIVE';
assert cipStatuses.getData() == 'IGNORED';
assert ofacStatuses.getData() == 'IGNORED';
assert spaStatuses.getData() == 'PENDING';
assert firstName.getData() == 'CFT_FDR_WFB';
assert lastName.getData() == 'Automation';
assert nextDraftAmount.getData() == '100.0';
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetClient_BOI" id="993b74da-c3fb-4f3a-b404-5a1fcaca43b0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClient</con:operation><con:request name="GetClient_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="97f62804-71d1-4e83-828f-866e9e5cbccb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientRequest>
            <!--You may enter the following 5 items in any order-->
            <!--Optional:-->
            <mes:status xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
                <!--Optional:-->
                <!--Optional:-->
                <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
                <!--Optional:-->
                <mes:returnSPAAImage>false</mes:returnSPAAImage>
            </mes:GetClientRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a3523fa7-7eec-4e9d-b082-ef80a12b22d9" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="40a18b0b-3325-4e7e-b7bb-4086ca79a2ec" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="a3f88efe-6bb7-4054-833d-bb37561587f1"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:GetClientResponse[1]/*:commandStatus[1]/text()");
def enrollmentStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");

def cipStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:cipStatuses[1]/text()");
def ofacStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:ofacStatuses[1]/text()");
def spaStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:spaStatuses[1]/text()");
def firstName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:firstName[1]/text()");
def lastName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:lastName[1]/text()");
def nextDraftAmount = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:nextDraftAmount[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentStatuses.getData() == 'ACTIVE';
assert cipStatuses.getData() == 'IGNORED';
assert ofacStatuses.getData() == 'IGNORED';
assert spaStatuses.getData() == 'PENDING';
assert firstName.getData() == 'CFT_FDR_BOI';
assert lastName.getData() == 'Automation';
assert nextDraftAmount.getData() == '100.0';
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_TPB" id="8a285209-8cb0-47c6-8236-df75971e451e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="7641f367-b9c0-41e8-87db-1fc810437fc6" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_WFB" id="1d8ea584-2e0c-41d6-991f-0475a76ebc92"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="8e5fde9f-a696-4737-a6f7-b098fb4cbe9f"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion1" id="5fdeb459-ccf4-48eb-9a18-ac81105173d5"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_BOI" id="d195110b-0e51-4591-b9f4-f5d645e0f564"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="5928c7c6-8d76-452e-96db-c743877afa38"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion1" id="8941e0c3-250c-4b19-9652-3ba57c10530a"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="RunJob-NewScheduler" id="bc99d7e3-5a0c-4d92-8dbb-ba071df0caf0"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-NewScheduler";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

def minTimeOut=a.getPropertyValue('minTimeOut') as int;
def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	return(null);
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timeout"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
}</script></con:config></con:testStep><con:testStep type="request" name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_TPB" id="55ce1956-ecf7-45cc-93cb-5d500850f7b7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="7641f367-b9c0-41e8-87db-1fc810437fc6" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '100.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_WFB" id="560a3b99-b010-4d90-b2b4-beb4facf0c0a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="8e5fde9f-a696-4737-a6f7-b098fb4cbe9f"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '100.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_BOI" id="bc1b6572-a6d0-4243-bd14-c5bdfd45b347"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="5928c7c6-8d76-452e-96db-c743877afa38"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '100.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetDraftSchedule_CheckDraftInProcess_TPB" id="dc28abd3-9882-46d2-93f0-3edf30e4c3a8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftInProcess_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:assertion type="XPath Match" id="6106ae37-dc95-4e16-949d-455b14e12ef0" name="Match content of [ns3:id]"><con:configuration><path>declare namespace ns3='http://nationalpayment.net/ws/schemas/types';
declare namespace ns4='http://nationalpayment.net/ws/schemas/messages';
//ns4:GetDraftScheduleResponse[1]/ns4:draft[1]/ns3:client[1]/ns3:id[1]/text()</path><content>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="31ab35b6-7a07-430a-992e-740910c58a3f" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
def scheduleId = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:scheduleId[1]/text()"); //not null
def type = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:type[1]/text()");  //MONTHLY
def amount = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:amount[1]/text()");   //100.0
def status = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:status[1]/text()");  //INPROCESS


assert scheduleId != null
assert type.getData() == 'MONTHLY';
assert amount.getData() == '100.0';
assert status.getData() == 'INPROCESS';</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetDraftSchedule_CheckDraftInProcess_WFB" id="f055e0ba-dc45-4295-918f-5f59ea4cb805"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftInProcess_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="1162b5fa-e7b4-4c14-b4ba-7190d81f284a"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
def scheduleId = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:scheduleId[1]/text()"); //not null
def type = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:type[1]/text()");  //MONTHLY
def amount = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:amount[1]/text()");   //100.0
def status = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:status[1]/text()");  //INPROCESS


assert scheduleId != null
assert type.getData() == 'MONTHLY';
assert amount.getData() == '100.0';
assert status.getData() == 'INPROCESS';</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetDraftSchedule_CheckDraftInProcess_BOI" id="5382f751-3a2a-4e99-a69b-d9552fe7f0d2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftInProcess_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="eb64c7af-3eaf-417a-9df6-b2c9e8dcbe81"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
def scheduleId = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:scheduleId[1]/text()"); //not null
def type = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:type[1]/text()");  //MONTHLY
def amount = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:amount[1]/text()");   //100.0
def status = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:status[1]/text()");  //INPROCESS


assert scheduleId != null
assert type.getData() == 'MONTHLY';
assert amount.getData() == '100.0';
assert status.getData() == 'INPROCESS';</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="RunJob-TPBACHOutboundProcessor" id="31e67206-7c01-4a5d-ad1f-250e30adfb81"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-TPBACHOutboundProcessor";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

def minTimeOut=a.getPropertyValue('minTimeOut') as int;
def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	return(null);
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timed out"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
}</script></con:config></con:testStep><con:testStep type="groovy" name="RunJob-WFBACHOutboundProcessor" id="d2f24ad4-4ea6-45ad-9566-2d80b8fea2bc"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-WFBACHOutboundProcessor";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

def minTimeOut=a.getPropertyValue('minTimeOut') as int;
def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	return(null);
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timed out"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
}</script></con:config></con:testStep><con:testStep type="groovy" name="RunJob-BOIACHOutboundProcessor" id="3d1d4d09-6e0f-4239-a2d6-da23ee4c9460"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-BOIACHOutboundProcessor";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

def minTimeOut=a.getPropertyValue('minTimeOut') as int;
def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	return(null);
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timed out"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
}</script></con:config></con:testStep><con:testStep type="request" name="GetDraftSchedule_CheckDraftSubmitted_TPB" id="8c551532-6bbd-40e5-ad73-576ae9c2afba"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftSubmitted_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetDraftSchedule_CheckDraftSubmitted_WFB" id="b2897206-4e79-4d7b-9cbb-101a08a8baf4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftSubmitted_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetDraftSchedule_CheckDraftSubmitted_BOI" id="b5c2ea19-3197-4747-91dc-76f83479eb8b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftSubmitted_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetClientsEnhanced_Current=0_Pending=100_TPB" id="e7c146ed-cc0d-470c-95dc-febe17f2390f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=100_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetClientsEnhanced_Current=0_Pending=100_WFB" id="c44cf9d2-881c-406e-8b5c-59b18eaa471c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=100_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetClientsEnhanced_Current=0_Pending=100_BOI" id="a79ee91b-f7f7-4288-90cd-793c4e4cd9b5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=100_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="RunJob-FundsRealization" id="eb239659-232b-4965-848e-663c55962af8"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-FundsRealization";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

def minTimeOut=a.getPropertyValue('minTimeOut') as int;
def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	return(null);
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timed out"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
}</script></con:config></con:testStep><con:testStep type="request" name="GetDraftSchedule_CheckDraftCompleted_TPB" id="385c11f2-afd2-4b1f-ac91-e7b3b587e7df"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftCompleted_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetDraftSchedule_CheckDraftCompleted_WFB" id="551adf84-f426-421d-b829-8c0c78b852f6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftCompleted_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetDraftSchedule_CheckDraftCompleted_BOI" id="7e391dd7-d43a-48ef-982b-e804f1e05916"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftCompleted_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetClientsEnhanced_Current=100_Pending=100_TPB" id="bf1459e9-bb7d-4fd8-97fe-7e1b0d05d470"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=100_Pending=100_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetClientsEnhanced_Current=100_Pending=100_WFB" id="1b5d1529-add5-4407-8ef8-ed65c89b20eb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=100_Pending=100_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetClientsEnhanced_Current=100_Pending=100_BOI" id="19086c94-971f-4d42-9e72-33d545f8ce7a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=100_Pending=100_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="SendResultsEmail" id="a0897015-09e3-4025-9ce6-b8565d5d02ac"><con:settings/><con:config><script><![CDATA[import javax.mail.*;
import javax.mail.internet.*;
import java.util.Properties;

public class JavaEmailSender {

	def static log;
   def static context;
   def static testRunner;
 
    private String emailAddressTo = new String();
    private String msgSubject = new String();
    private String msgText = new String();

    final String USER_NAME = "localstakeqa@gmail.com";   //User name of the Goole(gmail) account
    final String PASSSWORD = "Abcd1234+";  //Password of the Goole(gmail) account
    final String FROM_ADDRESS = "localstakeqa@gmail.com";  //From addresss
 
    public JavaEmailSender() {
    }

    public static void main(String[] args) {
      JavaEmailSender email = new JavaEmailSender();
     //Sending test email
      def currentDate = new Date().format("yyyy-MM-dd hh:mm");
    	 String msg = createResults(); 
    	 log.info ("*******************"); 
    	 log.info (msg);
    	 def resultStep = testRunner.testCase.getTestStepByName("Results");
resultStep.setPropertyValue("HTML",""+msg);
    	 log.info ("*******************"); 
    	 //String content= "<html><body><b><td><tr>Hello!</b></tr></td></body></html>" 

/*
 String message = "<br><i>Greetings!!!</i><br>";
        message += "<b>Wish you a nice day!</b><br>";
        message += "<font color=red>Duke</font>";

     message += '<table border="2" style="width:100%">';
message += '<tr>';
    message += '<td>Jill</td>';
    message += '<td>Smith</td>'; 
    message += '<td>50</td>';
  message += '</tr>';
  message += '<tr>';
    message += '<td>Eve</td>';
   message +=  '<td>Jackson</td>'; 
    message += '<td>94</td>';
 message +=  '</tr>';
message += '</table>';
     */ 
    email.createAndSendEmail("raghav@finxera.com , go2raghav10@gmail.com", "Test email subject-"+currentDate,
      "Congratulations !!! \nThis is test email sent by java class.\n"+msg);
    }

    public void createAndSendEmail(String emailAddressTo, String msgSubject, String msgText) {
        this.emailAddressTo = emailAddressTo;
        this.msgSubject = msgSubject;
        this.msgText = msgText;
        sendEmailMessage();
    }
  
    private void sendEmailMessage() {
     
     //Create email sending properties
     Properties props = new Properties();
     props.put("mail.smtp.auth", "true");
     props.put("mail.smtp.starttls.enable", "true");
     props.put("mail.smtp.host", "smtp.gmail.com");
     props.put("mail.smtp.port", "587");
  
    Session session = Session.getInstance(props,
    new javax.mail.Authenticator() {
    protected PasswordAuthentication getPasswordAuthentication() {
    return new PasswordAuthentication(USER_NAME, PASSSWORD);
   }
    });

  try {

     Message message = new MimeMessage(session);
     message.setFrom(new InternetAddress(FROM_ADDRESS)); //Set from address of the email
     message.setContent(msgText,"text/html"); //set content type of the email
    //  message.setContent("<h3>sending html mail check</h3>","text/html" ); 
    message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(emailAddressTo)); //Set email recipient
    
    message.setSubject(msgSubject); //Set email message subject
    Transport.send(message); //Send email message

   System.out.println("sent email successfully!");

  } catch (MessagingException e) {
       throw new RuntimeException(e);
  }
    }

    public void setEmailAddressTo(String emailAddressTo) {
        this.emailAddressTo = emailAddressTo;
    }

    public void setSubject(String subject) {
        this.msgSubject = subject;
    }

    public void setMessageText(String msgText) {
        this.msgText = msgText;
    }

public static String createResults(){
String message1="";
try {
    //Check a project level property to see if the reports should be produced.
    if(context.expand('${#Project#ProduceReports}') == 'Y') 
    //if((testRunner.testCase.testSuite.project.getPropertyValue("ProduceReports")).toLowerCase() == "y")
    {
        //The path and file to persist results
       
		log.info ("  >>  Creating Results");

		 message1 = '<table border="2" style="width:80%">';
 message1 += '<tr>';
 message1 += '<th>Name</th>';
 //message1 += '<th>TimeStamp</th>';
  message1 += '<th>TimeTaken [ms]</th>';
   message1 += '<th>Size [bytes]</th>';
   message1 += '<th>Message</th>';
   message1 += '<th>Result</th>';
 message1 += '</tr>';
             //resultsFile2.write('"Name","TimeStamp","TimeTaken [ms]","Size [bytes]","Message","Result"');
        


def tsResults = testRunner.getResults()
for(i in tsResults){
	String stepName = i.getTestStep().getName();
	if(stepName.contains("Gen name") || stepName.contains("GetCurrentDate") || stepName.contains("Results")){
		continue;
	}
	//String stepClass = i.getClass();
	String stepTimeStamp = new Date(i.getTimeStamp());
	String stepTimeTaken = i.getTimeTaken();
	String stepSize = i.getSize();
	
	
	//String stepMessage = i.getMessages();
	String stepMessage = "";
            def msgCount = 0;
            for(message in i.getMessages()) {
                msgCount++;
                if(msgCount < 10) {
                    //resultsFile.append(message + ';\n');
					stepMessage=stepMessage+message+" | ";
                }
            }
	
	String stepResult = i.getStatus();


 message1 += '<tr>';
//message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';    
 if(!(stepName.toLowerCase().contains("runjob"))){
    message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';
 }else{
 	 message1 += '<td bgcolor="#F3F781">'+stepName+'</td>';
 }
   // message1 += '<td>'+stepTimeStamp+'</td>';
    message1 += '<td>'+stepTimeTaken+'</td>';
    message1 += '<td  align="center">'+stepSize+'</td>';
    message1 += '<td>'+stepMessage+'</td>';
    if(stepResult.toLowerCase().contains("ok")){
    message1 += '<td align="center" bgcolor="#00FF00">'+stepResult+'</td>';
    }else{
    	 message1 += '<td align="center" bgcolor="red">'+stepResult+'</td>';
    }
  message1 += '</tr>';
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
  log.info (message1);
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
	//String resultToLog = stepName+","+stepClass+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	String resultToLog = stepName+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	log.info (resultToLog);
}
message1 += '</table>';
    return message1;
} 
}catch(e) {
    log.error("An error occurred: " + e.toString());
}
}
}
]]></script></con:config></con:testStep><con:testStep type="properties" name="Results" id="94d71f76-06fc-4240-9aa3-2c54cf2addb2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>HTML</con:name><con:value><![CDATA[<table border="2" style="width:80%"><tr><th>Name</th><th>TimeTaken [ms]</th><th>Size [bytes]</th><th>Message</th><th>Result</th></tr><tr><td bgcolor="#F5DA81">CreateClient_TPB</td><td>1950</td><td  align="center">968</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateClient_WFB</td><td>1934</td><td  align="center">968</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateClient_BOI</td><td>1992</td><td  align="center">968</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateClientBankAccount_TPB</td><td>857</td><td  align="center">1004</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateClientBankAccount_WFB</td><td>851</td><td  align="center">1004</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateClientBankAccount_BOI</td><td>848</td><td  align="center">1004</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateDraftSchedule_TPB</td><td>1043</td><td  align="center">6051</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateDraftSchedule_WFB</td><td>1041</td><td  align="center">6051</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateDraftSchedule_BOI</td><td>1009</td><td  align="center">6051</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftScheduleList_TPB</td><td>1210</td><td  align="center">14207</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftScheduleList_WFB</td><td>1230</td><td  align="center">14207</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftScheduleList_BOI</td><td>1242</td><td  align="center">14207</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateEnrollmentDocument_TPB</td><td>2126</td><td  align="center">856</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateEnrollmentDocument_WFB</td><td>2204</td><td  align="center">856</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateEnrollmentDocument_BOI</td><td>2188</td><td  align="center">856</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CaptureDraft_TPB</td><td>819</td><td  align="center">792</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CaptureDraft_WFB</td><td>810</td><td  align="center">792</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CaptureDraft_BOI</td><td>789</td><td  align="center">792</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CaptureEnrollmentAddress_TPB</td><td>835</td><td  align="center">904</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CaptureEnrollmentAddress_WFB</td><td>834</td><td  align="center">904</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CaptureEnrollmentAddress_BOI</td><td>833</td><td  align="center">904</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">AdminUpdateActivateEnrollment_TPB</td><td>868</td><td  align="center">1217</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">AdminUpdateActivateEnrollment_WFB</td><td>878</td><td  align="center">1217</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">AdminUpdateActivateEnrollment_BOI</td><td>884</td><td  align="center">1217</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClient_TPB</td><td>2060</td><td  align="center">87642</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClient_WFB</td><td>2138</td><td  align="center">87640</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClient_BOI</td><td>2069</td><td  align="center">87637</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_TPB</td><td>892</td><td  align="center">5598</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_WFB</td><td>928</td><td  align="center">5596</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_BOI</td><td>946</td><td  align="center">5593</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F3F781">RunJob-NewScheduler</td><td>69841</td><td  align="center">0</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_TPB</td><td>1249</td><td  align="center">5600</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_WFB</td><td>931</td><td  align="center">5598</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_BOI</td><td>918</td><td  align="center">5595</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftSchedule_CheckDraftInProcess_TPB</td><td>895</td><td  align="center">5901</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftSchedule_CheckDraftInProcess_WFB</td><td>857</td><td  align="center">5901</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftSchedule_CheckDraftInProcess_BOI</td><td>895</td><td  align="center">5901</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F3F781">RunJob-TPBACHOutboundProcessor</td><td>18402</td><td  align="center">0</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F3F781">RunJob-WFBACHOutboundProcessor</td><td>11802</td><td  align="center">0</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F3F781">RunJob-BOIACHOutboundProcessor</td><td>11810</td><td  align="center">0</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftSchedule_CheckDraftSubmitted_TPB</td><td>898</td><td  align="center">5907</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftSchedule_CheckDraftSubmitted_WFB</td><td>853</td><td  align="center">5907</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftSchedule_CheckDraftSubmitted_BOI</td><td>878</td><td  align="center">5907</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=0_Pending=100_TPB</td><td>918</td><td  align="center">5600</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=0_Pending=100_WFB</td><td>922</td><td  align="center">5598</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=0_Pending=100_BOI</td><td>1264</td><td  align="center">5595</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F3F781">RunJob-FundsRealization</td><td>12135</td><td  align="center">0</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftSchedule_CheckDraftCompleted_TPB</td><td>879</td><td  align="center">5907</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftSchedule_CheckDraftCompleted_WFB</td><td>879</td><td  align="center">5907</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetDraftSchedule_CheckDraftCompleted_BOI</td><td>877</td><td  align="center">5907</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=100_Pending=100_TPB</td><td>929</td><td  align="center">5602</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=100_Pending=100_WFB</td><td>914</td><td  align="center">5600</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">GetClientsEnhanced_Current=100_Pending=100_BOI</td><td>926</td><td  align="center">5597</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr></table>]]></con:value></con:property><con:property><con:name>TimeStamp</con:name><con:value>2015-11-21 11:29</con:value></con:property></con:properties></con:config></con:testStep><con:tearDownScript>try {
    //Check a project level property to see if the reports should be produced.
    if(context.expand('${#Project#ProduceReports}') == 'Y') {
        //The path and file to persist results
        def resultDir = new File("C:\\Users\\Raghav\\Desktop\\ToSend\\Nov-14\\SoapUIResults");
        if(!resultDir.exists()) {
            resultDir.mkdirs();
        }
        def resultsFile = new File(resultDir, "CSVReport.csv");

        //If the file does not already exist, we want to create it, otherwise we want to append
        if(!resultsFile.exists()) {
            resultsFile.createNewFile();
            //Header values
            resultsFile.write('"NAME","RESULT","MESSAGES","DATE"');
        }

        //Write the result values
        resultsFile.append('\n');    //Newline
        resultsFile.append('"' + testRunner.testCase.name + '",');    //Test Case Name
        resultsFile.append('"' + testRunner.status + '",');    //Overall Test Case result

        //There can be multiple messages, so set up a loop
        resultsFile.append('"');    //Start of messages.
        for(result in testRunner.getResults()) {
            //There can be lots of messages, so limit amount recorded to avoid going over
            //the buffer size for a CSV field
            msgCount = 0;
            for(message in result.getMessages()) {
                msgCount++;
                if(msgCount &lt; 10) {
                    resultsFile.append(message + ';\n');
                }
            }
        }

        resultsFile.append('",');    //End of messages.

        def currentDate = new Date().format("yyyy-MM-dd hh:mm");
        resultsFile.append('"' + currentDate + '"');
    }
} catch(e) {
    log.error("An error occurred: " + e.toString());
}</con:tearDownScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>c26798fd-2b72-4a0c-a5c1-a72d6644bc58</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ab382168-228a-4607-a6d5-c34702bbca33</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>19d63366-0c52-4145-a038-d85ac4fe8803</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e9d1ef3f-73ca-49ce-9d1d-bd7e1294eec7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>45f1aa99-092a-4b95-8f68-d42dc1425e7b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6ae7c6d3-43a8-40a0-ada0-4d73e37c4c8f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1913e0e1-e17d-41b5-8982-01ef27e46764</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf3c8c1f-6f7d-41ec-b2e9-137280a2cccb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d5f83aea-14fb-45c0-b128-ac782ad28711</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>50807989-d114-426b-a146-1a20b54611af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b65eccee-3ca7-48eb-843a-99dbe9291319</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c37ff707-c00e-449e-ab5a-9c7265d22f66</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>15c2c0a7-ad9c-4214-b80d-a6d84fd1414b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f1fbf360-ee95-4df4-b3d5-85896f094bbf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0d1d4844-09f1-43db-9118-01bae8d3cf9c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6a463e72-74c7-4c75-add5-454b38367492</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>edd4ca67-dd19-4142-b647-134d2d1f6ac4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7032aa7-e6e1-443e-8c35-e62dc0eef951</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76aaea4b-3651-427e-8216-9998adcf1496</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5e97f0d9-9f88-4a8e-a937-8074d59709a5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>735f1cf8-d028-4667-9e71-2227e9752cdd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f45b32de-b23e-4c6b-ae90-efce09f0d35d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1d021472-3c53-4b27-9115-e1a8fc5a8352</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f2d6368b-9365-4974-a75f-838f1ee72e62</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d5da2c04-14d4-45bb-8d1b-48a3b97ce2f5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5934230-0eb8-4f7b-9a95-ef0601b95a4e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>16241add-ddd0-4622-af38-e013b30cde43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4c8f3188-2d56-43ad-b43b-de967fca3aaa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc85c6d9-b9ad-4f6b-a686-b7bb8af2998f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0f649678-fa34-4a5d-95b5-5c3affa5784e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b936ff2e-68f6-47ea-8eba-227f2227f207</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>762cc6fc-1bab-4bc1-9300-06b323e6b6af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2b130f51-54b9-422d-b302-1c19c89bc215</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3f60561-7671-4b4f-a6d6-c181c64d7a01</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>79c19945-0fab-4d4e-9523-f435c8e589b3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dc70ddc3-bb9d-4ee0-ae05-b7f9ee621995</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>797127d4-7df9-402a-8e12-f400e09f2299</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b03c28c6-6333-4c58-962d-7cfa1b31d1ad</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e790e173-4360-41e0-a02b-bf20dcecaefc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8cc7f480-a7ae-46e7-9b22-8a1860e83554</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>192d6158-65aa-47e2-a7f1-b809e74e85d7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4b59bd9f-addb-444c-aab0-0b826a7d4d58</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>40af8e29-477e-49ec-afbb-cf80bded76fe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e50cddcc-0d02-4b47-8bd0-0534d3c97594</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e9dfb6e9-faf3-4ed5-9bc5-789bc1f77b52</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9b92659-b5ed-45dd-929e-f48e1a711a28</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>341b1e66-0398-405a-8bd7-f717b348ce46</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf4accb4-07b7-4230-b70d-46d17387fdb7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0683104a-0b5f-47aa-a4cd-bebe67a8d2ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1e487627-9030-4c1b-a6c6-1dec29ef9de7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5d8e6739-24c0-4806-8f06-caa89282b18f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>80c5a21b-f616-453c-8113-358c6d486e84</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5f7cd2c3-1a53-4e45-913f-ff687bddf399</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca9eeda8-9c0b-4799-96c5-301ee9289ead</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>80bc6ae0-0d69-4844-810b-1ea4b8ea9144</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3902228d-992c-47d3-9136-5078e4be2566</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5540e39f-8f63-407b-add8-4016036a55a6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>055f6f9d-18b5-4648-8ec8-2eefc659262a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9af053b7-7eca-4b2d-85c3-2e78acf1e4cd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fc8a1aee-aecb-405a-8b93-116d62784aec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8c3fcdf-d25f-4d5d-9f79-5cdded36993a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0dc0034-48e5-41ca-8f7b-f914e02d1a9a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>50f8ff3c-314f-47d7-a7e2-a82cda43009e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4117b210-9816-4eaa-86f0-767989e89773</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0a17c752-46d7-4184-8339-872151f38ee3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1532db97-706d-4881-abe5-12b76f69466c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>19b24d96-8e8d-465c-9624-8244bc719e4a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76d436bf-00ed-4259-8b85-2a17adc4f14a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b89c3f78-8127-4f84-8d98-d250d95fd3ce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>20cd096c-9269-457a-95e9-0732c970ff06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4b4d8744-4840-4721-bf48-5f2e160df2fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>69707753-5fef-4712-9349-7f7097b4cfde</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5077ccbd-a4f7-4d69-aa4a-7e2923a67aa1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DraftSuccessScenario3" searchProperties="true" id="06452dcc-2e23-4eb0-a9b4-a74b5a941d59" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">false</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="groovy" name="UIServerStatus" id="0170cad7-4e28-4fbc-976c-8b6744f0cc7c"><con:settings/><con:config><script>
	log.info ("  >>  Inside Job Server Check Module");
		try
		{
			String targetUrl = context.expand('${#Project#UI}');

			HttpURLConnection httpUrlConnection = (HttpURLConnection) new URL(
					targetUrl).openConnection();
			httpUrlConnection.setRequestMethod("HEAD");

			int responseCode = httpUrlConnection.getResponseCode();
			
			if(responseCode==200 || responseCode==401){
			return "Pass- "+targetUrl+" : | "+responseCode;
			}
			else{
			return "Fail- "+targetUrl+" : | "+responseCode;
			}
		} catch (Exception exp)
		{
			log.info("Exp - "+exp.getMessage());
			return exp.toString();
		}
	</script></con:config></con:testStep><con:testStep type="groovy" name="APIServerStatus" id="e2858718-5736-4c86-a119-b0a28f3e10ec"><con:settings/><con:config><script>
	log.info ("  >>  Inside API Server Check Module");
		try
		{
			String targetUrl = context.expand('${#Project#Endpoint}');
			HttpURLConnection httpUrlConnection = (HttpURLConnection) new URL(
					targetUrl).openConnection();
			httpUrlConnection.setRequestMethod("HEAD");

			int responseCode = httpUrlConnection.getResponseCode();
			
			if(responseCode==200 || responseCode==405){
			return "Pass- "+targetUrl+" : | "+responseCode;
			}
			else{
			return "Fail- "+targetUrl+" : | "+responseCode;
			}
			//return ""+responseCode;
			//  return responseCode == HttpURLConnection.HTTP_OK;
		} catch (Exception exp)
		{
			log.info("Exp - "+exp.getMessage());
			return exp.toString();
		}
	</script></con:config></con:testStep><con:testStep type="groovy" name="JobServerStatus" id="4342c035-a3f9-42dc-a12d-fdc91b808fc4" disabled="true"><con:settings/><con:config><script>
	log.info ("  >>  Inside Job Server Check Module");
		try
		{
			String JSUrl = context.expand('${#Project#JS}');

// - http://cftadmin:CFTis%231@10.10.110.188:8870/
// - http://10.10.200.151:8710/scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0
		String[] targetUrl0 = JSUrl.split("@");
		String targetUrl = (targetUrl0[0].split(":"))[0]+"://"+targetUrl0[1]+"/scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
		log.info ("  >>  targetUrl : "+targetUrl)
			
			HttpURLConnection httpUrlConnection = (HttpURLConnection) new URL(
					targetUrl).openConnection();
			httpUrlConnection.setRequestMethod("HEAD");

			int responseCode = httpUrlConnection.getResponseCode();
			
			if(responseCode==200 || responseCode==401){
			return "Pass- "+targetUrl+" : | "+responseCode;
			}
			else{
			return "Fail- "+targetUrl+" : | "+responseCode;
			}
		} catch (Exception exp)
		{
			log.info("Exp - "+exp.getMessage());
			return exp.toString();
		}
	</script></con:config></con:testStep><con:testStep type="groovy" name="DBServerStatus" id="b87e354f-f849-4274-b91e-0493b4478315" disabled="true"><con:settings/><con:config><script>import groovy.sql.Sql
//import java.sql.SQLException;

/**
 * This scripts test the DB connection is up with ip and port only.
 * Note : As this script is not using valid username and password. The only check performed
 * 		here is to check the db on given ip and port is active.
 * 		Any issues with schema not available/working etc is not verified here.
 * 		
 *		This can be updated to include valid user and password and run a sample query.
 *		This will ensure DB is available for qa/dev teams. 		
 * 		
 * 		Nov 30 2015 - Raghav
 */
log.info ("  >>  Inside DB Server Check Module");
String dbHostPort = context.expand('${#Project#DB}');

try{
def sql;

com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( "com.mysql.jdbc.Driver" )

//sql = Sql.newInstance("jdbc:mysql://10.10.200.151:3416/CFT_QA","user", null, "com.mysql.jdbc.Driver");
sql = Sql.newInstance("jdbc:mysql://"+dbHostPort+"", "com.mysql.jdbc.Driver");

log.info ("  >>  sql : "+sql);
//row = sql.firstRow("SELECT count(1) count FROM users");
//log.info("  >>  Count: ${row.count}")
//assert (row.count > 0):ERROR_MSG
sql.close();
}
catch(Exception exp){
	log.info ("  >>  Exp is : "+exp.getMessage());
	if(exp.toString().contains("Access denied for user")){
		return "Pass | "+dbHostPort;
	}else{
	return exp.getMessage()+" | "+dbHostPort;
	}
}
/*finally
{
log.info ("Closing DB Connection");
}*/
</script></con:config></con:testStep><con:testStep type="groovy" name="Gen name" id="39883909-1b52-443c-b040-0af1ea6a8a4b"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}

generator( (('A'..'Z')).join(), 9 )
</script></con:config></con:testStep><con:testStep type="groovy" name="GetCurrentDate" id="076780dc-606b-47dd-9253-8402572fe783"><con:settings/><con:config><script>
def currentTime = new Date().format("dd/MM/yyyy");
	log.info "    >>>>    TIME NOW IS : "+currentTime;
		return currentTime;
	

   
</script></con:config></con:testStep><con:testStep type="request" name="CreateClient_TPB" id="e0ea96e3-8923-43bb-a930-24cd89294ddb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClient</con:operation><con:request name="CreateClient_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="18d5e90d-6870-4130-97c8-f95dead90278" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            	<wsse:Username>${#Project#global_username}</wsse:Username>
            	<wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientRequest>
            <mes:clientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:channelId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:productId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:firstname>CFT_FDR_TPB</mes:firstname>
            <mes:lastname>Automation</mes:lastname>
            <mes:ssn>232-36-3333</mes:ssn>
            <mes:dob>
                <typ:date format="MM-dd-yyyy" value="09-09-1980"/>
            </mes:dob>
            <mes:address1>Finxera Headquarters</mes:address1>
            <mes:address2>1900 South Norfolk Street</mes:address2>
            <mes:city>San Mateo</mes:city>
            <mes:state>CA</mes:state>
            <mes:zip>94403</mes:zip>
            <mes:phone>9874563210</mes:phone>
            <mes:mobile>8996655000</mes:mobile>
            <mes:email xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:draftAmount>100</mes:draftAmount>
        </mes:CreateClientRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5b1cba04-966f-4b54-ab63-4bf2bb398213"/><con:assertion type="GroovyScriptAssertion" id="c0ea2155-427e-4545-9eea-7c8f0dc10ca9" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def enrollmentId = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert enrollmentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClient_TPB2" id="1eef3278-dffe-4806-9ce1-73921222867f" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClient</con:operation><con:request name="CreateClient_TPB2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="18d5e90d-6870-4130-97c8-f95dead90278" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            	<wsse:Username>${#Project#global_username}</wsse:Username>
            	<wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientRequest>
            <mes:clientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:channelId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:productId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:firstname>CFT_FDR_TPB</mes:firstname>
            <mes:lastname>Automation</mes:lastname>
            <mes:ssn>232-36-3333</mes:ssn>
            <mes:dob>
                <typ:date format="MM-dd-yyyy" value="09-09-1980"/>
            </mes:dob>
            <mes:address1>Finxera Headquarters</mes:address1>
            <mes:address2>1900 South Norfolk Street</mes:address2>
            <mes:city>San Mateo</mes:city>
            <mes:state>CA</mes:state>
            <mes:zip>94403</mes:zip>
            <mes:phone>9874563210</mes:phone>
            <mes:mobile>8996655000</mes:mobile>
            <mes:email xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:draftAmount>100</mes:draftAmount>
        </mes:CreateClientRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5b1cba04-966f-4b54-ab63-4bf2bb398213"/><con:assertion type="GroovyScriptAssertion" id="c0ea2155-427e-4545-9eea-7c8f0dc10ca9" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def enrollmentId = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert enrollmentId != null
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" id="8aa5fb8e-812c-4d42-a461-a89cb5f1f44a"><con:configuration><token>1234</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="TestCaseStatus2" disabled="true" id="606f3578-6ad4-4313-ae59-db202a280951"><con:settings/><con:config><script>for ( testCaseResult in runner.results )
{
testCaseName = testCaseResult.getTestCase().name
log.info testCaseName
if ( testCaseResult.getStatus().toString() == 'FAILED' )
{
log.info "$testCaseName has failed"
for ( testStepResult in testCaseResult.getResults() )
{
testStepResult.messages.each() { msg -> log.info msg }
}
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="TestStatus" disabled="true" id="e3818d96-d0d0-45b1-99e1-fbe10b459bea"><con:settings/><con:config><script>context.expand('${#Project#sendEmailOnPass}').toString().toLowerCase().contains("n");</script></con:config></con:testStep><con:testStep type="groovy" name="TestCaseStatus1" disabled="true" id="78615a25-a1f2-4227-bc8d-ac167436f030"><con:settings/><con:config><script>
for ( testCaseResult in runner.results )
{
testCaseName = testCaseResult.getTestCase().name
log.info "  >>  TestCaseName : "+testCaseName
log.info "  >>  TestCaseStatus : "+testCaseResult.getStatus().toString();
if ( testCaseResult.getStatus().toString() == 'FAILED' )
{
log.info "$testCaseName has failed"
for ( testStepResult in testCaseResult.getResults() )
{
testStepResult.messages.each() { msg -> log.info msg }
}
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="SendResults" disabled="true" id="b503ce54-aed9-4e91-b881-329bddce2f72"><con:settings/><con:config><script>try {
    //Check a project level property to see if the reports should be produced.
    if(context.expand('${#Project#ProduceReports}') == 'Y') {
        //The path and file to persist results
       
		log.info ("  >>  I am here");


        def resultDir2 = new File("C:/Users/raghav/Desktop/ToSend/Nov-14/SoapUIResults");
        if(!resultDir2.exists()) {
            resultDir2.mkdirs();
        }
        def currentDate = new Date().format("dd-MM-yyyy hh-mm-ss");
        def resultsFile2 = new File(resultDir2, currentDate+"_Result.csv");

        //If the file does not already exist, we want to create it, otherwise we want to append
        if(!resultsFile2.exists()) {
            resultsFile2.createNewFile();
            //Header values
              
            //resultsFile2.write('"Name","Class","TimeStamp","TimeTaken","Size","Message","Result"');
             resultsFile2.write('"Name","TimeStamp","TimeTaken [ms]","Size [bytes]","Message","Result"');
        }


tsResults = testRunner.getResults()
for(i in tsResults){
	String stepName = i.getTestStep().getName();
	//String stepClass = i.getClass();
	String stepTimeStamp = new Date(i.getTimeStamp());
	String stepTimeTaken = i.getTimeTaken();
	String stepSize = i.getSize();
	
	
	//String stepMessage = i.getMessages();
	String stepMessage = "";
            msgCount = 0;
            for(message in i.getMessages()) {
                msgCount++;
                if(msgCount &lt; 10) {
                    //resultsFile.append(message + ';\n');
					stepMessage=stepMessage+message+" | ";
                }
            }
	
	String stepResult = i.getStatus();
 
	//String resultToLog = stepName+","+stepClass+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	String resultToLog = stepName+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	
	resultsFile2.append('\n');    //Newline
	resultsFile2.append (resultToLog);
}
    
} 
}catch(e) {
    log.error("An error occurred: " + e.toString());
}</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of RunJob-NewScheduler" disabled="true" id="74f8a014-7490-436f-9688-82ff40fa0dff"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-NewScheduler";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

def minTimeOut=a.getPropertyValue('minTimeOut') as int;
def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	//return(null);
	return 'NO VALID JOB ENVIRONMENT FOUND';
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
	return ""+jobStatus[0]+" | "+jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timeout"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
	return ""+jobStatus[0]+" | "+jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
	return ""+iJobStatus;
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
	return ""+finalJobURL+" | "+all;
}</script></con:config></con:testStep><con:testStep type="groovy" name="SendEmail_Nov22_2" disabled="true" id="3bc51003-bf24-4b90-90ba-777226cda8ea"><con:settings/><con:config><script><![CDATA[import javax.mail.*;
import javax.mail.internet.*;
import java.util.Properties;

public class JavaEmailSender {

	def static log;
   def static context;
   def static testRunner;
 
    private String emailAddressTo = new String();
    private String msgSubject = new String();
    private String msgText = new String();

    final String USER_NAME = "automationqa@finxera.com";   //User name of the Goole(gmail) account
    final String PASSSWORD = "Abcd1234+";  //Password of the Goole(gmail) account
    final String FROM_ADDRESS = "automationqa@finxera.com";  //From addresss
 
    public JavaEmailSender() {
    }

    public static void main(String[] args) {
      JavaEmailSender email = new JavaEmailSender();
     //Sending test email
      def currentDate = new Date().format("yyyy-MM-dd hh:mm");
    	 String msg = createResults(); 
    	 log.info ("*******************"); 
    	 log.info (msg);
    	 def resultStep = testRunner.testCase.getTestStepByName("Results");
resultStep.setPropertyValue("HTML",""+msg);
    	 log.info ("*******************"); 

     String emailRecipients = context.expand('${#Project#email}')
    // emailRecipients += ",raghav@finxera.com";
     log.info ("    >>>>    emailRecipients : "+emailRecipients);
    email.createAndSendEmail(emailRecipients, "CI Automation Report - "+currentDate,
      ""+msg);
    }

    public void createAndSendEmail(String emailAddressTo, String msgSubject, String msgText) {
        this.emailAddressTo = emailAddressTo;
        this.msgSubject = msgSubject;
        this.msgText = msgText;
        sendEmailMessage();
    }
  
    private void sendEmailMessage() {
     
     //Create email sending properties
     Properties props = new Properties();
     props.put("mail.smtp.auth", "true");
     props.put("mail.smtp.starttls.enable", "true");
     props.put("mail.smtp.host", "smtp.gmail.com");
     props.put("mail.smtp.port", "587");
  
    Session session = Session.getInstance(props,
    new javax.mail.Authenticator() {
    protected PasswordAuthentication getPasswordAuthentication() {
    return new PasswordAuthentication(USER_NAME, PASSSWORD);
   }
    });

  try {

     Message message = new MimeMessage(session);
     message.setFrom(new InternetAddress(FROM_ADDRESS)); //Set from address of the email
     message.setContent(msgText,"text/html"); //set content type of the email
    //  message.setContent("<h3>sending html mail check</h3>","text/html" ); 
    message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(emailAddressTo)); //Set email recipient
    message.setRecipients(Message.RecipientType.BCC,InternetAddress.parse("raghav@finxera.com"));
    message.setSubject(msgSubject); //Set email message subject
    Transport.send(message); //Send email message

   System.out.println("sent email successfully!");

  } catch (MessagingException e) {
       throw new RuntimeException(e);
  }
    }

    public void setEmailAddressTo(String emailAddressTo) {
        this.emailAddressTo = emailAddressTo;
    }

    public void setSubject(String subject) {
        this.msgSubject = subject;
    }

    public void setMessageText(String msgText) {
        this.msgText = msgText;
    }

public static String createResults(){
String messageTitle="";
String message1="";
try {
    //Check a project level property to see if the reports should be produced.
    if(context.expand('${#Project#ProduceReports}') == 'Y') 
    //if((testRunner.testCase.testSuite.project.getPropertyValue("ProduceReports")).toLowerCase() == "y")
    {
        //The path and file to persist results
       
		log.info ("  >>  Creating Results");

/****************Title Message***********************/
messageTitle = '<h3>Note: This is auto-generated email. Do not reply.</h3><hr><hr><br>'
messageTitle += '<table border="2" style="width:80%">';
messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">Environment</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+context.expand('${#Project#Env}')+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">Endpoint</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+context.expand('${#Project#Endpoint}')+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">SubscriberId</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+context.expand('${#Project#subscriberId}')+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">TestCase Executed</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+testRunner.testCase.name+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">Executed by</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">CI Automation</th>';
messageTitle += '</tr>';

messageTitle += '</table>;'


/****************Title Message***********************/


 message1 = '<table border="2" style="width:80%">';
 message1 += '<tr>';
 message1 += '<th bgcolor="#e5eeff">Name</th>';
 //message1 += '<th>TimeStamp</th>';
  message1 += '<th bgcolor="#e5eeff">TimeTaken [ms]</th>';
   message1 += '<th bgcolor="#e5eeff">Size [bytes]</th>';
   message1 += '<th bgcolor="#e5eeff">Message</th>';
   message1 += '<th bgcolor="#e5eeff">Result</th>';
 message1 += '</tr>';
             //resultsFile2.write('"Name","TimeStamp","TimeTaken [ms]","Size [bytes]","Message","Result"');
        


def tsResults = testRunner.getResults()
for(i in tsResults){
	String stepName = i.getTestStep().getName();
	if(stepName.contains("Gen name") || stepName.contains("GetCurrentDate") || stepName.contains("Results")){
		continue;
	}
	
	//String stepClass = i.getClass();
	String stepTimeStamp = new Date(i.getTimeStamp());
	String stepTimeTaken = i.getTimeTaken();
	String stepSize = i.getSize();
	
	
	//String stepMessage = i.getMessages();
	String stepMessage = "";
            def msgCount = 0;
            for(message in i.getMessages()) {
                msgCount++;
                if(msgCount < 10) {
                    //resultsFile.append(message + ';\n');
					stepMessage=stepMessage+message+" | ";
                }
            }
	
	String stepResult = i.getStatus();
	if((stepName.toLowerCase().contains("runjob"))){
		if(i.getMessages().toString().toLowerCase().contains("pass")){
			stepResult="OK";
		}else if(i.getMessages().toString().toLowerCase().contains("timeout")){
			stepResult="TimeOut";
		}
		else{
			stepResult="FAILED";
		}
	}

 message1 += '<tr>';
//message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';    
 if(!(stepName.toLowerCase().contains("runjob"))){
    message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';
 }else{
 	 message1 += '<td bgcolor="#F3F781">'+stepName+'</td>';
 }
   // message1 += '<td>'+stepTimeStamp+'</td>';
    message1 += '<td>'+stepTimeTaken+'</td>';
    message1 += '<td  align="center">'+stepSize+'</td>';
    message1 += '<td>'+stepMessage+'</td>';
    if(stepResult.toLowerCase().contains("ok") || stepResult.toLowerCase().contains("pass")){
    message1 += '<td align="center" bgcolor="#00FF00">'+stepResult+'</td>';
    }
    else if(stepResult.toLowerCase().contains("timeout")){
    message1 += '<td align="center" bgcolor="#skyblue">'+stepResult+'</td>';
    }
    else{
    	 message1 += '<td align="center" bgcolor="red">'+stepResult+'</td>';
    }
  message1 += '</tr>';
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
  log.info (message1);
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
	//String resultToLog = stepName+","+stepClass+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	String resultToLog = stepName+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	log.info (resultToLog);
}
message1 += '</table><br><hr>End Of Report<hr><hr><br>';
    return messageTitle+""+message1;
} 
}catch(e) {
    log.error("An error occurred: " + e.toString());
}
}
}
]]></script></con:config></con:testStep><con:testStep type="groovy" name="SendEmail_Nov22_1" disabled="true" id="b7b3971e-4913-4cd9-93db-f94a5ef28cc0"><con:settings/><con:config><script><![CDATA[import javax.mail.*;
import javax.mail.internet.*;
import java.util.Properties;

public class JavaEmailSender {

	def static log;
   def static context;
   def static testRunner;
 
    private String emailAddressTo = new String();
    private String msgSubject = new String();
    private String msgText = new String();

    final String USER_NAME = "automationqa@finxera.com";   //User name of the Goole(gmail) account
    final String PASSSWORD = "Abcd1234+";  //Password of the Goole(gmail) account
    final String FROM_ADDRESS = "automationqa@finxera.com";  //From addresss
 
    public JavaEmailSender() {
    }

    public static void main(String[] args) {
      JavaEmailSender email = new JavaEmailSender();
     //Sending test email
      def currentDate = new Date().format("yyyy-MM-dd hh:mm");
    	 String msg = createResults(); 
    	 log.info ("*******************"); 
    	 log.info (msg);
    	 def resultStep = testRunner.testCase.getTestStepByName("Results");
resultStep.setPropertyValue("HTML",""+msg);
    	 log.info ("*******************"); 

     String emailRecipients = context.expand('${#Project#email}')
    // emailRecipients += ",raghav@finxera.com";
     log.info ("    >>>>    emailRecipients : "+emailRecipients);
    email.createAndSendEmail(emailRecipients, "Test email subject-"+currentDate,
      "Congratulations !!! \nThis is test email sent by java class.\n"+msg);
    }

    public void createAndSendEmail(String emailAddressTo, String msgSubject, String msgText) {
        this.emailAddressTo = emailAddressTo;
        this.msgSubject = msgSubject;
        this.msgText = msgText;
        sendEmailMessage();
    }
  
    private void sendEmailMessage() {
     
     //Create email sending properties
     Properties props = new Properties();
     props.put("mail.smtp.auth", "true");
     props.put("mail.smtp.starttls.enable", "true");
     props.put("mail.smtp.host", "smtp.gmail.com");
     props.put("mail.smtp.port", "587");
  
    Session session = Session.getInstance(props,
    new javax.mail.Authenticator() {
    protected PasswordAuthentication getPasswordAuthentication() {
    return new PasswordAuthentication(USER_NAME, PASSSWORD);
   }
    });

  try {

     Message message = new MimeMessage(session);
     message.setFrom(new InternetAddress(FROM_ADDRESS)); //Set from address of the email
     message.setContent(msgText,"text/html"); //set content type of the email
    //  message.setContent("<h3>sending html mail check</h3>","text/html" ); 
    message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(emailAddressTo)); //Set email recipient
    message.setRecipients(Message.RecipientType.BCC,InternetAddress.parse("raghav@finxera.com"));
    message.setSubject(msgSubject); //Set email message subject
    Transport.send(message); //Send email message

   System.out.println("sent email successfully!");

  } catch (MessagingException e) {
       throw new RuntimeException(e);
  }
    }

    public void setEmailAddressTo(String emailAddressTo) {
        this.emailAddressTo = emailAddressTo;
    }

    public void setSubject(String subject) {
        this.msgSubject = subject;
    }

    public void setMessageText(String msgText) {
        this.msgText = msgText;
    }

public static String createResults(){
String message1="";
try {
    //Check a project level property to see if the reports should be produced.
    if(context.expand('${#Project#ProduceReports}') == 'Y') 
    //if((testRunner.testCase.testSuite.project.getPropertyValue("ProduceReports")).toLowerCase() == "y")
    {
        //The path and file to persist results
       
		log.info ("  >>  Creating Results");

		 message1 = '<table border="2" style="width:80%">';
 message1 += '<tr>';
 message1 += '<th>Name</th>';
 //message1 += '<th>TimeStamp</th>';
  message1 += '<th>TimeTaken [ms]</th>';
   message1 += '<th>Size [bytes]</th>';
   message1 += '<th>Message</th>';
   message1 += '<th>Result</th>';
 message1 += '</tr>';
             //resultsFile2.write('"Name","TimeStamp","TimeTaken [ms]","Size [bytes]","Message","Result"');
        


def tsResults = testRunner.getResults()
for(i in tsResults){
	String stepName = i.getTestStep().getName();
	if(stepName.contains("Gen name") || stepName.contains("GetCurrentDate") || stepName.contains("Results")){
		continue;
	}
	
	//String stepClass = i.getClass();
	String stepTimeStamp = new Date(i.getTimeStamp());
	String stepTimeTaken = i.getTimeTaken();
	String stepSize = i.getSize();
	
	
	//String stepMessage = i.getMessages();
	String stepMessage = "";
            def msgCount = 0;
            for(message in i.getMessages()) {
                msgCount++;
                if(msgCount < 10) {
                    //resultsFile.append(message + ';\n');
					stepMessage=stepMessage+message+" | ";
                }
            }
	
	String stepResult = i.getStatus();
	if((stepName.toLowerCase().contains("runjob"))){
		if(i.getMessages().toString().toLowerCase().contains("pass")){
			stepResult="OK";
		}else if(i.getMessages().toString().toLowerCase().contains("timeout")){
			stepResult="TimeOut";
		}
		else{
			stepResult="FAILED";
		}
	}

 message1 += '<tr>';
//message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';    
 if(!(stepName.toLowerCase().contains("runjob"))){
    message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';
 }else{
 	 message1 += '<td bgcolor="#F3F781">'+stepName+'</td>';
 }
   // message1 += '<td>'+stepTimeStamp+'</td>';
    message1 += '<td>'+stepTimeTaken+'</td>';
    message1 += '<td  align="center">'+stepSize+'</td>';
    message1 += '<td>'+stepMessage+'</td>';
    if(stepResult.toLowerCase().contains("ok") || stepResult.toLowerCase().contains("pass")){
    message1 += '<td align="center" bgcolor="#00FF00">'+stepResult+'</td>';
    }
    else if(stepResult.toLowerCase().contains("timeout")){
    message1 += '<td align="center" bgcolor="#skyblue">'+stepResult+'</td>';
    }
    else{
    	 message1 += '<td align="center" bgcolor="red">'+stepResult+'</td>';
    }
  message1 += '</tr>';
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
  log.info (message1);
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
	//String resultToLog = stepName+","+stepClass+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	String resultToLog = stepName+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	log.info (resultToLog);
}
message1 += '</table>';
    return message1;
} 
}catch(e) {
    log.error("An error occurred: " + e.toString());
}
}
}
]]></script></con:config></con:testStep><con:testStep type="groovy" name="SendEmail_Nov21" disabled="true" id="1e092fc3-c130-4407-bdd2-a12a476f4222"><con:settings/><con:config><script><![CDATA[import javax.mail.*;
import javax.mail.internet.*;
import java.util.Properties;

public class JavaEmailSender {

	def static log;
   def static context;
   def static testRunner;
 
    private String emailAddressTo = new String();
    private String msgSubject = new String();
    private String msgText = new String();

    final String USER_NAME = "localstakeqa@gmail.com";   //User name of the Goole(gmail) account
    final String PASSSWORD = "Abcd1234+";  //Password of the Goole(gmail) account
    final String FROM_ADDRESS = "localstakeqa@gmail.com";  //From addresss
 
    public JavaEmailSender() {
    }

    public static void main(String[] args) {
      JavaEmailSender email = new JavaEmailSender();
     //Sending test email
      def currentDate = new Date().format("yyyy-MM-dd hh:mm");
    	 String msg = createResults(); 
    	 log.info ("*******************"); 
    	 log.info (msg);
    	 def resultStep = testRunner.testCase.getTestStepByName("Results");
resultStep.setPropertyValue("HTML",""+msg);
    	 log.info ("*******************"); 
    	 //String content= "<html><body><b><td><tr>Hello!</b></tr></td></body></html>" 

/*
 String message = "<br><i>Greetings!!!</i><br>";
        message += "<b>Wish you a nice day!</b><br>";
        message += "<font color=red>Duke</font>";

     message += '<table border="2" style="width:100%">';
message += '<tr>';
    message += '<td>Jill</td>';
    message += '<td>Smith</td>'; 
    message += '<td>50</td>';
  message += '</tr>';
  message += '<tr>';
    message += '<td>Eve</td>';
   message +=  '<td>Jackson</td>'; 
    message += '<td>94</td>';
 message +=  '</tr>';
message += '</table>';
     */ 
    email.createAndSendEmail("raghav@finxera.com , go2raghav10@gmail.com", "Test email subject-"+currentDate,
      "Congratulations !!! \nThis is test email sent by java class.\n"+msg);
    }

    public void createAndSendEmail(String emailAddressTo, String msgSubject, String msgText) {
        this.emailAddressTo = emailAddressTo;
        this.msgSubject = msgSubject;
        this.msgText = msgText;
        sendEmailMessage();
    }
  
    private void sendEmailMessage() {
     
     //Create email sending properties
     Properties props = new Properties();
     props.put("mail.smtp.auth", "true");
     props.put("mail.smtp.starttls.enable", "true");
     props.put("mail.smtp.host", "smtp.gmail.com");
     props.put("mail.smtp.port", "587");
  
    Session session = Session.getInstance(props,
    new javax.mail.Authenticator() {
    protected PasswordAuthentication getPasswordAuthentication() {
    return new PasswordAuthentication(USER_NAME, PASSSWORD);
   }
    });

  try {

     Message message = new MimeMessage(session);
     message.setFrom(new InternetAddress(FROM_ADDRESS)); //Set from address of the email
     message.setContent(msgText,"text/html"); //set content type of the email
    //  message.setContent("<h3>sending html mail check</h3>","text/html" ); 
    message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(emailAddressTo)); //Set email recipient
    
    message.setSubject(msgSubject); //Set email message subject
    Transport.send(message); //Send email message

   System.out.println("sent email successfully!");

  } catch (MessagingException e) {
       throw new RuntimeException(e);
  }
    }

    public void setEmailAddressTo(String emailAddressTo) {
        this.emailAddressTo = emailAddressTo;
    }

    public void setSubject(String subject) {
        this.msgSubject = subject;
    }

    public void setMessageText(String msgText) {
        this.msgText = msgText;
    }

public static String createResults(){
String message1="";
try {
    //Check a project level property to see if the reports should be produced.
    if(context.expand('${#Project#ProduceReports}') == 'Y') 
    //if((testRunner.testCase.testSuite.project.getPropertyValue("ProduceReports")).toLowerCase() == "y")
    {
        //The path and file to persist results
       
		log.info ("  >>  Creating Results");

		 message1 = '<table border="2" style="width:80%">';
 message1 += '<tr>';
 message1 += '<th>Name</th>';
 //message1 += '<th>TimeStamp</th>';
  message1 += '<th>TimeTaken [ms]</th>';
   message1 += '<th>Size [bytes]</th>';
   message1 += '<th>Message</th>';
   message1 += '<th>Result</th>';
 message1 += '</tr>';
             //resultsFile2.write('"Name","TimeStamp","TimeTaken [ms]","Size [bytes]","Message","Result"');
        


def tsResults = testRunner.getResults()
for(i in tsResults){
	String stepName = i.getTestStep().getName();
	if(stepName.contains("Gen name") || stepName.contains("GetCurrentDate") || stepName.contains("Results")){
		continue;
	}
	//String stepClass = i.getClass();
	String stepTimeStamp = new Date(i.getTimeStamp());
	String stepTimeTaken = i.getTimeTaken();
	String stepSize = i.getSize();
	
	
	//String stepMessage = i.getMessages();
	String stepMessage = "";
            def msgCount = 0;
            for(message in i.getMessages()) {
                msgCount++;
                if(msgCount < 10) {
                    //resultsFile.append(message + ';\n');
					stepMessage=stepMessage+message+" | ";
                }
            }
	
	String stepResult = i.getStatus();


 message1 += '<tr>';
//message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';    
 if(!(stepName.toLowerCase().contains("runjob"))){
    message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';
 }else{
 	 message1 += '<td bgcolor="#F3F781">'+stepName+'</td>';
 }
   // message1 += '<td>'+stepTimeStamp+'</td>';
    message1 += '<td>'+stepTimeTaken+'</td>';
    message1 += '<td  align="center">'+stepSize+'</td>';
    message1 += '<td>'+stepMessage+'</td>';
    if(stepResult.toLowerCase().contains("ok")){
    message1 += '<td align="center" bgcolor="#00FF00">'+stepResult+'</td>';
    }else{
    	 message1 += '<td align="center" bgcolor="red">'+stepResult+'</td>';
    }
  message1 += '</tr>';
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
  log.info (message1);
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
	//String resultToLog = stepName+","+stepClass+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	String resultToLog = stepName+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	log.info (resultToLog);
}
message1 += '</table>';
    return message1;
} 
}catch(e) {
    log.error("An error occurred: " + e.toString());
}
}
}
]]></script></con:config></con:testStep><con:testStep type="groovy" name="SendEmail_Nov21_3" disabled="true" id="01a4cdfb-5521-4689-81e0-93f01b753717"><con:settings/><con:config><script><![CDATA[import javax.mail.*;
import javax.mail.internet.*;
import java.util.Properties;

public class JavaEmailSender {

	def static log;
   def static context;
   def static testRunner;
 
    private String emailAddressTo = new String();
    private String msgSubject = new String();
    private String msgText = new String();

    final String USER_NAME = "localstakeqa@gmail.com";   //User name of the Goole(gmail) account
    final String PASSSWORD = "Abcd1234+";  //Password of the Goole(gmail) account
    final String FROM_ADDRESS = "localstakeqa@gmail.com";  //From addresss
 
    public JavaEmailSender() {
    }

    public static void main(String[] args) {
      JavaEmailSender email = new JavaEmailSender();
     //Sending test email
      def currentDate = new Date().format("yyyy-MM-dd hh:mm");
    	 createResults();  
    	 //String content= "<html><body><b><td><tr>Hello!</b></tr></td></body></html>" 

StringBuilder content = new StringBuilder();
//sb.append("<table><tr><td>your content here</td></tr></table>");
    content.append("<html><head></head><title></title>")
    content.append("<body style='font-size:12px;font-family:Trebuchet MS;'>")
    content.append("<table width='600px' align='center' border='0' cellpadding='0' cellspacing='0' style='border-top:5px solid white;'")
    content.append("<tr><td></tr></td></table>")  	 

 String message = "<br><i>Greetings!!!</i><br>";
        message += "<b>Wish you a nice day!</b><br>";
        message += "<font color=red>Duke</font>";

     message += '<table border="2" style="width:100%">';
message += '<tr>';
    message += '<td>Jill</td>';
    message += '<td>Smith</td>'; 
    message += '<td>50</td>';
  message += '</tr>';
  message += '<tr>';
    message += '<td>Eve</td>';
   message +=  '<td>Jackson</td>'; 
    message += '<td>94</td>';
 message +=  '</tr>';
message += '</table>';
      
    email.createAndSendEmail("raghav@finxera.com , go2raghav10@gmail.com", "Test email subject-"+currentDate,
      "Congratulations !!! \nThis is test email sent by java class.\n"+message);
    }

    public void createAndSendEmail(String emailAddressTo, String msgSubject, String msgText) {
        this.emailAddressTo = emailAddressTo;
        this.msgSubject = msgSubject;
        this.msgText = msgText;
        sendEmailMessage();
    }
  
    private void sendEmailMessage() {
     
     //Create email sending properties
     Properties props = new Properties();
     props.put("mail.smtp.auth", "true");
     props.put("mail.smtp.starttls.enable", "true");
     props.put("mail.smtp.host", "smtp.gmail.com");
     props.put("mail.smtp.port", "587");
  
    Session session = Session.getInstance(props,
    new javax.mail.Authenticator() {
    protected PasswordAuthentication getPasswordAuthentication() {
    return new PasswordAuthentication(USER_NAME, PASSSWORD);
   }
    });

  try {

     Message message = new MimeMessage(session);
     message.setFrom(new InternetAddress(FROM_ADDRESS)); //Set from address of the email
     message.setContent(msgText,"text/html"); //set content type of the email
    //  message.setContent("<h3>sending html mail check</h3>","text/html" ); 
    message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(emailAddressTo)); //Set email recipient
    
    message.setSubject(msgSubject); //Set email message subject
    Transport.send(message); //Send email message

   System.out.println("sent email successfully!");

  } catch (MessagingException e) {
       throw new RuntimeException(e);
  }
    }

    public void setEmailAddressTo(String emailAddressTo) {
        this.emailAddressTo = emailAddressTo;
    }

    public void setSubject(String subject) {
        this.msgSubject = subject;
    }

    public void setMessageText(String msgText) {
        this.msgText = msgText;
    }

public static void createResults(){

try {
    //Check a project level property to see if the reports should be produced.
    if(context.expand('${#Project#ProduceReports}') == 'Y') 
    //if((testRunner.testCase.testSuite.project.getPropertyValue("ProduceReports")).toLowerCase() == "y")
    {
        //The path and file to persist results
       
		log.info ("  >>  I am here");


        def resultDir2 = new File("C:/Users/raghav/Desktop/ToSend/Nov-14/SoapUIResults");
        if(!resultDir2.exists()) {
            resultDir2.mkdirs();
        }
        def currentDate = new Date().format("dd-MM-yyyy hh-mm-ss");
        def resultsFile2 = new File(resultDir2, currentDate+"_Result.csv");

        //If the file does not already exist, we want to create it, otherwise we want to append
        if(!resultsFile2.exists()) {
            resultsFile2.createNewFile();
            //Header values
              
            //resultsFile2.write('"Name","Class","TimeStamp","TimeTaken","Size","Message","Result"');
             resultsFile2.write('"Name","TimeStamp","TimeTaken [ms]","Size [bytes]","Message","Result"');
        }


def tsResults = testRunner.getResults()
for(i in tsResults){
	String stepName = i.getTestStep().getName();
	//String stepClass = i.getClass();
	String stepTimeStamp = new Date(i.getTimeStamp());
	String stepTimeTaken = i.getTimeTaken();
	String stepSize = i.getSize();
	
	
	//String stepMessage = i.getMessages();
	String stepMessage = "";
            def msgCount = 0;
            for(message in i.getMessages()) {
                msgCount++;
                if(msgCount < 10) {
                    //resultsFile.append(message + ';\n');
					stepMessage=stepMessage+message+" | ";
                }
            }
	
	String stepResult = i.getStatus();
 
	//String resultToLog = stepName+","+stepClass+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	String resultToLog = stepName+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	
	resultsFile2.append('\n');    //Newline
	resultsFile2.append (resultToLog);
}
    
} 
}catch(e) {
    log.error("An error occurred: " + e.toString());
}
}
}
]]></script></con:config></con:testStep><con:testStep type="groovy" name="SendEmail_Nov21_2" disabled="true" id="0ef6cd40-8311-46d5-badd-2b0addae275f"><con:settings/><con:config><script>import javax.mail.*;
import javax.mail.internet.*;
import java.util.Properties;

public class JavaEmailSender {

def static log;
   def static context;
   def static testRunner;
 
    private String emailAddressTo = new String();
    private String msgSubject = new String();
    private String msgText = new String();

    final String USER_NAME = "localstakeqa@gmail.com";   //User name of the Goole(gmail) account
    final String PASSSWORD = "Abcd1234+";  //Password of the Goole(gmail) account
    final String FROM_ADDRESS = "localstakeqa@gmail.com";  //From addresss
 
    public JavaEmailSender() {
    }

    public static void main(String[] args) {
      JavaEmailSender email = new JavaEmailSender();
     //Sending test email
      def currentDate = new Date().format("yyyy-MM-dd hh:mm");
    	 createResults();  
      email.createAndSendEmail("raghav@finxera.com", "Test email subject-"+currentDate,
      "Congratulations !!! \nThis is test email sent by java class.");
    }

    public void createAndSendEmail(String emailAddressTo, String msgSubject, String msgText) {
        this.emailAddressTo = emailAddressTo;
        this.msgSubject = msgSubject;
        this.msgText = msgText;
        sendEmailMessage();
    }
  
    private void sendEmailMessage() {
     
     //Create email sending properties
     Properties props = new Properties();
     props.put("mail.smtp.auth", "true");
     props.put("mail.smtp.starttls.enable", "true");
     props.put("mail.smtp.host", "smtp.gmail.com");
     props.put("mail.smtp.port", "587");
  
    Session session = Session.getInstance(props,
    new javax.mail.Authenticator() {
    protected PasswordAuthentication getPasswordAuthentication() {
    return new PasswordAuthentication(USER_NAME, PASSSWORD);
   }
    });

  try {

     Message message = new MimeMessage(session);
     message.setFrom(new InternetAddress(FROM_ADDRESS)); //Set from address of the email
     message.setContent(msgText,"text/html"); //set content type of the email
     
    message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(emailAddressTo)); //Set email recipient
    
    message.setSubject(msgSubject); //Set email message subject
    Transport.send(message); //Send email message

   System.out.println("sent email successfully!");

  } catch (MessagingException e) {
       throw new RuntimeException(e);
  }
    }

    public void setEmailAddressTo(String emailAddressTo) {
        this.emailAddressTo = emailAddressTo;
    }

    public void setSubject(String subject) {
        this.msgSubject = subject;
    }

    public void setMessageText(String msgText) {
        this.msgText = msgText;
    }

public static void createResults(){

try {
    //Check a project level property to see if the reports should be produced.
    if(context.expand('${#Project#ProduceReports}') == 'Y') 
    //if((testRunner.testCase.testSuite.project.getPropertyValue("ProduceReports")).toLowerCase() == "y")
    {
        //The path and file to persist results
       
		log.info ("  >>  I am here");


        def resultDir2 = new File("C:/Users/raghav/Desktop/ToSend/Nov-14/SoapUIResults");
        if(!resultDir2.exists()) {
            resultDir2.mkdirs();
        }
        def currentDate = new Date().format("dd-MM-yyyy hh-mm-ss");
        def resultsFile2 = new File(resultDir2, currentDate+"_Result.csv");

        //If the file does not already exist, we want to create it, otherwise we want to append
        if(!resultsFile2.exists()) {
            resultsFile2.createNewFile();
            //Header values
              
            //resultsFile2.write('"Name","Class","TimeStamp","TimeTaken","Size","Message","Result"');
             resultsFile2.write('"Name","TimeStamp","TimeTaken [ms]","Size [bytes]","Message","Result"');
        }


def tsResults = testRunner.getResults()
for(i in tsResults){
	String stepName = i.getTestStep().getName();
	//String stepClass = i.getClass();
	String stepTimeStamp = new Date(i.getTimeStamp());
	String stepTimeTaken = i.getTimeTaken();
	String stepSize = i.getSize();
	
	
	//String stepMessage = i.getMessages();
	String stepMessage = "";
            def msgCount = 0;
            for(message in i.getMessages()) {
                msgCount++;
                if(msgCount &lt; 10) {
                    //resultsFile.append(message + ';\n');
					stepMessage=stepMessage+message+" | ";
                }
            }
	
	String stepResult = i.getStatus();
 
	//String resultToLog = stepName+","+stepClass+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	String resultToLog = stepName+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	
	resultsFile2.append('\n');    //Newline
	resultsFile2.append (resultToLog);
}
    
} 
}catch(e) {
    log.error("An error occurred: " + e.toString());
}
}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="String Builder" disabled="true" id="6fe5ee0c-c219-4496-84fd-f76e6bb2dce9"><con:settings/><con:config><script><![CDATA[StringBuilder sb = new StringBuilder();
sb.append("abcd");
sb.append("<table><tr><td>your content here</td></tr></table>");
log.info (sb);]]></script></con:config></con:testStep><con:testStep type="groovy" name="GetTestCaseResult" disabled="true" id="7faed0de-a29d-4a05-9c5c-626fc22a690a"><con:settings/><con:config><script>/*
def result = testRunner.getStatus();
log.info ("   >>>>   result : "+result);
def resultStep = testRunner.testCase.getTestStepByName("Results");
resultStep.setPropertyValue("TCResult",""+result);
*/

/*project = testRunner.testCase.testSuite.project ;
 tcase = project.testSuites["TestSuite"].testCases["Copy of DraftSuccessScenario"] ; 
 def TCresult1 =  tcase.getStatus();
 */



 def result = testRunner.getStatus().toString()
if (result == "FINISHED") {
  log.info("Test passed")
} else {
  log.info("Test not passed")
}</script></con:config></con:testStep><con:testStep type="groovy" name="LogResults" disabled="true" id="6c29bd7e-f791-4b06-9695-8794d598fcf4"><con:settings/><con:config><script>//Get Results
log.info ("abcd");
tsResults = testRunner.getResults()
log.info ("  >>  tsResults : "+tsResults);
for(i in tsResults){
 log.info(i.getTestStep().getName() + " :")
 log.info("   Class: " + i.getClass())
 tStamp = new Date(i.getTimeStamp())
 log.info("   TimeStamp: " + tStamp)
 log.info("   TimeTaken: " + i.getTimeTaken())
 log.info("   Size: " + i.getSize())
 log.info("   Status: " + i.getStatus())
 log.info("   Messages: " + i.getMessages())
}</script></con:config></con:testStep><con:testStep type="groovy" name="SendResults2" disabled="true" id="4234f195-86d7-4448-83b9-94bd09adb7bd"><con:settings/><con:config><script/></con:config></con:testStep><con:testStep type="properties" name="Results" disabled="true" id="2a01ca8c-271e-4139-8ae7-c753ffc88b8f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TCResult</con:name><con:value>RUNNING</con:value></con:property><con:property><con:name>HTML</con:name><con:value><![CDATA[<h3>Note: This is auto-generated email. Do not reply.</h3><hr><hr><br><table border="2" style="width:80%"><tr><td bgcolor="#ccddff">Environment</td><th bgcolor="#e5eeff" align="left">QA-CFT</th></tr><tr><td bgcolor="#ccddff">Endpoint</td><th bgcolor="#e5eeff" align="left">http://qaws.cftpay.com:8080/wsrv/npn.wsdl</th></tr><tr><td bgcolor="#ccddff">SubscriberId</td><th bgcolor="#e5eeff" align="left">200001</th></tr><tr><td bgcolor="#ccddff">TestCase Executed</td><th bgcolor="#e5eeff" align="left">DraftSuccessScenario3</th></tr><tr><td bgcolor="#ccddff">Executed by</td><th bgcolor="#e5eeff" align="left">CI Automation</th></tr></table>;<table border="2" style="width:80%"><tr><th bgcolor="#e5eeff">Name</th><th bgcolor="#e5eeff">TimeTaken [ms]</th><th bgcolor="#e5eeff">Size [bytes]</th><th bgcolor="#e5eeff">Message</th><th bgcolor="#e5eeff">Result</th></tr><tr><td bgcolor="#F7FE2E">UIServerStatus</td><td>1361</td><td  align="center">0</td><td>Script-result: Pass- http://qa.cftpay.com/ : | 200 | </td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F7FE2E">APIServerStatus</td><td>1569</td><td  align="center">0</td><td>Script-result: Pass- http://qaws.cftpay.com:8080/wsrv/npn.wsdl : | 405 | </td><td align="center" bgcolor="#00FF00">OK</td></tr><tr><td bgcolor="#F5DA81">CreateClient_TPB</td><td>1731</td><td  align="center">968</td><td></td><td align="center" bgcolor="#00FF00">OK</td></tr></table><br><hr>End Of Report<hr><hr><br>]]></con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="CreateClient_WFB" id="62beb544-952b-4752-a648-e06063d4939b" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClient</con:operation><con:request name="CreateClient_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="18d5e90d-6870-4130-97c8-f95dead90278" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            	<wsse:Username>${#Project#global_username}</wsse:Username>
            	<wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientRequest>
            <mes:clientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:channelId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:productId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:firstname>CFT_FDR_WFB</mes:firstname>
            <mes:lastname>Automation</mes:lastname>
            <mes:ssn>232-36-4545</mes:ssn>
            <mes:dob>
                <typ:date format="MM-dd-yyyy" value="09-09-1980"/>
            </mes:dob>
            <mes:address1>Finxera Headquarters</mes:address1>
            <mes:address2>1900 South Norfolk Street</mes:address2>
            <mes:city>Jupiter</mes:city>
            <mes:state>FL</mes:state>
            <mes:zip>94403</mes:zip>
            <mes:phone>9874563210</mes:phone>
            <mes:mobile>8996655000</mes:mobile>
            <mes:email xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:draftAmount>100</mes:draftAmount>
        </mes:CreateClientRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5b1cba04-966f-4b54-ab63-4bf2bb398213"/><con:assertion type="SOAP Response" name="SOAP Response1" id="45796fc5-1ad7-4bc5-aaf1-32f6688af019"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="8dec95da-4bd2-48dc-9c70-9d840ae05f12"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def node1 = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def node2 = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def node3 = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

log.info (" >> >> "+node1.getData())
assert node1.getData() == '1'
assert node2 != null
assert node3 != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" name="SOAP Response1" id="f2455ddc-2bc7-4b4a-9855-f35a97dd446a"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion1" id="ecfff8e1-87b3-43d7-a71f-89b69a3b9091"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def enrollmentId = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert enrollmentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClient_BOI" id="361184a7-ca3d-4e6e-9162-d4f6e49231a2" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClient</con:operation><con:request name="CreateClient_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="18d5e90d-6870-4130-97c8-f95dead90278" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
            	<wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
       	 </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientRequest>
            <mes:clientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:channelId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:productId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:firstname>CFT_FDR_BOI</mes:firstname>
            <mes:lastname>Automation</mes:lastname>
            <mes:ssn>232-36-4544</mes:ssn>
            <mes:dob>
                <typ:date format="MM-dd-yyyy" value="09-09-1980"/>
            </mes:dob>
            <mes:address1>Finxera Headquarters</mes:address1>
            <mes:address2>1900 South Norfolk Street</mes:address2>
            <mes:city>Clio</mes:city>
            <mes:state>AL</mes:state>
            <mes:zip>94403</mes:zip>
            <mes:phone>9874563210</mes:phone>
            <mes:mobile>8996655000</mes:mobile>
            <mes:email xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:draftAmount>100</mes:draftAmount>
        </mes:CreateClientRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5b1cba04-966f-4b54-ab63-4bf2bb398213"/><con:assertion type="SOAP Response" name="SOAP Response1" id="2f17e1d0-40db-45aa-acd9-b1a17d407496"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="a4119d0a-7888-4b44-ba9b-dddc1d538eca"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def node1 = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def node2 = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def node3 = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

log.info (" >> >> "+node1.getData())
assert node1.getData() == '1'
assert node2 != null
assert node3 != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" name="SOAP Response1" id="52a90438-d0b7-4cf0-a18b-bdac383e5cb7"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion1" id="a27ee8f6-b04b-49e2-9985-d560a0663645"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientResponse[1]/*:clientId[1]/text()" )
def enrollmentId = holder.getDomNode( "//*:CreateClientResponse[1]/*:enrollmentId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert enrollmentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClientBankAccount_TPB" id="1f17387d-08bd-49d8-a35a-4e51efcb36f0" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClientBankAccount</con:operation><con:request name="CreateClientBankAccount_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="253b5085-e099-40e3-ad27-918bd588eae1" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create client Bank account +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientBankAccountRequest>
            <!--You may enter the following 10 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:routingNumber>051000017</mes:routingNumber>
            <mes:accountType>CHECKING</mes:accountType>
            <mes:accountNumber>54364434</mes:accountNumber>
            <mes:holdersName>AutoAccount</mes:holdersName>
            <!--Optional:-->
        </mes:CreateClientBankAccountRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="GroovyScriptAssertion" id="dc66fa8c-a323-48dd-afcc-ba87cf4ebc82" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientId[1]/text()" )
def clientBankAccountId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientBankAccountId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert clientBankAccountId != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" id="b05b5e9a-c6c7-4088-bf18-1068907a473d" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientBankAccountRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClientBankAccount_WFB" id="0dee0fdc-c691-4363-a373-70e98c8feae8" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClientBankAccount</con:operation><con:request name="CreateClientBankAccount_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="253b5085-e099-40e3-ad27-918bd588eae1" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create client Bank account +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientBankAccountRequest>
            <!--You may enter the following 10 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:routingNumber>051000017</mes:routingNumber>
            <mes:accountType>CHECKING</mes:accountType>
            <mes:accountNumber>54364434</mes:accountNumber>
            <mes:holdersName>AutoAccount</mes:holdersName>
            <!--Optional:-->
        </mes:CreateClientBankAccountRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f904f6d-c595-43e8-b788-151c067931fb"/><con:assertion type="Simple Contains" id="d6cc1093-8684-4c0b-9e1c-9872241599fe" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="84e771e7-604c-4596-ac34-7f9f96374efc"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientId[1]/text()" )
def clientBankAccountId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientBankAccountId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert clientBankAccountId != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" name="SOAP Response1" id="0c027a37-6367-4f0b-bddf-ec486e33ecc2"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientBankAccountRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateClientBankAccount_BOI" id="4a14e92f-31db-45ad-9a18-4f920b54b973" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateClientBankAccount</con:operation><con:request name="CreateClientBankAccount_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="253b5085-e099-40e3-ad27-918bd588eae1" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create client Bank account +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateClientBankAccountRequest>
            <!--You may enter the following 10 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:routingNumber>051000017</mes:routingNumber>
            <mes:accountType>CHECKING</mes:accountType>
            <mes:accountNumber>54364434</mes:accountNumber>
            <mes:holdersName>AutoAccount</mes:holdersName>
            <!--Optional:-->
        </mes:CreateClientBankAccountRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f904f6d-c595-43e8-b788-151c067931fb"/><con:assertion type="Simple Contains" id="d6cc1093-8684-4c0b-9e1c-9872241599fe" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="3bf4b402-0b5d-4e59-b05d-668537629ceb"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:commandStatus[1]/text()")
def clientId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientId[1]/text()" )
def clientBankAccountId = holder.getDomNode( "//*:CreateClientBankAccountResponse[1]/*:clientBankAccountId[1]/text()" )

assert commandStatus.getData() == '1'
assert clientId != null
assert clientBankAccountId != null
</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" name="SOAP Response1" id="e02f32d4-884d-4025-a4db-3a33399ff84b"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateClientBankAccountRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateDraftSchedule_TPB" id="86942970-ec45-42a2-82e5-24fe535d2e87" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateDraftSchedule</con:operation><con:request name="CreateDraftSchedule_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="b45939bc-67df-4797-9e67-eb91f5cf6946" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create draft schedule +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateDraftScheduleRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:clientBankAccountId>${CreateClientBankAccount_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientBankAccountResponse[1]/ns4:clientBankAccountId[1]}</mes:clientBankAccountId>
            <mes:amount>100</mes:amount>
            <mes:occurs>21</mes:occurs>
            <mes:startDate>
                <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
            </mes:startDate>
            <mes:type>MONTHLY</mes:type>
        </mes:CreateDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="177becab-36f5-46db-b0f2-aefbd008283f"/><con:assertion type="XPath Match" name="Check for existance of [ns3:scheduleId]" id="eb3e50d7-8cad-46ab-9d81-c6b4fd671ba8"><con:configuration><path>declare namespace ns3='http://nationalpayment.net/ws/schemas/messages';
exists( //ns3:CreateDraftScheduleResponse/ns3:scheduleList/ns3:schedule/ns3:scheduleId)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e34bba25-c3df-4532-b338-e803ce54084a" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="40362eb6-899e-4dd6-9cac-8b5da954560f" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:commandStatus[1]/text()")

def schedule1 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[1]/*:scheduleId[1]/text()" )
def schedule2 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[2]/*:scheduleId[1]/text()" )
def schedule3 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[3]/*:scheduleId[1]/text()" )
def schedule4 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[4]/*:scheduleId[1]/text()" )
def schedule5 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[5]/*:scheduleId[1]/text()" )
def schedule6 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[6]/*:scheduleId[1]/text()" )
def schedule7 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[7]/*:scheduleId[1]/text()" )
def schedule8 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[8]/*:scheduleId[1]/text()" )
def schedule9 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[9]/*:scheduleId[1]/text()" )
def schedule10 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[10]/*:scheduleId[1]/text()" )
def schedule11 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[11]/*:scheduleId[1]/text()" )
def schedule12 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[12]/*:scheduleId[1]/text()" )
def schedule13 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[13]/*:scheduleId[1]/text()" )
def schedule14 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[14]/*:scheduleId[1]/text()" )
def schedule15 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[15]/*:scheduleId[1]/text()" )
def schedule16 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[16]/*:scheduleId[1]/text()" )
def schedule17 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[17]/*:scheduleId[1]/text()" )
def schedule18 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[18]/*:scheduleId[1]/text()" )
def schedule19 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[19]/*:scheduleId[1]/text()" )
def schedule20 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[20]/*:scheduleId[1]/text()" )
def schedule21 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[21]/*:scheduleId[1]/text()" )

assert commandStatus.getData() == '1'
assert schedule1 != null
assert schedule2 != null
assert schedule3 != null
assert schedule4 != null
assert schedule5 != null
assert schedule6 != null
assert schedule7 != null
assert schedule8 != null
assert schedule9 != null
assert schedule10 != null
assert schedule11 != null
assert schedule12 != null
assert schedule13 != null
assert schedule14 != null
assert schedule15 != null
assert schedule16 != null
assert schedule17 != null
assert schedule18 != null
assert schedule19 != null
assert schedule20!= null
assert schedule21 != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateDraftSchedule_WFB" id="2e1eca06-8913-40f5-bc33-34cf3ef24986" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateDraftSchedule</con:operation><con:request name="CreateDraftSchedule_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="b45939bc-67df-4797-9e67-eb91f5cf6946" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create draft schedule +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateDraftScheduleRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:clientBankAccountId>${CreateClientBankAccount_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientBankAccountResponse[1]/ns4:clientBankAccountId[1]}</mes:clientBankAccountId>
            <mes:amount>100</mes:amount>
            <mes:occurs>21</mes:occurs>
            <mes:startDate>
                <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
            </mes:startDate>
            <mes:type>MONTHLY</mes:type>
        </mes:CreateDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="177becab-36f5-46db-b0f2-aefbd008283f"/><con:assertion type="XPath Match" name="Check for existance of [ns3:scheduleId]" id="eb3e50d7-8cad-46ab-9d81-c6b4fd671ba8"><con:configuration><path>declare namespace ns3='http://nationalpayment.net/ws/schemas/messages';
exists( //ns3:CreateDraftScheduleResponse/ns3:scheduleList/ns3:schedule/ns3:scheduleId)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e34bba25-c3df-4532-b338-e803ce54084a" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="d40550f4-f5b3-4dc4-acc8-9297022a35ef"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:commandStatus[1]/text()")

def schedule1 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[1]/*:scheduleId[1]/text()" )
def schedule2 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[2]/*:scheduleId[1]/text()" )
def schedule3 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[3]/*:scheduleId[1]/text()" )
def schedule4 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[4]/*:scheduleId[1]/text()" )
def schedule5 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[5]/*:scheduleId[1]/text()" )
def schedule6 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[6]/*:scheduleId[1]/text()" )
def schedule7 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[7]/*:scheduleId[1]/text()" )
def schedule8 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[8]/*:scheduleId[1]/text()" )
def schedule9 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[9]/*:scheduleId[1]/text()" )
def schedule10 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[10]/*:scheduleId[1]/text()" )
def schedule11 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[11]/*:scheduleId[1]/text()" )
def schedule12 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[12]/*:scheduleId[1]/text()" )
def schedule13 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[13]/*:scheduleId[1]/text()" )
def schedule14 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[14]/*:scheduleId[1]/text()" )
def schedule15 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[15]/*:scheduleId[1]/text()" )
def schedule16 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[16]/*:scheduleId[1]/text()" )
def schedule17 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[17]/*:scheduleId[1]/text()" )
def schedule18 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[18]/*:scheduleId[1]/text()" )
def schedule19 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[19]/*:scheduleId[1]/text()" )
def schedule20 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[20]/*:scheduleId[1]/text()" )
def schedule21 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[21]/*:scheduleId[1]/text()" )

assert commandStatus.getData() == '1'
assert schedule1 != null
assert schedule2 != null
assert schedule3 != null
assert schedule4 != null
assert schedule5 != null
assert schedule6 != null
assert schedule7 != null
assert schedule8 != null
assert schedule9 != null
assert schedule10 != null
assert schedule11 != null
assert schedule12 != null
assert schedule13 != null
assert schedule14 != null
assert schedule15 != null
assert schedule16 != null
assert schedule17 != null
assert schedule18 != null
assert schedule19 != null
assert schedule20!= null
assert schedule21 != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CreateDraftSchedule_BOI" id="e81ca90b-5812-4112-872d-424adf9e698f" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateDraftSchedule</con:operation><con:request name="CreateDraftSchedule_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="b45939bc-67df-4797-9e67-eb91f5cf6946" defaultOutgoingWss="" defaultIncomingWss=""><con:description>Create draft schedule +ve tc</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateDraftScheduleRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:clientBankAccountId>${CreateClientBankAccount_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientBankAccountResponse[1]/ns4:clientBankAccountId[1]}</mes:clientBankAccountId>
            <mes:amount>100</mes:amount>
            <mes:occurs>21</mes:occurs>
            <mes:startDate>
                <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
            </mes:startDate>
            <mes:type>MONTHLY</mes:type>
        </mes:CreateDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="177becab-36f5-46db-b0f2-aefbd008283f"/><con:assertion type="XPath Match" name="Check for existance of [ns3:scheduleId]" id="eb3e50d7-8cad-46ab-9d81-c6b4fd671ba8"><con:configuration><path>declare namespace ns3='http://nationalpayment.net/ws/schemas/messages';
exists( //ns3:CreateDraftScheduleResponse/ns3:scheduleList/ns3:schedule/ns3:scheduleId)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e34bba25-c3df-4532-b338-e803ce54084a" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="6a7bcdd3-5662-4b99-9196-03adabec8dce"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:commandStatus[1]/text()")

def schedule1 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[1]/*:scheduleId[1]/text()" )
def schedule2 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[2]/*:scheduleId[1]/text()" )
def schedule3 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[3]/*:scheduleId[1]/text()" )
def schedule4 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[4]/*:scheduleId[1]/text()" )
def schedule5 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[5]/*:scheduleId[1]/text()" )
def schedule6 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[6]/*:scheduleId[1]/text()" )
def schedule7 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[7]/*:scheduleId[1]/text()" )
def schedule8 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[8]/*:scheduleId[1]/text()" )
def schedule9 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[9]/*:scheduleId[1]/text()" )
def schedule10 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[10]/*:scheduleId[1]/text()" )
def schedule11 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[11]/*:scheduleId[1]/text()" )
def schedule12 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[12]/*:scheduleId[1]/text()" )
def schedule13 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[13]/*:scheduleId[1]/text()" )
def schedule14 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[14]/*:scheduleId[1]/text()" )
def schedule15 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[15]/*:scheduleId[1]/text()" )
def schedule16 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[16]/*:scheduleId[1]/text()" )
def schedule17 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[17]/*:scheduleId[1]/text()" )
def schedule18 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[18]/*:scheduleId[1]/text()" )
def schedule19 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[19]/*:scheduleId[1]/text()" )
def schedule20 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[20]/*:scheduleId[1]/text()" )
def schedule21 = holder.getDomNode( "//*:CreateDraftScheduleResponse[1]/*:scheduleList[1]/*:schedule[21]/*:scheduleId[1]/text()" )

assert commandStatus.getData() == '1'
assert schedule1 != null
assert schedule2 != null
assert schedule3 != null
assert schedule4 != null
assert schedule5 != null
assert schedule6 != null
assert schedule7 != null
assert schedule8 != null
assert schedule9 != null
assert schedule10 != null
assert schedule11 != null
assert schedule12 != null
assert schedule13 != null
assert schedule14 != null
assert schedule15 != null
assert schedule16 != null
assert schedule17 != null
assert schedule18 != null
assert schedule19 != null
assert schedule20!= null
assert schedule21 != null

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="52b1ce80-e1fd-495c-b4bd-c4dc02d9eaa5" name="GetDraftScheduleList_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftScheduleList</con:operation><con:request name="GetDraftScheduleList_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="311078f8-03f6-4621-95f9-30e4e34a935b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleListRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:order>scheduleDate</mes:order>
            <mes:ascending>false</mes:ascending>
            <mes:pageNumber>1</mes:pageNumber>
            <mes:numberOfRecordsPerPage>5</mes:numberOfRecordsPerPage>
        </mes:GetDraftScheduleListRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="4fa0357b-9cca-4f29-b0ba-e9a9db3e976a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e3329fbe-4933-47ad-a3e7-0b50c3a22fcb" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2fd84260-87e3-4517-a6d9-fb7396f582d6" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="dbcd0c8f-0aab-453e-9171-1dc0600d0daa" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def totalCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" )
def returnedCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:returnedCount[1]/text()" )
def pageNumber = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:pageNumber[1]/text()" )

log.info ("  >>  "+holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" ).getData());
assert totalCount.getData() == "21";
assert returnedCount.getData() == "5";
assert pageNumber.getData() == "1";
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleListRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="08ef8f4b-bcc3-4ddd-a0b3-c171eda621b4" name="GetDraftScheduleList_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftScheduleList</con:operation><con:request name="GetDraftScheduleList_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="311078f8-03f6-4621-95f9-30e4e34a935b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleListRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:order>scheduleDate</mes:order>
            <mes:ascending>false</mes:ascending>
            <mes:pageNumber>1</mes:pageNumber>
            <mes:numberOfRecordsPerPage>5</mes:numberOfRecordsPerPage>
        </mes:GetDraftScheduleListRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="4fa0357b-9cca-4f29-b0ba-e9a9db3e976a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e3329fbe-4933-47ad-a3e7-0b50c3a22fcb" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2fd84260-87e3-4517-a6d9-fb7396f582d6" name="Not SOAP Fault"/><con:assertion type="SOAP Response" name="SOAP Response1" id="963db3c8-3783-4b77-9ca9-212d41238fc1"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="1baaf347-bd84-44fa-9f51-110f878089c4"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def totalCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" )
def returnedCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:returnedCount[1]/text()" )
def pageNumber = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:pageNumber[1]/text()" )

log.info ("  >>  "+holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" ).getData());
assert totalCount.getData() == "21";
assert returnedCount.getData() == "5";
assert pageNumber.getData() == "1";
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleListRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="a21ca526-33f9-4081-a90a-fd8685aa41e3" name="GetDraftScheduleList_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftScheduleList</con:operation><con:request name="GetDraftScheduleList_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="311078f8-03f6-4621-95f9-30e4e34a935b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleListRequest>
            <!--You may enter the following 14 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:order>scheduleDate</mes:order>
            <mes:ascending>false</mes:ascending>
            <mes:pageNumber>1</mes:pageNumber>
            <mes:numberOfRecordsPerPage>5</mes:numberOfRecordsPerPage>
        </mes:GetDraftScheduleListRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="4fa0357b-9cca-4f29-b0ba-e9a9db3e976a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e3329fbe-4933-47ad-a3e7-0b50c3a22fcb" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2fd84260-87e3-4517-a6d9-fb7396f582d6" name="Not SOAP Fault"/><con:assertion type="SOAP Response" name="SOAP Response1" id="64a8b78c-fde8-4d29-a4f9-4edb82d6bfcb"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="2e7a32fd-fc09-4679-ae58-3c45ba678aee"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def totalCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" )
def returnedCount = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:returnedCount[1]/text()" )
def pageNumber = holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:pageNumber[1]/text()" )

log.info ("  >>  "+holder.getDomNode( "//*:GetDraftScheduleListResponse[1]/*:totalCount[1]/text()" ).getData());
assert totalCount.getData() == "21";
assert returnedCount.getData() == "5";
assert pageNumber.getData() == "1";
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleListRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="95abf5ab-4ad4-4b1d-ad47-f616b0a3e638" name="CreateEnrollmentDocument_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateEnrollmentDocument</con:operation><con:request name="CreateEnrollmentDocument_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a2d6acb3-7045-4a9a-bcfb-42997ae5c540"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateEnrollmentDocumentRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:note>ref</mes:note>
            <mes:documentType>type</mes:documentType>
            <mes:base64EncodedContent>JVBERi0xLjQKMyAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQW5ub3RzIFs8PC9UeXBlIC9Bbm5vdCAvU3VidHlwZSAvTGluayAvUmVjdCBbNDE2LjkzIDM2My44NSA0NjAuNjEgMzU3Ljg1XSAvQm9yZGVyIFswIDAgMF0gL0EgPDwvUyAvVVJJIC9VUkkgKGh0dHA6Ly93d3cuY2Z0cGF5LmNvbSk+Pj4+PDwvVHlwZSAvQW5ub3QgL1N1YnR5cGUgL0xpbmsgL1JlY3QgWzE0My40OSAzMjEuMzMgMjE0LjE3IDMxNS4zM10gL0JvcmRlciBbMCAwIDBdIC9BIDw8L1MgL1VSSSAvVVJJIChodHRwOi8vd3d3LmZpbnhlcmEuY29tL2xpY2Vuc2luZyk+Pj4+XQovQ29udGVudHMgNCAwIFI+PgplbmRvYmoKNCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMjIzOT4+CnN0cmVhbQp4nI1Y23LayhJ93vmKfkjtSqrwWPdL3jDgCqdsICAnlaq8DGIAHQuJPZJM+JHzvadnRjeETDapGCFmVq9efZkWBvzng0ZsF04fHgK4f9TBIZoGwRYmgbijmy5xDfAMm5g2BBv4tDqyMKIxLAp+TDMGwzBMiySHWXFYM\/4FLNPQxEvH\/5Zj+7DKac4ODJcsGI\/SzRd4pjzcgz4AQ9NtuCs\/m9UNWNAdA\/0e7M8Q\/FcQ+Qe\/0AQv8Q8Z4ZXhmcRywHUdYlsQHuB+qsM4hW8fXI2YGriOSxwDTN8hHtrQiKsDZ\/AAwivXJLoJrm0TX5NOLTjNaJLvYfS9stkss1xiqWXPLInT6wWmRzxf4VD+CnIVyMvRsLX6\/tHoqGvaDnG0NpHxdDkZBTB8eoLhaDR\/mQUwnX17mS6nkxUE8y\/Qwqt2WxaxHbl7xNMs4yndZPAYJTSRgQpYuE\/SON1FLOvbbiIntX0xh4f0Nxi2bfp9Kw2X2GUS0ASjlrN0gC7e+ZalGT3rdZ9oav1inyYMZin8DzzPuzMt786yLbPaU4ZMl9tuhkxzxV1J4eX5ebj8CfNHVCqYfp8GP+FC7KtUNiyRyo5vioyRrJaT79P5ywpWwTCYPE9QbHgYPg1nownMZ6AZ94bXgqwAPIMYZbQmi\/lqGqzuR8vJGN\/bGhg68fT24o+GSOEePPTeUwH4MQ2+jpfDH8On1f3q5SFYCs\/ms0tcm2CNtDZ9NPphbZ\/YhpKqdq\/tnXlv6j2Em20fda+FrGLk2BYxrHdidJ3gKmqO6RPHk5jo0mylvGrCFnydrmAxWU7n4\/cjWNo3LYLJaSrzukV0V9hfQWMMBbJViozR7QpQx8wRuqn9uifbSQdA13zie22ENt3xZDVaThfiugI1vDaoY4tQdzANr4v5XtKYtiF6bAlmoWR6F8zERqFfgLUypsKxNJ34t0lZGqaI38apmk2ZIJ2gY+Yaxk3RdZ2YpkTCvGqaQaW6AritegOxZGHBeZTsYMzwjIly2PL0AKM9C1\/xbld9Bd7rqEhq3WljqyoE+eoqr4D6lccw6nob6BKiEv0GF8vELv9HLqXimiNa5w3Fbd8VnpWKm1pXcQVwU\/EWxHD0FQ+sszyl8xRCzjZRnnLAPr\/hFIbHY8x22O+70isr\/dJj0dta20i\/6AqiX3QXP15AyF7Xr\/wNKqXybRzZ2vqUt9Gm59YNrlPM+BHDa6MV3+ueQstJ8LKcTcYwxWYLj5PJqoPsaMTB1mPpxDUvkD8YOvpl1ivEOetc2cYpw3fBtmWbls1pHgyf4HG+7GugUn7\/NqSJxGzzGvLnZLi8C+Z37f5Z+mA54nTo8QHhUF5MbBvnM8dsob2vS+V2CXrNsfbi\/RVNQeiu6GnC7mweTL7A5Dc9RDh15Psog6weQkPK2baI4zNgbiPIMeU5Xp4h4pztipjyKMdJiXQcx5JxWmmhm6K51hQM\/IzMLJTAVxPP9HkxXwZDbKnNHIeheh62z4+avOU5Iv\/lxgQp4lydboFxnvIMsA7\/KViWR2mSAdB1WuRwTgveODUAFrMw52kShZBzmmRbxsU+eU1DtTVNrrbluO8oZ7MiA4q1v2eQyEEejtiAc7YRu67pup7ohoKu2IHdGYVFwh2pkcAJ1azA\/zidDqA9gQ7gYsocgBwzgaKFFEnhO3qDWiUDiLbyGs0nrz1sHV\/MlYLtpf+CIGchi445IPETurET90q4hKH7hxSDHCXblB+okLHUn7ZkTqRsfagEfjA4FFkOe0a5OsUkcgoxruZ9XHXR8pSy6D7y3tAzyrcVy09oRlhQzjJ4nC5XQdtyAqd9hM9S4kuZPUjm2gY2W1f1wb\/gL9AJBiGORZCkPAk9MFkbtHyyKxPi1yfUBQvl12fSA6kTo4E0CJ7cWcijNbugIj\/UwgkvsBihSLIC36SwA2mZ\/T7GNJIxDmNUThRrHW508Syv1yyO2BtGR0YPv6jNVCuaCF4zNg3i2jVj8WpFucdDnKqNZr3ZiCZ82qQxNg6gBymYrAQMVZHhs7KoIUmsBxP7n1\/OcQxOEeJFyZuodHHWqmiE6UFqkUth5JowxU4VqqalXD5iYh3z+ExguhVJktNXpvyWSYQJtS4y7IVZprIJj\/hNKqt1IJYrVHnmK6NV5K8Z4+BYPgtvy3CWPjf1h7GIylgMsFQFBfW1NLOnbyonCtXjxOUBG9AZNoUc+WSKRAcZVuFHJjVOlRAMZREEG5nawVKt2vQs0YSrVu3ZRLO6h4Xp1I+y2Ip+M04HME1CgvQyaVXkXhbtElVWWyXLez99DHecqQKUFf4o1s7pawYPFPX4GwIuWsAIHcCQDZpAoolC1BpeXilt2vXDM2fZEft3tI5ieTQJPh0bRbJhKhxXnAhA6aJ0jm7wUIwy7CaYl3\/+veDXp+Y3GDFKauVfXf7lOzle4XO7f8H4dDqRcJsf6Zlg2EqEZp1HLJz4THGg3smQYXS28K02oVDF5KK3UX99rmTqrq0k06qgYiNcsz2Ntz1adeJBYIEtBqOZpDkbCA15WRFrcQ9CrKCdOAJUZjJ+yOqEuE6Asigyxt+isPm95R3CliFyUxDGCn6LNhgSzHSEJjDM4Eh5c6oqGgNld1M+FlV1igXWcbJyIIwxUTcy5QSvNY0xysirasJcmaTYKk+Qlfl9m7RZ\/35yLOugptHOrfW5zrtq8ChDIho77uAbQQWZ5vtLad9L4xpPOnegifiZUALfJoxPuZoaSCsHu8TXhdRQFKJoPRns03ijoLdYWpkiuWVYZFRMjpE8sTZVHFIub+VRXshJC7kOEarKkgoCb3F2EOfa43g6qkDIH9hj0diK\/SMmV3ccwQ7LWA\/CdZXqWHCW38YTVbpVkooyvY8xY7HN1A\/YzRZb1C12V8e7UbCGGstbBvA4wlBv8FiRTFlSZqM4OqQyeIxhGmTy+MYGfzxX4V\/w6I2GZ1ikSEoc\/lmKgRNHqYzEvwi65lVBf6drk2b\/\/wGfn0ckCmVuZHN0cmVhbQplbmRvYmoKNSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgNiAwIFI+PgplbmRvYmoKNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk5Pj4Kc3RyZWFtCnicNY7dTsMwDIXv8xTnEiRIbWdp1t0N8SNNgDotL9BlodtE6Sit9vp4iFk6sj\/bso9gZcj6gLN5iCieGaUlQvzAUzTfIAVCC52xCzYI5uKt84g73GxOOR2aT9TTcOp\/MpYp9dPXiPep2+ZhgZkTugSrZqWvsBmbMXdZV+o8HPrdAm\/NkPbgOwixx\/0\/u2sDddNmSAF\/i3hUS1hfTGEFxlnzUfWiav+shqoMCnQtZW6d\/oUw2cqxIHWmiPUr47HXQ2vzC3XrPWwKZW5kc3RyZWFtCmVuZG9iago3IDAgb2JqCjw8L1R5cGUgL1BhZ2UKL1BhcmVudCAxIDAgUgovUmVzb3VyY2VzIDIgMCBSCi9Db250ZW50cyA4IDAgUj4+CmVuZG9iago4IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11HNJQ3pg2JqENFZEfKCEU0LpC14rfn0Fg6co+tmVfxlKRdh5X9RaQLQxyTYSwx0dQF5AAoYbMjPXaM6bstHUIO4w25xSP1Q\/KoTu3fwnzGNvht8dqaLapm2FimW5hRJPcFdj0VZ+aJCtl6o7tbobvqosHmBcwGYfXB9tnA2VVJ9gMboxwEktY30xhCYOr5JPoU1Tfrfoi9wL0LHmqrfwFG9KFNYzYqCyUX4z3Vg6t1T92TT1uCmVuZHN0cmVhbQplbmRvYmoKOSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgMTAgMCBSPj4KZW5kb2JqCjEwIDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11kqahvIHYkNCGipofKCEUEKWstOL3ZxBYurKPbdlXYyVIWoe7mHsk3wqZJILf48uLPxADoQbPlHHSaUy0lcbC7zAqrzEcqzOKobu2t4hZCO1w6bEemm3spkiNpkcoVprZHGVf9bGJvFLE7tjupvitunCA+oAmZfH5YvNuoKjqiDSBHcOf2BI2D1NYQeHO+cRasuqnVZdnjoHepZ5Iw3+hFcncKI3QiMQXPwaLlg9txD92rz1wCmVuZHN0cmVhbQplbmRvYmoKMTEgMCBvYmoKPDwvVHlwZSAvUGFnZQovUGFyZW50IDEgMCBSCi9SZXNvdXJjZXMgMiAwIFIKL0NvbnRlbnRzIDEyIDAgUj4+CmVuZG9iagoxMiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk4Pj4Kc3RyZWFtCnicNY7RbsIwDEXf8xX3EaQtdZKmobyB2JDQhoqaHyghFBClrLTi92cQWLqyj23ZV2MlSFqHu5h7JN8KmSSC3+PLiz8QA6EGz5Rx0mlMtJXGwu8wKq8xHKsziqG7treIWQjtcOmxHppt7KZIjaZHKFaa2RxlX\/WxibxSxO7Y7qb4rbpwgPqAJmXx+WLzbqCo6gibwI7hT2wJm4cprKBw53xiLVn106rLM8dA71JPpOG\/0IpkbpRGaETii58Ui5YPbcQ\/dxE9cgplbmRzdHJlYW0KZW5kb2JqCjEgMCBvYmoKPDwvVHlwZSAvUGFnZXMKL0tpZHMgWzMgMCBSIDUgMCBSIDcgMCBSIDkgMCBSIDExIDAgUiBdCi9Db3VudCA1Ci9NZWRpYUJveCBbMCAwIDU5NS4yOCA4NDEuODldCj4+CmVuZG9iagoxMyAwIG9iago8PC9UeXBlIC9Gb250Ci9CYXNlRm9udCAvSGVsdmV0aWNhCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTQgMCBvYmoKPDwvVHlwZSAvRm9udAovQmFzZUZvbnQgL0hlbHZldGljYS1Cb2xkCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTUgMCBvYmoKPDwvVHlwZSAvWE9iamVjdAovU3VidHlwZSAvSW1hZ2UKL1dpZHRoIDIwMAovSGVpZ2h0IDM3Ci9Db2xvclNwYWNlIFsvSW5kZXhlZCAvRGV2aWNlUkdCIDI1NCAxNiAwIFJdCi9CaXRzUGVyQ29tcG9uZW50IDgKL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0RlY29kZVBhcm1zIDw8L1ByZWRpY3RvciAxNSAvQ29sb3JzIDEgL0JpdHNQZXJDb21wb25lbnQgOCAvQ29sdW1ucyAyMDA+PgovTWFzayBbMCAwIF0KL0xlbmd0aCAxNjE2Pj4Kc3RyZWFtCliF7VcHeFRFEH4bOyiWWECsKPYuYldExYq994IdQknIu9frUiI19CYSCR3RxCASBDEixWCABEKNEA64AEmAnEAE7mNm37tLuZCEzxT9vvu\/u2\/fzsy+m392ZnaP4yKIIIII\/q\/I7XSw90q\/P7Ww68w1je3Lv8ENee+8Pvrtdu0e2z7mu0k5x6DC64R4Gtav40Rujr\/99o6v\/IbYseuOxOx7q7KSCSEGx5mEb2j\/agtf3tS9BU0X7sgH7Fi48MiGDP\/MKsxEYuJAidzA\/tUWm19MvKKge\/6X6xm6N83vuOeekv7hdhqxcPjvEjk4dfqeFq1SUo44SElJ33X1mNQzQnpbhJzSMLEIMZ1BlAixTMg04GQbKLEw57CCTKI5y1SU25CRAiE6hkAnvEUI5W0QmHbd8+jkH7140fr0VvsX9ezZZ1HPPi32p6fvWvxqaZKrl3TmaAUiFkdcSBxPXBE88MxdtkxDoQ58HDVkpUHKwax7IqvHPh3ti\/Z9eOYHb700LH\/TZ3828\/mi\/3ig5H5XT4nhhM90UouFGfwVOHRdcIxY\/VAichI6zzH\/mbXNTICVygn4IgiExjavznnE+d8cEjvk0qKipKS2yl2xbXO\/v\/vsHxVl\/ildY5hewqiHE6FsIqDbtqU7IbYIha\/IjAWXouUQQ94aSzoKlDACdU7ki6nXXNXjkY+Lug0qLj5x8EeDBv2aFPPP9Z+P3OiPY3o1dHZUIOJMIOfd1EMiHp1IBnG2j7qENCDHzM3yROR6INJ1+cWZLVs+fquiKLPmrHqqCEbl4cnLLsl832nBEDy5EhEpNIFsgS9UrsqSXiRWMPkN90EkusflVc9EsjP2ZGW1OmGzktumTVGX4sBsILL2vYLnshIvY3oIs86XJ6KzWLPmZGEhsCRzzhgoEHDTRl9BJSADmdWIiNGoZyIrx2Rt2PSNolwQKM4FDt0CM2JgaDbsrMQ8x8DpUyTUWAWWR6YjNdz2xJ5wHyD+Fssz0+1lWrCpwcJ6rZHUjIKTwPNTA4MVpcmhHjGxPwS6wDzmtMRS10JCXwT0khGxwUURkx5qQ4Oge4AZFZ2a1tAOigaT0aKsO3MqjCbuqRMI7F9YeHVPpPAWRYkvDiQpyhuTR2QeaqIUr8JCef6cvOqWuXlWCQJ62Ugo7Dw\/Nn5WYLOi9Fh2+4asEdcuVU6e001RPi05t7plVRKxnMpuHORduED5NgDl8XLm9K8Ar115ujJ7jm\/IPG8V160y0HAiEiFVblMD4bB33k0\/A4+Rv89tvQTQesvfS5XZMwZ29lf7Byt4ToQg6zahocQyq2QkE9c0TGNpld9Wflara+oa\/50LoE+9u3duv78Y+m25bm38zpsHrI53DODyF\/7D4bCp+yDVeJNCU9YLaUhUmYhdpuKMSiE7Fp75+pOdytKN53WY6KLDlotiB44dvi\/oF4TZQwyC3cnC5mtDf1VFg4gyXsPAb12CktEp07k+GJYFXc2CQ4eoMsXT0WMQg9eZwPFSpuwgUjkJdlc1wNoxhNs0lcGEjbAKWiOR4GwyPBIhWjVE4laW3PjsQyu27g7hQPMXHjx\/tasWWDzgSmsZEEYJnOYwg2DGwUFpolYULeqRqK1LoWAKqmpwPD7xhq3b8NHAUnIFQSIS9UAOUR63Hdq0Ywg\/aKEJG3kDVSC0IFu16mhwWCW3rZuQdqAMaUvum5IdFyTCLn\/U5jRIeyprEBkV9kDV4GILDpgePFYEDf1HHbvvEltTVSaCI535TW0qc+UFjAi74uNrOGYdMrQJPLIRd0RFITYSidbQ3XOihu\/tlzZ+3Ljk5ORxyeO3Tsjwpu4LKlXWiXSbE2FHsLsa8DJRg6T2wDaZlmpyoiXijnCOjrnpErF1D286\/pkmV17AiMgQH7gDWRWIQElYaMJGD3XC6DYPnoZ7X4HJgCntm09M6zV06NBeabt\/2uYdta9MiZd0GZIfgqPLkKbgDAiwOlWsajjHDQ3y2SBM5+aPaYEBZA7IKQogaSC2EAgUOC3JrRGgoxNIG5g7hhJWHpiwEWsKXizhalWoub0fHhWVsDxj2ooV06b9sm1KVOmjNdg3GES8ox3P4XR5zqQob9+EhIS+Xm\/vw9H15tjxAnYr+Ce0tljTf90ThaOySw8+6asfnyKIIIJGw1G2ZvkFCmVuZHN0cmVhbQplbmRvYmoKMTYgMCBvYmoKPDwvRmlsdGVyIC9GbGF0ZURlY29kZSAvTGVuZ3RoIDc3Nj4+CnN0cmVhbQp4nAH9AgL9\/\/\/\/AAAARE9x3OHs9PTy2uTo8vHwiI6P8fHxssXL9PX5pr\/O4+Xv4ePo7vP06\/DzaZKs+vn5ZW9\/9\/n6qK+9Y4mTPkxx9fX2ZoaYlrPEX2l9cIm1nam\/ZIiwYoGx\/\/34pKu56+zwn7jIaY2mfpC3cJaisrvZb5iwjZu5i5vChZay5uny3+Hm09K3+vfoxMOr4uvm7e\/1a3SCZIip7OzqZoWg\/\/7+dHuF\/v\/+\/Pv5YX+a1tjfYXWY0tXdy825qayhkKq9kqK1V2+O0tfm3+Lw5ujsbZGYiqS4navLf4id4OLn4+Pg5+rWmLbHqbC+\/f3yZZCp7+3TxMnHmJ6uuMvVvsTasMnWW26JXYGhUmiG29\/tvb+uzdrhgJuxUF98z9Tiy9biS1x63ufr8\/f34uTp9vX06+70sLGj2trB1ODl1tnqv8TOgoiN+fn4\/f39j5ep9vb1o7zMyM7j\/\/\/+6uzvkq\/C\/v7+qqqq7u7uVVVVd3d3zMzMu7u7\/\/\/\/mZmZZmZmERERMzMzREREiIiI3d3dIiIia5CGgImdk7DDSVZ5S1l8pL3LbpSdzdDYTVp39PLX8\/Py9fX1T2KA\/\/\/4ao6Co7zKR1Z7X3+pwcfaa3WNaYSdX3mVeYKJZ4uFb5Woao6GQU9xbI6e+vr5+\/v7a5CYaIuGZHCJhZa\/SVV3Tl19YX6PZouk6unmxcnT7Ozt7u7sS2B+\/Pz6nbfHX2uF6uroa5CM8vLw\/v784uLfYn6VZYycobrJtrmq6ens\/\/\/l6+jNWnGLscbT9vb2W3WRuc7ZlLDDYn6hfqK2bZOh6enxa4Sx\/P30Y4CrVWmK4+vubZWtY4OOY26K5OThcnuTrrTAm6K07\/Dz\/Pz78vP3pKq0pLzMc5mteYukxNPbk5qsbJGd+\/v8X4OXqsDPbJGSRVJ0UmOFdZOrrMPR9\/j5g6a7\/f3viqq+ao6SbXuR+Pj28PDudp60ZIKf2t3iVWF6WWaCfI+xmrXFaY2Ms7jEjJSm9Pb5qbTTyc3VnrjI5ubkjbkP+QplbmRzdHJlYW0KZW5kb2JqCjE3IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0Zvcm1UeXBlIDEKL0JCb3ggWzAuMDAgMC4wMCA2MTIuMDAgNzkyLjAwXQovUmVzb3VyY2VzIAo8PC9Qcm9jU2V0IFsvUERGIC9UZXh0IF0KL0NvbG9yU3BhY2UgPDwvQ3MxIDE4IDAgUgo+Pi9Gb250IDw8L1RjMiAxOSAwIFIKL1RjNCAyMCAwIFIKL1RjMyAyMSAwIFIKL1RjMSAyMiAwIFIKL1RUMyAyMyAwIFIKL1RUMSAyNCAwIFIKL1RUMiAyNSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNDU0ID4+CnN0cmVhbQp4nK1a3XbbNhK+x1PgUjrHyxAAf8DsRU\/WjU+zZ+OksXa7OW0vaAqy2KVIhaTs6oH2kfZ9dvBHUbZEQg7TU5MEwA+DwWDmm6G+4Z\/xN0wCj8RMX2gS45AzLwoDguPI3NQC\/4JL\/Oa6IThrsO8xnySRzw936NDWZIDpezTAvvxP3iTwN2R+jGMfJglinG3w3xY4DtUQc1ls8JtFRhDBixX+Fc9uPtzO8V98j+DZv+dYXd\/LK8WzL6oDbt7Zmyt7g+0NvI3029fmLQ\/6fseLv+P3C7XuYxmpn3gxI9GQjMjIiJWMszdv5njxxxk4Srw4DC9Aw+fBOv1FnHjMBQ309\/m5sj78y7R0WrOa+WoVbbSHZne2ZfFC1V2L3Y2P5mqfb3vv\/o7O6juKvTCIyNCacH9NqK8hBSNNjXOPE4ajGEw1igne4JDCbdJrKo6aCI9R0X8NGmDIGq8G1B5RL6JWxFBPri9G7fTlJsqX\/YT7AOjFlIQRj+CO0zgIiZRcnabru8M4dGLc3TXcJzzAT5jiRT0gYpB4gRURkPyERXiRYTi9crC5aGFZZyM3cle1IcjLQm47bNzbOQ7VWiI0+wWaIjz7CS5MW4EcKPvw7Efd+Elf3pu3dd\/NhzkOtDEweYKR7Hr\/RQ8xMKdQdJuZVWMsfup3fdVQZvg\/9eVLf+rP+sFOZsQyL9weLeQfeI66eUzXzacjzI9aFLtyPfQY7AftWJAxzRP7FMSwPTHhx\/s0sDunrf389lPwXsGQhQbGQm\/yMi2zPC1wVm22aZmLBmfrqmoEXldPuF2LPW7WKbj8fbWr8VbUTVXC6LxcVfUmbfOqxDdiKWpom6Nxj0XC3uk+Egz3BUOzIn3CD\/mjFKcqm90GJpbS4Dp\/WLe4rXCRb\/IWN9VG4Ptdi8uqxWlRKGHz8sHrpJJAadFUTuL5cLycxKvFt11eg3S7RgrTCpgaNKSU9iRA5qIQWWtUl5ZLvK2rVrYoNfa057nIFfIIvCM4r3HBPhcihc2rRboEfeWNVEyegUQgyGpXFHsp7q4E3TStlOtpnbZS4mXlnY84AUTDJOEHQdCYIG4BLIypDIdToYWxtHoHtAUYUrvfwvZVq9M23dtDqSW9j0uxFfAA3dISYUeXO+h32b+AOZp9VeNG1I9yx5Q5pY8CP+XtGuzMw1Lsg5DnNcIgwFGga3ZeB40MrriRSzbToaFlUu50fPCsr7+RJYMJ9zcmS0t4zordUrw9r\/kgimT0ZM4ioSELIz6XKyQ4JNTj0QDaAsgJkgv87wAaYV4c08gBjaJR6yc0cpQtCwzaXaUc\/p3IdnXe7nG529yLWu06aBYc6oBlEaBpJI7tbN93cju9BglsFx9AW1ha7KLXcbQT\/OysXkfRupW+y7JqV7b4Pi0gpmq339Zp2aSZMl0w5baq9+etlgUhZAmHOSey2oADlfSnstpxtEusdhSts9rrWiwh4BslKuVmuqnJKojEA8lXEno+hDA72UThRvoYNh1aSLzECe0dUI3VCdpWCrGUwV177mwHehowNRp6lFFu53UwNaBg\/2tOR0vJgHZ16bROBh7EaZ0QI\/Iai0dR75fpHkhek5eigZjw4VbF30boY3UviurpSsavAmxDk0TgQMAae2pyCNIBRE3ipIkeVYZopPWtpVVaP6+oqyPpXGSCMzxyPIxMQOT\/BL5ryHvTGcJfsWZ5AmauVYCVMmvyrPihJczn43sQEI+EPnOWxlg8Gl4bSwJ5fpzQxjXFIKVys2MXK2URuIzTKb5xcsy4zAtS\/OGUnYW0F2dkyh6wkZR99hWSiSGXHXhxAi8eQw8BDrlsCP2RH0WvEfRXPNsCq4D0GcSFDBmcNSTPcDpUWzFHur4Q41muag3lSqXVlR69gbQanvTgVvXoYYqVxvZV+xe9aHntX3TB+B91QaDSy9QL1D030ILswv5U3X1d6GXpofq1ddrr1kN\/6AZdItPY3+eaMnUfPb3R7V49gNtQT4VahV6L2Rb90M5RoGDOl1RDkoA5JtZ+hmoe4wTicGwCv+dFXonW0ZFp0CI6JVrCJ0SjLJgSLfYnRGP+lLvAgil3gcVT7kJATu4C+FIec\/+FM0XPnHTv38AcAfd8\/\/kcqhbs83F\/3a67402VYzIVWtY9rOfIuGVZ9Kz1wFK\/9dB3BDpsQgA8WQsNCfGoD6m6kXMgbXOIUge\/AEc6olOxcwZCDpaWTsk2xAfQKB+gcO6PTONMCR8dl\/ArXabWwUMXwMWjDjq6bW9DCfQs9eDUtsni971u2+lLo3pM8NJNorEhrsPZHr0j50G2rerjmFffDn55k2kVi4lVwGWsZdjWOn91jP1K6+j81QVoQyeWkfBSvK9DeS8DX89pkEy0WutPp0Gz\/nQStM6fToMWXmwlt5X7sX9Zqwy9hNDnJ37U4NGxwZ93JJyNZUYmYjW7bI1TlTtu6yqDZFt\/rugVsZqrATbAuZdwQuyME\/leGiWOFYOPaV628L+WOtXluN9mzW\/zK0i6m20lC3IDRRG5gIBEiZ1yomSShuF4YUElk9cj+Rz4G58HI4CoX0PBVS0\/9agiQCEeVDniUTRt\/pDq7Rxid5CgxyTqFjDVfgauVbhPNWzbtqrV9z5T7Lvf1SLdNf2PVeg5xY28mDFmJ3ItV4x83KA0ci5XjBc\/KHEru7kVP0gSj5crXnxG\/q5yBYEzzmm\/CuD0C4MT9ETmkcAu0nqOoO0\/olV9R5Tj4RzNwOdoBur\/bsGVilIKmWkch3ZxhjIPFikrXK1WosaDJ5dyCpyGPNfa9\/KOC9CceIc7nhvvmGa1lndMg2Z5xyRoHe+YBs3yDne0SXjHkbVPxzsgkPZ+2zLEO8yXYB2lzLdgxUIgjg\/8KoHKDDeJuZ1povhEQlX7nQoNgtDgTxymzxxhT3ux5dWZ4\/kUjRDfiwKQ6TATMuULnowHgT8q7fHzUl\/bo7meRXPCQkXFjhfllg2iF4IzYNgkCU+oiEcJ\/DsrfPc71E2qogpoiUOwUvfCVEBlC4Qt4qu4pasgOgABJ549mUwayX49eK1Gmf5KPfQ7hJ1pIFkGlxHSqFvQ95X4DxYk\/dpRcPfp+L6ucl047sr1si5knjJdLNIjTFdhKwhU9qthlb5ISpDo2P4CKVexXeg2U4rybLl96Ae98qcwnNu1mdg+TVnBFlWP9fZK19EVKSZBO5AFdzQ3suCM50gWJlltRxYmQevIwhRoB7IwCVp4sZVMQxb6x2c6spAkcnIQZ5wtuHzHGYFDFwZxHsgfkZ2GQ2ej+M\/4\/zgQtckKZW5kc3RyZWFtCmVuZG9iagoyNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9HMSAyNyAwIFIKL1RUMSAyNCAwIFIKL1RjNCAyMCAwIFIKL1RUMiAyNSAwIFIKL1RjMyAyMSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNTcxID4+CnN0cmVhbQp4nM1b247juBF911fUYzuY0YoUSUmLIINsI5OdYJPdwRgZBNk8qGW6raws9erSbud\/8kPJD6VIXXxpi6LGxiAYoNst0acuLNapKml+hY\/wKxDmksBvf9EoAB76ruCMQCC6D6WEz5DDN\/cVgaQCz6Xci0KP4aeAEi5C4XhuSAPGCVRJu+7+06V1MKz7dI+fo5DBDigsS9QDl+NK9U99iNS3fS+AgOB3ROAkW\/huife8yBewTAD1Uou7X8stfLNM0ApYruHvcPe+WMBbAnflAny4gwUIuOsuNQvn\/E681n+0P9MFcLjL9M\/2c1zrG7JaIH73Ffms\/5DlwsFbe\/3HqhUQ7\/t1\/4Dln+APS+3mU\/Oo77te6NHePNDmOco85k+b99CgLrTXL5daYHupasU6l8WGKEEE\/FSsSRia4Sz\/edmIYY9EFLgk7NG0ERf3yDkx4qcG94DB3VPRan5sxbfayScu1GJVfCFS6ZzrQhh3AybomS68\/Vb3q7WMdZal+boot3GdFjnED0VTw75oyiN7jQGMilwMXBr4LvG56BVxbFwMg8hjI19h+55QHidn2CYjj7Bfo0Wz0UxwhM+F+5s6UqN4PkNfs+hGxjJ6S9cF4Q3RGObeG6Jxby7aX4qjCDQEvYOB+Uqc4G5E6HkSmIx35zTex3NLSN3AfJ6dFrYu47yKE3WeK4jzFciXJ1mmMk9MYYYR5hLBo17Qdc4\/qC1C15+LNuV7M1MKzs+y8GWmdOyZ8tWdM6Z0ZjEljDOlcO4eToS2CB2\/tZc61MrIqz3Bdc6Yl33HXcuIy73jIuQywcEMgnPGrSCYrCLfH+ROninHnkMORHmCfRKhzihR2sXqgRyds+3xQpdzKqwNO2yPM2UYJcT1BQo3GHaWMY5ZfzxBBLgZLDTiOjNIt6dwezQw0244F3CCdoOOdm9i7kC7N0ELZttqRbs3QRto1xrtmHbHafUWyh0SGUWS9gJiAXdfylVa74qy3qS5rCoAcyBSj6iUIAYZt2JSgrzsfVUm5RGSt\/d\/x6TtpQ6yvbTFP9TqFvkXqZY448tbvj0oNdJdXciBnsu47\/eesWoVJsIlDGdDWqTVeQpapFV7QLu0ehtz+7R6G7Rgtq02afU2aH1atUezSqs3Ue6QMELfjW6HJqKjatOE9mEN+3FATMIuC2g4A7BoIC4lxJDLHSRNVRdbWb6BnYQkzuFBPqY5VJu4TPPHtm46HqL4HqzifQXrstjajI24qtFHyOhEL+eu3kjErqXSpJJ5DUhKFeRFnSbShc8bmSt1tO55AVmRP8oSlH6nNhR5neaNtFKOeYp2bHQrtEvka4fEFaxklZTpg1zhjVOlvy928lkpphRX3lXaYftqpRwVRwRlUq7BVrjGbngPdbqVgLpm6TatTTQeuB4zirCvOyjxZoIpF3YB5ppqcoZ4XJwCO1cfPGwhIo3m3OAYsyiwPHUfG1npscU7Ay7hWAexcAbsX1MDIRHMCaGaU9rjpQY01SSJgM1AM8QgCXQM+jPQTI4LvbloeGqKPMOyVx2e086aXJpWUWyqfT+cI2K327nrNH+RZewmxfZC+36J9MOAzAksYwnB56IV5ZCj2rTy04\/wXfEClHM\/OohyBjcpt9BIeUWoqQxstQ2Bf7iSHV3hqj7HK4dv6StOBhtYj7vlcN6QhIlV3\/8Js+2fkU2KN3D\/e4iY51FTsvHCdqZ0IuDqZMNE2BHMTZINZzesZ5gfWdYzv1ma6g+sBL0wmgGHNP++PRRv4EOeuPDz3X+6C\/\/9eQFP8X6r2P+pLBJsSVUVUsnyGfkUkFnj1TbN06qW2LnCw96GSBnlU7Oijkjvy6KqyiJeVUrDOE\/SODN2wxjgoQhNEs6obymTTV5kxWMqqzfwww\/3gJUExFmGRcRDjYbWdSa1+aXMMHpXve2VO24pxz6GRVE0w1KrAEGmnDhrQBzbcPMxG0zUWs6sFn\/06dxBJJ7l04luFHjTI93Pm7Y77xvsSKtEKObzhdOOeMVwaaXXFvZtNuFYf5CQnGl37Wn2FdXTrzpBwcLCFfR4goLJfnKC8n2hZ+O7YWQRaSdS7cTWu74eoLP+7vv+kX3oqMcEuOZF321Xlu2kpZ+64PonvabsZzNUb6Lo1yf6Z71wRL9ezVeonpuwU4hjAa1CLVyrRCsy02q131Iq9nfXCwj69eUwxhm+1mrUfuEY9J1+1QD6oLMNKj8grlBvWpzsydX0pXg7YreiL5+GLmc2IbosVPavZdIN7p9kWRU55uLjxkt3oE0eN\/WmKNN\/YaqME0UY+rFgU0ndDeJvG4rw1ZsxzCZxVjJpyrTew1bGVVPKChs+rJKwunvK9rBLa6xj5AqpLIMs3rmw3EhUYVic5knWrKx0olGEvYCNTkp4g4wIVbyWj01crpBbtKLolHWaydYnD02arZBO8SaqUpdpUity7byGXePZqxHjmoVYCVtpNmycko+CigaZbdhEA7PyyCVRMIiyKVxzZQLGArpb4mYUe4l27zYF5BLdgPd+yYtdu1s2NgaeCn2bucVxUA7hoQw22IdEHQpKz8QYD+xTmT7HiWEURIXAIOZsAL2OWigyylw4XbOtVKQbam3fx24giIIv1PM60qI8ODpVlk9bx9FUGyMmKNA5LzC+nAKdgV\/MFJj0jwVoy1D9zwMFOh0F3YQClVo3okAHKbCzw5r81LzXC9jZblz7GI36xOWXX0r5EjQy+sraGdpnNcPMMiP5vdFtg3yJMdEpoutmo9+OJzZG0RohTHq8OnKjYMTrHiao54HGFmFJutP0b0MLSXzMB1RYoNHphoNQYanb0HD8+ITui\/OBoNC1j+mzKh7aHegHIhffkXj9aASTms95L\/\/KuVbvaYJE6Jnq+87TYOXpaTRqoVvv6Um0wdJPGwOcjx2MmIOGdI5blK6wXU7XadKdjKd4327bQ5plldpMZKVnXKUHWuc1CG6loa\/2XCbIoNJ1ffVhK0XYVdWGrXSst3ISjb7uq8e3cgptODRLmWXKo6rCSnX5WMpEqmOzLXK5N83aotANIz\/ohd3qhHB69BL51SdkEm3WCZlCO87+cVYV0xTQ9j9FvcF7WO03yUY9ikr0Cx2m1D2o5IcY3DYx\/YD1XNygkHiNzUQa12p0hcdKy9adT5ynExUfcxnBcrcTeuWODyZQpoa2X7N8JF7kipOCb2SkdDr06EZKe10RdZOjpK\/ahK58DG8KqpekOR2Ej77v+McuwH\/r+cz\/3bj\/sEwS6n+DnMApW7xwejqmnpVgffahf2elnYHo\/6eghmOqxAt1WUeHtWjj22FZ+xP6ElfVg+ict2xYVqa6DMzbi4\/txXftrxlVIeVE\/c8WdmbmtUOMCGvNMPC4Bdz7bg5gojwM4DD056Bm8U5XJ7o2AfXMvEwfN\/Xw1Fc91NobCkGfBq7nhXyQOY\/VPsL\/AIqxj\/sKZW5kc3RyZWFtCmVuZG9iagoyOCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCi9UVDIgMjUgMCBSCi9UVDEgMjQgMCBSCi9UYzMgMjEgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggMjgyOCA+PgpzdHJlYW0KeJy1W92O27gVvtdT8HIGSLTin0TlptimXWD3YtNFpgiKohcambaVyJJDyfF636cv1KLv00NSv54xRe3MIsBIlsTvHB6efzJf0S\/oK8IsxAm1F5ImiAsaxpxhlMTdjZLoE6rQd+8bjPIGReZfk8PYKCTM\/tY3OBIh4RRGRkmYiiTID+jPD4jbAd3l4YC+e3jACKOHLbr79z16+Iz++mA4uULDNEwSEnugkQ4NOdBI7Mlbzjq0j\/tMFdUObWuFsu22KIuslc3\/kPwm1WWTXdDjqSkq2TToeFLHupHNfXCLPE1pyOkwF7RM\/a0LDOYCV38w5AJLV4IVFUjkkLVFXaHssT61DvRB7LEWgAd8cHepTwrlSm6K9lyrdm9EfHthCWOhIIS4KATX0ritJr0Kx0kS8siBtkqFl9HWqPAi2jDT7we1RVtVH5BW2B0yEp6uYlujQ6a+yFbfwVvNQ\/AsD4xEIaNCuHjw171R2jEOGXGgddIO\/KS9iAbSDrylvYSWs+Cpw6jqavQZzwr4hjmyJIziiPVkPfyUYxJppOcAyxRrWC+0jy1wjMrs3ADLF7QrvknNMco2DhukIqQpXkEFjBsULyuRKnb71gioLA5FixorwxB9lBI9yrI+G3EeaghCtxVpnCclYexerE6RQO2NHXQMnKqNVKjpJx86hEo4zFbggdhrLREGYyAJXgenR0epAIWJwoRgHosY7gRJGMcBxGgTtN9\/dH6HPr6H+1QwdEYEPSgHjxGfLHAURmmaAHM5gixBf91dLLfUcvtPdPdpf484usvuUYzu2nuUmilggu7298Hw4mg+sn+leVKZe3D+yTDgfI\/MsOuPzOvg7ke4RMPHJVwwBCx7OcBl+DHjwlKYMqnug3T41lLYmRfdiK2lU5s3aoqVXTOlHwXwKDcv7F877mT+2k9n\/MxnYfmyQ8r7QHO0mcJ\/tlzaD2YsW9BOCpdrMQZzWeynmFYiFtLKTU4YrybihwH\/Ch5+WlBunpKQswSjUXMgG3pGcYKZ4siy1wDNwZ80LdTTsoYBKh49p7IYAlWKCR0ov5KV8kSEIn4tm+cxC5kX2j9MVrSvi9wRssD9phiLFbAQm85FWaLseCwv2gub5LauJOr9Y5bn9alqQ0cGmXCgRnlP1sP5esmGg5YsoS1F8RGN8jCOBwV0hXFP76pVz+0tOSGTZdA6D9NZdJZ\/AbuixsMkxpyFsTei7wNhjDXun9fmuX0LNsKsNfpaCAfuCE+v2HyluPOsZIacikPilwy5upHMTcEEvWC+35qpb3sBJMa1Jf19ZsTQ9q5pEMm7QSTBokiSNMSCiCv+PJXlCZoga9Hy+nDMqgKsUskSUpENerwgeHgAa6zPlVTNvjgiyIfyumpVXYboYS\/hi6wa+Qhu6iNLGSQufjm7RQscebE\/2qNE26LKqryAhC+rNjo5Hh8Mcw5dVSo4A54k\/lSdPgZDzWjnAN6cuqoYXXcES1UeS23dsYxGPLQmJp68DVrz4TRtUEBll5enjXRlsFC80SjmExrBwhqOmnku2j1q9xL9oMPDh+xLg6rsIN+g5pTvUda46r1hbjENU4\/qMbgbifwA86rV8Q36scpDx9xEAm6NcBeNFf2AQdthkf1q7peGj5EkhCwczcJH7JFs\/zyNClkfS4zjDIbIUZq\/9t5+Y+OKjT3XjvNpLAmueE7TkBLGep5f5mJIRNaijepZ1e2y87ytogxCgOAs9aYd3HWe2CMJ0d2T5CZmsFYlb6NdqeQQJPw98c1owiIKVCO6MBnfaDJ44oi5C\/d5v+357tToiRfRxn6bh7daQhtU4edZ1+fs9MGchnGUONGvllH3RqT1v7OI\/zRa0jjkgk\/lsOTfu6DhwEzikCWQzXSYL6uAKJjZSrRDrdpdtpPIUQExhuGS8BWwvc6\/8YnJVJuyF2xRNScFdiVHq3JRIIJCsROLFRQ2hZJ52\/UVddtxQqgz7aOqt4WzPT9MDGo44dc3Uzsg8ptpHDeuOEyTUKQpdUH\/jjhMb3dj\/6g4TGddTR2HSbochn+CMPzW9puYicZvbaeFGJ9j2ypvYxN99Rtl3nyxP+T06xnAzl5W1DQE6zSIsX4aL6tpCI7XomXIbDRAvNkpKQ+yaiEMtWcpq1mT3NFeZnqLB3NxtRK\/0\/UwAFmJNoZIjyBPX6MrPCqfN9qYArX7TG807CRk6arfeBjnAF5hc8rbRqdCjVTfitzuUFzqk6sE4zrwk3Rg6ZVKMAoaxdlrlWDLaGtKsEW0WQn2uS6qiTs+ZqrVSedQj9k9TQjdamMc9FHJY1Zs7ANHUjNwo9Nir4Lbq6QmoGKCp8Ib172evcLq+mtxH\/m6bfeyPht8pvsrEwft0Wb7YAuevSl4bNmj+oZ2ajYSEuujidmToKbbNnxkB9vKqZrUT8i00oeunam9gmQ+tgOdll1DO8\/C+ZZdhEHWkES8l8DLcvFRnnGke9weaH9vJKq3phswKpr+DD97PgQcbiyYD35nVufzOQTH9atUWQhKPVGYXi5PjwPwkOBkSmQp9XWFOyZmaB5u+Cwfm6J1JNLgQiHVE3wF5juEPu2lacijE4jcyBs9lfeVeuijHVor\/NfzWt7BorxZmkCtHq1Z1OdYN6qBKVRFqUnvDmYhIz4+KWdPMJh7ORsFT+CbPdqaaQs+xdJMknSKNX1isaajRqyb8x6NhcW3Nj2CZzXjjd1XKesdRIbZMYyigRy+LCGrlzZCNG2tbGL0fGigApwuZtzFxIpjRUJAbkf80ZwBgYKa+6MFYw06nFD58W8+6RaBbOTGNtGV\/LPNRskGqqNHVZ8h8UHt5QirsakPGSyE7mHqyinP9YmutoBfZg1gnebL5IqpI1c40dtNPg1Oa27arnXmVjQ9LYcHgVgbp1E8pxK4lt3o19bVjWAhpYnoIX0KZ2X80KGuClBTWLU3qD7CTExhCIK8HWgYodr4Ym8pmaB480gSjTTrfAXaxtH\/g7KVGY\/vvYLOWiNagWaM4OspK4v24qX6kJETP9Vv+m5EF62HvL\/ebiX4GL3dO48qT+w5ghkQyMs6qh4a4o6DFLQ4YWwFnqvHqosShiGb9Yd70HIAFs05p6xsautv0X\/yuv4CyfN\/fXIlLIRnbO031HVyfmrB\/ex13r9R+oAVVF97WR5NgAcbavTRqOI3aQfUVVlUEslf4U0hYRG9PBBonacTf2+nq3uKunn+eNG+aKN5UqdKV4s7lR1MtbiRJXCrHKsAtYqg6UD9hU3CmK9F+1Yo60jrubC92vM4NicOPMj0ItP92FNVfD3JElSoaYpdZSUHxG0XTjdqYQEvuvWuZGb2JDIEqYAxQanPYXqtJuOe3khbcRfSTB+gANPXPO11J1Jz3Zf6DrljrPP0georHXbBFHtaphca1OZ+2fMHaz8fZX5S4Fnf6T3zZ3LQJzsdehuKUyZ6Un9I\/kwjrXOC+BBZ7lzQiK5F67JSm38U1ebUtOriiGhEVy8Ezyk4c4+3LjQaJjyaoi1Va00LZtV3TK6qCLNi+v8yYG7Ozh6sePHwBLL66ROb509Hrcn8ceR7bsYRBVNI5TBJ2Qq0KleXoz23LfN9VesMVe826QpRyVwW3+xuQNWcDvpMq6xggXWU2WQtxA7dqmq0LYBX8PA8EN\/AJ0KBt+x6Oo\/WnI7HWrUNwkQ4Gkb6PzFQTpwEAm9NgtAfplALrIF7LFokB2lCJSCPsjL1R5cNgU0ovY336NBgysIoZfFA12MBXQZBISkSZBVcV844HDoTLMQRlLsrUCf29Qv6P\/gi4N0KZW5kc3RyZWFtCmVuZG9iagoyOSAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggNTQ3ID4+CnN0cmVhbQp4nJVUTW+cMBS88yvecXNxbGxjyLGrHnprKtSqRwdM1ynYG9sk2r\/ZKv+nZr+kVcquERIYJGbee\/NmXuARXoAwRAQ9PPJKAC8pKjgjIIrjwSn4AQbu155A4wHvL9\/EfzHK2eF9OlTxzikWIHCFikKQrBngUw388MfxUQ9wXzcMCNQdrOAO6mf4XO9LmYErKo7yQiSgrWWvO+uMlldwCeOIlWIJrlNet8oEfwU1gmFW8AWoD\/DTjjDIHci+t29gRwd+I502v8B2oE1sZZBBWwNvOmzgLrs9qhKjshBwizxbGWtk1+ley6BaCBvtWthKF7TyIE0LvR50iCXNd5xXDFFc8hNpyhzn+osneLbahL1u2Y0miwKxhCZhNUj3W4WJbz9AGzbKQaeNNI2WPTR22Epz6niqYZLgPBb\/DupVuV0bFUqZPc8RTpr90+i1Ud7DdnRb6yP\/0y7ST0sw1RqrjMPxwY3NNBwfX\/bf5qWg0bMVE+caEqRQpukjdQt\/vgxb64I0YR6fVRQJSukC\/CRjU5GaE1+dfpXN7or\/KEacxMMC0GshQeliuPXG6iaKOS3SOuo2Dsr5v2BsmD6jM1n2QT4sEME4P5MlrHaSUXI6RVEC2nflBhvd9+0UdA+wu8im+f3PS4Lyskpny1a3gu4ym1IWCZeJCXQZdEm2+49T4LiOKbHAY0ympFV2sT8fBHk\/7hG6FgM4urMqyIlzmQUe4R+blwYzCmVuZHN0cmVhbQplbmRvYmoKMTggMCBvYmoKWy9JQ0NCYXNlZCAzMCAwIFIKXQoKZW5kb2JqCjE5IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUxIC9CYXNlRm9udCAvTExWQ1lEK0FkZWxsZVNhbnMtUmVndWxhciAvRm9udERlc2NyaXB0b3IgMzEgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyMTQgXQo+PgplbmRvYmoKMjAgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHlwZTEgL0Jhc2VGb250IC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZvbnREZXNjcmlwdG9yIDMyIDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMjEzIC9XaWR0aHMgWzI1MCAwIDAgMCAwIDAgMCAwIDI4NyAyODcgNTMzIDAgMjIzIDIyNCAyMjMgMCA1MzMgNTMzIDUzMyA1MzMgNTMzIDUzMyAwIDAgNTMzIDUzMyAyMjMgMjIzIDAgMCAwIDQ3MSAwIDczMSA2MjkgNjcwIDAgMCA1ODYgMCA3NjIgMzI0IDAgMCA1ODMgOTE5IDc2MCA3MzAgNTg3IDcyMCA2NTUgNTUzIDYzMCA3MjcgNzAxIDk1MSAwIDYzOSAwIDAgMCAwIDAgMCAwIDU0MSA1OTMgNTE4IDU5MCA1MzAgMzIxIDU4OSA1ODEgMjYxIDI0OCA1NDAgMjU4IDg3OCA1ODcgNTQ1IDU4OSA1ODkgMzY4IDQ2MiAzNDAgNTgwIDU0MCA4NTUgNTY4IDU0MCA0NTQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMzY3IDM2NyAwIDIzMyBdCj4+CmVuZG9iagoyMSAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0FHS1hKRStBZGVsbGVTYW5zLVNlbWlCb2xkIC9Gb250RGVzY3JpcHRvciAzMyAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMzIgL0xhc3RDaGFyIDEyMSAvV2lkdGhzIFsxOTggMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyNDQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDI0NCAwIDAgMCAwIDUyNCAwIDY5NiAwIDY5MyA3MjYgNTc4IDU1MCAwIDczMCAyOTEgNTExIDAgNTU4IDkwNCA3NDUgNzYwIDYxOCAwIDYzOSA1OTkgNTcxIDcxMSAwIDkxOSA2MzUgNTgyIDAgMCAwIDAgMCAwIDAgNTUwIDU4NiA1NDEgNTgzIDU0NyAzNDIgNTU1IDU4MyAyNTcgMjU1IDU0NCAyNTcgODYxIDU4MyA1ODIgNTg1IDAgMzc2IDQ5MyAzOTIgNTgwIDUxNyA3ODEgNTA4IDUwMiBdCj4+CmVuZG9iagoyMiAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0lQRUpKRytBZGVsbGVTYW5zLVRoaW4gL0ZvbnREZXNjcmlwdG9yIDM0IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgODkgL1dpZHRocyBbMjQyIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyMDAgMCAyMDkgMzM0IDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCA2MzcgMCA3MTYgMCA1NzAgNTQzIDAgMCAyNzIgMCAwIDAgODg1IDc0NSAwIDYxMiAwIDYzNyA1NzggNTMyIDAgNjE0IDAgNjA3IDUzOCBdCj4+CmVuZG9iagoyMyAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UcnVlVHlwZSAvQmFzZUZvbnQgL1FRVEFRQStUaW1lcy1Sb21hbiAvRm9udERlc2NyaXB0b3IgMzUgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyNTAgXQo+PgplbmRvYmoKMjQgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHJ1ZVR5cGUgL0Jhc2VGb250IC9TUUtVRVQrU3ltYm9sIC9Gb250RGVzY3JpcHRvciAzNiAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMTY1IC9MYXN0Q2hhciAxNjUgL1dpZHRocyBbNDYwIF0KPj4KZW5kb2JqCjI1IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1RydWVUeXBlIC9CYXNlRm9udCAvSkZSWFFEK0FyaWFsTVQgL0ZvbnREZXNjcmlwdG9yIDM3IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMzIgL1dpZHRocyBbMjc4IF0KPj4KZW5kb2JqCjI3IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUwIC9FbmNvZGluZyAvSWRlbnRpdHktSCAvRGVzY2VuZGFudEZvbnRzIFszOCAwIFIKXQovQmFzZUZvbnQgL0pPVk9WVStNUy1NaW5jaG8gL1RvVW5pY29kZSAzOSAwIFIKPj4KZW5kb2JqCjMwIDAgb2JqCjw8L0xlbmd0aCA0MCAwIFIKL04gMyAvQWx0ZXJuYXRlIC9EZXZpY2VSR0IgL0ZpbHRlciAvRmxhdGVEZWNvZGUgPj5zdHJlYW0KeAGdlndUU9kWh8+9N73QEiIgJfQaegkg0jtIFQRRiUmAUAKGhCZ2RAVGFBEpVmRUwAFHhyJjRRQLg4Ji1wnyEFDGwVFEReXdjGsJ7601896a\/cdZ39nnt9fZZ+9917oAUPyCBMJ0WAGANKFYFO7rwVwSE8vE9wIYEAEOWAHA4WZmBEf4RALU\/L09mZmoSMaz9u4ugGS72yy\/UCZz1v9\/kSI3QyQGAApF1TY8fiYX5QKUU7PFGTL\/BMr0lSkyhjEyFqEJoqwi48SvbPan5iu7yZiXJuShGlnOGbw0noy7UN6aJeGjjAShXJgl4GejfAdlvVRJmgDl9yjT0\/icTAAwFJlfzOcmoWyJMkUUGe6J8gIACJTEObxyDov5OWieAHimZ+SKBIlJYqYR15hp5ejIZvrxs1P5YjErlMNN4Yh4TM\/0tAyOMBeAr2+WRQElWW2ZaJHtrRzt7VnW5mj5v9nfHn5T\/T3IevtV8Sbsz55BjJ5Z32zsrC+9FgD2JFqbHbO+lVUAtG0GQOXhrE\/vIADyBQC03pzzHoZsXpLE4gwnC4vs7GxzAZ9rLivoN\/ufgm\/Kv4Y595nL7vtWO6YXP4EjSRUzZUXlpqemS0TMzAwOl89k\/fcQ\/+PAOWnNycMsnJ\/AF\/GF6FVR6JQJhIlou4U8gViQLmQKhH\/V4X8YNicHGX6daxRodV8AfYU5ULhJB8hvPQBDIwMkbj96An3rWxAxCsi+vGitka9zjzJ6\/uf6Hwtcim7hTEEiU+b2DI9kciWiLBmj34RswQISkAd0oAo0gS4wAixgDRyAM3AD3iAAhIBIEAOWAy5IAmlABLJBPtgACkEx2AF2g2pwANSBetAEToI2cAZcBFfADXALDIBHQAqGwUswAd6BaQiC8BAVokGqkBakD5lC1hAbWgh5Q0FQOBQDxUOJkBCSQPnQJqgYKoOqoUNQPfQjdBq6CF2D+qAH0CA0Bv0BfYQRmALTYQ3YALaA2bA7HAhHwsvgRHgVnAcXwNvhSrgWPg63whfhG\/AALIVfwpMIQMgIA9FGWAgb8URCkFgkAREha5EipAKpRZqQDqQbuY1IkXHkAwaHoWGYGBbGGeOHWYzhYlZh1mJKMNWYY5hWTBfmNmYQM4H5gqVi1bGmWCesP3YJNhGbjS3EVmCPYFuwl7ED2GHsOxwOx8AZ4hxwfrgYXDJuNa4Etw\/XjLuA68MN4SbxeLwq3hTvgg\/Bc\/BifCG+Cn8cfx7fjx\/GvyeQCVoEa4IPIZYgJGwkVBAaCOcI\/YQRwjRRgahPdCKGEHnEXGIpsY7YQbxJHCZOkxRJhiQXUiQpmbSBVElqIl0mPSa9IZPJOmRHchhZQF5PriSfIF8lD5I\/UJQoJhRPShxFQtlOOUq5QHlAeUOlUg2obtRYqpi6nVpPvUR9Sn0vR5Mzl\/OX48mtk6uRa5Xrl3slT5TXl3eXXy6fJ18hf0r+pvy4AlHBQMFTgaOwVqFG4bTCPYVJRZqilWKIYppiiWKD4jXFUSW8koGStxJPqUDpsNIlpSEaQtOledK4tE20Otpl2jAdRzek+9OT6cX0H+i99AllJWVb5SjlHOUa5bPKUgbCMGD4M1IZpYyTjLuMj\/M05rnP48\/bNq9pXv+8KZX5Km4qfJUilWaVAZWPqkxVb9UU1Z2qbapP1DBqJmphatlq+9Uuq43Pp893ns+dXzT\/5PyH6rC6iXq4+mr1w+o96pMamhq+GhkaVRqXNMY1GZpumsma5ZrnNMe0aFoLtQRa5VrntV4wlZnuzFRmJbOLOaGtru2nLdE+pN2rPa1jqLNYZ6NOs84TXZIuWzdBt1y3U3dCT0svWC9fr1HvoT5Rn62fpL9Hv1t\/ysDQINpgi0GbwaihiqG\/YZ5ho+FjI6qRq9Eqo1qjO8Y4Y7ZxivE+41smsImdSZJJjclNU9jU3lRgus+0zwxr5mgmNKs1u8eisNxZWaxG1qA5wzzIfKN5m\/krCz2LWIudFt0WXyztLFMt6ywfWSlZBVhttOqw+sPaxJprXWN9x4Zq42Ozzqbd5rWtqS3fdr\/tfTuaXbDdFrtOu8\/2DvYi+yb7MQc9h3iHvQ732HR2KLuEfdUR6+jhuM7xjOMHJ3snsdNJp9+dWc4pzg3OowsMF\/AX1C0YctFx4bgccpEuZC6MX3hwodRV25XjWuv6zE3Xjed2xG3E3dg92f24+ysPSw+RR4vHlKeT5xrPC16Il69XkVevt5L3Yu9q76c+Oj6JPo0+E752vqt9L\/hh\/QL9dvrd89fw5\/rX+08EOASsCegKpARGBFYHPgsyCRIFdQTDwQHBu4IfL9JfJFzUFgJC\/EN2hTwJNQxdFfpzGC4sNKwm7Hm4VXh+eHcELWJFREPEu0iPyNLIR4uNFksWd0bJR8VF1UdNRXtFl0VLl1gsWbPkRoxajCCmPRYfGxV7JHZyqffS3UuH4+ziCuPuLjNclrPs2nK15anLz66QX8FZcSoeGx8d3xD\/iRPCqeVMrvRfuXflBNeTu4f7kufGK+eN8V34ZfyRBJeEsoTRRJfEXYljSa5JFUnjAk9BteB1sl\/ygeSplJCUoykzqdGpzWmEtPi000IlYYqwK10zPSe9L8M0ozBDuspp1e5VE6JA0ZFMKHNZZruYjv5M9UiMJJslg1kLs2qy3mdHZZ\/KUcwR5vTkmuRuyx3J88n7fjVmNXd1Z752\/ob8wTXuaw6thdauXNu5Tnddwbrh9b7rj20gbUjZ8MtGy41lG99uit7UUaBRsL5gaLPv5sZCuUJR4b0tzlsObMVsFWzt3WazrWrblyJe0fViy+KK4k8l3JLr31l9V\/ndzPaE7b2l9qX7d+B2CHfc3em681iZYlle2dCu4F2t5czyovK3u1fsvlZhW3FgD2mPZI+0MqiyvUqvakfVp+qk6oEaj5rmvep7t+2d2sfb17\/fbX\/TAY0DxQc+HhQcvH\/I91BrrUFtxWHc4azDz+ui6rq\/Z39ff0TtSPGRz0eFR6XHwo911TvU1zeoN5Q2wo2SxrHjccdv\/eD1Q3sTq+lQM6O5+AQ4ITnx4sf4H++eDDzZeYp9qukn\/Z\/2ttBailqh1tzWibakNml7THvf6YDTnR3OHS0\/m\/989Iz2mZqzymdLz5HOFZybOZ93fvJCxoXxi4kXhzpXdD66tOTSna6wrt7LgZevXvG5cqnbvfv8VZerZ645XTt9nX297Yb9jdYeu56WX+x+aem172296XCz\/ZbjrY6+BX3n+l37L972un3ljv+dGwOLBvruLr57\/17cPel93v3RB6kPXj\/Mejj9aP1j7OOiJwpPKp6qP6391fjXZqm99Oyg12DPs4hnj4a4Qy\/\/lfmvT8MFz6nPK0a0RupHrUfPjPmM3Xqx9MXwy4yX0+OFvyn+tveV0auffnf7vWdiycTwa9HrmT9K3qi+OfrW9m3nZOjk03dp76anit6rvj\/2gf2h+2P0x5Hp7E\/4T5WfjT93fAn88ngmbWbm3\/eE8\/sKZW5kc3RyZWFtCmVuZG9iagozMSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0xMVkNZRCtBZGVsbGVTYW5zLVJlZ3VsYXIgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE4MiAtMzIzIDExOTggMTA5OCBdCi9JdGFsaWNBbmdsZSAwIC9Bc2NlbnQgODgwIC9EZXNjZW50IC0zNzAgL0NhcEhlaWdodCA3MzcgL1N0ZW1WIDk0IC9YSGVpZ2h0IDUyNiAvU3RlbUggNzYgL0F2Z1dpZHRoIDU3MCAvTWF4V2lkdGggMTM4MCAvRm9udEZpbGUzIDQxIDAgUgo+PgplbmRvYmoKMzIgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE3NCAtMzA4IDEwMzUgOTQ3IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA2NjggL0Rlc2NlbnQgLTMzMiAvQ2FwSGVpZ2h0IDY3NyAvU3RlbVYgNTYgL0xlYWRpbmcgMjAwIC9YSGVpZ2h0IDQ3OSAvU3RlbUggNDMgL0F2Z1dpZHRoIDUwMCAvTWF4V2lkdGggMTIwOSAvRm9udEZpbGUzIDQyIDAgUgo+PgplbmRvYmoKMzMgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9BR0tYSkUrQWRlbGxlU2Fucy1TZW1pQm9sZCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTg2IC0zMjMgMTIyNyAxMTEzIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgMTE1IC9YSGVpZ2h0IDUyOSAvU3RlbUggMTAyIC9BdmdXaWR0aCA1NzAgL01heFdpZHRoIDE0MTMgL0ZvbnRGaWxlMyA0MyAwIFIKPj4KZW5kb2JqCjM0IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvSVBFSkpHK0FkZWxsZVNhbnMtVGhpbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTc1IC0zMjIgMTE0NyAxMDk0IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgNDkgL1hIZWlnaHQgNTIwIC9TdGVtSCA0NCAvQXZnV2lkdGggNTcwIC9NYXhXaWR0aCAxMzIyIC9Gb250RmlsZTMgNDQgMCBSCj4+CmVuZG9iagozNSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL1FRVEFRQStUaW1lcy1Sb21hbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMjAzIC00MjggMTcwMCAxMjcyIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA3NTAgL0Rlc2NlbnQgLTI1MCAvQ2FwSGVpZ2h0IDY3NiAvU3RlbVYgMTAyIC9YSGVpZ2h0IDQ2MSAvU3RlbUggNDQgL01heFdpZHRoIDE3MjEgL0ZvbnRGaWxlMiA0NSAwIFIKPj4KZW5kb2JqCjM2IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvU1FLVUVUK1N5bWJvbCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTY3IC0yOTkgMTA5NCA4MjcgXQovSXRhbGljQW5nbGUgMCAvQXNjZW50IDcwMSAvRGVzY2VudCAtMjk5IC9DYXBIZWlnaHQgNjIzIC9TdGVtViAxMDMgL1hIZWlnaHQgNDY3IC9TdGVtSCAzOCAvQXZnV2lkdGggNTcyIC9NYXhXaWR0aCAxMDQyIC9Gb250RmlsZTIgNDYgMCBSCj4+CmVuZG9iagozNyAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0pGUlhRRCtBcmlhbE1UIC9GbGFncyAzMiAvR</mes:base64EncodedContent><mes:contentType>contentType</mes:contentType><mes:documentName>names</mes:documentName>
        </mes:CreateEnrollmentDocumentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6fc9718f-f69d-46f7-9a41-dffda9a7c22f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="9c7d00ba-2f31-4166-b13a-3d560078b5a2" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="8e097316-b0d3-41e1-af4b-18225c6792c4" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:commandStatus[1]/text()")
def documentId = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:documentId[1]/text()" )

assert commandStatus.getData() == '1'
assert documentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateEnrollmentDocumentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="76988d82-bb2c-4242-9610-10566475269b" name="CreateEnrollmentDocument_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateEnrollmentDocument</con:operation><con:request name="CreateEnrollmentDocument_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a2d6acb3-7045-4a9a-bcfb-42997ae5c540"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateEnrollmentDocumentRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:note>ref</mes:note>
            <mes:documentType>type</mes:documentType>
            <mes:base64EncodedContent>JVBERi0xLjQKMyAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQW5ub3RzIFs8PC9UeXBlIC9Bbm5vdCAvU3VidHlwZSAvTGluayAvUmVjdCBbNDE2LjkzIDM2My44NSA0NjAuNjEgMzU3Ljg1XSAvQm9yZGVyIFswIDAgMF0gL0EgPDwvUyAvVVJJIC9VUkkgKGh0dHA6Ly93d3cuY2Z0cGF5LmNvbSk+Pj4+PDwvVHlwZSAvQW5ub3QgL1N1YnR5cGUgL0xpbmsgL1JlY3QgWzE0My40OSAzMjEuMzMgMjE0LjE3IDMxNS4zM10gL0JvcmRlciBbMCAwIDBdIC9BIDw8L1MgL1VSSSAvVVJJIChodHRwOi8vd3d3LmZpbnhlcmEuY29tL2xpY2Vuc2luZyk+Pj4+XQovQ29udGVudHMgNCAwIFI+PgplbmRvYmoKNCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMjIzOT4+CnN0cmVhbQp4nI1Y23LayhJ93vmKfkjtSqrwWPdL3jDgCqdsICAnlaq8DGIAHQuJPZJM+JHzvadnRjeETDapGCFmVq9efZkWBvzng0ZsF04fHgK4f9TBIZoGwRYmgbijmy5xDfAMm5g2BBv4tDqyMKIxLAp+TDMGwzBMiySHWXFYM\/4FLNPQxEvH\/5Zj+7DKac4ODJcsGI\/SzRd4pjzcgz4AQ9NtuCs\/m9UNWNAdA\/0e7M8Q\/FcQ+Qe\/0AQv8Q8Z4ZXhmcRywHUdYlsQHuB+qsM4hW8fXI2YGriOSxwDTN8hHtrQiKsDZ\/AAwivXJLoJrm0TX5NOLTjNaJLvYfS9stkss1xiqWXPLInT6wWmRzxf4VD+CnIVyMvRsLX6\/tHoqGvaDnG0NpHxdDkZBTB8eoLhaDR\/mQUwnX17mS6nkxUE8y\/Qwqt2WxaxHbl7xNMs4yndZPAYJTSRgQpYuE\/SON1FLOvbbiIntX0xh4f0Nxi2bfp9Kw2X2GUS0ASjlrN0gC7e+ZalGT3rdZ9oav1inyYMZin8DzzPuzMt786yLbPaU4ZMl9tuhkxzxV1J4eX5ebj8CfNHVCqYfp8GP+FC7KtUNiyRyo5vioyRrJaT79P5ywpWwTCYPE9QbHgYPg1nownMZ6AZ94bXgqwAPIMYZbQmi\/lqGqzuR8vJGN\/bGhg68fT24o+GSOEePPTeUwH4MQ2+jpfDH8On1f3q5SFYCs\/ms0tcm2CNtDZ9NPphbZ\/YhpKqdq\/tnXlv6j2Em20fda+FrGLk2BYxrHdidJ3gKmqO6RPHk5jo0mylvGrCFnydrmAxWU7n4\/cjWNo3LYLJaSrzukV0V9hfQWMMBbJViozR7QpQx8wRuqn9uifbSQdA13zie22ENt3xZDVaThfiugI1vDaoY4tQdzANr4v5XtKYtiF6bAlmoWR6F8zERqFfgLUypsKxNJ34t0lZGqaI38apmk2ZIJ2gY+Yaxk3RdZ2YpkTCvGqaQaW6AritegOxZGHBeZTsYMzwjIly2PL0AKM9C1\/xbld9Bd7rqEhq3WljqyoE+eoqr4D6lccw6nob6BKiEv0GF8vELv9HLqXimiNa5w3Fbd8VnpWKm1pXcQVwU\/EWxHD0FQ+sszyl8xRCzjZRnnLAPr\/hFIbHY8x22O+70isr\/dJj0dta20i\/6AqiX3QXP15AyF7Xr\/wNKqXybRzZ2vqUt9Gm59YNrlPM+BHDa6MV3+ueQstJ8LKcTcYwxWYLj5PJqoPsaMTB1mPpxDUvkD8YOvpl1ivEOetc2cYpw3fBtmWbls1pHgyf4HG+7GugUn7\/NqSJxGzzGvLnZLi8C+Z37f5Z+mA54nTo8QHhUF5MbBvnM8dsob2vS+V2CXrNsfbi\/RVNQeiu6GnC7mweTL7A5Dc9RDh15Psog6weQkPK2baI4zNgbiPIMeU5Xp4h4pztipjyKMdJiXQcx5JxWmmhm6K51hQM\/IzMLJTAVxPP9HkxXwZDbKnNHIeheh62z4+avOU5Iv\/lxgQp4lydboFxnvIMsA7\/KViWR2mSAdB1WuRwTgveODUAFrMw52kShZBzmmRbxsU+eU1DtTVNrrbluO8oZ7MiA4q1v2eQyEEejtiAc7YRu67pup7ohoKu2IHdGYVFwh2pkcAJ1azA\/zidDqA9gQ7gYsocgBwzgaKFFEnhO3qDWiUDiLbyGs0nrz1sHV\/MlYLtpf+CIGchi445IPETurET90q4hKH7hxSDHCXblB+okLHUn7ZkTqRsfagEfjA4FFkOe0a5OsUkcgoxruZ9XHXR8pSy6D7y3tAzyrcVy09oRlhQzjJ4nC5XQdtyAqd9hM9S4kuZPUjm2gY2W1f1wb\/gL9AJBiGORZCkPAk9MFkbtHyyKxPi1yfUBQvl12fSA6kTo4E0CJ7cWcijNbugIj\/UwgkvsBihSLIC36SwA2mZ\/T7GNJIxDmNUThRrHW508Syv1yyO2BtGR0YPv6jNVCuaCF4zNg3i2jVj8WpFucdDnKqNZr3ZiCZ82qQxNg6gBymYrAQMVZHhs7KoIUmsBxP7n1\/OcQxOEeJFyZuodHHWqmiE6UFqkUth5JowxU4VqqalXD5iYh3z+ExguhVJktNXpvyWSYQJtS4y7IVZprIJj\/hNKqt1IJYrVHnmK6NV5K8Z4+BYPgtvy3CWPjf1h7GIylgMsFQFBfW1NLOnbyonCtXjxOUBG9AZNoUc+WSKRAcZVuFHJjVOlRAMZREEG5nawVKt2vQs0YSrVu3ZRLO6h4Xp1I+y2Ip+M04HME1CgvQyaVXkXhbtElVWWyXLez99DHecqQKUFf4o1s7pawYPFPX4GwIuWsAIHcCQDZpAoolC1BpeXilt2vXDM2fZEft3tI5ieTQJPh0bRbJhKhxXnAhA6aJ0jm7wUIwy7CaYl3\/+veDXp+Y3GDFKauVfXf7lOzle4XO7f8H4dDqRcJsf6Zlg2EqEZp1HLJz4THGg3smQYXS28K02oVDF5KK3UX99rmTqrq0k06qgYiNcsz2Ntz1adeJBYIEtBqOZpDkbCA15WRFrcQ9CrKCdOAJUZjJ+yOqEuE6Asigyxt+isPm95R3CliFyUxDGCn6LNhgSzHSEJjDM4Eh5c6oqGgNld1M+FlV1igXWcbJyIIwxUTcy5QSvNY0xysirasJcmaTYKk+Qlfl9m7RZ\/35yLOugptHOrfW5zrtq8ChDIho77uAbQQWZ5vtLad9L4xpPOnegifiZUALfJoxPuZoaSCsHu8TXhdRQFKJoPRns03ijoLdYWpkiuWVYZFRMjpE8sTZVHFIub+VRXshJC7kOEarKkgoCb3F2EOfa43g6qkDIH9hj0diK\/SMmV3ccwQ7LWA\/CdZXqWHCW38YTVbpVkooyvY8xY7HN1A\/YzRZb1C12V8e7UbCGGstbBvA4wlBv8FiRTFlSZqM4OqQyeIxhGmTy+MYGfzxX4V\/w6I2GZ1ikSEoc\/lmKgRNHqYzEvwi65lVBf6drk2b\/\/wGfn0ckCmVuZHN0cmVhbQplbmRvYmoKNSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgNiAwIFI+PgplbmRvYmoKNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk5Pj4Kc3RyZWFtCnicNY7dTsMwDIXv8xTnEiRIbWdp1t0N8SNNgDotL9BlodtE6Sit9vp4iFk6sj\/bso9gZcj6gLN5iCieGaUlQvzAUzTfIAVCC52xCzYI5uKt84g73GxOOR2aT9TTcOp\/MpYp9dPXiPep2+ZhgZkTugSrZqWvsBmbMXdZV+o8HPrdAm\/NkPbgOwixx\/0\/u2sDddNmSAF\/i3hUS1hfTGEFxlnzUfWiav+shqoMCnQtZW6d\/oUw2cqxIHWmiPUr47HXQ2vzC3XrPWwKZW5kc3RyZWFtCmVuZG9iago3IDAgb2JqCjw8L1R5cGUgL1BhZ2UKL1BhcmVudCAxIDAgUgovUmVzb3VyY2VzIDIgMCBSCi9Db250ZW50cyA4IDAgUj4+CmVuZG9iago4IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11HNJQ3pg2JqENFZEfKCEU0LpC14rfn0Fg6co+tmVfxlKRdh5X9RaQLQxyTYSwx0dQF5AAoYbMjPXaM6bstHUIO4w25xSP1Q\/KoTu3fwnzGNvht8dqaLapm2FimW5hRJPcFdj0VZ+aJCtl6o7tbobvqosHmBcwGYfXB9tnA2VVJ9gMboxwEktY30xhCYOr5JPoU1Tfrfoi9wL0LHmqrfwFG9KFNYzYqCyUX4z3Vg6t1T92TT1uCmVuZHN0cmVhbQplbmRvYmoKOSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgMTAgMCBSPj4KZW5kb2JqCjEwIDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11kqahvIHYkNCGipofKCEUEKWstOL3ZxBYurKPbdlXYyVIWoe7mHsk3wqZJILf48uLPxADoQbPlHHSaUy0lcbC7zAqrzEcqzOKobu2t4hZCO1w6bEemm3spkiNpkcoVprZHGVf9bGJvFLE7tjupvitunCA+oAmZfH5YvNuoKjqiDSBHcOf2BI2D1NYQeHO+cRasuqnVZdnjoHepZ5Iw3+hFcncKI3QiMQXPwaLlg9txD92rz1wCmVuZHN0cmVhbQplbmRvYmoKMTEgMCBvYmoKPDwvVHlwZSAvUGFnZQovUGFyZW50IDEgMCBSCi9SZXNvdXJjZXMgMiAwIFIKL0NvbnRlbnRzIDEyIDAgUj4+CmVuZG9iagoxMiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk4Pj4Kc3RyZWFtCnicNY7RbsIwDEXf8xX3EaQtdZKmobyB2JDQhoqaHyghFBClrLTi92cQWLqyj23ZV2MlSFqHu5h7JN8KmSSC3+PLiz8QA6EGz5Rx0mlMtJXGwu8wKq8xHKsziqG7treIWQjtcOmxHppt7KZIjaZHKFaa2RxlX\/WxibxSxO7Y7qb4rbpwgPqAJmXx+WLzbqCo6gibwI7hT2wJm4cprKBw53xiLVn106rLM8dA71JPpOG\/0IpkbpRGaETii58Ui5YPbcQ\/dxE9cgplbmRzdHJlYW0KZW5kb2JqCjEgMCBvYmoKPDwvVHlwZSAvUGFnZXMKL0tpZHMgWzMgMCBSIDUgMCBSIDcgMCBSIDkgMCBSIDExIDAgUiBdCi9Db3VudCA1Ci9NZWRpYUJveCBbMCAwIDU5NS4yOCA4NDEuODldCj4+CmVuZG9iagoxMyAwIG9iago8PC9UeXBlIC9Gb250Ci9CYXNlRm9udCAvSGVsdmV0aWNhCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTQgMCBvYmoKPDwvVHlwZSAvRm9udAovQmFzZUZvbnQgL0hlbHZldGljYS1Cb2xkCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTUgMCBvYmoKPDwvVHlwZSAvWE9iamVjdAovU3VidHlwZSAvSW1hZ2UKL1dpZHRoIDIwMAovSGVpZ2h0IDM3Ci9Db2xvclNwYWNlIFsvSW5kZXhlZCAvRGV2aWNlUkdCIDI1NCAxNiAwIFJdCi9CaXRzUGVyQ29tcG9uZW50IDgKL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0RlY29kZVBhcm1zIDw8L1ByZWRpY3RvciAxNSAvQ29sb3JzIDEgL0JpdHNQZXJDb21wb25lbnQgOCAvQ29sdW1ucyAyMDA+PgovTWFzayBbMCAwIF0KL0xlbmd0aCAxNjE2Pj4Kc3RyZWFtCliF7VcHeFRFEH4bOyiWWECsKPYuYldExYq994IdQknIu9frUiI19CYSCR3RxCASBDEixWCABEKNEA64AEmAnEAE7mNm37tLuZCEzxT9vvu\/u2\/fzsy+m392ZnaP4yKIIIII\/q\/I7XSw90q\/P7Ww68w1je3Lv8ENee+8Pvrtdu0e2z7mu0k5x6DC64R4Gtav40Rujr\/99o6v\/IbYseuOxOx7q7KSCSEGx5mEb2j\/agtf3tS9BU0X7sgH7Fi48MiGDP\/MKsxEYuJAidzA\/tUWm19MvKKge\/6X6xm6N83vuOeekv7hdhqxcPjvEjk4dfqeFq1SUo44SElJ33X1mNQzQnpbhJzSMLEIMZ1BlAixTMg04GQbKLEw57CCTKI5y1SU25CRAiE6hkAnvEUI5W0QmHbd8+jkH7140fr0VvsX9ezZZ1HPPi32p6fvWvxqaZKrl3TmaAUiFkdcSBxPXBE88MxdtkxDoQ58HDVkpUHKwax7IqvHPh3ti\/Z9eOYHb700LH\/TZ3828\/mi\/3ig5H5XT4nhhM90UouFGfwVOHRdcIxY\/VAichI6zzH\/mbXNTICVygn4IgiExjavznnE+d8cEjvk0qKipKS2yl2xbXO\/v\/vsHxVl\/ildY5hewqiHE6FsIqDbtqU7IbYIha\/IjAWXouUQQ94aSzoKlDACdU7ki6nXXNXjkY+Lug0qLj5x8EeDBv2aFPPP9Z+P3OiPY3o1dHZUIOJMIOfd1EMiHp1IBnG2j7qENCDHzM3yROR6INJ1+cWZLVs+fquiKLPmrHqqCEbl4cnLLsl832nBEDy5EhEpNIFsgS9UrsqSXiRWMPkN90EkusflVc9EsjP2ZGW1OmGzktumTVGX4sBsILL2vYLnshIvY3oIs86XJ6KzWLPmZGEhsCRzzhgoEHDTRl9BJSADmdWIiNGoZyIrx2Rt2PSNolwQKM4FDt0CM2JgaDbsrMQ8x8DpUyTUWAWWR6YjNdz2xJ5wHyD+Fssz0+1lWrCpwcJ6rZHUjIKTwPNTA4MVpcmhHjGxPwS6wDzmtMRS10JCXwT0khGxwUURkx5qQ4Oge4AZFZ2a1tAOigaT0aKsO3MqjCbuqRMI7F9YeHVPpPAWRYkvDiQpyhuTR2QeaqIUr8JCef6cvOqWuXlWCQJ62Ugo7Dw\/Nn5WYLOi9Fh2+4asEdcuVU6e001RPi05t7plVRKxnMpuHORduED5NgDl8XLm9K8Ar115ujJ7jm\/IPG8V160y0HAiEiFVblMD4bB33k0\/A4+Rv89tvQTQesvfS5XZMwZ29lf7Byt4ToQg6zahocQyq2QkE9c0TGNpld9Wflara+oa\/50LoE+9u3duv78Y+m25bm38zpsHrI53DODyF\/7D4bCp+yDVeJNCU9YLaUhUmYhdpuKMSiE7Fp75+pOdytKN53WY6KLDlotiB44dvi\/oF4TZQwyC3cnC5mtDf1VFg4gyXsPAb12CktEp07k+GJYFXc2CQ4eoMsXT0WMQg9eZwPFSpuwgUjkJdlc1wNoxhNs0lcGEjbAKWiOR4GwyPBIhWjVE4laW3PjsQyu27g7hQPMXHjx\/tasWWDzgSmsZEEYJnOYwg2DGwUFpolYULeqRqK1LoWAKqmpwPD7xhq3b8NHAUnIFQSIS9UAOUR63Hdq0Ywg\/aKEJG3kDVSC0IFu16mhwWCW3rZuQdqAMaUvum5IdFyTCLn\/U5jRIeyprEBkV9kDV4GILDpgePFYEDf1HHbvvEltTVSaCI535TW0qc+UFjAi74uNrOGYdMrQJPLIRd0RFITYSidbQ3XOihu\/tlzZ+3Ljk5ORxyeO3Tsjwpu4LKlXWiXSbE2FHsLsa8DJRg6T2wDaZlmpyoiXijnCOjrnpErF1D286\/pkmV17AiMgQH7gDWRWIQElYaMJGD3XC6DYPnoZ7X4HJgCntm09M6zV06NBeabt\/2uYdta9MiZd0GZIfgqPLkKbgDAiwOlWsajjHDQ3y2SBM5+aPaYEBZA7IKQogaSC2EAgUOC3JrRGgoxNIG5g7hhJWHpiwEWsKXizhalWoub0fHhWVsDxj2ooV06b9sm1KVOmjNdg3GES8ox3P4XR5zqQob9+EhIS+Xm\/vw9H15tjxAnYr+Ce0tljTf90ThaOySw8+6asfnyKIIIJGw1G2ZvkFCmVuZHN0cmVhbQplbmRvYmoKMTYgMCBvYmoKPDwvRmlsdGVyIC9GbGF0ZURlY29kZSAvTGVuZ3RoIDc3Nj4+CnN0cmVhbQp4nAH9AgL9\/\/\/\/AAAARE9x3OHs9PTy2uTo8vHwiI6P8fHxssXL9PX5pr\/O4+Xv4ePo7vP06\/DzaZKs+vn5ZW9\/9\/n6qK+9Y4mTPkxx9fX2ZoaYlrPEX2l9cIm1nam\/ZIiwYoGx\/\/34pKu56+zwn7jIaY2mfpC3cJaisrvZb5iwjZu5i5vChZay5uny3+Hm09K3+vfoxMOr4uvm7e\/1a3SCZIip7OzqZoWg\/\/7+dHuF\/v\/+\/Pv5YX+a1tjfYXWY0tXdy825qayhkKq9kqK1V2+O0tfm3+Lw5ujsbZGYiqS4navLf4id4OLn4+Pg5+rWmLbHqbC+\/f3yZZCp7+3TxMnHmJ6uuMvVvsTasMnWW26JXYGhUmiG29\/tvb+uzdrhgJuxUF98z9Tiy9biS1x63ufr8\/f34uTp9vX06+70sLGj2trB1ODl1tnqv8TOgoiN+fn4\/f39j5ep9vb1o7zMyM7j\/\/\/+6uzvkq\/C\/v7+qqqq7u7uVVVVd3d3zMzMu7u7\/\/\/\/mZmZZmZmERERMzMzREREiIiI3d3dIiIia5CGgImdk7DDSVZ5S1l8pL3LbpSdzdDYTVp39PLX8\/Py9fX1T2KA\/\/\/4ao6Co7zKR1Z7X3+pwcfaa3WNaYSdX3mVeYKJZ4uFb5Woao6GQU9xbI6e+vr5+\/v7a5CYaIuGZHCJhZa\/SVV3Tl19YX6PZouk6unmxcnT7Ozt7u7sS2B+\/Pz6nbfHX2uF6uroa5CM8vLw\/v784uLfYn6VZYycobrJtrmq6ens\/\/\/l6+jNWnGLscbT9vb2W3WRuc7ZlLDDYn6hfqK2bZOh6enxa4Sx\/P30Y4CrVWmK4+vubZWtY4OOY26K5OThcnuTrrTAm6K07\/Dz\/Pz78vP3pKq0pLzMc5mteYukxNPbk5qsbJGd+\/v8X4OXqsDPbJGSRVJ0UmOFdZOrrMPR9\/j5g6a7\/f3viqq+ao6SbXuR+Pj28PDudp60ZIKf2t3iVWF6WWaCfI+xmrXFaY2Ms7jEjJSm9Pb5qbTTyc3VnrjI5ubkjbkP+QplbmRzdHJlYW0KZW5kb2JqCjE3IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0Zvcm1UeXBlIDEKL0JCb3ggWzAuMDAgMC4wMCA2MTIuMDAgNzkyLjAwXQovUmVzb3VyY2VzIAo8PC9Qcm9jU2V0IFsvUERGIC9UZXh0IF0KL0NvbG9yU3BhY2UgPDwvQ3MxIDE4IDAgUgo+Pi9Gb250IDw8L1RjMiAxOSAwIFIKL1RjNCAyMCAwIFIKL1RjMyAyMSAwIFIKL1RjMSAyMiAwIFIKL1RUMyAyMyAwIFIKL1RUMSAyNCAwIFIKL1RUMiAyNSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNDU0ID4+CnN0cmVhbQp4nK1a3XbbNhK+x1PgUjrHyxAAf8DsRU\/WjU+zZ+OksXa7OW0vaAqy2KVIhaTs6oH2kfZ9dvBHUbZEQg7TU5MEwA+DwWDmm6G+4Z\/xN0wCj8RMX2gS45AzLwoDguPI3NQC\/4JL\/Oa6IThrsO8xnySRzw936NDWZIDpezTAvvxP3iTwN2R+jGMfJglinG3w3xY4DtUQc1ls8JtFRhDBixX+Fc9uPtzO8V98j+DZv+dYXd\/LK8WzL6oDbt7Zmyt7g+0NvI3029fmLQ\/6fseLv+P3C7XuYxmpn3gxI9GQjMjIiJWMszdv5njxxxk4Srw4DC9Aw+fBOv1FnHjMBQ309\/m5sj78y7R0WrOa+WoVbbSHZne2ZfFC1V2L3Y2P5mqfb3vv\/o7O6juKvTCIyNCacH9NqK8hBSNNjXOPE4ajGEw1igne4JDCbdJrKo6aCI9R0X8NGmDIGq8G1B5RL6JWxFBPri9G7fTlJsqX\/YT7AOjFlIQRj+CO0zgIiZRcnabru8M4dGLc3TXcJzzAT5jiRT0gYpB4gRURkPyERXiRYTi9crC5aGFZZyM3cle1IcjLQm47bNzbOQ7VWiI0+wWaIjz7CS5MW4EcKPvw7Efd+Elf3pu3dd\/NhzkOtDEweYKR7Hr\/RQ8xMKdQdJuZVWMsfup3fdVQZvg\/9eVLf+rP+sFOZsQyL9weLeQfeI66eUzXzacjzI9aFLtyPfQY7AftWJAxzRP7FMSwPTHhx\/s0sDunrf389lPwXsGQhQbGQm\/yMi2zPC1wVm22aZmLBmfrqmoEXldPuF2LPW7WKbj8fbWr8VbUTVXC6LxcVfUmbfOqxDdiKWpom6Nxj0XC3uk+Egz3BUOzIn3CD\/mjFKcqm90GJpbS4Dp\/WLe4rXCRb\/IWN9VG4Ptdi8uqxWlRKGHz8sHrpJJAadFUTuL5cLycxKvFt11eg3S7RgrTCpgaNKSU9iRA5qIQWWtUl5ZLvK2rVrYoNfa057nIFfIIvCM4r3HBPhcihc2rRboEfeWNVEyegUQgyGpXFHsp7q4E3TStlOtpnbZS4mXlnY84AUTDJOEHQdCYIG4BLIypDIdToYWxtHoHtAUYUrvfwvZVq9M23dtDqSW9j0uxFfAA3dISYUeXO+h32b+AOZp9VeNG1I9yx5Q5pY8CP+XtGuzMw1Lsg5DnNcIgwFGga3ZeB40MrriRSzbToaFlUu50fPCsr7+RJYMJ9zcmS0t4zordUrw9r\/kgimT0ZM4ioSELIz6XKyQ4JNTj0QDaAsgJkgv87wAaYV4c08gBjaJR6yc0cpQtCwzaXaUc\/p3IdnXe7nG529yLWu06aBYc6oBlEaBpJI7tbN93cju9BglsFx9AW1ha7KLXcbQT\/OysXkfRupW+y7JqV7b4Pi0gpmq339Zp2aSZMl0w5baq9+etlgUhZAmHOSey2oADlfSnstpxtEusdhSts9rrWiwh4BslKuVmuqnJKojEA8lXEno+hDA72UThRvoYNh1aSLzECe0dUI3VCdpWCrGUwV177mwHehowNRp6lFFu53UwNaBg\/2tOR0vJgHZ16bROBh7EaZ0QI\/Iai0dR75fpHkhek5eigZjw4VbF30boY3UviurpSsavAmxDk0TgQMAae2pyCNIBRE3ipIkeVYZopPWtpVVaP6+oqyPpXGSCMzxyPIxMQOT\/BL5ryHvTGcJfsWZ5AmauVYCVMmvyrPihJczn43sQEI+EPnOWxlg8Gl4bSwJ5fpzQxjXFIKVys2MXK2URuIzTKb5xcsy4zAtS\/OGUnYW0F2dkyh6wkZR99hWSiSGXHXhxAi8eQw8BDrlsCP2RH0WvEfRXPNsCq4D0GcSFDBmcNSTPcDpUWzFHur4Q41muag3lSqXVlR69gbQanvTgVvXoYYqVxvZV+xe9aHntX3TB+B91QaDSy9QL1D030ILswv5U3X1d6GXpofq1ddrr1kN\/6AZdItPY3+eaMnUfPb3R7V49gNtQT4VahV6L2Rb90M5RoGDOl1RDkoA5JtZ+hmoe4wTicGwCv+dFXonW0ZFp0CI6JVrCJ0SjLJgSLfYnRGP+lLvAgil3gcVT7kJATu4C+FIec\/+FM0XPnHTv38AcAfd8\/\/kcqhbs83F\/3a67402VYzIVWtY9rOfIuGVZ9Kz1wFK\/9dB3BDpsQgA8WQsNCfGoD6m6kXMgbXOIUge\/AEc6olOxcwZCDpaWTsk2xAfQKB+gcO6PTONMCR8dl\/ArXabWwUMXwMWjDjq6bW9DCfQs9eDUtsni971u2+lLo3pM8NJNorEhrsPZHr0j50G2rerjmFffDn55k2kVi4lVwGWsZdjWOn91jP1K6+j81QVoQyeWkfBSvK9DeS8DX89pkEy0WutPp0Gz\/nQStM6fToMWXmwlt5X7sX9Zqwy9hNDnJ37U4NGxwZ93JJyNZUYmYjW7bI1TlTtu6yqDZFt\/rugVsZqrATbAuZdwQuyME\/leGiWOFYOPaV628L+WOtXluN9mzW\/zK0i6m20lC3IDRRG5gIBEiZ1yomSShuF4YUElk9cj+Rz4G58HI4CoX0PBVS0\/9agiQCEeVDniUTRt\/pDq7Rxid5CgxyTqFjDVfgauVbhPNWzbtqrV9z5T7Lvf1SLdNf2PVeg5xY28mDFmJ3ItV4x83KA0ci5XjBc\/KHEru7kVP0gSj5crXnxG\/q5yBYEzzmm\/CuD0C4MT9ETmkcAu0nqOoO0\/olV9R5Tj4RzNwOdoBur\/bsGVilIKmWkch3ZxhjIPFikrXK1WosaDJ5dyCpyGPNfa9\/KOC9CceIc7nhvvmGa1lndMg2Z5xyRoHe+YBs3yDne0SXjHkbVPxzsgkPZ+2zLEO8yXYB2lzLdgxUIgjg\/8KoHKDDeJuZ1povhEQlX7nQoNgtDgTxymzxxhT3ux5dWZ4\/kUjRDfiwKQ6TATMuULnowHgT8q7fHzUl\/bo7meRXPCQkXFjhfllg2iF4IzYNgkCU+oiEcJ\/DsrfPc71E2qogpoiUOwUvfCVEBlC4Qt4qu4pasgOgABJ549mUwayX49eK1Gmf5KPfQ7hJ1pIFkGlxHSqFvQ95X4DxYk\/dpRcPfp+L6ucl047sr1si5knjJdLNIjTFdhKwhU9qthlb5ISpDo2P4CKVexXeg2U4rybLl96Ae98qcwnNu1mdg+TVnBFlWP9fZK19EVKSZBO5AFdzQ3suCM50gWJlltRxYmQevIwhRoB7IwCVp4sZVMQxb6x2c6spAkcnIQZ5wtuHzHGYFDFwZxHsgfkZ2GQ2ej+M\/4\/zgQtckKZW5kc3RyZWFtCmVuZG9iagoyNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9HMSAyNyAwIFIKL1RUMSAyNCAwIFIKL1RjNCAyMCAwIFIKL1RUMiAyNSAwIFIKL1RjMyAyMSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNTcxID4+CnN0cmVhbQp4nM1b247juBF911fUYzuY0YoUSUmLIINsI5OdYJPdwRgZBNk8qGW6raws9erSbud\/8kPJD6VIXXxpi6LGxiAYoNst0acuLNapKml+hY\/wKxDmksBvf9EoAB76ruCMQCC6D6WEz5DDN\/cVgaQCz6Xci0KP4aeAEi5C4XhuSAPGCVRJu+7+06V1MKz7dI+fo5DBDigsS9QDl+NK9U99iNS3fS+AgOB3ROAkW\/huife8yBewTAD1Uou7X8stfLNM0ApYruHvcPe+WMBbAnflAny4gwUIuOsuNQvn\/E681n+0P9MFcLjL9M\/2c1zrG7JaIH73Ffms\/5DlwsFbe\/3HqhUQ7\/t1\/4Dln+APS+3mU\/Oo77te6NHePNDmOco85k+b99CgLrTXL5daYHupasU6l8WGKEEE\/FSsSRia4Sz\/edmIYY9EFLgk7NG0ERf3yDkx4qcG94DB3VPRan5sxbfayScu1GJVfCFS6ZzrQhh3AybomS68\/Vb3q7WMdZal+boot3GdFjnED0VTw75oyiN7jQGMilwMXBr4LvG56BVxbFwMg8hjI19h+55QHidn2CYjj7Bfo0Wz0UxwhM+F+5s6UqN4PkNfs+hGxjJ6S9cF4Q3RGObeG6Jxby7aX4qjCDQEvYOB+Uqc4G5E6HkSmIx35zTex3NLSN3AfJ6dFrYu47yKE3WeK4jzFciXJ1mmMk9MYYYR5hLBo17Qdc4\/qC1C15+LNuV7M1MKzs+y8GWmdOyZ8tWdM6Z0ZjEljDOlcO4eToS2CB2\/tZc61MrIqz3Bdc6Yl33HXcuIy73jIuQywcEMgnPGrSCYrCLfH+ROninHnkMORHmCfRKhzihR2sXqgRyds+3xQpdzKqwNO2yPM2UYJcT1BQo3GHaWMY5ZfzxBBLgZLDTiOjNIt6dwezQw0244F3CCdoOOdm9i7kC7N0ELZttqRbs3QRto1xrtmHbHafUWyh0SGUWS9gJiAXdfylVa74qy3qS5rCoAcyBSj6iUIAYZt2JSgrzsfVUm5RGSt\/d\/x6TtpQ6yvbTFP9TqFvkXqZY448tbvj0oNdJdXciBnsu47\/eesWoVJsIlDGdDWqTVeQpapFV7QLu0ehtz+7R6G7Rgtq02afU2aH1atUezSqs3Ue6QMELfjW6HJqKjatOE9mEN+3FATMIuC2g4A7BoIC4lxJDLHSRNVRdbWb6BnYQkzuFBPqY5VJu4TPPHtm46HqL4HqzifQXrstjajI24qtFHyOhEL+eu3kjErqXSpJJ5DUhKFeRFnSbShc8bmSt1tO55AVmRP8oSlH6nNhR5neaNtFKOeYp2bHQrtEvka4fEFaxklZTpg1zhjVOlvy928lkpphRX3lXaYftqpRwVRwRlUq7BVrjGbngPdbqVgLpm6TatTTQeuB4zirCvOyjxZoIpF3YB5ppqcoZ4XJwCO1cfPGwhIo3m3OAYsyiwPHUfG1npscU7Ay7hWAexcAbsX1MDIRHMCaGaU9rjpQY01SSJgM1AM8QgCXQM+jPQTI4LvbloeGqKPMOyVx2e086aXJpWUWyqfT+cI2K327nrNH+RZewmxfZC+36J9MOAzAksYwnB56IV5ZCj2rTy04\/wXfEClHM\/OohyBjcpt9BIeUWoqQxstQ2Bf7iSHV3hqj7HK4dv6StOBhtYj7vlcN6QhIlV3\/8Js+2fkU2KN3D\/e4iY51FTsvHCdqZ0IuDqZMNE2BHMTZINZzesZ5gfWdYzv1ma6g+sBL0wmgGHNP++PRRv4EOeuPDz3X+6C\/\/9eQFP8X6r2P+pLBJsSVUVUsnyGfkUkFnj1TbN06qW2LnCw96GSBnlU7Oijkjvy6KqyiJeVUrDOE\/SODN2wxjgoQhNEs6obymTTV5kxWMqqzfwww\/3gJUExFmGRcRDjYbWdSa1+aXMMHpXve2VO24pxz6GRVE0w1KrAEGmnDhrQBzbcPMxG0zUWs6sFn\/06dxBJJ7l04luFHjTI93Pm7Y77xvsSKtEKObzhdOOeMVwaaXXFvZtNuFYf5CQnGl37Wn2FdXTrzpBwcLCFfR4goLJfnKC8n2hZ+O7YWQRaSdS7cTWu74eoLP+7vv+kX3oqMcEuOZF321Xlu2kpZ+64PonvabsZzNUb6Lo1yf6Z71wRL9ezVeonpuwU4hjAa1CLVyrRCsy02q131Iq9nfXCwj69eUwxhm+1mrUfuEY9J1+1QD6oLMNKj8grlBvWpzsydX0pXg7YreiL5+GLmc2IbosVPavZdIN7p9kWRU55uLjxkt3oE0eN\/WmKNN\/YaqME0UY+rFgU0ndDeJvG4rw1ZsxzCZxVjJpyrTew1bGVVPKChs+rJKwunvK9rBLa6xj5AqpLIMs3rmw3EhUYVic5knWrKx0olGEvYCNTkp4g4wIVbyWj01crpBbtKLolHWaydYnD02arZBO8SaqUpdpUity7byGXePZqxHjmoVYCVtpNmycko+CigaZbdhEA7PyyCVRMIiyKVxzZQLGArpb4mYUe4l27zYF5BLdgPd+yYtdu1s2NgaeCn2bucVxUA7hoQw22IdEHQpKz8QYD+xTmT7HiWEURIXAIOZsAL2OWigyylw4XbOtVKQbam3fx24giIIv1PM60qI8ODpVlk9bx9FUGyMmKNA5LzC+nAKdgV\/MFJj0jwVoy1D9zwMFOh0F3YQClVo3okAHKbCzw5r81LzXC9jZblz7GI36xOWXX0r5EjQy+sraGdpnNcPMMiP5vdFtg3yJMdEpoutmo9+OJzZG0RohTHq8OnKjYMTrHiao54HGFmFJutP0b0MLSXzMB1RYoNHphoNQYanb0HD8+ITui\/OBoNC1j+mzKh7aHegHIhffkXj9aASTms95L\/\/KuVbvaYJE6Jnq+87TYOXpaTRqoVvv6Um0wdJPGwOcjx2MmIOGdI5blK6wXU7XadKdjKd4327bQ5plldpMZKVnXKUHWuc1CG6loa\/2XCbIoNJ1ffVhK0XYVdWGrXSst3ISjb7uq8e3cgptODRLmWXKo6rCSnX5WMpEqmOzLXK5N83aotANIz\/ohd3qhHB69BL51SdkEm3WCZlCO87+cVYV0xTQ9j9FvcF7WO03yUY9ikr0Cx2m1D2o5IcY3DYx\/YD1XNygkHiNzUQa12p0hcdKy9adT5ynExUfcxnBcrcTeuWODyZQpoa2X7N8JF7kipOCb2SkdDr06EZKe10RdZOjpK\/ahK58DG8KqpekOR2Ej77v+McuwH\/r+cz\/3bj\/sEwS6n+DnMApW7xwejqmnpVgffahf2elnYHo\/6eghmOqxAt1WUeHtWjj22FZ+xP6ElfVg+ict2xYVqa6DMzbi4\/txXftrxlVIeVE\/c8WdmbmtUOMCGvNMPC4Bdz7bg5gojwM4DD056Bm8U5XJ7o2AfXMvEwfN\/Xw1Fc91NobCkGfBq7nhXyQOY\/VPsL\/AIqxj\/sKZW5kc3RyZWFtCmVuZG9iagoyOCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCi9UVDIgMjUgMCBSCi9UVDEgMjQgMCBSCi9UYzMgMjEgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggMjgyOCA+PgpzdHJlYW0KeJy1W92O27gVvtdT8HIGSLTin0TlptimXWD3YtNFpgiKohcambaVyJJDyfF636cv1KLv00NSv54xRe3MIsBIlsTvHB6efzJf0S\/oK8IsxAm1F5ImiAsaxpxhlMTdjZLoE6rQd+8bjPIGReZfk8PYKCTM\/tY3OBIh4RRGRkmYiiTID+jPD4jbAd3l4YC+e3jACKOHLbr79z16+Iz++mA4uULDNEwSEnugkQ4NOdBI7Mlbzjq0j\/tMFdUObWuFsu22KIuslc3\/kPwm1WWTXdDjqSkq2TToeFLHupHNfXCLPE1pyOkwF7RM\/a0LDOYCV38w5AJLV4IVFUjkkLVFXaHssT61DvRB7LEWgAd8cHepTwrlSm6K9lyrdm9EfHthCWOhIIS4KATX0ritJr0Kx0kS8siBtkqFl9HWqPAi2jDT7we1RVtVH5BW2B0yEp6uYlujQ6a+yFbfwVvNQ\/AsD4xEIaNCuHjw171R2jEOGXGgddIO\/KS9iAbSDrylvYSWs+Cpw6jqavQZzwr4hjmyJIziiPVkPfyUYxJppOcAyxRrWC+0jy1wjMrs3ADLF7QrvknNMco2DhukIqQpXkEFjBsULyuRKnb71gioLA5FixorwxB9lBI9yrI+G3EeaghCtxVpnCclYexerE6RQO2NHXQMnKqNVKjpJx86hEo4zFbggdhrLREGYyAJXgenR0epAIWJwoRgHosY7gRJGMcBxGgTtN9\/dH6HPr6H+1QwdEYEPSgHjxGfLHAURmmaAHM5gixBf91dLLfUcvtPdPdpf484usvuUYzu2nuUmilggu7298Hw4mg+sn+leVKZe3D+yTDgfI\/MsOuPzOvg7ke4RMPHJVwwBCx7OcBl+DHjwlKYMqnug3T41lLYmRfdiK2lU5s3aoqVXTOlHwXwKDcv7F877mT+2k9n\/MxnYfmyQ8r7QHO0mcJ\/tlzaD2YsW9BOCpdrMQZzWeynmFYiFtLKTU4YrybihwH\/Ch5+WlBunpKQswSjUXMgG3pGcYKZ4siy1wDNwZ80LdTTsoYBKh49p7IYAlWKCR0ov5KV8kSEIn4tm+cxC5kX2j9MVrSvi9wRssD9phiLFbAQm85FWaLseCwv2gub5LauJOr9Y5bn9alqQ0cGmXCgRnlP1sP5esmGg5YsoS1F8RGN8jCOBwV0hXFP76pVz+0tOSGTZdA6D9NZdJZ\/AbuixsMkxpyFsTei7wNhjDXun9fmuX0LNsKsNfpaCAfuCE+v2HyluPOsZIacikPilwy5upHMTcEEvWC+35qpb3sBJMa1Jf19ZsTQ9q5pEMm7QSTBokiSNMSCiCv+PJXlCZoga9Hy+nDMqgKsUskSUpENerwgeHgAa6zPlVTNvjgiyIfyumpVXYboYS\/hi6wa+Qhu6iNLGSQufjm7RQscebE\/2qNE26LKqryAhC+rNjo5Hh8Mcw5dVSo4A54k\/lSdPgZDzWjnAN6cuqoYXXcES1UeS23dsYxGPLQmJp68DVrz4TRtUEBll5enjXRlsFC80SjmExrBwhqOmnku2j1q9xL9oMPDh+xLg6rsIN+g5pTvUda46r1hbjENU4\/qMbgbifwA86rV8Q36scpDx9xEAm6NcBeNFf2AQdthkf1q7peGj5EkhCwczcJH7JFs\/zyNClkfS4zjDIbIUZq\/9t5+Y+OKjT3XjvNpLAmueE7TkBLGep5f5mJIRNaijepZ1e2y87ytogxCgOAs9aYd3HWe2CMJ0d2T5CZmsFYlb6NdqeQQJPw98c1owiIKVCO6MBnfaDJ44oi5C\/d5v+357tToiRfRxn6bh7daQhtU4edZ1+fs9MGchnGUONGvllH3RqT1v7OI\/zRa0jjkgk\/lsOTfu6DhwEzikCWQzXSYL6uAKJjZSrRDrdpdtpPIUQExhuGS8BWwvc6\/8YnJVJuyF2xRNScFdiVHq3JRIIJCsROLFRQ2hZJ52\/UVddtxQqgz7aOqt4WzPT9MDGo44dc3Uzsg8ptpHDeuOEyTUKQpdUH\/jjhMb3dj\/6g4TGddTR2HSbochn+CMPzW9puYicZvbaeFGJ9j2ypvYxN99Rtl3nyxP+T06xnAzl5W1DQE6zSIsX4aL6tpCI7XomXIbDRAvNkpKQ+yaiEMtWcpq1mT3NFeZnqLB3NxtRK\/0\/UwAFmJNoZIjyBPX6MrPCqfN9qYArX7TG807CRk6arfeBjnAF5hc8rbRqdCjVTfitzuUFzqk6sE4zrwk3Rg6ZVKMAoaxdlrlWDLaGtKsEW0WQn2uS6qiTs+ZqrVSedQj9k9TQjdamMc9FHJY1Zs7ANHUjNwo9Nir4Lbq6QmoGKCp8Ib172evcLq+mtxH\/m6bfeyPht8pvsrEwft0Wb7YAuevSl4bNmj+oZ2ajYSEuujidmToKbbNnxkB9vKqZrUT8i00oeunam9gmQ+tgOdll1DO8\/C+ZZdhEHWkES8l8DLcvFRnnGke9weaH9vJKq3phswKpr+DD97PgQcbiyYD35nVufzOQTH9atUWQhKPVGYXi5PjwPwkOBkSmQp9XWFOyZmaB5u+Cwfm6J1JNLgQiHVE3wF5juEPu2lacijE4jcyBs9lfeVeuijHVor\/NfzWt7BorxZmkCtHq1Z1OdYN6qBKVRFqUnvDmYhIz4+KWdPMJh7ORsFT+CbPdqaaQs+xdJMknSKNX1isaajRqyb8x6NhcW3Nj2CZzXjjd1XKesdRIbZMYyigRy+LCGrlzZCNG2tbGL0fGigApwuZtzFxIpjRUJAbkf80ZwBgYKa+6MFYw06nFD58W8+6RaBbOTGNtGV\/LPNRskGqqNHVZ8h8UHt5QirsakPGSyE7mHqyinP9YmutoBfZg1gnebL5IqpI1c40dtNPg1Oa27arnXmVjQ9LYcHgVgbp1E8pxK4lt3o19bVjWAhpYnoIX0KZ2X80KGuClBTWLU3qD7CTExhCIK8HWgYodr4Ym8pmaB480gSjTTrfAXaxtH\/g7KVGY\/vvYLOWiNagWaM4OspK4v24qX6kJETP9Vv+m5EF62HvL\/ebiX4GL3dO48qT+w5ghkQyMs6qh4a4o6DFLQ4YWwFnqvHqosShiGb9Yd70HIAFs05p6xsautv0X\/yuv4CyfN\/fXIlLIRnbO031HVyfmrB\/ex13r9R+oAVVF97WR5NgAcbavTRqOI3aQfUVVlUEslf4U0hYRG9PBBonacTf2+nq3uKunn+eNG+aKN5UqdKV4s7lR1MtbiRJXCrHKsAtYqg6UD9hU3CmK9F+1Yo60jrubC92vM4NicOPMj0ItP92FNVfD3JElSoaYpdZSUHxG0XTjdqYQEvuvWuZGb2JDIEqYAxQanPYXqtJuOe3khbcRfSTB+gANPXPO11J1Jz3Zf6DrljrPP0georHXbBFHtaphca1OZ+2fMHaz8fZX5S4Fnf6T3zZ3LQJzsdehuKUyZ6Un9I\/kwjrXOC+BBZ7lzQiK5F67JSm38U1ebUtOriiGhEVy8Ezyk4c4+3LjQaJjyaoi1Va00LZtV3TK6qCLNi+v8yYG7Ozh6sePHwBLL66ROb509Hrcn8ceR7bsYRBVNI5TBJ2Qq0KleXoz23LfN9VesMVe826QpRyVwW3+xuQNWcDvpMq6xggXWU2WQtxA7dqmq0LYBX8PA8EN\/AJ0KBt+x6Oo\/WnI7HWrUNwkQ4Gkb6PzFQTpwEAm9NgtAfplALrIF7LFokB2lCJSCPsjL1R5cNgU0ovY336NBgysIoZfFA12MBXQZBISkSZBVcV844HDoTLMQRlLsrUCf29Qv6P\/gi4N0KZW5kc3RyZWFtCmVuZG9iagoyOSAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggNTQ3ID4+CnN0cmVhbQp4nJVUTW+cMBS88yvecXNxbGxjyLGrHnprKtSqRwdM1ynYG9sk2r\/ZKv+nZr+kVcquERIYJGbee\/NmXuARXoAwRAQ9PPJKAC8pKjgjIIrjwSn4AQbu155A4wHvL9\/EfzHK2eF9OlTxzikWIHCFikKQrBngUw388MfxUQ9wXzcMCNQdrOAO6mf4XO9LmYErKo7yQiSgrWWvO+uMlldwCeOIlWIJrlNet8oEfwU1gmFW8AWoD\/DTjjDIHci+t29gRwd+I502v8B2oE1sZZBBWwNvOmzgLrs9qhKjshBwizxbGWtk1+ley6BaCBvtWthKF7TyIE0LvR50iCXNd5xXDFFc8hNpyhzn+osneLbahL1u2Y0miwKxhCZhNUj3W4WJbz9AGzbKQaeNNI2WPTR22Epz6niqYZLgPBb\/DupVuV0bFUqZPc8RTpr90+i1Ud7DdnRb6yP\/0y7ST0sw1RqrjMPxwY3NNBwfX\/bf5qWg0bMVE+caEqRQpukjdQt\/vgxb64I0YR6fVRQJSukC\/CRjU5GaE1+dfpXN7or\/KEacxMMC0GshQeliuPXG6iaKOS3SOuo2Dsr5v2BsmD6jM1n2QT4sEME4P5MlrHaSUXI6RVEC2nflBhvd9+0UdA+wu8im+f3PS4Lyskpny1a3gu4ym1IWCZeJCXQZdEm2+49T4LiOKbHAY0ympFV2sT8fBHk\/7hG6FgM4urMqyIlzmQUe4R+blwYzCmVuZHN0cmVhbQplbmRvYmoKMTggMCBvYmoKWy9JQ0NCYXNlZCAzMCAwIFIKXQoKZW5kb2JqCjE5IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUxIC9CYXNlRm9udCAvTExWQ1lEK0FkZWxsZVNhbnMtUmVndWxhciAvRm9udERlc2NyaXB0b3IgMzEgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyMTQgXQo+PgplbmRvYmoKMjAgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHlwZTEgL0Jhc2VGb250IC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZvbnREZXNjcmlwdG9yIDMyIDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMjEzIC9XaWR0aHMgWzI1MCAwIDAgMCAwIDAgMCAwIDI4NyAyODcgNTMzIDAgMjIzIDIyNCAyMjMgMCA1MzMgNTMzIDUzMyA1MzMgNTMzIDUzMyAwIDAgNTMzIDUzMyAyMjMgMjIzIDAgMCAwIDQ3MSAwIDczMSA2MjkgNjcwIDAgMCA1ODYgMCA3NjIgMzI0IDAgMCA1ODMgOTE5IDc2MCA3MzAgNTg3IDcyMCA2NTUgNTUzIDYzMCA3MjcgNzAxIDk1MSAwIDYzOSAwIDAgMCAwIDAgMCAwIDU0MSA1OTMgNTE4IDU5MCA1MzAgMzIxIDU4OSA1ODEgMjYxIDI0OCA1NDAgMjU4IDg3OCA1ODcgNTQ1IDU4OSA1ODkgMzY4IDQ2MiAzNDAgNTgwIDU0MCA4NTUgNTY4IDU0MCA0NTQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMzY3IDM2NyAwIDIzMyBdCj4+CmVuZG9iagoyMSAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0FHS1hKRStBZGVsbGVTYW5zLVNlbWlCb2xkIC9Gb250RGVzY3JpcHRvciAzMyAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMzIgL0xhc3RDaGFyIDEyMSAvV2lkdGhzIFsxOTggMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyNDQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDI0NCAwIDAgMCAwIDUyNCAwIDY5NiAwIDY5MyA3MjYgNTc4IDU1MCAwIDczMCAyOTEgNTExIDAgNTU4IDkwNCA3NDUgNzYwIDYxOCAwIDYzOSA1OTkgNTcxIDcxMSAwIDkxOSA2MzUgNTgyIDAgMCAwIDAgMCAwIDAgNTUwIDU4NiA1NDEgNTgzIDU0NyAzNDIgNTU1IDU4MyAyNTcgMjU1IDU0NCAyNTcgODYxIDU4MyA1ODIgNTg1IDAgMzc2IDQ5MyAzOTIgNTgwIDUxNyA3ODEgNTA4IDUwMiBdCj4+CmVuZG9iagoyMiAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0lQRUpKRytBZGVsbGVTYW5zLVRoaW4gL0ZvbnREZXNjcmlwdG9yIDM0IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgODkgL1dpZHRocyBbMjQyIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyMDAgMCAyMDkgMzM0IDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCA2MzcgMCA3MTYgMCA1NzAgNTQzIDAgMCAyNzIgMCAwIDAgODg1IDc0NSAwIDYxMiAwIDYzNyA1NzggNTMyIDAgNjE0IDAgNjA3IDUzOCBdCj4+CmVuZG9iagoyMyAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UcnVlVHlwZSAvQmFzZUZvbnQgL1FRVEFRQStUaW1lcy1Sb21hbiAvRm9udERlc2NyaXB0b3IgMzUgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyNTAgXQo+PgplbmRvYmoKMjQgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHJ1ZVR5cGUgL0Jhc2VGb250IC9TUUtVRVQrU3ltYm9sIC9Gb250RGVzY3JpcHRvciAzNiAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMTY1IC9MYXN0Q2hhciAxNjUgL1dpZHRocyBbNDYwIF0KPj4KZW5kb2JqCjI1IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1RydWVUeXBlIC9CYXNlRm9udCAvSkZSWFFEK0FyaWFsTVQgL0ZvbnREZXNjcmlwdG9yIDM3IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMzIgL1dpZHRocyBbMjc4IF0KPj4KZW5kb2JqCjI3IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUwIC9FbmNvZGluZyAvSWRlbnRpdHktSCAvRGVzY2VuZGFudEZvbnRzIFszOCAwIFIKXQovQmFzZUZvbnQgL0pPVk9WVStNUy1NaW5jaG8gL1RvVW5pY29kZSAzOSAwIFIKPj4KZW5kb2JqCjMwIDAgb2JqCjw8L0xlbmd0aCA0MCAwIFIKL04gMyAvQWx0ZXJuYXRlIC9EZXZpY2VSR0IgL0ZpbHRlciAvRmxhdGVEZWNvZGUgPj5zdHJlYW0KeAGdlndUU9kWh8+9N73QEiIgJfQaegkg0jtIFQRRiUmAUAKGhCZ2RAVGFBEpVmRUwAFHhyJjRRQLg4Ji1wnyEFDGwVFEReXdjGsJ7601896a\/cdZ39nnt9fZZ+9917oAUPyCBMJ0WAGANKFYFO7rwVwSE8vE9wIYEAEOWAHA4WZmBEf4RALU\/L09mZmoSMaz9u4ugGS72yy\/UCZz1v9\/kSI3QyQGAApF1TY8fiYX5QKUU7PFGTL\/BMr0lSkyhjEyFqEJoqwi48SvbPan5iu7yZiXJuShGlnOGbw0noy7UN6aJeGjjAShXJgl4GejfAdlvVRJmgDl9yjT0\/icTAAwFJlfzOcmoWyJMkUUGe6J8gIACJTEObxyDov5OWieAHimZ+SKBIlJYqYR15hp5ejIZvrxs1P5YjErlMNN4Yh4TM\/0tAyOMBeAr2+WRQElWW2ZaJHtrRzt7VnW5mj5v9nfHn5T\/T3IevtV8Sbsz55BjJ5Z32zsrC+9FgD2JFqbHbO+lVUAtG0GQOXhrE\/vIADyBQC03pzzHoZsXpLE4gwnC4vs7GxzAZ9rLivoN\/ufgm\/Kv4Y595nL7vtWO6YXP4EjSRUzZUXlpqemS0TMzAwOl89k\/fcQ\/+PAOWnNycMsnJ\/AF\/GF6FVR6JQJhIlou4U8gViQLmQKhH\/V4X8YNicHGX6daxRodV8AfYU5ULhJB8hvPQBDIwMkbj96An3rWxAxCsi+vGitka9zjzJ6\/uf6Hwtcim7hTEEiU+b2DI9kciWiLBmj34RswQISkAd0oAo0gS4wAixgDRyAM3AD3iAAhIBIEAOWAy5IAmlABLJBPtgACkEx2AF2g2pwANSBetAEToI2cAZcBFfADXALDIBHQAqGwUswAd6BaQiC8BAVokGqkBakD5lC1hAbWgh5Q0FQOBQDxUOJkBCSQPnQJqgYKoOqoUNQPfQjdBq6CF2D+qAH0CA0Bv0BfYQRmALTYQ3YALaA2bA7HAhHwsvgRHgVnAcXwNvhSrgWPg63whfhG\/AALIVfwpMIQMgIA9FGWAgb8URCkFgkAREha5EipAKpRZqQDqQbuY1IkXHkAwaHoWGYGBbGGeOHWYzhYlZh1mJKMNWYY5hWTBfmNmYQM4H5gqVi1bGmWCesP3YJNhGbjS3EVmCPYFuwl7ED2GHsOxwOx8AZ4hxwfrgYXDJuNa4Etw\/XjLuA68MN4SbxeLwq3hTvgg\/Bc\/BifCG+Cn8cfx7fjx\/GvyeQCVoEa4IPIZYgJGwkVBAaCOcI\/YQRwjRRgahPdCKGEHnEXGIpsY7YQbxJHCZOkxRJhiQXUiQpmbSBVElqIl0mPSa9IZPJOmRHchhZQF5PriSfIF8lD5I\/UJQoJhRPShxFQtlOOUq5QHlAeUOlUg2obtRYqpi6nVpPvUR9Sn0vR5Mzl\/OX48mtk6uRa5Xrl3slT5TXl3eXXy6fJ18hf0r+pvy4AlHBQMFTgaOwVqFG4bTCPYVJRZqilWKIYppiiWKD4jXFUSW8koGStxJPqUDpsNIlpSEaQtOledK4tE20Otpl2jAdRzek+9OT6cX0H+i99AllJWVb5SjlHOUa5bPKUgbCMGD4M1IZpYyTjLuMj\/M05rnP48\/bNq9pXv+8KZX5Km4qfJUilWaVAZWPqkxVb9UU1Z2qbapP1DBqJmphatlq+9Uuq43Pp893ns+dXzT\/5PyH6rC6iXq4+mr1w+o96pMamhq+GhkaVRqXNMY1GZpumsma5ZrnNMe0aFoLtQRa5VrntV4wlZnuzFRmJbOLOaGtru2nLdE+pN2rPa1jqLNYZ6NOs84TXZIuWzdBt1y3U3dCT0svWC9fr1HvoT5Rn62fpL9Hv1t\/ysDQINpgi0GbwaihiqG\/YZ5ho+FjI6qRq9Eqo1qjO8Y4Y7ZxivE+41smsImdSZJJjclNU9jU3lRgus+0zwxr5mgmNKs1u8eisNxZWaxG1qA5wzzIfKN5m\/krCz2LWIudFt0WXyztLFMt6ywfWSlZBVhttOqw+sPaxJprXWN9x4Zq42Ozzqbd5rWtqS3fdr\/tfTuaXbDdFrtOu8\/2DvYi+yb7MQc9h3iHvQ732HR2KLuEfdUR6+jhuM7xjOMHJ3snsdNJp9+dWc4pzg3OowsMF\/AX1C0YctFx4bgccpEuZC6MX3hwodRV25XjWuv6zE3Xjed2xG3E3dg92f24+ysPSw+RR4vHlKeT5xrPC16Il69XkVevt5L3Yu9q76c+Oj6JPo0+E752vqt9L\/hh\/QL9dvrd89fw5\/rX+08EOASsCegKpARGBFYHPgsyCRIFdQTDwQHBu4IfL9JfJFzUFgJC\/EN2hTwJNQxdFfpzGC4sNKwm7Hm4VXh+eHcELWJFREPEu0iPyNLIR4uNFksWd0bJR8VF1UdNRXtFl0VLl1gsWbPkRoxajCCmPRYfGxV7JHZyqffS3UuH4+ziCuPuLjNclrPs2nK15anLz66QX8FZcSoeGx8d3xD\/iRPCqeVMrvRfuXflBNeTu4f7kufGK+eN8V34ZfyRBJeEsoTRRJfEXYljSa5JFUnjAk9BteB1sl\/ygeSplJCUoykzqdGpzWmEtPi000IlYYqwK10zPSe9L8M0ozBDuspp1e5VE6JA0ZFMKHNZZruYjv5M9UiMJJslg1kLs2qy3mdHZZ\/KUcwR5vTkmuRuyx3J88n7fjVmNXd1Z752\/ob8wTXuaw6thdauXNu5Tnddwbrh9b7rj20gbUjZ8MtGy41lG99uit7UUaBRsL5gaLPv5sZCuUJR4b0tzlsObMVsFWzt3WazrWrblyJe0fViy+KK4k8l3JLr31l9V\/ndzPaE7b2l9qX7d+B2CHfc3em681iZYlle2dCu4F2t5czyovK3u1fsvlZhW3FgD2mPZI+0MqiyvUqvakfVp+qk6oEaj5rmvep7t+2d2sfb17\/fbX\/TAY0DxQc+HhQcvH\/I91BrrUFtxWHc4azDz+ui6rq\/Z39ff0TtSPGRz0eFR6XHwo911TvU1zeoN5Q2wo2SxrHjccdv\/eD1Q3sTq+lQM6O5+AQ4ITnx4sf4H++eDDzZeYp9qukn\/Z\/2ttBailqh1tzWibakNml7THvf6YDTnR3OHS0\/m\/989Iz2mZqzymdLz5HOFZybOZ93fvJCxoXxi4kXhzpXdD66tOTSna6wrt7LgZevXvG5cqnbvfv8VZerZ645XTt9nX297Yb9jdYeu56WX+x+aem172296XCz\/ZbjrY6+BX3n+l37L972un3ljv+dGwOLBvruLr57\/17cPel93v3RB6kPXj\/Mejj9aP1j7OOiJwpPKp6qP6391fjXZqm99Oyg12DPs4hnj4a4Qy\/\/lfmvT8MFz6nPK0a0RupHrUfPjPmM3Xqx9MXwy4yX0+OFvyn+tveV0auffnf7vWdiycTwa9HrmT9K3qi+OfrW9m3nZOjk03dp76anit6rvj\/2gf2h+2P0x5Hp7E\/4T5WfjT93fAn88ngmbWbm3\/eE8\/sKZW5kc3RyZWFtCmVuZG9iagozMSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0xMVkNZRCtBZGVsbGVTYW5zLVJlZ3VsYXIgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE4MiAtMzIzIDExOTggMTA5OCBdCi9JdGFsaWNBbmdsZSAwIC9Bc2NlbnQgODgwIC9EZXNjZW50IC0zNzAgL0NhcEhlaWdodCA3MzcgL1N0ZW1WIDk0IC9YSGVpZ2h0IDUyNiAvU3RlbUggNzYgL0F2Z1dpZHRoIDU3MCAvTWF4V2lkdGggMTM4MCAvRm9udEZpbGUzIDQxIDAgUgo+PgplbmRvYmoKMzIgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE3NCAtMzA4IDEwMzUgOTQ3IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA2NjggL0Rlc2NlbnQgLTMzMiAvQ2FwSGVpZ2h0IDY3NyAvU3RlbVYgNTYgL0xlYWRpbmcgMjAwIC9YSGVpZ2h0IDQ3OSAvU3RlbUggNDMgL0F2Z1dpZHRoIDUwMCAvTWF4V2lkdGggMTIwOSAvRm9udEZpbGUzIDQyIDAgUgo+PgplbmRvYmoKMzMgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9BR0tYSkUrQWRlbGxlU2Fucy1TZW1pQm9sZCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTg2IC0zMjMgMTIyNyAxMTEzIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgMTE1IC9YSGVpZ2h0IDUyOSAvU3RlbUggMTAyIC9BdmdXaWR0aCA1NzAgL01heFdpZHRoIDE0MTMgL0ZvbnRGaWxlMyA0MyAwIFIKPj4KZW5kb2JqCjM0IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvSVBFSkpHK0FkZWxsZVNhbnMtVGhpbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTc1IC0zMjIgMTE0NyAxMDk0IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgNDkgL1hIZWlnaHQgNTIwIC9TdGVtSCA0NCAvQXZnV2lkdGggNTcwIC9NYXhXaWR0aCAxMzIyIC9Gb250RmlsZTMgNDQgMCBSCj4+CmVuZG9iagozNSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL1FRVEFRQStUaW1lcy1Sb21hbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMjAzIC00MjggMTcwMCAxMjcyIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA3NTAgL0Rlc2NlbnQgLTI1MCAvQ2FwSGVpZ2h0IDY3NiAvU3RlbVYgMTAyIC9YSGVpZ2h0IDQ2MSAvU3RlbUggNDQgL01heFdpZHRoIDE3MjEgL0ZvbnRGaWxlMiA0NSAwIFIKPj4KZW5kb2JqCjM2IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvU1FLVUVUK1N5bWJvbCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTY3IC0yOTkgMTA5NCA4MjcgXQovSXRhbGljQW5nbGUgMCAvQXNjZW50IDcwMSAvRGVzY2VudCAtMjk5IC9DYXBIZWlnaHQgNjIzIC9TdGVtViAxMDMgL1hIZWlnaHQgNDY3IC9TdGVtSCAzOCAvQXZnV2lkdGggNTcyIC9NYXhXaWR0aCAxMDQyIC9Gb250RmlsZTIgNDYgMCBSCj4+CmVuZG9iagozNyAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0pGUlhRRCtBcmlhbE1UIC9GbGFncyAzMiAvR</mes:base64EncodedContent><mes:contentType>contentType</mes:contentType><mes:documentName>names</mes:documentName>
        </mes:CreateEnrollmentDocumentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6fc9718f-f69d-46f7-9a41-dffda9a7c22f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="9c7d00ba-2f31-4166-b13a-3d560078b5a2" name="Not SOAP Fault"/><con:assertion type="SOAP Response" name="SOAP Response1" id="3358cc26-bd03-4a0b-9105-4da9779a1d57"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="87c82d3c-e4c6-4bd1-aa6c-4eb7f59047c4"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:commandStatus[1]/text()")
def documentId = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:documentId[1]/text()" )

assert commandStatus.getData() == '1'
assert documentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateEnrollmentDocumentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="b7041031-c2f0-4ad6-b98e-bbd7949c9c48" name="CreateEnrollmentDocument_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CreateEnrollmentDocument</con:operation><con:request name="CreateEnrollmentDocument_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a2d6acb3-7045-4a9a-bcfb-42997ae5c540"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CreateEnrollmentDocumentRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <mes:note>ref</mes:note>
            <mes:documentType>type</mes:documentType>
            <mes:base64EncodedContent>JVBERi0xLjQKMyAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQW5ub3RzIFs8PC9UeXBlIC9Bbm5vdCAvU3VidHlwZSAvTGluayAvUmVjdCBbNDE2LjkzIDM2My44NSA0NjAuNjEgMzU3Ljg1XSAvQm9yZGVyIFswIDAgMF0gL0EgPDwvUyAvVVJJIC9VUkkgKGh0dHA6Ly93d3cuY2Z0cGF5LmNvbSk+Pj4+PDwvVHlwZSAvQW5ub3QgL1N1YnR5cGUgL0xpbmsgL1JlY3QgWzE0My40OSAzMjEuMzMgMjE0LjE3IDMxNS4zM10gL0JvcmRlciBbMCAwIDBdIC9BIDw8L1MgL1VSSSAvVVJJIChodHRwOi8vd3d3LmZpbnhlcmEuY29tL2xpY2Vuc2luZyk+Pj4+XQovQ29udGVudHMgNCAwIFI+PgplbmRvYmoKNCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMjIzOT4+CnN0cmVhbQp4nI1Y23LayhJ93vmKfkjtSqrwWPdL3jDgCqdsICAnlaq8DGIAHQuJPZJM+JHzvadnRjeETDapGCFmVq9efZkWBvzng0ZsF04fHgK4f9TBIZoGwRYmgbijmy5xDfAMm5g2BBv4tDqyMKIxLAp+TDMGwzBMiySHWXFYM\/4FLNPQxEvH\/5Zj+7DKac4ODJcsGI\/SzRd4pjzcgz4AQ9NtuCs\/m9UNWNAdA\/0e7M8Q\/FcQ+Qe\/0AQv8Q8Z4ZXhmcRywHUdYlsQHuB+qsM4hW8fXI2YGriOSxwDTN8hHtrQiKsDZ\/AAwivXJLoJrm0TX5NOLTjNaJLvYfS9stkss1xiqWXPLInT6wWmRzxf4VD+CnIVyMvRsLX6\/tHoqGvaDnG0NpHxdDkZBTB8eoLhaDR\/mQUwnX17mS6nkxUE8y\/Qwqt2WxaxHbl7xNMs4yndZPAYJTSRgQpYuE\/SON1FLOvbbiIntX0xh4f0Nxi2bfp9Kw2X2GUS0ASjlrN0gC7e+ZalGT3rdZ9oav1inyYMZin8DzzPuzMt786yLbPaU4ZMl9tuhkxzxV1J4eX5ebj8CfNHVCqYfp8GP+FC7KtUNiyRyo5vioyRrJaT79P5ywpWwTCYPE9QbHgYPg1nownMZ6AZ94bXgqwAPIMYZbQmi\/lqGqzuR8vJGN\/bGhg68fT24o+GSOEePPTeUwH4MQ2+jpfDH8On1f3q5SFYCs\/ms0tcm2CNtDZ9NPphbZ\/YhpKqdq\/tnXlv6j2Em20fda+FrGLk2BYxrHdidJ3gKmqO6RPHk5jo0mylvGrCFnydrmAxWU7n4\/cjWNo3LYLJaSrzukV0V9hfQWMMBbJViozR7QpQx8wRuqn9uifbSQdA13zie22ENt3xZDVaThfiugI1vDaoY4tQdzANr4v5XtKYtiF6bAlmoWR6F8zERqFfgLUypsKxNJ34t0lZGqaI38apmk2ZIJ2gY+Yaxk3RdZ2YpkTCvGqaQaW6AritegOxZGHBeZTsYMzwjIly2PL0AKM9C1\/xbld9Bd7rqEhq3WljqyoE+eoqr4D6lccw6nob6BKiEv0GF8vELv9HLqXimiNa5w3Fbd8VnpWKm1pXcQVwU\/EWxHD0FQ+sszyl8xRCzjZRnnLAPr\/hFIbHY8x22O+70isr\/dJj0dta20i\/6AqiX3QXP15AyF7Xr\/wNKqXybRzZ2vqUt9Gm59YNrlPM+BHDa6MV3+ueQstJ8LKcTcYwxWYLj5PJqoPsaMTB1mPpxDUvkD8YOvpl1ivEOetc2cYpw3fBtmWbls1pHgyf4HG+7GugUn7\/NqSJxGzzGvLnZLi8C+Z37f5Z+mA54nTo8QHhUF5MbBvnM8dsob2vS+V2CXrNsfbi\/RVNQeiu6GnC7mweTL7A5Dc9RDh15Psog6weQkPK2baI4zNgbiPIMeU5Xp4h4pztipjyKMdJiXQcx5JxWmmhm6K51hQM\/IzMLJTAVxPP9HkxXwZDbKnNHIeheh62z4+avOU5Iv\/lxgQp4lydboFxnvIMsA7\/KViWR2mSAdB1WuRwTgveODUAFrMw52kShZBzmmRbxsU+eU1DtTVNrrbluO8oZ7MiA4q1v2eQyEEejtiAc7YRu67pup7ohoKu2IHdGYVFwh2pkcAJ1azA\/zidDqA9gQ7gYsocgBwzgaKFFEnhO3qDWiUDiLbyGs0nrz1sHV\/MlYLtpf+CIGchi445IPETurET90q4hKH7hxSDHCXblB+okLHUn7ZkTqRsfagEfjA4FFkOe0a5OsUkcgoxruZ9XHXR8pSy6D7y3tAzyrcVy09oRlhQzjJ4nC5XQdtyAqd9hM9S4kuZPUjm2gY2W1f1wb\/gL9AJBiGORZCkPAk9MFkbtHyyKxPi1yfUBQvl12fSA6kTo4E0CJ7cWcijNbugIj\/UwgkvsBihSLIC36SwA2mZ\/T7GNJIxDmNUThRrHW508Syv1yyO2BtGR0YPv6jNVCuaCF4zNg3i2jVj8WpFucdDnKqNZr3ZiCZ82qQxNg6gBymYrAQMVZHhs7KoIUmsBxP7n1\/OcQxOEeJFyZuodHHWqmiE6UFqkUth5JowxU4VqqalXD5iYh3z+ExguhVJktNXpvyWSYQJtS4y7IVZprIJj\/hNKqt1IJYrVHnmK6NV5K8Z4+BYPgtvy3CWPjf1h7GIylgMsFQFBfW1NLOnbyonCtXjxOUBG9AZNoUc+WSKRAcZVuFHJjVOlRAMZREEG5nawVKt2vQs0YSrVu3ZRLO6h4Xp1I+y2Ip+M04HME1CgvQyaVXkXhbtElVWWyXLez99DHecqQKUFf4o1s7pawYPFPX4GwIuWsAIHcCQDZpAoolC1BpeXilt2vXDM2fZEft3tI5ieTQJPh0bRbJhKhxXnAhA6aJ0jm7wUIwy7CaYl3\/+veDXp+Y3GDFKauVfXf7lOzle4XO7f8H4dDqRcJsf6Zlg2EqEZp1HLJz4THGg3smQYXS28K02oVDF5KK3UX99rmTqrq0k06qgYiNcsz2Ntz1adeJBYIEtBqOZpDkbCA15WRFrcQ9CrKCdOAJUZjJ+yOqEuE6Asigyxt+isPm95R3CliFyUxDGCn6LNhgSzHSEJjDM4Eh5c6oqGgNld1M+FlV1igXWcbJyIIwxUTcy5QSvNY0xysirasJcmaTYKk+Qlfl9m7RZ\/35yLOugptHOrfW5zrtq8ChDIho77uAbQQWZ5vtLad9L4xpPOnegifiZUALfJoxPuZoaSCsHu8TXhdRQFKJoPRns03ijoLdYWpkiuWVYZFRMjpE8sTZVHFIub+VRXshJC7kOEarKkgoCb3F2EOfa43g6qkDIH9hj0diK\/SMmV3ccwQ7LWA\/CdZXqWHCW38YTVbpVkooyvY8xY7HN1A\/YzRZb1C12V8e7UbCGGstbBvA4wlBv8FiRTFlSZqM4OqQyeIxhGmTy+MYGfzxX4V\/w6I2GZ1ikSEoc\/lmKgRNHqYzEvwi65lVBf6drk2b\/\/wGfn0ckCmVuZHN0cmVhbQplbmRvYmoKNSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgNiAwIFI+PgplbmRvYmoKNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk5Pj4Kc3RyZWFtCnicNY7dTsMwDIXv8xTnEiRIbWdp1t0N8SNNgDotL9BlodtE6Sit9vp4iFk6sj\/bso9gZcj6gLN5iCieGaUlQvzAUzTfIAVCC52xCzYI5uKt84g73GxOOR2aT9TTcOp\/MpYp9dPXiPep2+ZhgZkTugSrZqWvsBmbMXdZV+o8HPrdAm\/NkPbgOwixx\/0\/u2sDddNmSAF\/i3hUS1hfTGEFxlnzUfWiav+shqoMCnQtZW6d\/oUw2cqxIHWmiPUr47HXQ2vzC3XrPWwKZW5kc3RyZWFtCmVuZG9iago3IDAgb2JqCjw8L1R5cGUgL1BhZ2UKL1BhcmVudCAxIDAgUgovUmVzb3VyY2VzIDIgMCBSCi9Db250ZW50cyA4IDAgUj4+CmVuZG9iago4IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11HNJQ3pg2JqENFZEfKCEU0LpC14rfn0Fg6co+tmVfxlKRdh5X9RaQLQxyTYSwx0dQF5AAoYbMjPXaM6bstHUIO4w25xSP1Q\/KoTu3fwnzGNvht8dqaLapm2FimW5hRJPcFdj0VZ+aJCtl6o7tbobvqosHmBcwGYfXB9tnA2VVJ9gMboxwEktY30xhCYOr5JPoU1Tfrfoi9wL0LHmqrfwFG9KFNYzYqCyUX4z3Vg6t1T92TT1uCmVuZHN0cmVhbQplbmRvYmoKOSAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL1Jlc291cmNlcyAyIDAgUgovQ29udGVudHMgMTAgMCBSPj4KZW5kb2JqCjEwIDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAxOTg+PgpzdHJlYW0KeJw1jtFuwjAMRd\/zFfcRpC11kqahvIHYkNCGipofKCEUEKWstOL3ZxBYurKPbdlXYyVIWoe7mHsk3wqZJILf48uLPxADoQbPlHHSaUy0lcbC7zAqrzEcqzOKobu2t4hZCO1w6bEemm3spkiNpkcoVprZHGVf9bGJvFLE7tjupvitunCA+oAmZfH5YvNuoKjqiDSBHcOf2BI2D1NYQeHO+cRasuqnVZdnjoHepZ5Iw3+hFcncKI3QiMQXPwaLlg9txD92rz1wCmVuZHN0cmVhbQplbmRvYmoKMTEgMCBvYmoKPDwvVHlwZSAvUGFnZQovUGFyZW50IDEgMCBSCi9SZXNvdXJjZXMgMiAwIFIKL0NvbnRlbnRzIDEyIDAgUj4+CmVuZG9iagoxMiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9MZW5ndGggMTk4Pj4Kc3RyZWFtCnicNY7RbsIwDEXf8xX3EaQtdZKmobyB2JDQhoqaHyghFBClrLTi92cQWLqyj23ZV2MlSFqHu5h7JN8KmSSC3+PLiz8QA6EGz5Rx0mlMtJXGwu8wKq8xHKsziqG7treIWQjtcOmxHppt7KZIjaZHKFaa2RxlX\/WxibxSxO7Y7qb4rbpwgPqAJmXx+WLzbqCo6gibwI7hT2wJm4cprKBw53xiLVn106rLM8dA71JPpOG\/0IpkbpRGaETii58Ui5YPbcQ\/dxE9cgplbmRzdHJlYW0KZW5kb2JqCjEgMCBvYmoKPDwvVHlwZSAvUGFnZXMKL0tpZHMgWzMgMCBSIDUgMCBSIDcgMCBSIDkgMCBSIDExIDAgUiBdCi9Db3VudCA1Ci9NZWRpYUJveCBbMCAwIDU5NS4yOCA4NDEuODldCj4+CmVuZG9iagoxMyAwIG9iago8PC9UeXBlIC9Gb250Ci9CYXNlRm9udCAvSGVsdmV0aWNhCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTQgMCBvYmoKPDwvVHlwZSAvRm9udAovQmFzZUZvbnQgL0hlbHZldGljYS1Cb2xkCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMTUgMCBvYmoKPDwvVHlwZSAvWE9iamVjdAovU3VidHlwZSAvSW1hZ2UKL1dpZHRoIDIwMAovSGVpZ2h0IDM3Ci9Db2xvclNwYWNlIFsvSW5kZXhlZCAvRGV2aWNlUkdCIDI1NCAxNiAwIFJdCi9CaXRzUGVyQ29tcG9uZW50IDgKL0ZpbHRlciAvRmxhdGVEZWNvZGUKL0RlY29kZVBhcm1zIDw8L1ByZWRpY3RvciAxNSAvQ29sb3JzIDEgL0JpdHNQZXJDb21wb25lbnQgOCAvQ29sdW1ucyAyMDA+PgovTWFzayBbMCAwIF0KL0xlbmd0aCAxNjE2Pj4Kc3RyZWFtCliF7VcHeFRFEH4bOyiWWECsKPYuYldExYq994IdQknIu9frUiI19CYSCR3RxCASBDEixWCABEKNEA64AEmAnEAE7mNm37tLuZCEzxT9vvu\/u2\/fzsy+m392ZnaP4yKIIIII\/q\/I7XSw90q\/P7Ww68w1je3Lv8ENee+8Pvrtdu0e2z7mu0k5x6DC64R4Gtav40Rujr\/99o6v\/IbYseuOxOx7q7KSCSEGx5mEb2j\/agtf3tS9BU0X7sgH7Fi48MiGDP\/MKsxEYuJAidzA\/tUWm19MvKKge\/6X6xm6N83vuOeekv7hdhqxcPjvEjk4dfqeFq1SUo44SElJ33X1mNQzQnpbhJzSMLEIMZ1BlAixTMg04GQbKLEw57CCTKI5y1SU25CRAiE6hkAnvEUI5W0QmHbd8+jkH7140fr0VvsX9ezZZ1HPPi32p6fvWvxqaZKrl3TmaAUiFkdcSBxPXBE88MxdtkxDoQ58HDVkpUHKwax7IqvHPh3ti\/Z9eOYHb700LH\/TZ3828\/mi\/3ig5H5XT4nhhM90UouFGfwVOHRdcIxY\/VAichI6zzH\/mbXNTICVygn4IgiExjavznnE+d8cEjvk0qKipKS2yl2xbXO\/v\/vsHxVl\/ildY5hewqiHE6FsIqDbtqU7IbYIha\/IjAWXouUQQ94aSzoKlDACdU7ki6nXXNXjkY+Lug0qLj5x8EeDBv2aFPPP9Z+P3OiPY3o1dHZUIOJMIOfd1EMiHp1IBnG2j7qENCDHzM3yROR6INJ1+cWZLVs+fquiKLPmrHqqCEbl4cnLLsl832nBEDy5EhEpNIFsgS9UrsqSXiRWMPkN90EkusflVc9EsjP2ZGW1OmGzktumTVGX4sBsILL2vYLnshIvY3oIs86XJ6KzWLPmZGEhsCRzzhgoEHDTRl9BJSADmdWIiNGoZyIrx2Rt2PSNolwQKM4FDt0CM2JgaDbsrMQ8x8DpUyTUWAWWR6YjNdz2xJ5wHyD+Fssz0+1lWrCpwcJ6rZHUjIKTwPNTA4MVpcmhHjGxPwS6wDzmtMRS10JCXwT0khGxwUURkx5qQ4Oge4AZFZ2a1tAOigaT0aKsO3MqjCbuqRMI7F9YeHVPpPAWRYkvDiQpyhuTR2QeaqIUr8JCef6cvOqWuXlWCQJ62Ugo7Dw\/Nn5WYLOi9Fh2+4asEdcuVU6e001RPi05t7plVRKxnMpuHORduED5NgDl8XLm9K8Ar115ujJ7jm\/IPG8V160y0HAiEiFVblMD4bB33k0\/A4+Rv89tvQTQesvfS5XZMwZ29lf7Byt4ToQg6zahocQyq2QkE9c0TGNpld9Wflara+oa\/50LoE+9u3duv78Y+m25bm38zpsHrI53DODyF\/7D4bCp+yDVeJNCU9YLaUhUmYhdpuKMSiE7Fp75+pOdytKN53WY6KLDlotiB44dvi\/oF4TZQwyC3cnC5mtDf1VFg4gyXsPAb12CktEp07k+GJYFXc2CQ4eoMsXT0WMQg9eZwPFSpuwgUjkJdlc1wNoxhNs0lcGEjbAKWiOR4GwyPBIhWjVE4laW3PjsQyu27g7hQPMXHjx\/tasWWDzgSmsZEEYJnOYwg2DGwUFpolYULeqRqK1LoWAKqmpwPD7xhq3b8NHAUnIFQSIS9UAOUR63Hdq0Ywg\/aKEJG3kDVSC0IFu16mhwWCW3rZuQdqAMaUvum5IdFyTCLn\/U5jRIeyprEBkV9kDV4GILDpgePFYEDf1HHbvvEltTVSaCI535TW0qc+UFjAi74uNrOGYdMrQJPLIRd0RFITYSidbQ3XOihu\/tlzZ+3Ljk5ORxyeO3Tsjwpu4LKlXWiXSbE2FHsLsa8DJRg6T2wDaZlmpyoiXijnCOjrnpErF1D286\/pkmV17AiMgQH7gDWRWIQElYaMJGD3XC6DYPnoZ7X4HJgCntm09M6zV06NBeabt\/2uYdta9MiZd0GZIfgqPLkKbgDAiwOlWsajjHDQ3y2SBM5+aPaYEBZA7IKQogaSC2EAgUOC3JrRGgoxNIG5g7hhJWHpiwEWsKXizhalWoub0fHhWVsDxj2ooV06b9sm1KVOmjNdg3GES8ox3P4XR5zqQob9+EhIS+Xm\/vw9H15tjxAnYr+Ce0tljTf90ThaOySw8+6asfnyKIIIJGw1G2ZvkFCmVuZHN0cmVhbQplbmRvYmoKMTYgMCBvYmoKPDwvRmlsdGVyIC9GbGF0ZURlY29kZSAvTGVuZ3RoIDc3Nj4+CnN0cmVhbQp4nAH9AgL9\/\/\/\/AAAARE9x3OHs9PTy2uTo8vHwiI6P8fHxssXL9PX5pr\/O4+Xv4ePo7vP06\/DzaZKs+vn5ZW9\/9\/n6qK+9Y4mTPkxx9fX2ZoaYlrPEX2l9cIm1nam\/ZIiwYoGx\/\/34pKu56+zwn7jIaY2mfpC3cJaisrvZb5iwjZu5i5vChZay5uny3+Hm09K3+vfoxMOr4uvm7e\/1a3SCZIip7OzqZoWg\/\/7+dHuF\/v\/+\/Pv5YX+a1tjfYXWY0tXdy825qayhkKq9kqK1V2+O0tfm3+Lw5ujsbZGYiqS4navLf4id4OLn4+Pg5+rWmLbHqbC+\/f3yZZCp7+3TxMnHmJ6uuMvVvsTasMnWW26JXYGhUmiG29\/tvb+uzdrhgJuxUF98z9Tiy9biS1x63ufr8\/f34uTp9vX06+70sLGj2trB1ODl1tnqv8TOgoiN+fn4\/f39j5ep9vb1o7zMyM7j\/\/\/+6uzvkq\/C\/v7+qqqq7u7uVVVVd3d3zMzMu7u7\/\/\/\/mZmZZmZmERERMzMzREREiIiI3d3dIiIia5CGgImdk7DDSVZ5S1l8pL3LbpSdzdDYTVp39PLX8\/Py9fX1T2KA\/\/\/4ao6Co7zKR1Z7X3+pwcfaa3WNaYSdX3mVeYKJZ4uFb5Woao6GQU9xbI6e+vr5+\/v7a5CYaIuGZHCJhZa\/SVV3Tl19YX6PZouk6unmxcnT7Ozt7u7sS2B+\/Pz6nbfHX2uF6uroa5CM8vLw\/v784uLfYn6VZYycobrJtrmq6ens\/\/\/l6+jNWnGLscbT9vb2W3WRuc7ZlLDDYn6hfqK2bZOh6enxa4Sx\/P30Y4CrVWmK4+vubZWtY4OOY26K5OThcnuTrrTAm6K07\/Dz\/Pz78vP3pKq0pLzMc5mteYukxNPbk5qsbJGd+\/v8X4OXqsDPbJGSRVJ0UmOFdZOrrMPR9\/j5g6a7\/f3viqq+ao6SbXuR+Pj28PDudp60ZIKf2t3iVWF6WWaCfI+xmrXFaY2Ms7jEjJSm9Pb5qbTTyc3VnrjI5ubkjbkP+QplbmRzdHJlYW0KZW5kb2JqCjE3IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zvcm0KL0Zvcm1UeXBlIDEKL0JCb3ggWzAuMDAgMC4wMCA2MTIuMDAgNzkyLjAwXQovUmVzb3VyY2VzIAo8PC9Qcm9jU2V0IFsvUERGIC9UZXh0IF0KL0NvbG9yU3BhY2UgPDwvQ3MxIDE4IDAgUgo+Pi9Gb250IDw8L1RjMiAxOSAwIFIKL1RjNCAyMCAwIFIKL1RjMyAyMSAwIFIKL1RjMSAyMiAwIFIKL1RUMyAyMyAwIFIKL1RUMSAyNCAwIFIKL1RUMiAyNSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNDU0ID4+CnN0cmVhbQp4nK1a3XbbNhK+x1PgUjrHyxAAf8DsRU\/WjU+zZ+OksXa7OW0vaAqy2KVIhaTs6oH2kfZ9dvBHUbZEQg7TU5MEwA+DwWDmm6G+4Z\/xN0wCj8RMX2gS45AzLwoDguPI3NQC\/4JL\/Oa6IThrsO8xnySRzw936NDWZIDpezTAvvxP3iTwN2R+jGMfJglinG3w3xY4DtUQc1ls8JtFRhDBixX+Fc9uPtzO8V98j+DZv+dYXd\/LK8WzL6oDbt7Zmyt7g+0NvI3029fmLQ\/6fseLv+P3C7XuYxmpn3gxI9GQjMjIiJWMszdv5njxxxk4Srw4DC9Aw+fBOv1FnHjMBQ309\/m5sj78y7R0WrOa+WoVbbSHZne2ZfFC1V2L3Y2P5mqfb3vv\/o7O6juKvTCIyNCacH9NqK8hBSNNjXOPE4ajGEw1igne4JDCbdJrKo6aCI9R0X8NGmDIGq8G1B5RL6JWxFBPri9G7fTlJsqX\/YT7AOjFlIQRj+CO0zgIiZRcnabru8M4dGLc3TXcJzzAT5jiRT0gYpB4gRURkPyERXiRYTi9crC5aGFZZyM3cle1IcjLQm47bNzbOQ7VWiI0+wWaIjz7CS5MW4EcKPvw7Efd+Elf3pu3dd\/NhzkOtDEweYKR7Hr\/RQ8xMKdQdJuZVWMsfup3fdVQZvg\/9eVLf+rP+sFOZsQyL9weLeQfeI66eUzXzacjzI9aFLtyPfQY7AftWJAxzRP7FMSwPTHhx\/s0sDunrf389lPwXsGQhQbGQm\/yMi2zPC1wVm22aZmLBmfrqmoEXldPuF2LPW7WKbj8fbWr8VbUTVXC6LxcVfUmbfOqxDdiKWpom6Nxj0XC3uk+Egz3BUOzIn3CD\/mjFKcqm90GJpbS4Dp\/WLe4rXCRb\/IWN9VG4Ptdi8uqxWlRKGHz8sHrpJJAadFUTuL5cLycxKvFt11eg3S7RgrTCpgaNKSU9iRA5qIQWWtUl5ZLvK2rVrYoNfa057nIFfIIvCM4r3HBPhcihc2rRboEfeWNVEyegUQgyGpXFHsp7q4E3TStlOtpnbZS4mXlnY84AUTDJOEHQdCYIG4BLIypDIdToYWxtHoHtAUYUrvfwvZVq9M23dtDqSW9j0uxFfAA3dISYUeXO+h32b+AOZp9VeNG1I9yx5Q5pY8CP+XtGuzMw1Lsg5DnNcIgwFGga3ZeB40MrriRSzbToaFlUu50fPCsr7+RJYMJ9zcmS0t4zordUrw9r\/kgimT0ZM4ioSELIz6XKyQ4JNTj0QDaAsgJkgv87wAaYV4c08gBjaJR6yc0cpQtCwzaXaUc\/p3IdnXe7nG529yLWu06aBYc6oBlEaBpJI7tbN93cju9BglsFx9AW1ha7KLXcbQT\/OysXkfRupW+y7JqV7b4Pi0gpmq339Zp2aSZMl0w5baq9+etlgUhZAmHOSey2oADlfSnstpxtEusdhSts9rrWiwh4BslKuVmuqnJKojEA8lXEno+hDA72UThRvoYNh1aSLzECe0dUI3VCdpWCrGUwV177mwHehowNRp6lFFu53UwNaBg\/2tOR0vJgHZ16bROBh7EaZ0QI\/Iai0dR75fpHkhek5eigZjw4VbF30boY3UviurpSsavAmxDk0TgQMAae2pyCNIBRE3ipIkeVYZopPWtpVVaP6+oqyPpXGSCMzxyPIxMQOT\/BL5ryHvTGcJfsWZ5AmauVYCVMmvyrPihJczn43sQEI+EPnOWxlg8Gl4bSwJ5fpzQxjXFIKVys2MXK2URuIzTKb5xcsy4zAtS\/OGUnYW0F2dkyh6wkZR99hWSiSGXHXhxAi8eQw8BDrlsCP2RH0WvEfRXPNsCq4D0GcSFDBmcNSTPcDpUWzFHur4Q41muag3lSqXVlR69gbQanvTgVvXoYYqVxvZV+xe9aHntX3TB+B91QaDSy9QL1D030ILswv5U3X1d6GXpofq1ddrr1kN\/6AZdItPY3+eaMnUfPb3R7V49gNtQT4VahV6L2Rb90M5RoGDOl1RDkoA5JtZ+hmoe4wTicGwCv+dFXonW0ZFp0CI6JVrCJ0SjLJgSLfYnRGP+lLvAgil3gcVT7kJATu4C+FIec\/+FM0XPnHTv38AcAfd8\/\/kcqhbs83F\/3a67402VYzIVWtY9rOfIuGVZ9Kz1wFK\/9dB3BDpsQgA8WQsNCfGoD6m6kXMgbXOIUge\/AEc6olOxcwZCDpaWTsk2xAfQKB+gcO6PTONMCR8dl\/ArXabWwUMXwMWjDjq6bW9DCfQs9eDUtsni971u2+lLo3pM8NJNorEhrsPZHr0j50G2rerjmFffDn55k2kVi4lVwGWsZdjWOn91jP1K6+j81QVoQyeWkfBSvK9DeS8DX89pkEy0WutPp0Gz\/nQStM6fToMWXmwlt5X7sX9Zqwy9hNDnJ37U4NGxwZ93JJyNZUYmYjW7bI1TlTtu6yqDZFt\/rugVsZqrATbAuZdwQuyME\/leGiWOFYOPaV628L+WOtXluN9mzW\/zK0i6m20lC3IDRRG5gIBEiZ1yomSShuF4YUElk9cj+Rz4G58HI4CoX0PBVS0\/9agiQCEeVDniUTRt\/pDq7Rxid5CgxyTqFjDVfgauVbhPNWzbtqrV9z5T7Lvf1SLdNf2PVeg5xY28mDFmJ3ItV4x83KA0ci5XjBc\/KHEru7kVP0gSj5crXnxG\/q5yBYEzzmm\/CuD0C4MT9ETmkcAu0nqOoO0\/olV9R5Tj4RzNwOdoBur\/bsGVilIKmWkch3ZxhjIPFikrXK1WosaDJ5dyCpyGPNfa9\/KOC9CceIc7nhvvmGa1lndMg2Z5xyRoHe+YBs3yDne0SXjHkbVPxzsgkPZ+2zLEO8yXYB2lzLdgxUIgjg\/8KoHKDDeJuZ1povhEQlX7nQoNgtDgTxymzxxhT3ux5dWZ4\/kUjRDfiwKQ6TATMuULnowHgT8q7fHzUl\/bo7meRXPCQkXFjhfllg2iF4IzYNgkCU+oiEcJ\/DsrfPc71E2qogpoiUOwUvfCVEBlC4Qt4qu4pasgOgABJ549mUwayX49eK1Gmf5KPfQ7hJ1pIFkGlxHSqFvQ95X4DxYk\/dpRcPfp+L6ucl047sr1si5knjJdLNIjTFdhKwhU9qthlb5ISpDo2P4CKVexXeg2U4rybLl96Ae98qcwnNu1mdg+TVnBFlWP9fZK19EVKSZBO5AFdzQ3suCM50gWJlltRxYmQevIwhRoB7IwCVp4sZVMQxb6x2c6spAkcnIQZ5wtuHzHGYFDFwZxHsgfkZ2GQ2ej+M\/4\/zgQtckKZW5kc3RyZWFtCmVuZG9iagoyNiAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9HMSAyNyAwIFIKL1RUMSAyNCAwIFIKL1RjNCAyMCAwIFIKL1RUMiAyNSAwIFIKL1RjMyAyMSAwIFIKPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5Pj4KL0xlbmd0aCAyNTcxID4+CnN0cmVhbQp4nM1b247juBF911fUYzuY0YoUSUmLIINsI5OdYJPdwRgZBNk8qGW6raws9erSbud\/8kPJD6VIXXxpi6LGxiAYoNst0acuLNapKml+hY\/wKxDmksBvf9EoAB76ruCMQCC6D6WEz5DDN\/cVgaQCz6Xci0KP4aeAEi5C4XhuSAPGCVRJu+7+06V1MKz7dI+fo5DBDigsS9QDl+NK9U99iNS3fS+AgOB3ROAkW\/huife8yBewTAD1Uou7X8stfLNM0ApYruHvcPe+WMBbAnflAny4gwUIuOsuNQvn\/E681n+0P9MFcLjL9M\/2c1zrG7JaIH73Ffms\/5DlwsFbe\/3HqhUQ7\/t1\/4Dln+APS+3mU\/Oo77te6NHePNDmOco85k+b99CgLrTXL5daYHupasU6l8WGKEEE\/FSsSRia4Sz\/edmIYY9EFLgk7NG0ERf3yDkx4qcG94DB3VPRan5sxbfayScu1GJVfCFS6ZzrQhh3AybomS68\/Vb3q7WMdZal+boot3GdFjnED0VTw75oyiN7jQGMilwMXBr4LvG56BVxbFwMg8hjI19h+55QHidn2CYjj7Bfo0Wz0UxwhM+F+5s6UqN4PkNfs+hGxjJ6S9cF4Q3RGObeG6Jxby7aX4qjCDQEvYOB+Uqc4G5E6HkSmIx35zTex3NLSN3AfJ6dFrYu47yKE3WeK4jzFciXJ1mmMk9MYYYR5hLBo17Qdc4\/qC1C15+LNuV7M1MKzs+y8GWmdOyZ8tWdM6Z0ZjEljDOlcO4eToS2CB2\/tZc61MrIqz3Bdc6Yl33HXcuIy73jIuQywcEMgnPGrSCYrCLfH+ROninHnkMORHmCfRKhzihR2sXqgRyds+3xQpdzKqwNO2yPM2UYJcT1BQo3GHaWMY5ZfzxBBLgZLDTiOjNIt6dwezQw0244F3CCdoOOdm9i7kC7N0ELZttqRbs3QRto1xrtmHbHafUWyh0SGUWS9gJiAXdfylVa74qy3qS5rCoAcyBSj6iUIAYZt2JSgrzsfVUm5RGSt\/d\/x6TtpQ6yvbTFP9TqFvkXqZY448tbvj0oNdJdXciBnsu47\/eesWoVJsIlDGdDWqTVeQpapFV7QLu0ehtz+7R6G7Rgtq02afU2aH1atUezSqs3Ue6QMELfjW6HJqKjatOE9mEN+3FATMIuC2g4A7BoIC4lxJDLHSRNVRdbWb6BnYQkzuFBPqY5VJu4TPPHtm46HqL4HqzifQXrstjajI24qtFHyOhEL+eu3kjErqXSpJJ5DUhKFeRFnSbShc8bmSt1tO55AVmRP8oSlH6nNhR5neaNtFKOeYp2bHQrtEvka4fEFaxklZTpg1zhjVOlvy928lkpphRX3lXaYftqpRwVRwRlUq7BVrjGbngPdbqVgLpm6TatTTQeuB4zirCvOyjxZoIpF3YB5ppqcoZ4XJwCO1cfPGwhIo3m3OAYsyiwPHUfG1npscU7Ay7hWAexcAbsX1MDIRHMCaGaU9rjpQY01SSJgM1AM8QgCXQM+jPQTI4LvbloeGqKPMOyVx2e086aXJpWUWyqfT+cI2K327nrNH+RZewmxfZC+36J9MOAzAksYwnB56IV5ZCj2rTy04\/wXfEClHM\/OohyBjcpt9BIeUWoqQxstQ2Bf7iSHV3hqj7HK4dv6StOBhtYj7vlcN6QhIlV3\/8Js+2fkU2KN3D\/e4iY51FTsvHCdqZ0IuDqZMNE2BHMTZINZzesZ5gfWdYzv1ma6g+sBL0wmgGHNP++PRRv4EOeuPDz3X+6C\/\/9eQFP8X6r2P+pLBJsSVUVUsnyGfkUkFnj1TbN06qW2LnCw96GSBnlU7Oijkjvy6KqyiJeVUrDOE\/SODN2wxjgoQhNEs6obymTTV5kxWMqqzfwww\/3gJUExFmGRcRDjYbWdSa1+aXMMHpXve2VO24pxz6GRVE0w1KrAEGmnDhrQBzbcPMxG0zUWs6sFn\/06dxBJJ7l04luFHjTI93Pm7Y77xvsSKtEKObzhdOOeMVwaaXXFvZtNuFYf5CQnGl37Wn2FdXTrzpBwcLCFfR4goLJfnKC8n2hZ+O7YWQRaSdS7cTWu74eoLP+7vv+kX3oqMcEuOZF321Xlu2kpZ+64PonvabsZzNUb6Lo1yf6Z71wRL9ezVeonpuwU4hjAa1CLVyrRCsy02q131Iq9nfXCwj69eUwxhm+1mrUfuEY9J1+1QD6oLMNKj8grlBvWpzsydX0pXg7YreiL5+GLmc2IbosVPavZdIN7p9kWRU55uLjxkt3oE0eN\/WmKNN\/YaqME0UY+rFgU0ndDeJvG4rw1ZsxzCZxVjJpyrTew1bGVVPKChs+rJKwunvK9rBLa6xj5AqpLIMs3rmw3EhUYVic5knWrKx0olGEvYCNTkp4g4wIVbyWj01crpBbtKLolHWaydYnD02arZBO8SaqUpdpUity7byGXePZqxHjmoVYCVtpNmycko+CigaZbdhEA7PyyCVRMIiyKVxzZQLGArpb4mYUe4l27zYF5BLdgPd+yYtdu1s2NgaeCn2bucVxUA7hoQw22IdEHQpKz8QYD+xTmT7HiWEURIXAIOZsAL2OWigyylw4XbOtVKQbam3fx24giIIv1PM60qI8ODpVlk9bx9FUGyMmKNA5LzC+nAKdgV\/MFJj0jwVoy1D9zwMFOh0F3YQClVo3okAHKbCzw5r81LzXC9jZblz7GI36xOWXX0r5EjQy+sraGdpnNcPMMiP5vdFtg3yJMdEpoutmo9+OJzZG0RohTHq8OnKjYMTrHiao54HGFmFJutP0b0MLSXzMB1RYoNHphoNQYanb0HD8+ITui\/OBoNC1j+mzKh7aHegHIhffkXj9aASTms95L\/\/KuVbvaYJE6Jnq+87TYOXpaTRqoVvv6Um0wdJPGwOcjx2MmIOGdI5blK6wXU7XadKdjKd4327bQ5plldpMZKVnXKUHWuc1CG6loa\/2XCbIoNJ1ffVhK0XYVdWGrXSst3ISjb7uq8e3cgptODRLmWXKo6rCSnX5WMpEqmOzLXK5N83aotANIz\/ohd3qhHB69BL51SdkEm3WCZlCO87+cVYV0xTQ9j9FvcF7WO03yUY9ikr0Cx2m1D2o5IcY3DYx\/YD1XNygkHiNzUQa12p0hcdKy9adT5ynExUfcxnBcrcTeuWODyZQpoa2X7N8JF7kipOCb2SkdDr06EZKe10RdZOjpK\/ahK58DG8KqpekOR2Ej77v+McuwH\/r+cz\/3bj\/sEwS6n+DnMApW7xwejqmnpVgffahf2elnYHo\/6eghmOqxAt1WUeHtWjj22FZ+xP6ElfVg+ict2xYVqa6DMzbi4\/txXftrxlVIeVE\/c8WdmbmtUOMCGvNMPC4Bdz7bg5gojwM4DD056Bm8U5XJ7o2AfXMvEwfN\/Xw1Fc91NobCkGfBq7nhXyQOY\/VPsL\/AIqxj\/sKZW5kc3RyZWFtCmVuZG9iagoyOCAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCi9UVDIgMjUgMCBSCi9UVDEgMjQgMCBSCi9UYzMgMjEgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggMjgyOCA+PgpzdHJlYW0KeJy1W92O27gVvtdT8HIGSLTin0TlptimXWD3YtNFpgiKohcambaVyJJDyfF636cv1KLv00NSv54xRe3MIsBIlsTvHB6efzJf0S\/oK8IsxAm1F5ImiAsaxpxhlMTdjZLoE6rQd+8bjPIGReZfk8PYKCTM\/tY3OBIh4RRGRkmYiiTID+jPD4jbAd3l4YC+e3jACKOHLbr79z16+Iz++mA4uULDNEwSEnugkQ4NOdBI7Mlbzjq0j\/tMFdUObWuFsu22KIuslc3\/kPwm1WWTXdDjqSkq2TToeFLHupHNfXCLPE1pyOkwF7RM\/a0LDOYCV38w5AJLV4IVFUjkkLVFXaHssT61DvRB7LEWgAd8cHepTwrlSm6K9lyrdm9EfHthCWOhIIS4KATX0ritJr0Kx0kS8siBtkqFl9HWqPAi2jDT7we1RVtVH5BW2B0yEp6uYlujQ6a+yFbfwVvNQ\/AsD4xEIaNCuHjw171R2jEOGXGgddIO\/KS9iAbSDrylvYSWs+Cpw6jqavQZzwr4hjmyJIziiPVkPfyUYxJppOcAyxRrWC+0jy1wjMrs3ADLF7QrvknNMco2DhukIqQpXkEFjBsULyuRKnb71gioLA5FixorwxB9lBI9yrI+G3EeaghCtxVpnCclYexerE6RQO2NHXQMnKqNVKjpJx86hEo4zFbggdhrLREGYyAJXgenR0epAIWJwoRgHosY7gRJGMcBxGgTtN9\/dH6HPr6H+1QwdEYEPSgHjxGfLHAURmmaAHM5gixBf91dLLfUcvtPdPdpf484usvuUYzu2nuUmilggu7298Hw4mg+sn+leVKZe3D+yTDgfI\/MsOuPzOvg7ke4RMPHJVwwBCx7OcBl+DHjwlKYMqnug3T41lLYmRfdiK2lU5s3aoqVXTOlHwXwKDcv7F877mT+2k9n\/MxnYfmyQ8r7QHO0mcJ\/tlzaD2YsW9BOCpdrMQZzWeynmFYiFtLKTU4YrybihwH\/Ch5+WlBunpKQswSjUXMgG3pGcYKZ4siy1wDNwZ80LdTTsoYBKh49p7IYAlWKCR0ov5KV8kSEIn4tm+cxC5kX2j9MVrSvi9wRssD9phiLFbAQm85FWaLseCwv2gub5LauJOr9Y5bn9alqQ0cGmXCgRnlP1sP5esmGg5YsoS1F8RGN8jCOBwV0hXFP76pVz+0tOSGTZdA6D9NZdJZ\/AbuixsMkxpyFsTei7wNhjDXun9fmuX0LNsKsNfpaCAfuCE+v2HyluPOsZIacikPilwy5upHMTcEEvWC+35qpb3sBJMa1Jf19ZsTQ9q5pEMm7QSTBokiSNMSCiCv+PJXlCZoga9Hy+nDMqgKsUskSUpENerwgeHgAa6zPlVTNvjgiyIfyumpVXYboYS\/hi6wa+Qhu6iNLGSQufjm7RQscebE\/2qNE26LKqryAhC+rNjo5Hh8Mcw5dVSo4A54k\/lSdPgZDzWjnAN6cuqoYXXcES1UeS23dsYxGPLQmJp68DVrz4TRtUEBll5enjXRlsFC80SjmExrBwhqOmnku2j1q9xL9oMPDh+xLg6rsIN+g5pTvUda46r1hbjENU4\/qMbgbifwA86rV8Q36scpDx9xEAm6NcBeNFf2AQdthkf1q7peGj5EkhCwczcJH7JFs\/zyNClkfS4zjDIbIUZq\/9t5+Y+OKjT3XjvNpLAmueE7TkBLGep5f5mJIRNaijepZ1e2y87ytogxCgOAs9aYd3HWe2CMJ0d2T5CZmsFYlb6NdqeQQJPw98c1owiIKVCO6MBnfaDJ44oi5C\/d5v+357tToiRfRxn6bh7daQhtU4edZ1+fs9MGchnGUONGvllH3RqT1v7OI\/zRa0jjkgk\/lsOTfu6DhwEzikCWQzXSYL6uAKJjZSrRDrdpdtpPIUQExhuGS8BWwvc6\/8YnJVJuyF2xRNScFdiVHq3JRIIJCsROLFRQ2hZJ52\/UVddtxQqgz7aOqt4WzPT9MDGo44dc3Uzsg8ptpHDeuOEyTUKQpdUH\/jjhMb3dj\/6g4TGddTR2HSbochn+CMPzW9puYicZvbaeFGJ9j2ypvYxN99Rtl3nyxP+T06xnAzl5W1DQE6zSIsX4aL6tpCI7XomXIbDRAvNkpKQ+yaiEMtWcpq1mT3NFeZnqLB3NxtRK\/0\/UwAFmJNoZIjyBPX6MrPCqfN9qYArX7TG807CRk6arfeBjnAF5hc8rbRqdCjVTfitzuUFzqk6sE4zrwk3Rg6ZVKMAoaxdlrlWDLaGtKsEW0WQn2uS6qiTs+ZqrVSedQj9k9TQjdamMc9FHJY1Zs7ANHUjNwo9Nir4Lbq6QmoGKCp8Ib172evcLq+mtxH\/m6bfeyPht8pvsrEwft0Wb7YAuevSl4bNmj+oZ2ajYSEuujidmToKbbNnxkB9vKqZrUT8i00oeunam9gmQ+tgOdll1DO8\/C+ZZdhEHWkES8l8DLcvFRnnGke9weaH9vJKq3phswKpr+DD97PgQcbiyYD35nVufzOQTH9atUWQhKPVGYXi5PjwPwkOBkSmQp9XWFOyZmaB5u+Cwfm6J1JNLgQiHVE3wF5juEPu2lacijE4jcyBs9lfeVeuijHVor\/NfzWt7BorxZmkCtHq1Z1OdYN6qBKVRFqUnvDmYhIz4+KWdPMJh7ORsFT+CbPdqaaQs+xdJMknSKNX1isaajRqyb8x6NhcW3Nj2CZzXjjd1XKesdRIbZMYyigRy+LCGrlzZCNG2tbGL0fGigApwuZtzFxIpjRUJAbkf80ZwBgYKa+6MFYw06nFD58W8+6RaBbOTGNtGV\/LPNRskGqqNHVZ8h8UHt5QirsakPGSyE7mHqyinP9YmutoBfZg1gnebL5IqpI1c40dtNPg1Oa27arnXmVjQ9LYcHgVgbp1E8pxK4lt3o19bVjWAhpYnoIX0KZ2X80KGuClBTWLU3qD7CTExhCIK8HWgYodr4Ym8pmaB480gSjTTrfAXaxtH\/g7KVGY\/vvYLOWiNagWaM4OspK4v24qX6kJETP9Vv+m5EF62HvL\/ebiX4GL3dO48qT+w5ghkQyMs6qh4a4o6DFLQ4YWwFnqvHqosShiGb9Yd70HIAFs05p6xsautv0X\/yuv4CyfN\/fXIlLIRnbO031HVyfmrB\/ex13r9R+oAVVF97WR5NgAcbavTRqOI3aQfUVVlUEslf4U0hYRG9PBBonacTf2+nq3uKunn+eNG+aKN5UqdKV4s7lR1MtbiRJXCrHKsAtYqg6UD9hU3CmK9F+1Yo60jrubC92vM4NicOPMj0ItP92FNVfD3JElSoaYpdZSUHxG0XTjdqYQEvuvWuZGb2JDIEqYAxQanPYXqtJuOe3khbcRfSTB+gANPXPO11J1Jz3Zf6DrljrPP0georHXbBFHtaphca1OZ+2fMHaz8fZX5S4Fnf6T3zZ3LQJzsdehuKUyZ6Un9I\/kwjrXOC+BBZ7lzQiK5F67JSm38U1ebUtOriiGhEVy8Ezyk4c4+3LjQaJjyaoi1Va00LZtV3TK6qCLNi+v8yYG7Ozh6sePHwBLL66ROb509Hrcn8ceR7bsYRBVNI5TBJ2Qq0KleXoz23LfN9VesMVe826QpRyVwW3+xuQNWcDvpMq6xggXWU2WQtxA7dqmq0LYBX8PA8EN\/AJ0KBt+x6Oo\/WnI7HWrUNwkQ4Gkb6PzFQTpwEAm9NgtAfplALrIF7LFokB2lCJSCPsjL1R5cNgU0ovY336NBgysIoZfFA12MBXQZBISkSZBVcV844HDoTLMQRlLsrUCf29Qv6P\/gi4N0KZW5kc3RyZWFtCmVuZG9iagoyOSAwIG9iago8PC9GaWx0ZXIgL0ZsYXRlRGVjb2RlIC9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9Gb3JtCi9Gb3JtVHlwZSAxCi9CQm94IFswLjAwIDAuMDAgNjEyLjAwIDc5Mi4wMF0KL1Jlc291cmNlcyAKPDwvUHJvY1NldCBbL1BERiAvVGV4dCBdCi9Db2xvclNwYWNlIDw8L0NzMSAxOCAwIFIKPj4vRm9udCA8PC9UYzQgMjAgMCBSCj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeT4+Ci9MZW5ndGggNTQ3ID4+CnN0cmVhbQp4nJVUTW+cMBS88yvecXNxbGxjyLGrHnprKtSqRwdM1ynYG9sk2r\/ZKv+nZr+kVcquERIYJGbee\/NmXuARXoAwRAQ9PPJKAC8pKjgjIIrjwSn4AQbu155A4wHvL9\/EfzHK2eF9OlTxzikWIHCFikKQrBngUw388MfxUQ9wXzcMCNQdrOAO6mf4XO9LmYErKo7yQiSgrWWvO+uMlldwCeOIlWIJrlNet8oEfwU1gmFW8AWoD\/DTjjDIHci+t29gRwd+I502v8B2oE1sZZBBWwNvOmzgLrs9qhKjshBwizxbGWtk1+ley6BaCBvtWthKF7TyIE0LvR50iCXNd5xXDFFc8hNpyhzn+osneLbahL1u2Y0miwKxhCZhNUj3W4WJbz9AGzbKQaeNNI2WPTR22Epz6niqYZLgPBb\/DupVuV0bFUqZPc8RTpr90+i1Ud7DdnRb6yP\/0y7ST0sw1RqrjMPxwY3NNBwfX\/bf5qWg0bMVE+caEqRQpukjdQt\/vgxb64I0YR6fVRQJSukC\/CRjU5GaE1+dfpXN7or\/KEacxMMC0GshQeliuPXG6iaKOS3SOuo2Dsr5v2BsmD6jM1n2QT4sEME4P5MlrHaSUXI6RVEC2nflBhvd9+0UdA+wu8im+f3PS4Lyskpny1a3gu4ym1IWCZeJCXQZdEm2+49T4LiOKbHAY0ympFV2sT8fBHk\/7hG6FgM4urMqyIlzmQUe4R+blwYzCmVuZHN0cmVhbQplbmRvYmoKMTggMCBvYmoKWy9JQ0NCYXNlZCAzMCAwIFIKXQoKZW5kb2JqCjE5IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUxIC9CYXNlRm9udCAvTExWQ1lEK0FkZWxsZVNhbnMtUmVndWxhciAvRm9udERlc2NyaXB0b3IgMzEgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyMTQgXQo+PgplbmRvYmoKMjAgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHlwZTEgL0Jhc2VGb250IC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZvbnREZXNjcmlwdG9yIDMyIDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMjEzIC9XaWR0aHMgWzI1MCAwIDAgMCAwIDAgMCAwIDI4NyAyODcgNTMzIDAgMjIzIDIyNCAyMjMgMCA1MzMgNTMzIDUzMyA1MzMgNTMzIDUzMyAwIDAgNTMzIDUzMyAyMjMgMjIzIDAgMCAwIDQ3MSAwIDczMSA2MjkgNjcwIDAgMCA1ODYgMCA3NjIgMzI0IDAgMCA1ODMgOTE5IDc2MCA3MzAgNTg3IDcyMCA2NTUgNTUzIDYzMCA3MjcgNzAxIDk1MSAwIDYzOSAwIDAgMCAwIDAgMCAwIDU0MSA1OTMgNTE4IDU5MCA1MzAgMzIxIDU4OSA1ODEgMjYxIDI0OCA1NDAgMjU4IDg3OCA1ODcgNTQ1IDU4OSA1ODkgMzY4IDQ2MiAzNDAgNTgwIDU0MCA4NTUgNTY4IDU0MCA0NTQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMzY3IDM2NyAwIDIzMyBdCj4+CmVuZG9iagoyMSAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0FHS1hKRStBZGVsbGVTYW5zLVNlbWlCb2xkIC9Gb250RGVzY3JpcHRvciAzMyAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMzIgL0xhc3RDaGFyIDEyMSAvV2lkdGhzIFsxOTggMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyNDQgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDI0NCAwIDAgMCAwIDUyNCAwIDY5NiAwIDY5MyA3MjYgNTc4IDU1MCAwIDczMCAyOTEgNTExIDAgNTU4IDkwNCA3NDUgNzYwIDYxOCAwIDYzOSA1OTkgNTcxIDcxMSAwIDkxOSA2MzUgNTgyIDAgMCAwIDAgMCAwIDAgNTUwIDU4NiA1NDEgNTgzIDU0NyAzNDIgNTU1IDU4MyAyNTcgMjU1IDU0NCAyNTcgODYxIDU4MyA1ODIgNTg1IDAgMzc2IDQ5MyAzOTIgNTgwIDUxNyA3ODEgNTA4IDUwMiBdCj4+CmVuZG9iagoyMiAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UeXBlMSAvQmFzZUZvbnQgL0lQRUpKRytBZGVsbGVTYW5zLVRoaW4gL0ZvbnREZXNjcmlwdG9yIDM0IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgODkgL1dpZHRocyBbMjQyIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAyMDAgMCAyMDkgMzM0IDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCA2MzcgMCA3MTYgMCA1NzAgNTQzIDAgMCAyNzIgMCAwIDAgODg1IDc0NSAwIDYxMiAwIDYzNyA1NzggNTMyIDAgNjE0IDAgNjA3IDUzOCBdCj4+CmVuZG9iagoyMyAwIG9iago8PC9UeXBlIC9Gb250IC9TdWJ0eXBlIC9UcnVlVHlwZSAvQmFzZUZvbnQgL1FRVEFRQStUaW1lcy1Sb21hbiAvRm9udERlc2NyaXB0b3IgMzUgMCBSCi9FbmNvZGluZyAvTWFjUm9tYW5FbmNvZGluZyAvRmlyc3RDaGFyIDMyIC9MYXN0Q2hhciAzMiAvV2lkdGhzIFsyNTAgXQo+PgplbmRvYmoKMjQgMCBvYmoKPDwvVHlwZSAvRm9udCAvU3VidHlwZSAvVHJ1ZVR5cGUgL0Jhc2VGb250IC9TUUtVRVQrU3ltYm9sIC9Gb250RGVzY3JpcHRvciAzNiAwIFIKL0VuY29kaW5nIC9NYWNSb21hbkVuY29kaW5nIC9GaXJzdENoYXIgMTY1IC9MYXN0Q2hhciAxNjUgL1dpZHRocyBbNDYwIF0KPj4KZW5kb2JqCjI1IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1RydWVUeXBlIC9CYXNlRm9udCAvSkZSWFFEK0FyaWFsTVQgL0ZvbnREZXNjcmlwdG9yIDM3IDAgUgovRW5jb2RpbmcgL01hY1JvbWFuRW5jb2RpbmcgL0ZpcnN0Q2hhciAzMiAvTGFzdENoYXIgMzIgL1dpZHRocyBbMjc4IF0KPj4KZW5kb2JqCjI3IDAgb2JqCjw8L1R5cGUgL0ZvbnQgL1N1YnR5cGUgL1R5cGUwIC9FbmNvZGluZyAvSWRlbnRpdHktSCAvRGVzY2VuZGFudEZvbnRzIFszOCAwIFIKXQovQmFzZUZvbnQgL0pPVk9WVStNUy1NaW5jaG8gL1RvVW5pY29kZSAzOSAwIFIKPj4KZW5kb2JqCjMwIDAgb2JqCjw8L0xlbmd0aCA0MCAwIFIKL04gMyAvQWx0ZXJuYXRlIC9EZXZpY2VSR0IgL0ZpbHRlciAvRmxhdGVEZWNvZGUgPj5zdHJlYW0KeAGdlndUU9kWh8+9N73QEiIgJfQaegkg0jtIFQRRiUmAUAKGhCZ2RAVGFBEpVmRUwAFHhyJjRRQLg4Ji1wnyEFDGwVFEReXdjGsJ7601896a\/cdZ39nnt9fZZ+9917oAUPyCBMJ0WAGANKFYFO7rwVwSE8vE9wIYEAEOWAHA4WZmBEf4RALU\/L09mZmoSMaz9u4ugGS72yy\/UCZz1v9\/kSI3QyQGAApF1TY8fiYX5QKUU7PFGTL\/BMr0lSkyhjEyFqEJoqwi48SvbPan5iu7yZiXJuShGlnOGbw0noy7UN6aJeGjjAShXJgl4GejfAdlvVRJmgDl9yjT0\/icTAAwFJlfzOcmoWyJMkUUGe6J8gIACJTEObxyDov5OWieAHimZ+SKBIlJYqYR15hp5ejIZvrxs1P5YjErlMNN4Yh4TM\/0tAyOMBeAr2+WRQElWW2ZaJHtrRzt7VnW5mj5v9nfHn5T\/T3IevtV8Sbsz55BjJ5Z32zsrC+9FgD2JFqbHbO+lVUAtG0GQOXhrE\/vIADyBQC03pzzHoZsXpLE4gwnC4vs7GxzAZ9rLivoN\/ufgm\/Kv4Y595nL7vtWO6YXP4EjSRUzZUXlpqemS0TMzAwOl89k\/fcQ\/+PAOWnNycMsnJ\/AF\/GF6FVR6JQJhIlou4U8gViQLmQKhH\/V4X8YNicHGX6daxRodV8AfYU5ULhJB8hvPQBDIwMkbj96An3rWxAxCsi+vGitka9zjzJ6\/uf6Hwtcim7hTEEiU+b2DI9kciWiLBmj34RswQISkAd0oAo0gS4wAixgDRyAM3AD3iAAhIBIEAOWAy5IAmlABLJBPtgACkEx2AF2g2pwANSBetAEToI2cAZcBFfADXALDIBHQAqGwUswAd6BaQiC8BAVokGqkBakD5lC1hAbWgh5Q0FQOBQDxUOJkBCSQPnQJqgYKoOqoUNQPfQjdBq6CF2D+qAH0CA0Bv0BfYQRmALTYQ3YALaA2bA7HAhHwsvgRHgVnAcXwNvhSrgWPg63whfhG\/AALIVfwpMIQMgIA9FGWAgb8URCkFgkAREha5EipAKpRZqQDqQbuY1IkXHkAwaHoWGYGBbGGeOHWYzhYlZh1mJKMNWYY5hWTBfmNmYQM4H5gqVi1bGmWCesP3YJNhGbjS3EVmCPYFuwl7ED2GHsOxwOx8AZ4hxwfrgYXDJuNa4Etw\/XjLuA68MN4SbxeLwq3hTvgg\/Bc\/BifCG+Cn8cfx7fjx\/GvyeQCVoEa4IPIZYgJGwkVBAaCOcI\/YQRwjRRgahPdCKGEHnEXGIpsY7YQbxJHCZOkxRJhiQXUiQpmbSBVElqIl0mPSa9IZPJOmRHchhZQF5PriSfIF8lD5I\/UJQoJhRPShxFQtlOOUq5QHlAeUOlUg2obtRYqpi6nVpPvUR9Sn0vR5Mzl\/OX48mtk6uRa5Xrl3slT5TXl3eXXy6fJ18hf0r+pvy4AlHBQMFTgaOwVqFG4bTCPYVJRZqilWKIYppiiWKD4jXFUSW8koGStxJPqUDpsNIlpSEaQtOledK4tE20Otpl2jAdRzek+9OT6cX0H+i99AllJWVb5SjlHOUa5bPKUgbCMGD4M1IZpYyTjLuMj\/M05rnP48\/bNq9pXv+8KZX5Km4qfJUilWaVAZWPqkxVb9UU1Z2qbapP1DBqJmphatlq+9Uuq43Pp893ns+dXzT\/5PyH6rC6iXq4+mr1w+o96pMamhq+GhkaVRqXNMY1GZpumsma5ZrnNMe0aFoLtQRa5VrntV4wlZnuzFRmJbOLOaGtru2nLdE+pN2rPa1jqLNYZ6NOs84TXZIuWzdBt1y3U3dCT0svWC9fr1HvoT5Rn62fpL9Hv1t\/ysDQINpgi0GbwaihiqG\/YZ5ho+FjI6qRq9Eqo1qjO8Y4Y7ZxivE+41smsImdSZJJjclNU9jU3lRgus+0zwxr5mgmNKs1u8eisNxZWaxG1qA5wzzIfKN5m\/krCz2LWIudFt0WXyztLFMt6ywfWSlZBVhttOqw+sPaxJprXWN9x4Zq42Ozzqbd5rWtqS3fdr\/tfTuaXbDdFrtOu8\/2DvYi+yb7MQc9h3iHvQ732HR2KLuEfdUR6+jhuM7xjOMHJ3snsdNJp9+dWc4pzg3OowsMF\/AX1C0YctFx4bgccpEuZC6MX3hwodRV25XjWuv6zE3Xjed2xG3E3dg92f24+ysPSw+RR4vHlKeT5xrPC16Il69XkVevt5L3Yu9q76c+Oj6JPo0+E752vqt9L\/hh\/QL9dvrd89fw5\/rX+08EOASsCegKpARGBFYHPgsyCRIFdQTDwQHBu4IfL9JfJFzUFgJC\/EN2hTwJNQxdFfpzGC4sNKwm7Hm4VXh+eHcELWJFREPEu0iPyNLIR4uNFksWd0bJR8VF1UdNRXtFl0VLl1gsWbPkRoxajCCmPRYfGxV7JHZyqffS3UuH4+ziCuPuLjNclrPs2nK15anLz66QX8FZcSoeGx8d3xD\/iRPCqeVMrvRfuXflBNeTu4f7kufGK+eN8V34ZfyRBJeEsoTRRJfEXYljSa5JFUnjAk9BteB1sl\/ygeSplJCUoykzqdGpzWmEtPi000IlYYqwK10zPSe9L8M0ozBDuspp1e5VE6JA0ZFMKHNZZruYjv5M9UiMJJslg1kLs2qy3mdHZZ\/KUcwR5vTkmuRuyx3J88n7fjVmNXd1Z752\/ob8wTXuaw6thdauXNu5Tnddwbrh9b7rj20gbUjZ8MtGy41lG99uit7UUaBRsL5gaLPv5sZCuUJR4b0tzlsObMVsFWzt3WazrWrblyJe0fViy+KK4k8l3JLr31l9V\/ndzPaE7b2l9qX7d+B2CHfc3em681iZYlle2dCu4F2t5czyovK3u1fsvlZhW3FgD2mPZI+0MqiyvUqvakfVp+qk6oEaj5rmvep7t+2d2sfb17\/fbX\/TAY0DxQc+HhQcvH\/I91BrrUFtxWHc4azDz+ui6rq\/Z39ff0TtSPGRz0eFR6XHwo911TvU1zeoN5Q2wo2SxrHjccdv\/eD1Q3sTq+lQM6O5+AQ4ITnx4sf4H++eDDzZeYp9qukn\/Z\/2ttBailqh1tzWibakNml7THvf6YDTnR3OHS0\/m\/989Iz2mZqzymdLz5HOFZybOZ93fvJCxoXxi4kXhzpXdD66tOTSna6wrt7LgZevXvG5cqnbvfv8VZerZ645XTt9nX297Yb9jdYeu56WX+x+aem172296XCz\/ZbjrY6+BX3n+l37L972un3ljv+dGwOLBvruLr57\/17cPel93v3RB6kPXj\/Mejj9aP1j7OOiJwpPKp6qP6391fjXZqm99Oyg12DPs4hnj4a4Qy\/\/lfmvT8MFz6nPK0a0RupHrUfPjPmM3Xqx9MXwy4yX0+OFvyn+tveV0auffnf7vWdiycTwa9HrmT9K3qi+OfrW9m3nZOjk03dp76anit6rvj\/2gf2h+2P0x5Hp7E\/4T5WfjT93fAn88ngmbWbm3\/eE8\/sKZW5kc3RyZWFtCmVuZG9iagozMSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0xMVkNZRCtBZGVsbGVTYW5zLVJlZ3VsYXIgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE4MiAtMzIzIDExOTggMTA5OCBdCi9JdGFsaWNBbmdsZSAwIC9Bc2NlbnQgODgwIC9EZXNjZW50IC0zNzAgL0NhcEhlaWdodCA3MzcgL1N0ZW1WIDk0IC9YSGVpZ2h0IDUyNiAvU3RlbUggNzYgL0F2Z1dpZHRoIDU3MCAvTWF4V2lkdGggMTM4MCAvRm9udEZpbGUzIDQxIDAgUgo+PgplbmRvYmoKMzIgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9MUEhNU0grRWd5cHRpZW5uZVVSVy1MaWcgL0ZsYWdzIDMyIC9Gb250QkJveCBbLTE3NCAtMzA4IDEwMzUgOTQ3IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA2NjggL0Rlc2NlbnQgLTMzMiAvQ2FwSGVpZ2h0IDY3NyAvU3RlbVYgNTYgL0xlYWRpbmcgMjAwIC9YSGVpZ2h0IDQ3OSAvU3RlbUggNDMgL0F2Z1dpZHRoIDUwMCAvTWF4V2lkdGggMTIwOSAvRm9udEZpbGUzIDQyIDAgUgo+PgplbmRvYmoKMzMgMCBvYmoKPDwvVHlwZSAvRm9udERlc2NyaXB0b3IgL0ZvbnROYW1lIC9BR0tYSkUrQWRlbGxlU2Fucy1TZW1pQm9sZCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTg2IC0zMjMgMTIyNyAxMTEzIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgMTE1IC9YSGVpZ2h0IDUyOSAvU3RlbUggMTAyIC9BdmdXaWR0aCA1NzAgL01heFdpZHRoIDE0MTMgL0ZvbnRGaWxlMyA0MyAwIFIKPj4KZW5kb2JqCjM0IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvSVBFSkpHK0FkZWxsZVNhbnMtVGhpbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTc1IC0zMjIgMTE0NyAxMDk0IF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA4ODAgL0Rlc2NlbnQgLTM3MCAvQ2FwSGVpZ2h0IDczNyAvU3RlbVYgNDkgL1hIZWlnaHQgNTIwIC9TdGVtSCA0NCAvQXZnV2lkdGggNTcwIC9NYXhXaWR0aCAxMzIyIC9Gb250RmlsZTMgNDQgMCBSCj4+CmVuZG9iagozNSAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL1FRVEFRQStUaW1lcy1Sb21hbiAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMjAzIC00MjggMTcwMCAxMjcyIF0KL0l0YWxpY0FuZ2xlIDAgL0FzY2VudCA3NTAgL0Rlc2NlbnQgLTI1MCAvQ2FwSGVpZ2h0IDY3NiAvU3RlbVYgMTAyIC9YSGVpZ2h0IDQ2MSAvU3RlbUggNDQgL01heFdpZHRoIDE3MjEgL0ZvbnRGaWxlMiA0NSAwIFIKPj4KZW5kb2JqCjM2IDAgb2JqCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yIC9Gb250TmFtZSAvU1FLVUVUK1N5bWJvbCAvRmxhZ3MgMzIgL0ZvbnRCQm94IFstMTY3IC0yOTkgMTA5NCA4MjcgXQovSXRhbGljQW5nbGUgMCAvQXNjZW50IDcwMSAvRGVzY2VudCAtMjk5IC9DYXBIZWlnaHQgNjIzIC9TdGVtViAxMDMgL1hIZWlnaHQgNDY3IC9TdGVtSCAzOCAvQXZnV2lkdGggNTcyIC9NYXhXaWR0aCAxMDQyIC9Gb250RmlsZTIgNDYgMCBSCj4+CmVuZG9iagozNyAwIG9iago8PC9UeXBlIC9Gb250RGVzY3JpcHRvciAvRm9udE5hbWUgL0pGUlhRRCtBcmlhbE1UIC9GbGFncyAzMiAvR</mes:base64EncodedContent><mes:contentType>contentType</mes:contentType><mes:documentName>names</mes:documentName>
        </mes:CreateEnrollmentDocumentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6fc9718f-f69d-46f7-9a41-dffda9a7c22f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="9c7d00ba-2f31-4166-b13a-3d560078b5a2" name="Not SOAP Fault"/><con:assertion type="SOAP Response" name="SOAP Response1" id="f8e27ea4-14cd-48d9-9451-c380987a6c7c"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="b0b879b3-dea4-41e2-b30c-784b8f27fcc1"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:commandStatus[1]/text()")
def documentId = holder.getDomNode( "//*:CreateEnrollmentDocumentResponse[1]/*:documentId[1]/text()" )

assert commandStatus.getData() == '1'
assert documentId != null
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CreateEnrollmentDocumentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="aefb9af3-009f-4c76-96bc-91fd47f9c0f0" name="CaptureDraft_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureDraft</con:operation><con:request name="CaptureDraft_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="7891d1d9-c5e5-4bd1-ad2d-b1157d94a5e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CaptureDraftRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:recurringType>MONTHLY</mes:recurringType>
                <mes:recurringStartDate>
                    <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
                </mes:recurringStartDate>
                <mes:recurringAmount1>10</mes:recurringAmount1>
                <mes:recurringDay1>10</mes:recurringDay1>
                <mes:recurringAmount2>12</mes:recurringAmount2>
                <mes:recurringDay2>10</mes:recurringDay2>
                <mes:lumpSumOnly>false</mes:lumpSumOnly>
            </mes:CaptureDraftRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2dbf5baf-25d6-4d0e-8c11-e30c4e4feda7" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="f2e5c6f8-d1f1-4c53-bb17-fcc353a37301" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="42f13961-d007-47da-80f9-9fcc62c0334c" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureDraftResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureDraftRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="92423fa7-c334-4ff0-966a-16d98c67cb7c" name="CaptureDraft_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureDraft</con:operation><con:request name="CaptureDraft_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="7891d1d9-c5e5-4bd1-ad2d-b1157d94a5e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CaptureDraftRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:recurringType>MONTHLY</mes:recurringType>
                <mes:recurringStartDate>
                    <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
                </mes:recurringStartDate>
                <mes:recurringAmount1>10</mes:recurringAmount1>
                <mes:recurringDay1>10</mes:recurringDay1>
                <mes:recurringAmount2>12</mes:recurringAmount2>
                <mes:recurringDay2>10</mes:recurringDay2>
                <mes:lumpSumOnly>false</mes:lumpSumOnly>
            </mes:CaptureDraftRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2dbf5baf-25d6-4d0e-8c11-e30c4e4feda7" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="f2e5c6f8-d1f1-4c53-bb17-fcc353a37301" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="59cff742-02cd-4a2b-a6e3-1f577a455953"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureDraftResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureDraftRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="6da12081-206d-475d-9d5b-f2fa8ff08693" name="CaptureDraft_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureDraft</con:operation><con:request name="CaptureDraft_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="7891d1d9-c5e5-4bd1-ad2d-b1157d94a5e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:CaptureDraftRequest>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <mes:externalClientId xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:recurringType>MONTHLY</mes:recurringType>
                <mes:recurringStartDate>
                    <typ:date format="dd/MM/yyyy" value="${GetCurrentDate#result}"/>
                </mes:recurringStartDate>
                <mes:recurringAmount1>10</mes:recurringAmount1>
                <mes:recurringDay1>10</mes:recurringDay1>
                <mes:recurringAmount2>12</mes:recurringAmount2>
                <mes:recurringDay2>10</mes:recurringDay2>
                <mes:lumpSumOnly>false</mes:lumpSumOnly>
            </mes:CaptureDraftRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2dbf5baf-25d6-4d0e-8c11-e30c4e4feda7" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="f2e5c6f8-d1f1-4c53-bb17-fcc353a37301" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="ee4f26a4-ba23-4dfe-9cdf-b284c5864799"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureDraftResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureDraftRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CaptureEnrollmentAddress_TPB" id="00612226-96b1-47b3-a737-919f9a9d874f" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureEnrollmentAddress</con:operation><con:request name="CaptureEnrollmentAddress_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="8109068b-3704-44fa-9500-8b98977bdb7f" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <CaptureEnrollmentAddressRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</clientId>
            <subscriberId>${#Project#subscriberId}</subscriberId>
            <address1>Finxera Headquarters</address1>
            <address2>1900 South Norfolk Street</address2>
            <city>San Mateo</city>
            <state>CA</state>
            <zip>94403</zip>
        </CaptureEnrollmentAddressRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="69ff674e-66f1-4a51-a492-4f025474ffa1"/><con:assertion type="Simple Contains" id="2bba8473-788a-4449-88ff-35b863cc3afa" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="848fe002-b6b3-4635-9a13-dd18d2625901" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureEnrollmentAddressResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureEnrollmentAddressRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CaptureEnrollmentAddress_WFB" id="dc41988d-8319-4b64-b609-e5b86b6f9b11" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureEnrollmentAddress</con:operation><con:request name="CaptureEnrollmentAddress_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="8109068b-3704-44fa-9500-8b98977bdb7f" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <CaptureEnrollmentAddressRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</clientId>
            <subscriberId>${#Project#subscriberId}</subscriberId>
            <address1>Finxera Headquarters</address1>
            <address2>1900 South Norfolk Street</address2>
            <city>Jupiter</city>
            <state>FL</state>
            <zip>94403</zip>
        </CaptureEnrollmentAddressRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="69ff674e-66f1-4a51-a492-4f025474ffa1"/><con:assertion type="Simple Contains" id="2bba8473-788a-4449-88ff-35b863cc3afa" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="b62a96b6-9ca1-4d93-b4ec-5e94e3e0c3a0"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureEnrollmentAddressResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureEnrollmentAddressRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CaptureEnrollmentAddress_BOI" id="fff4806f-3da5-4111-9eb4-5e57afe7658c" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>CaptureEnrollmentAddress</con:operation><con:request name="CaptureEnrollmentAddress_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="8109068b-3704-44fa-9500-8b98977bdb7f" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <CaptureEnrollmentAddressRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</clientId>
            <subscriberId>${#Project#subscriberId}</subscriberId>
            <address1>Finxera Headquarters</address1>
            <address2>1900 South Norfolk Street</address2>
            <city>Clio</city>
            <state>AL</state>
            <zip>94403</zip>
        </CaptureEnrollmentAddressRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="69ff674e-66f1-4a51-a492-4f025474ffa1"/><con:assertion type="Simple Contains" id="2bba8473-788a-4449-88ff-35b863cc3afa" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="e96fdd44-aa00-4fe9-a783-b2c80f20ea25"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:CaptureEnrollmentAddressResponse[1]/*:commandStatus[1]/text()")

assert commandStatus.getData() == '1'

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/CaptureEnrollmentAddressRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="AdminUpdateActivateEnrollment_TPB" id="658cc557-c918-4f38-a99d-972f27ca910f" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>AdminUpdateActivateEnrollment</con:operation><con:request name="AdminUpdateActivateEnrollment_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="9d950928-5c62-4063-883f-23631a056978" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <AdminUpdateActivateEnrollmentRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <enrollmentId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:enrollmentId[1]}</enrollmentId>
            <actionType>ACTIVATE</actionType>
        </AdminUpdateActivateEnrollmentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e8b2f94d-8e2b-4058-b7bc-8534d58f1dde"/><con:assertion type="Simple Contains" id="5e0bb77c-e4b1-40d2-b982-891114e6df45" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c0ebd301-0760-4f5b-ac30-d2b01dccc36b" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:commandStatus[1]/text()");

def enrollmentId = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:enrollmentId[1]/text()");

def cipStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:cipStatuses[1]/text()");

def ofacStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:ofacStatuses[1]/text()");

def spaStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:spaStatuses[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentId != null
assert cipStatuses.getData() == 'IGNORED'
assert ofacStatuses.getData() == 'IGNORED'
assert spaStatuses.getData() == 'PENDING'
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateActivateEnrollmentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="AdminUpdateActivateEnrollment_WFB" id="171dc84f-1279-4352-9398-dcbe96e65d73" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>AdminUpdateActivateEnrollment</con:operation><con:request name="AdminUpdateActivateEnrollment_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="9d950928-5c62-4063-883f-23631a056978" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <AdminUpdateActivateEnrollmentRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <enrollmentId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:enrollmentId[1]}</enrollmentId>
            <actionType>ACTIVATE</actionType>
        </AdminUpdateActivateEnrollmentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e8b2f94d-8e2b-4058-b7bc-8534d58f1dde"/><con:assertion type="Simple Contains" id="5e0bb77c-e4b1-40d2-b982-891114e6df45" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="25358eb2-f5de-4ba4-90aa-375a9a2452a9"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:commandStatus[1]/text()");

def enrollmentId = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:enrollmentId[1]/text()");

def cipStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:cipStatuses[1]/text()");

def ofacStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:ofacStatuses[1]/text()");

def spaStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:spaStatuses[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentId != null
assert cipStatuses.getData() == 'IGNORED'
assert ofacStatuses.getData() == 'IGNORED'
assert spaStatuses.getData() == 'PENDING'
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateActivateEnrollmentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="AdminUpdateActivateEnrollment_BOI" id="02d511d7-0ead-48cf-8c95-61f4ac39e885" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>AdminUpdateActivateEnrollment</con:operation><con:request name="AdminUpdateActivateEnrollment_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="9d950928-5c62-4063-883f-23631a056978" defaultOutgoingWss="" defaultIncomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <AdminUpdateActivateEnrollmentRequest xmlns="http://nationalpayment.net/ws/schemas/messages">
            <enrollmentId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:enrollmentId[1]}</enrollmentId>
            <actionType>ACTIVATE</actionType>
        </AdminUpdateActivateEnrollmentRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e8b2f94d-8e2b-4058-b7bc-8534d58f1dde"/><con:assertion type="Simple Contains" id="5e0bb77c-e4b1-40d2-b982-891114e6df45" name="Contains"><con:configuration><token>commandStatus>1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="bcb71e61-6bde-41b4-9dd1-e2fd61c5576f"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:commandStatus[1]/text()");

def enrollmentId = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:enrollmentId[1]/text()");

def cipStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:cipStatuses[1]/text()");

def ofacStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:ofacStatuses[1]/text()");

def spaStatuses = holder.getDomNode( "//*:AdminUpdateActivateEnrollmentResponse[1]/*:activateEnrollmentResponseParams[1]/*:spaStatuses[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentId != null
assert cipStatuses.getData() == 'IGNORED'
assert ofacStatuses.getData() == 'IGNORED'
assert spaStatuses.getData() == 'PENDING'
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/AdminUpdateActivateEnrollmentRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="b17c7197-198c-4b8a-b40e-4ede7d9b5a56" name="GetClient_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClient</con:operation><con:request name="GetClient_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="97f62804-71d1-4e83-828f-866e9e5cbccb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientRequest>
            <!--You may enter the following 5 items in any order-->
            <!--Optional:-->
            <mes:status xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
                <!--Optional:-->
                <!--Optional:-->
                <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
                <!--Optional:-->
                <mes:returnSPAAImage>false</mes:returnSPAAImage>
            </mes:GetClientRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a3523fa7-7eec-4e9d-b082-ef80a12b22d9" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="40a18b0b-3325-4e7e-b7bb-4086ca79a2ec" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="e8b33528-2c49-46a0-b6bb-6c1bd78da2d3" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:GetClientResponse[1]/*:commandStatus[1]/text()");
def enrollmentStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");

def cipStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:cipStatuses[1]/text()");
def ofacStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:ofacStatuses[1]/text()");
def spaStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:spaStatuses[1]/text()");
def firstName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:firstName[1]/text()");
def lastName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:lastName[1]/text()");
def nextDraftAmount = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:nextDraftAmount[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentStatuses.getData() == 'ACTIVE';
assert cipStatuses.getData() == 'IGNORED';
assert ofacStatuses.getData() == 'IGNORED';
assert spaStatuses.getData() == 'PENDING';
assert firstName.getData() == 'CFT_FDR_TPB';
assert lastName.getData() == 'Automation';
assert nextDraftAmount.getData() == '100.0';
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="c525b6c4-1836-41c3-9d9c-a2549c5ebca0" name="GetClient_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClient</con:operation><con:request name="GetClient_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="97f62804-71d1-4e83-828f-866e9e5cbccb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientRequest>
            <!--You may enter the following 5 items in any order-->
            <!--Optional:-->
            <mes:status xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
                <!--Optional:-->
                <!--Optional:-->
                <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
                <!--Optional:-->
                <mes:returnSPAAImage>false</mes:returnSPAAImage>
            </mes:GetClientRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a3523fa7-7eec-4e9d-b082-ef80a12b22d9" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="40a18b0b-3325-4e7e-b7bb-4086ca79a2ec" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="fe05b188-f222-494f-9507-7e57e06e8011"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:GetClientResponse[1]/*:commandStatus[1]/text()");
def enrollmentStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");

def cipStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:cipStatuses[1]/text()");
def ofacStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:ofacStatuses[1]/text()");
def spaStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:spaStatuses[1]/text()");
def firstName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:firstName[1]/text()");
def lastName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:lastName[1]/text()");
def nextDraftAmount = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:nextDraftAmount[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentStatuses.getData() == 'ACTIVE';
assert cipStatuses.getData() == 'IGNORED';
assert ofacStatuses.getData() == 'IGNORED';
assert spaStatuses.getData() == 'PENDING';
assert firstName.getData() == 'CFT_FDR_WFB';
assert lastName.getData() == 'Automation';
assert nextDraftAmount.getData() == '100.0';
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="7d8ce009-7879-4653-9598-9cd1debe0b29" name="GetClient_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClient</con:operation><con:request name="GetClient_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="97f62804-71d1-4e83-828f-866e9e5cbccb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientRequest>
            <!--You may enter the following 5 items in any order-->
            <!--Optional:-->
            <mes:status xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
                <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
                <!--Optional:-->
                <!--Optional:-->
                <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
                <!--Optional:-->
                <mes:returnSPAAImage>false</mes:returnSPAAImage>
            </mes:GetClientRequest>
        </soapenv:Body>
    </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a3523fa7-7eec-4e9d-b082-ef80a12b22d9" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="40a18b0b-3325-4e7e-b7bb-4086ca79a2ec" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="a3f88efe-6bb7-4054-833d-bb37561587f1"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def commandStatus = holder.getDomNode( "//*:GetClientResponse[1]/*:commandStatus[1]/text()");
def enrollmentStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");

def cipStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:cipStatuses[1]/text()");
def ofacStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:ofacStatuses[1]/text()");
def spaStatuses = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:enrollment[1]/*:spaStatuses[1]/text()");
def firstName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:firstName[1]/text()");
def lastName = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:lastName[1]/text()");
def nextDraftAmount = holder.getDomNode( "//*:GetClientResponse[1]/*:client[1]/*:nextDraftAmount[1]/text()");

assert commandStatus.getData() == '1'
assert enrollmentStatuses.getData() == 'ACTIVE';
assert cipStatuses.getData() == 'IGNORED';
assert ofacStatuses.getData() == 'IGNORED';
assert spaStatuses.getData() == 'PENDING';
assert firstName.getData() == 'CFT_FDR_BOI';
assert lastName.getData() == 'Automation';
assert nextDraftAmount.getData() == '100.0';
</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="da79c740-aa17-49a6-aa92-d104f6c9af53" name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="7641f367-b9c0-41e8-87db-1fc810437fc6" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="601a4f02-d579-4c50-b4f6-136121d07427" name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="8e5fde9f-a696-4737-a6f7-b098fb4cbe9f"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion1" id="5fdeb459-ccf4-48eb-9a18-ac81105173d5"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="755f932d-28d5-4254-9bd5-3dafc2ab6c0e" name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_BeforeScheduler_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="5928c7c6-8d76-452e-96db-c743877afa38"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion1" id="8941e0c3-250c-4b19-9652-3ba57c10530a"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '0.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="RunJob-NewScheduler" id="7f38d214-7eb5-40ab-8d0b-cbb6148eed29" disabled="true"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-NewScheduler";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

def minTimeOut=a.getPropertyValue('minTimeOut') as int;
def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	return(null);
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timeout"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
}</script></con:config></con:testStep><con:testStep type="request" id="c2bdf8f3-e206-44fb-914b-041e17d1bc94" name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="7641f367-b9c0-41e8-87db-1fc810437fc6" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '100.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="ec5e467e-25b0-46a7-83f6-43ac1f03a273" name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="8e5fde9f-a696-4737-a6f7-b098fb4cbe9f"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '100.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="d1803451-a225-4dac-aefc-daf0e962ddb3" name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=0_AfterScheduler_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="5928c7c6-8d76-452e-96db-c743877afa38"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )


def enrollmentId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:id[1]/text()");  // not null
def subscriberId = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:subscriberId[1]/text()");  //  sub id
def enrollmentStatuses = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:enrollmentStatuses[1]/text()");  //  ACTIVE
def draftAmount = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:draftAmount[1]/text()");  //  100.0

def currentBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:currentBalance[1]/text()"); // 0.0
def pendingBalance = holder.getDomNode( "//*:GetClientsEnhancedResponse[1]/*:client[1]/*:enrollment[1]/*:pendingBalance[1]/text()");  // 0.0

assert enrollmentId != null
log.info (" >> >>  Subscriber Id set in Proj : "+context.expand('${#Project#subscriberId}'));
assert subscriberId.getData() == context.expand('${#Project#subscriberId}');

assert enrollmentStatuses.getData() == 'ACTIVE';
assert draftAmount.getData() == '100.0';
assert currentBalance.getData() == '0.0';
assert pendingBalance.getData() == '100.0';

</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="d56f5613-9ed7-465c-80f4-7ffc5992ead6" name="GetDraftSchedule_CheckDraftInProcess_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftInProcess_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:assertion type="XPath Match" id="6106ae37-dc95-4e16-949d-455b14e12ef0" name="Match content of [ns3:id]"><con:configuration><path>declare namespace ns3='http://nationalpayment.net/ws/schemas/types';
declare namespace ns4='http://nationalpayment.net/ws/schemas/messages';
//ns4:GetDraftScheduleResponse[1]/ns4:draft[1]/ns3:client[1]/ns3:id[1]/text()</path><content>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="31ab35b6-7a07-430a-992e-740910c58a3f" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
def scheduleId = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:scheduleId[1]/text()"); //not null
def type = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:type[1]/text()");  //MONTHLY
def amount = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:amount[1]/text()");   //100.0
def status = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:status[1]/text()");  //INPROCESS


assert scheduleId != null
assert type.getData() == 'MONTHLY';
assert amount.getData() == '100.0';
assert status.getData() == 'INPROCESS';</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="0648e9e1-f31a-475b-90a6-21936f7e818e" name="GetDraftSchedule_CheckDraftInProcess_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftInProcess_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="1162b5fa-e7b4-4c14-b4ba-7190d81f284a"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
def scheduleId = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:scheduleId[1]/text()"); //not null
def type = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:type[1]/text()");  //MONTHLY
def amount = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:amount[1]/text()");   //100.0
def status = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:status[1]/text()");  //INPROCESS


assert scheduleId != null
assert type.getData() == 'MONTHLY';
assert amount.getData() == '100.0';
assert status.getData() == 'INPROCESS';</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="6c9dc1dc-4be0-4f6c-a0a9-22faeddd4bf5" name="GetDraftSchedule_CheckDraftInProcess_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftInProcess_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="eb64c7af-3eaf-417a-9df6-b2c9e8dcbe81"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
def scheduleId = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:scheduleId[1]/text()"); //not null
def type = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:type[1]/text()");  //MONTHLY
def amount = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:amount[1]/text()");   //100.0
def status = holder.getDomNode( "//*:GetDraftScheduleResponse[1]/*:draft[1]/*:status[1]/text()");  //INPROCESS


assert scheduleId != null
assert type.getData() == 'MONTHLY';
assert amount.getData() == '100.0';
assert status.getData() == 'INPROCESS';</scriptText></con:configuration></con:assertion><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="RunJob-TPBACHOutboundProcessor" id="452ad7dc-0da7-440c-afac-bfc9098b712d" disabled="true"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-TPBACHOutboundProcessor";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

def minTimeOut=a.getPropertyValue('minTimeOut') as int;
def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	return(null);
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timed out"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
}</script></con:config></con:testStep><con:testStep type="groovy" name="RunJob-WFBACHOutboundProcessor" id="3f7ab0a0-fbad-4ba4-827d-0d20ec7df823" disabled="true"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-WFBACHOutboundProcessor";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

def minTimeOut=a.getPropertyValue('minTimeOut') as int;
def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	return(null);
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timed out"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
}</script></con:config></con:testStep><con:testStep type="groovy" name="RunJob-BOIACHOutboundProcessor" id="fa4393e7-bac8-4a74-9a97-94f8c0b25229" disabled="true"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-BOIACHOutboundProcessor";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

def minTimeOut=a.getPropertyValue('minTimeOut') as int;
def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	return(null);
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timed out"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
}</script></con:config></con:testStep><con:testStep type="request" id="e13e13c9-524c-4e85-bb57-6ddd3ddd10d0" name="GetDraftSchedule_CheckDraftSubmitted_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftSubmitted_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="29c8bbe2-4426-496a-95c5-fd554a728dd4" name="GetDraftSchedule_CheckDraftSubmitted_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftSubmitted_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="67aeb294-702b-40ee-9fd2-291b731fed24" name="GetDraftSchedule_CheckDraftSubmitted_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftSubmitted_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="f1989844-c471-4d4b-bb66-baf1d47f2489" name="GetClientsEnhanced_Current=0_Pending=100_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=100_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="e9b16731-7c7a-428d-a80c-075aeafe8ece" name="GetClientsEnhanced_Current=0_Pending=100_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=100_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="7b1042b2-f9e2-4e39-aac0-579b99ac07ae" name="GetClientsEnhanced_Current=0_Pending=100_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=0_Pending=100_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="RunJob-FundsRealization" id="9c9ce0f1-4b71-46f3-a6ac-89de628c1ac9" disabled="true"><con:settings/><con:config><script>import jobsTestAutomationFW_2.HTTPPostwithAuth

String jobName = "RunJob-FundsRealization";

log.info (" >>  >>  >> JOB RUN WITH JAVA");
try{

String baseUrl='';
a = testRunner.testCase.testSuite;
//String jobEnv = a.getPropertyValue('ENV');
String jobEnv = context.expand('${#Project#ENV}');
//String jobName = a.getPropertyValue('JobNameToRun')

def minTimeOut=a.getPropertyValue('minTimeOut') as int;
def maxTimeOut=a.getPropertyValue('maxTimeOut') as int;

 String bankName=context.expand('${#Project#Bank}');
 log.info ("    >>>>    ==== ==== BANK NAME SET IS : "+bankName);

 if(!(bankName=='') &amp;&amp; !(bankName.toLowerCase().contains('all'))){
 	if(jobName.toLowerCase().contains('achoutbound') || jobName.toLowerCase().contains('achinbound') || jobName.toLowerCase().contains('wireoutboundprocessor')){
 		String[] jobNameArray = jobName.split('RunJob-');
 		jobName='RunJob-'+bankName+jobNameArray[1];
 	} 	
 }

baseUrl=context.expand('${#Project#JS}');
//log.info '    >>>>    ==== ==== JOB ENV SET IS  : '+jobEnv
log.info '    >>>>    ==== ==== JOB NAME SET  : '+jobName;
log.info '    >>>>    ==== ====  minTimeOut    : '+minTimeOut+' sec';
log.info '    >>>>    ==== ====  maxTimeOut    : '+maxTimeOut+'  sec';
log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;

def jobURLFromProp = baseUrl;
def jobsuffix = "scheduler/stat.go?opt1=0&amp;opt2=0&amp;opt3=0";
def splitJobURL = jobURLFromProp.split("//");
def splitJobURL2 = splitJobURL[1].split("@");
def finalJobURL = splitJobURL[0]+"//"+splitJobURL2[1]+jobsuffix;
log.info (" finalJobURL  ::   "+finalJobURL);



if(baseUrl.contains("%23")){
	String base1 = baseUrl.substring(baseUrl.indexOf("cftadmin"),baseUrl.indexOf("@"));
	log.info ("  >>  >> base1 >> "+base1);
	baseUrl=baseUrl.replace(base1+"@","");
	log.info '    >>>>    ==== ====  Base URL           :  '+baseUrl;
}
//return(0);
String subscriberId=testRunner.testCase.testSuite.project.getPropertyValue("subscriberId");
log.info '     >>>>    ==== ====  SubId                :  '+subscriberId;

def currentTime = times = new Date().format("dd-MM-yyyy HH-mm-ss");
log.info "    >>>>    TIME NOW IS : "+currentTime;

if(baseUrl.toString()==""){
	log.info "    >>>>    =====   NO VALID JOB ENVIRONMENT FOUND ";
	a.setPropertyValue('JobRunStatus','NO VALID JOB ENVIRONMENT FOUND');
	return(null);
}

//baseUrl="http://cftadmin:CFTis%231@10.10.110.188:8890/";
log.info ("  >>  baseURL = "+baseUrl);

log.info "    >>>>    ";
log.info "    >>>>    ==== ==== JOB RUN -java-  &lt; DO NOT INTERRUPT >";
log.info "    >>>>    ==== ==== BaseUrl : "+baseUrl;
log.info "    >>>>    ==== ==== minTimeOut : "+minTimeOut;
log.info "    >>>>    ==== ==== maxTimeOut : "+maxTimeOut;
log.info "    >>>>    ==== ==== jobName : "+jobName;
log.info "    >>>>    ";

//String iJobStatus = HTTPPostwithAuth.executeJob("http://10.10.110.188:8870/",1,10,"RunJob-TPBACHOutboundProcessor");
String iJobStatus=HTTPPostwithAuth.executeJob(baseUrl,minTimeOut,maxTimeOut,jobName);
		
log.info "    >>>>    ==== ==== Job Completed in ENV: "+jobEnv+" with STATUS : "+iJobStatus;

if(iJobStatus.toLowerCase().contains("pass"))
{
	log.info '    >>>>    JOB COMPLETED SUCCESSFULLY';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else if(iJobStatus.toLowerCase().contains("timed out"))
{
	log.info '    >>>>    JOB COMPLETED WITH TIME OUT';
	String[]  jobStatus = iJobStatus.split("JobUrl=");
	log.info ("  >>  jobStatus[0] : "+jobStatus[0]);
	log.info ("  >>  jobStatus[1] : "+jobStatus[1]);
	a.setPropertyValue('JobRunStatus',jobStatus[0]);
	finalJobURL=jobStatus[1];
}
else
{
	log.info '    >>>>    JOB : SOME UNKNOWN EXCEPTION OCCURRED';
	a.setPropertyValue('JobRunStatus',iJobStatus);
}
a.setPropertyValue('JobUrlInvoked',finalJobURL);
}
catch(all)
{
	log.info (all);
	a.setPropertyValue('JobRunStatus',all);
	a.setPropertyValue('JobUrlInvoked',finalJobURL);
}</script></con:config></con:testStep><con:testStep type="request" id="95a9810e-f3c4-4d11-85d7-b114e8d3049a" name="GetDraftSchedule_CheckDraftCompleted_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftCompleted_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="e0de9b09-4f4e-4985-b83f-c68096c331d5" name="GetDraftSchedule_CheckDraftCompleted_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftCompleted_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="0b511fcd-7e16-4cf1-bb3e-5fb200cfd4da" name="GetDraftSchedule_CheckDraftCompleted_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetDraftSchedule</con:operation><con:request name="GetDraftSchedule_CheckDraftCompleted_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="6cd20da5-d08a-4ede-894d-e51309831c39"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetDraftScheduleRequest>
            <!--You may enter the following 5 items in any order-->
            <mes:scheduleId>${CreateDraftSchedule_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateDraftScheduleResponse[1]/ns4:scheduleList[1]/ns4:schedule[1]/ns4:scheduleId[1]}</mes:scheduleId>
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
        </mes:GetDraftScheduleRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="92dcd4df-1c19-413b-9174-3953afd29e72" name="SOAP Response"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetDraftScheduleRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="1a3b8dce-4795-4608-8698-d1a4f8f04adb" name="GetClientsEnhanced_Current=100_Pending=100_TPB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=100_Pending=100_TPB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_TPB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="749d136e-ebe5-4618-aa02-eedfd2d3cd02" name="GetClientsEnhanced_Current=100_Pending=100_WFB" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=100_Pending=100_WFB" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_WFB#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="8389e09d-de34-4484-a4ec-203f48c0fd3a" name="GetClientsEnhanced_Current=100_Pending=100_BOI" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>npnSoap11</con:interface><con:operation>GetClientsEnhanced</con:operation><con:request name="GetClientsEnhanced_Current=100_Pending=100_BOI" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" id="a14c0719-dd63-4ae8-b810-ecf5cf59ca1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@wss-time-to-live"/></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://nationalpayment.net/ws/schemas/messages" xmlns:typ="http://nationalpayment.net/ws/schemas/types">
    <soapenv:Header>
        <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken wsu:Id="XWSSGID-1261544568770-474929336" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Username>${#Project#global_username}</wsse:Username>
                <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">${#Project#global_password}</wsse:Password>
            </wsse:UsernameToken>
        </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
        <mes:GetClientsEnhancedRequest>
            <!--You may enter the following 33 items in any order-->
            <mes:subscriberId>${#Project#subscriberId}</mes:subscriberId>
            <!--Optional:-->
            <mes:clientId>${CreateClient_BOI#Response#declare namespace ns4='http://nationalpayment.net/ws/schemas/messages'; //ns4:CreateClientResponse[1]/ns4:clientId[1]}</mes:clientId>
            <!--Optional:-->
            <mes:ascending>true</mes:ascending>
            <mes:pageNo>1</mes:pageNo>
            <mes:resultsPerPage>11</mes:resultsPerPage>
            <!--Optional:-->
            <mes:skipDeleted>true</mes:skipDeleted>
            <!--Optional:-->
        </mes:GetClientsEnhancedRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9235cd41-e5bf-465e-9026-34375684e9a8" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3e7aa752-0499-49a5-957a-e4ae2e08190b" name="Not SOAP Fault"/><con:credentials><con:username>devika@bancbox.com</con:username><con:password>abcd1234</con:password><con:domain>Basic</con:domain><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://nationalpayment.net/ws/definitions/npn/GetClientsEnhancedRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:tearDownScript><![CDATA[import javax.mail.*;
import javax.mail.internet.*;
import java.util.Properties;

public class JavaEmailSender {

   def static log;
   def static context;
   def static testRunner;
   def static testStatus;
   
    private String emailAddressTo = new String();
    private String msgSubject = new String();
    private String msgText = new String();

    final String USER_NAME = "automationqa@finxera.com";   //User name of the Goole(gmail) account
    final String PASSSWORD = "Abcd1234+";  //Password of the Goole(gmail) account
    final String FROM_ADDRESS = "automationqa@finxera.com";  //From addresss
 
    public JavaEmailSender() {
    }

    public static void main(String[] args) {

    	testStatus = checkTestStatus();
    	log.info ("  >>  testStatus : "+testStatus);
	boolean emailOnPass=context.expand('${#Project#sendEmailOnPass}').toLowerCase().contains("y");
	log.info ("  >>  emailOnPass : "+emailOnPass);
	if(emailOnPass || (emailOnPass||testStatus.toLowerCase().contains("fail")))
	 //if(context.expand('${#Project#sendEmailOnPass}').toString().toLowerCase().contains('n'))
    	  	{
    	  	log.warn ("=========================");
		log.warn ("  >>  Email will be sent"); 
    	 
      JavaEmailSender email = new JavaEmailSender();
     //Sending test email
      def currentDate = new Date().format("dd-MM-yyyy hh:mm");
    	 String msg = createResults(); 
    	 log.info ("*******************"); 
    	 log.info (msg);
    	 def resultStep = testRunner.testCase.getTestStepByName("Results");
	resultStep.setPropertyValue("HTML",""+msg);
    	 log.info ("*******************"); 

     String emailRecipients = context.expand('${#Project#email}')
    // emailRecipients += ",raghav@finxera.com";
     log.info ("    >>>>    emailRecipients : "+emailRecipients);
    email.createAndSendEmail(emailRecipients, "CI Automation Report - "+testStatus+" | "+currentDate,
      ""+msg);
    	  	}else{
    	  	log.warn ("=========================");
    	  	log.warn ("  >>  Email will NOT be sent"); }

	if(testStatus.toLowerCase().contains("fail")){
		log.warn ("  >>  System Exit with -1");
		System.exit(-1);
	}
    	  	
    }

	public static String checkTestStatus(){
		def tsResults = testRunner.getResults()
		for(i in tsResults){
		String stepName1 = i.getTestStep().getName();
		String stepResult1 = i.getStatus();
		log.info ("=========================");
		log.info ("  >>  stepResult : "+stepName1+" - "+stepResult1);

		if((stepName1.toLowerCase().contains("runjob")) || (stepName1.toLowerCase().contains("serverstatus"))){
		if(i.getMessages().toString().toLowerCase().contains("pass")){
			stepResult1="OK";
		}/*else if(i.getMessages().toString().toLowerCase().contains("timeout")){
			stepResult1="TimeOut";
		}*/
		else{
			stepResult1="FAIL";
		}
	}

		
		if(stepResult1.toLowerCase().contains("fail")){
		return "Fail";
		}/*else if(stepResult1.toLowerCase().contains("timeout")){
		return "Job-TimeOut";
		}*/
		}
		return "Pass";
	}
	
    public void createAndSendEmail(String emailAddressTo, String msgSubject, String msgText) {
        this.emailAddressTo = emailAddressTo;
        this.msgSubject = msgSubject;
        this.msgText = msgText;
        sendEmailMessage();
    }
  
    private void sendEmailMessage() {
     
     //Create email sending properties
     Properties props = new Properties();
     props.put("mail.smtp.auth", "true");
     props.put("mail.smtp.starttls.enable", "true");
     props.put("mail.smtp.host", "smtp.gmail.com");
     props.put("mail.smtp.port", "587");
  
    Session session = Session.getInstance(props,
    new javax.mail.Authenticator() {
    protected PasswordAuthentication getPasswordAuthentication() {
    return new PasswordAuthentication(USER_NAME, PASSSWORD);
   }
    });

  try {

     Message message = new MimeMessage(session);
     message.setFrom(new InternetAddress(FROM_ADDRESS)); //Set from address of the email
     message.setContent(msgText,"text/html"); //set content type of the email
    //  message.setContent("<h3>sending html mail check</h3>","text/html" ); 
    message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(emailAddressTo)); //Set email recipient
    message.setRecipients(Message.RecipientType.BCC,InternetAddress.parse("raghav@finxera.com"));
    message.setSubject(msgSubject); //Set email message subject
    Transport.send(message); //Send email message

   System.out.println("sent email successfully!");

  } catch (MessagingException e) {
       throw new RuntimeException(e);
  }
    }

    public void setEmailAddressTo(String emailAddressTo) {
        this.emailAddressTo = emailAddressTo;
    }

    public void setSubject(String subject) {
        this.msgSubject = subject;
    }

    public void setMessageText(String msgText) {
        this.msgText = msgText;
    }

public static String createResults(){
String messageTitle="";
String message1="";
try {
    //Check a project level property to see if the reports should be produced.
    if(context.expand('${#Project#ProduceReports}') == 'Y') 
    //if((testRunner.testCase.testSuite.project.getPropertyValue("ProduceReports")).toLowerCase() == "y")
    {
        //The path and file to persist results
       
		log.info ("  >>  Creating Results");

/****************Title Message***********************/
messageTitle = '<h3>Note: This is auto-generated email. Do not reply.</h3><hr><hr><br>'
messageTitle += '<table border="2" style="width:80%">';
messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">Environment</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+context.expand('${#Project#Env}')+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">Endpoint</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+context.expand('${#Project#Endpoint}')+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">SubscriberId</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+context.expand('${#Project#subscriberId}')+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">TestCase Executed</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">'+testRunner.testCase.name+'</th>';
messageTitle += '</tr>';

messageTitle += '<tr>';
messageTitle += '<td bgcolor="#ccddff">Executed by</td>';
messageTitle += '<th bgcolor="#e5eeff" align="left">CI Automation</th>';
messageTitle += '</tr>';

messageTitle += '</table>;'


/****************Title Message***********************/


 message1 = '<table border="2" style="width:80%">';
 message1 += '<tr>';
 message1 += '<th bgcolor="#e5eeff">Name</th>';
 //message1 += '<th>TimeStamp</th>';
  message1 += '<th bgcolor="#e5eeff">TimeTaken [ms]</th>';
   message1 += '<th bgcolor="#e5eeff">Size [bytes]</th>';
   message1 += '<th bgcolor="#e5eeff">Message</th>';
   message1 += '<th bgcolor="#e5eeff">Result</th>';
 message1 += '</tr>';
             //resultsFile2.write('"Name","TimeStamp","TimeTaken [ms]","Size [bytes]","Message","Result"');

def tsResults = testRunner.getResults()
for(i in tsResults){
	String stepName = i.getTestStep().getName();
	if(stepName.contains("Gen name") || stepName.contains("GetCurrentDate") || stepName.contains("Results")){
		continue;
	}
	
	//String stepClass = i.getClass();
	String stepTimeStamp = new Date(i.getTimeStamp());
	String stepTimeTaken = i.getTimeTaken();
	String stepSize = i.getSize();
	
	
	//String stepMessage = i.getMessages();
	String stepMessage = "";
            def msgCount = 0;
            for(message in i.getMessages()) {
                msgCount++;
                if(msgCount < 10) {
                    //resultsFile.append(message + ';\n');
					stepMessage=stepMessage+message+" | ";
                }
            }
	
	String stepResult = i.getStatus();
	if((stepName.toLowerCase().contains("runjob")) || (stepName.toLowerCase().contains("serverstatus"))){
		if(i.getMessages().toString().toLowerCase().contains("pass")){
			stepResult="OK";
		}else if(i.getMessages().toString().toLowerCase().contains("timeout")){
			stepResult="TimeOut";
		}
		else{
			stepResult="FAIL";
		}
	}

 message1 += '<tr>';
//message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';    
 if((stepName.toLowerCase().contains("runjob"))){
    message1 += '<td bgcolor="#F3F781">'+stepName+'</td>';
    stepName="wow1-"+stepName;
 }else if(stepName.toLowerCase().contains("serverstatus")){
 	 message1 += '<td bgcolor="#F7FE2E">'+stepName+'</td>';
 	 stepName="wow2-"+stepName;
 }
 else{
 	 message1 += '<td bgcolor="#F5DA81">'+stepName+'</td>';
 	 stepName="wow3-"+stepName;
 }
   // message1 += '<td>'+stepTimeStamp+'</td>';
    message1 += '<td>'+stepTimeTaken+'</td>';
    message1 += '<td  align="center">'+stepSize+'</td>';
    message1 += '<td>'+stepMessage+'</td>';
    if(stepResult.toLowerCase().contains("ok") || stepResult.toLowerCase().contains("pass")){
    message1 += '<td align="center" bgcolor="#00FF00">'+stepResult+'</td>';
    }
    else if(stepResult.toLowerCase().contains("timeout")){
    message1 += '<td align="center" bgcolor="#skyblue">'+stepResult+'</td>';
    }
    else{
    	 message1 += '<td align="center" bgcolor="red">'+stepResult+'</td>';
    }
  message1 += '</tr>';
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
  log.info (message1);
  log.info ("-=-=-=-=-=-=-=-=-=-=-=-=-=-");
	//String resultToLog = stepName+","+stepClass+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	String resultToLog = stepName+","+stepTimeStamp+","+stepTimeTaken+","+stepSize+","+stepMessage+","+stepResult;
	log.info (resultToLog);
}
message1 += '</table><br><hr>End Of Report<hr><hr><br>';
    return messageTitle+""+message1;
} 
}catch(e) {
    log.error("An error occurred: " + e.toString());
}
}
}
]]></con:tearDownScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>c26798fd-2b72-4a0c-a5c1-a72d6644bc58</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ab382168-228a-4607-a6d5-c34702bbca33</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>19d63366-0c52-4145-a038-d85ac4fe8803</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e9d1ef3f-73ca-49ce-9d1d-bd7e1294eec7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>45f1aa99-092a-4b95-8f68-d42dc1425e7b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6ae7c6d3-43a8-40a0-ada0-4d73e37c4c8f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1913e0e1-e17d-41b5-8982-01ef27e46764</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf3c8c1f-6f7d-41ec-b2e9-137280a2cccb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d5f83aea-14fb-45c0-b128-ac782ad28711</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>50807989-d114-426b-a146-1a20b54611af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b65eccee-3ca7-48eb-843a-99dbe9291319</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c37ff707-c00e-449e-ab5a-9c7265d22f66</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>15c2c0a7-ad9c-4214-b80d-a6d84fd1414b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f1fbf360-ee95-4df4-b3d5-85896f094bbf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0d1d4844-09f1-43db-9118-01bae8d3cf9c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6a463e72-74c7-4c75-add5-454b38367492</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>edd4ca67-dd19-4142-b647-134d2d1f6ac4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7032aa7-e6e1-443e-8c35-e62dc0eef951</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76aaea4b-3651-427e-8216-9998adcf1496</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5e97f0d9-9f88-4a8e-a937-8074d59709a5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>735f1cf8-d028-4667-9e71-2227e9752cdd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f45b32de-b23e-4c6b-ae90-efce09f0d35d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1d021472-3c53-4b27-9115-e1a8fc5a8352</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f2d6368b-9365-4974-a75f-838f1ee72e62</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d5da2c04-14d4-45bb-8d1b-48a3b97ce2f5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5934230-0eb8-4f7b-9a95-ef0601b95a4e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>16241add-ddd0-4622-af38-e013b30cde43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4c8f3188-2d56-43ad-b43b-de967fca3aaa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc85c6d9-b9ad-4f6b-a686-b7bb8af2998f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0f649678-fa34-4a5d-95b5-5c3affa5784e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b936ff2e-68f6-47ea-8eba-227f2227f207</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>762cc6fc-1bab-4bc1-9300-06b323e6b6af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2b130f51-54b9-422d-b302-1c19c89bc215</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3f60561-7671-4b4f-a6d6-c181c64d7a01</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>79c19945-0fab-4d4e-9523-f435c8e589b3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dc70ddc3-bb9d-4ee0-ae05-b7f9ee621995</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>797127d4-7df9-402a-8e12-f400e09f2299</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b03c28c6-6333-4c58-962d-7cfa1b31d1ad</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e790e173-4360-41e0-a02b-bf20dcecaefc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8cc7f480-a7ae-46e7-9b22-8a1860e83554</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>192d6158-65aa-47e2-a7f1-b809e74e85d7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4b59bd9f-addb-444c-aab0-0b826a7d4d58</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>40af8e29-477e-49ec-afbb-cf80bded76fe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e50cddcc-0d02-4b47-8bd0-0534d3c97594</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e9dfb6e9-faf3-4ed5-9bc5-789bc1f77b52</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9b92659-b5ed-45dd-929e-f48e1a711a28</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>341b1e66-0398-405a-8bd7-f717b348ce46</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf4accb4-07b7-4230-b70d-46d17387fdb7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0683104a-0b5f-47aa-a4cd-bebe67a8d2ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1e487627-9030-4c1b-a6c6-1dec29ef9de7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5d8e6739-24c0-4806-8f06-caa89282b18f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>80c5a21b-f616-453c-8113-358c6d486e84</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5f7cd2c3-1a53-4e45-913f-ff687bddf399</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca9eeda8-9c0b-4799-96c5-301ee9289ead</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>80bc6ae0-0d69-4844-810b-1ea4b8ea9144</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3902228d-992c-47d3-9136-5078e4be2566</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5540e39f-8f63-407b-add8-4016036a55a6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>055f6f9d-18b5-4648-8ec8-2eefc659262a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9af053b7-7eca-4b2d-85c3-2e78acf1e4cd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fc8a1aee-aecb-405a-8b93-116d62784aec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8c3fcdf-d25f-4d5d-9f79-5cdded36993a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0dc0034-48e5-41ca-8f7b-f914e02d1a9a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>50f8ff3c-314f-47d7-a7e2-a82cda43009e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4117b210-9816-4eaa-86f0-767989e89773</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0a17c752-46d7-4184-8339-872151f38ee3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1532db97-706d-4881-abe5-12b76f69466c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>19b24d96-8e8d-465c-9624-8244bc719e4a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76d436bf-00ed-4259-8b85-2a17adc4f14a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b89c3f78-8127-4f84-8d98-d250d95fd3ce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>20cd096c-9269-457a-95e9-0732c970ff06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4b4d8744-4840-4721-bf48-5f2e160df2fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>69707753-5fef-4712-9349-7f7097b4cfde</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5077ccbd-a4f7-4d69-aa4a-7e2923a67aa1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>minTimeOut</con:name><con:value>1</con:value></con:property><con:property><con:name>maxTimeOut</con:name><con:value>2</con:value></con:property><con:property><con:name>JobRunStatus</con:name><con:value>Pass.</con:value></con:property><con:property><con:name>JobUrlInvoked</con:name><con:value>http://10.10.110.188:8870//scheduler/stat.go?opt1=1&amp;opt2=jobDetail-scheduleProcessorCftEnhanced&amp;opt3=0</con:value></con:property></con:properties><con:tearDownScript>for ( testCaseResult in runner.results )
{
testCaseName = testCaseResult.getTestCase().name
log.info testCaseName
if ( testCaseResult.getStatus().toString() == 'FAILED' )
{
log.info "$testCaseName has failed"
for ( testStepResult in testCaseResult.getResults() )
{
testStepResult.messages.each() { msg -> log.info msg }
}
}
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:endpoint mode="OVERRIDE" username="" password="" domain="Basic">http://qaws.cftpay.com:8080/wsrv/services</con:endpoint><con:endpoint mode="OVERRIDE" password="" username="" domain="" wssType="" wssTimeToLive="" outgoingWss="" incomingWss="">http://betaws.cftpay.com:8080/wsrv/npn.wsdl</con:endpoint></con:endpointStrategy><con:requirements/><con:properties><con:property><con:name>ENV</con:name><con:value>QA-CFT</con:value></con:property><con:property><con:name>Endpoint</con:name><con:value>http://qaws.cftpay.com:8080/wsrv/npn.wsdl</con:value></con:property><con:property><con:name>UI</con:name><con:value>http://qa.cftpay.com/</con:value></con:property><con:property><con:name>JS</con:name><con:value>http://cftadmin:CFTis%231@10.10.110.188:8870/</con:value></con:property><con:property><con:name>DB</con:name><con:value>10.10.200.151:3415</con:value></con:property><con:property><con:name>global_username</con:name><con:value>devika@bancbox.com</con:value></con:property><con:property><con:name>global_password</con:name><con:value>abcd1234</con:value></con:property><con:property><con:name>subscriberId</con:name><con:value>200001</con:value></con:property><con:property><con:name>ProduceReports</con:name><con:value>Y</con:value></con:property><con:property><con:name>email</con:name><con:value>raghav@finxera.com</con:value></con:property><con:property><con:name>sendEmailOnPass</con:name><con:value>Y</con:value></con:property><con:property><con:name>jobTimeOutInterval</con:name><con:value>50</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>